{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome !! Python\u3068\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u30d6\u30ed\u30b0\u3068\u3044\u3046\u304b\u5099\u5fd8\u9332\u3002\u4e0a\u306e\u30ca\u30d3\u30d0\u30fc(\u30b9\u30de\u30db\u306a\u3089\u30cf\u30f3\u30d0\u30fc\u30ac\u30fc\u30e1\u30cb\u30e5\u30fc)\u3067\u30ab\u30c6\u30b4\u30ea\u30fc\u3001\u5de6\u306e\u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u8a18\u4e8b\u306b\u79fb\u52d5\u3067\u304d\u308b\u3088\u3002 \u4f5c\u3063\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea NaMAZU BiWAKO currently set to private \u30b5\u30a4\u30c8\u69cb\u7bc9\u72b6\u6cc1 Success \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 \u76ee\u6b21 \u691c\u7d22 GH action Google analytics Attention \u30d5\u30c3\u30bf\u30fc \u3044\u308b\u304b\uff1f \u30d5\u30a1\u30f4\u30a3\u30b3\u30f3 Vscode\u9023\u643a","title":"<i class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i> Welcome !!"},{"location":"#welcome","text":"Python\u3068\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u30d6\u30ed\u30b0\u3068\u3044\u3046\u304b\u5099\u5fd8\u9332\u3002\u4e0a\u306e\u30ca\u30d3\u30d0\u30fc(\u30b9\u30de\u30db\u306a\u3089\u30cf\u30f3\u30d0\u30fc\u30ac\u30fc\u30e1\u30cb\u30e5\u30fc)\u3067\u30ab\u30c6\u30b4\u30ea\u30fc\u3001\u5de6\u306e\u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u8a18\u4e8b\u306b\u79fb\u52d5\u3067\u304d\u308b\u3088\u3002 \u4f5c\u3063\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea NaMAZU BiWAKO currently set to private","title":" Welcome !!"},{"location":"#_1","text":"Success \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 \u76ee\u6b21 \u691c\u7d22 GH action Google analytics Attention \u30d5\u30c3\u30bf\u30fc \u3044\u308b\u304b\uff1f \u30d5\u30a1\u30f4\u30a3\u30b3\u30f3 Vscode\u9023\u643a","title":"\u30b5\u30a4\u30c8\u69cb\u7bc9\u72b6\u6cc1"},{"location":"intro/","text":"Artificial Intelligence\u3092\u5b66\u3076\u65b9\u3078 AI\u306f\u69d8\u3005\u306a\u5206\u91ce\u306b\u307e\u305f\u304c\u3063\u3066\u7814\u7a76\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5168\u4f53\u50cf\u3092\u4fef\u77b0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3002 \u4ee5\u4e0bpdf\u3067AI\u304c\u3069\u306e\u69d8\u306a\u5206\u91ce\u3067\u7814\u7a76\u3055\u308c\u3066\u3044\u308b\u304b\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308b\u304b\u3082 Conference map \u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u4e0b\u8a18\u306e\u30b9\u30e9\u30a4\u30c9\u3092\u4e00\u77a5\u3057\u3066\u307f\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3001\u3053\u3061\u3089\u306f\u4e00\u822c\u793e\u56e3\u6cd5\u4eba\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u304c\u4f5c\u6210\u3057\u305fAI\u7814\u7a76\u306e\u4fef\u77b0\u56f3\u3068\u305d\u306e\u8a73\u7d30\u3067\u3059\u3002 AI\u7814\u7a76\u521d\u5b66\u8005\u3068\u7570\u5206\u91ce\u7814\u7a76\u8005\u306e\u305f\u3081\u306e AI\u7814\u7a76\u306e\u4fef\u77b0\u56f3 \u6a5f\u68b0\u5b66\u7fd2\u306e\u5b66\u7fd2\u306e\u3059\u309d\u3081 \u73fe\u5728\u306e\u4e3b\u6d41\u3067\u3042\u308b \u6df1\u5c64\u5b66\u7fd2\uff08\u7279\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09 \u3092\u5b66\u3076\u524d\u306b\u7d71\u8a08\u30d9\u30fc\u30b9\u306e\u975e\u6df1\u5c64\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u4e00\u901a\u308a\u5b66\u3076\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u624b\u6cd5\u306f\u7406\u8ad6\u304c\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u306e\u3067\u521d\u5b66\u306b\u5411\u304d\u307e\u3059\u3057\u3001\u305d\u308c\u3092\u77e5\u3063\u305f\u4e0a\u3067\u6df1\u5c64\u5b66\u7fd2\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u7d4c\u7def\u3092\u77e5\u308b\u3068\u8272\u3005\u3068\u7d0d\u5f97\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3067\u6709\u540d\u30e2\u30c7\u30eb\u3078\u306e\u3042\u308b\u7a0b\u5ea6\u306e\u7406\u89e3\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u9023\u8f09 Python\u3067\u5b66\u3076 \u57fa\u790e\u304b\u3089\u306e\u6a5f\u68b0\u5b66\u7fd2\u5165\u9580 Python + \u5fc5\u8981\u306a\u30b9\u30ad\u30eb\u306e\u5b66\u7fd2 \u30c8\u30d4\u30c3\u30af\u6bce\u306e100\u672c\u30ce\u30c3\u30af\u3092\u3059\u308b\u306e\u304c\u304a\u3059\u3059\u3081 \u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af \u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af 2020: https://nlp100.github.io/ja/ \u2190 NEW! \u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af 2015: http://www.cl.ecei.tohoku.ac.jp/nlp100/ \u2192 \u7b54\u3048\u3068\u89e3\u8aac \u8a00\u8a9e\u51e6\u7406\u3060\u3051\u3067\u306a\u304f\u4e00\u90e8UNIX\u57fa\u672c, \u6a5f\u68b0\u5b66\u7fd2\u3082\u542b\u3080 \u95a2\u9023: \u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3092\u89e3\u304d\u59cb\u3081\u308b\u524d\u306b \u753b\u50cf\u51e6\u7406 100\u672c\u30ce\u30c3\u30af https://github.com/yoyoyo-yo/Gasyori100knock \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u221e\u672c\u30ce\u30c3\u30af https://github.com/yoyoyo-yo/DeepLearningMugenKnock numpy100\u672c\u30ce\u30c3\u30af https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md pandas100\u672c\u30ce\u30c3\u30af https://www.kaggle.com/python10pm/pandas-100-tricks \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9100\u672c\u30ce\u30c3\u30af https://github.com/The-Japan-DataScientist-Society/100knocks-preprocess YouTube\u30b3\u30f3\u30c6\u30f3\u30c4 \u52d5\u753b\u3067\u6982\u8981\u3092\u63b4\u3081\u308b\u30ca\u30a4\u30b9\u306a\u30c1\u30e3\u30f3\u30cd\u30eb\u7b49 Sony Neural Network Console Deep Learning \u5165\u9580\u518d\u751f\u30ea\u30b9\u30c8 Deep Learning\u5165\u9580\uff1aDeep Learning\u3067\u3067\u304d\u308b\u3053\u3068 Deep Learning\u5165\u9580\uff1a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a2d\u8a08\u306e\u57fa\u790e Alcia Solid Project \u30b9\u30bf\u30d3\u3058by\u30a6\u30de\u305f\u3093","title":"Artificial Intelligence\u3092\u5b66\u3076\u65b9\u3078"},{"location":"intro/#artificial-intelligence","text":"AI\u306f\u69d8\u3005\u306a\u5206\u91ce\u306b\u307e\u305f\u304c\u3063\u3066\u7814\u7a76\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5168\u4f53\u50cf\u3092\u4fef\u77b0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3002 \u4ee5\u4e0bpdf\u3067AI\u304c\u3069\u306e\u69d8\u306a\u5206\u91ce\u3067\u7814\u7a76\u3055\u308c\u3066\u3044\u308b\u304b\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308b\u304b\u3082 Conference map \u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u4e0b\u8a18\u306e\u30b9\u30e9\u30a4\u30c9\u3092\u4e00\u77a5\u3057\u3066\u307f\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3001\u3053\u3061\u3089\u306f\u4e00\u822c\u793e\u56e3\u6cd5\u4eba\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u304c\u4f5c\u6210\u3057\u305fAI\u7814\u7a76\u306e\u4fef\u77b0\u56f3\u3068\u305d\u306e\u8a73\u7d30\u3067\u3059\u3002 AI\u7814\u7a76\u521d\u5b66\u8005\u3068\u7570\u5206\u91ce\u7814\u7a76\u8005\u306e\u305f\u3081\u306e AI\u7814\u7a76\u306e\u4fef\u77b0\u56f3","title":"Artificial Intelligence\u3092\u5b66\u3076\u65b9\u3078"},{"location":"intro/#_1","text":"\u73fe\u5728\u306e\u4e3b\u6d41\u3067\u3042\u308b \u6df1\u5c64\u5b66\u7fd2\uff08\u7279\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09 \u3092\u5b66\u3076\u524d\u306b\u7d71\u8a08\u30d9\u30fc\u30b9\u306e\u975e\u6df1\u5c64\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u4e00\u901a\u308a\u5b66\u3076\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u624b\u6cd5\u306f\u7406\u8ad6\u304c\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u306e\u3067\u521d\u5b66\u306b\u5411\u304d\u307e\u3059\u3057\u3001\u305d\u308c\u3092\u77e5\u3063\u305f\u4e0a\u3067\u6df1\u5c64\u5b66\u7fd2\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u7d4c\u7def\u3092\u77e5\u308b\u3068\u8272\u3005\u3068\u7d0d\u5f97\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3067\u6709\u540d\u30e2\u30c7\u30eb\u3078\u306e\u3042\u308b\u7a0b\u5ea6\u306e\u7406\u89e3\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u9023\u8f09 Python\u3067\u5b66\u3076 \u57fa\u790e\u304b\u3089\u306e\u6a5f\u68b0\u5b66\u7fd2\u5165\u9580","title":"\u6a5f\u68b0\u5b66\u7fd2\u306e\u5b66\u7fd2\u306e\u3059\u309d\u3081"},{"location":"intro/#python","text":"\u30c8\u30d4\u30c3\u30af\u6bce\u306e100\u672c\u30ce\u30c3\u30af\u3092\u3059\u308b\u306e\u304c\u304a\u3059\u3059\u3081","title":"Python + \u5fc5\u8981\u306a\u30b9\u30ad\u30eb\u306e\u5b66\u7fd2"},{"location":"intro/#100","text":"\u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af 2020: https://nlp100.github.io/ja/ \u2190 NEW! \u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af 2015: http://www.cl.ecei.tohoku.ac.jp/nlp100/ \u2192 \u7b54\u3048\u3068\u89e3\u8aac \u8a00\u8a9e\u51e6\u7406\u3060\u3051\u3067\u306a\u304f\u4e00\u90e8UNIX\u57fa\u672c, \u6a5f\u68b0\u5b66\u7fd2\u3082\u542b\u3080 \u95a2\u9023: \u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3092\u89e3\u304d\u59cb\u3081\u308b\u524d\u306b","title":"\u8a00\u8a9e\u51e6\u7406 100\u672c\u30ce\u30c3\u30af"},{"location":"intro/#100_1","text":"https://github.com/yoyoyo-yo/Gasyori100knock","title":"\u753b\u50cf\u51e6\u7406 100\u672c\u30ce\u30c3\u30af"},{"location":"intro/#_2","text":"https://github.com/yoyoyo-yo/DeepLearningMugenKnock","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u221e\u672c\u30ce\u30c3\u30af"},{"location":"intro/#numpy100","text":"https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md","title":"numpy100\u672c\u30ce\u30c3\u30af"},{"location":"intro/#pandas100","text":"https://www.kaggle.com/python10pm/pandas-100-tricks","title":"pandas100\u672c\u30ce\u30c3\u30af"},{"location":"intro/#100_2","text":"https://github.com/The-Japan-DataScientist-Society/100knocks-preprocess","title":"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9100\u672c\u30ce\u30c3\u30af"},{"location":"intro/#youtube","text":"\u52d5\u753b\u3067\u6982\u8981\u3092\u63b4\u3081\u308b\u30ca\u30a4\u30b9\u306a\u30c1\u30e3\u30f3\u30cd\u30eb\u7b49 Sony Neural Network Console Deep Learning \u5165\u9580\u518d\u751f\u30ea\u30b9\u30c8 Deep Learning\u5165\u9580\uff1aDeep Learning\u3067\u3067\u304d\u308b\u3053\u3068 Deep Learning\u5165\u9580\uff1a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a2d\u8a08\u306e\u57fa\u790e Alcia Solid Project \u30b9\u30bf\u30d3\u3058by\u30a6\u30de\u305f\u3093","title":"YouTube\u30b3\u30f3\u30c6\u30f3\u30c4"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/","text":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u307e\u3068\u3081 \u81ea\u7136\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3067\u5f97\u3089\u308c\u305f\u77e5\u898b\u306e\u30e1\u30e2\u3002 \u6e96\u5099\uff081\u7ae0\uff09 n-gram \u6587\u5b57\u5217\u3092\"n\"\u500b\u306e\u6587\u5b57\uff08\u3084\u5358\u8a9e\uff09\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3002 \u6587\u5b57\u3067\u5206\u5272\u3000N=2 bigram '\u4eca\u65e5' , '\u65e5\u306f' , '\u306f\u3044' , '\u3044\u3044' , '\u3044\u5929' , '\u5929\u6c17' , '\u6c17\u3067' , '\u3067\u3059' , '\u3059\u306d' , '\u306d\u3002' \u6587\u5b57\u3067\u5206\u5272\u3000N=3 trigram '\u4eca\u65e5\u306f' , '\u65e5\u306f\u3044' , '\u306f\u3044\u3044' , '\u3044\u3044\u5929' , '\u3044\u5929\u6c17' , '\u5929\u6c17\u3067' , '\u6c17\u3067\u3059' , '\u3067\u3059\u306d' , '\u3059\u306d\u3002' \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u524d\u51e6\u7406\u306b\u4f7f\u7528\u3057\u305f\u308a\u3001\u6a5f\u68b0\u7ffb\u8a33\u306e\u8a55\u4fa1\u6307\u6570\u3067\u3042\u308bBLEU\u30b9\u30b3\u30a2\u306b\u3082\u4f7f\u308f\u308c\u308b\u3002\u65e5\u672c\u8a9e\u3067\u306f\u3001\u6587\u7ae0\u3092\u5358\u8a9e\u6bce\u306b\u5206\u3051\u308b\u5f62\u614b\u7d20\u89e3\u6790\u3068\u6bd4\u3079\u3066\u672a\u77e5\u8a9e\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u5229\u70b9\u304c\u3042\u308b\u3002\u8f9e\u66f8\u3092\u4f5c\u308b\u624b\u9593\u304c\u7701\u3051\u3066\u3001\u5171\u8d77\u8868\u73fe\u3092\u542b\u3093\u3060\u5206\u5272\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u5730\u5473\u306b\u4eca\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\uff08\u305f\u3060\u3057\u30ce\u30a4\u30ba\u3082\u591a\u3044\uff09 UNIX\u30b3\u30de\u30f3\u30c9\uff082\u7ae0\uff09 \u7c21\u5358\u306a\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306fpython\u4f7f\u3046\u3088\u308a\u624b\u8efd\u3067\u3068\u3066\u3082\u4fbf\u5229\u3002 wc -l { file } # \u884c\u6570\u3092\u51fa\u3059\u3002word count(wc) l\u306f\u591a\u5206line\u3002 # 1100\u3000\u306a\u3069 sed 's/\\t/ /g' { file } # \u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u3002 Stream EDitor(sed). # file\u306e\u30bf\u30d6\u3092\u7a7a\u767d\u306b\u7f6e\u304d\u63db\u308f\u308b \u6b63\u898f\u8868\u73fe\uff083\u7ae0 regex\uff09 json \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306bpython\u306ejson\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u4f7f\u7528\u3057\u305f\u3002 import json dic = json . loads ( '{\"bar\":[\"baz\", null, 1.0, 2]}' ) print ( type ( dic )) print ( dic ) # out #<class 'dict'> #{'bar': ['baz', None, 1.0, 2]} loads, dumps\u306es\u306f3\u5358\u73fe\u3067\u306f\u306a\u304fstring\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3089\u3057\u3044\u3002 jsonlines \u8981\u7d20\u6bce\u306b\u6539\u884c\u304c\u5165\u3063\u305fjsonl\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u4fdd\u5b58\u3059\u308b\u3068\u898b\u3084\u3059\u3044\u3002 import pandas as pd df . to_json ( \"filename.jsonl\" , orient = 'records' , lines = True )) # {\"col1\":1,\"col2\":\"a\"} # {\"col1\":2,\"col2\":\"x\"} # {\"col1\":3,\"col2\":\"\\u3042\"} regex \u6587\u5b57\u5217\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8a18\u53f7\u3067\u6307\u5b9a\u3059\u308b\u624b\u6cd5\u3002 \u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308b\u3068 \u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308b\u306a \u3068\u601d\u3063\u305f\u3002 import re pattern = re . compile ( r \"\"\" \\[\\[ # [[ ([^|]+\\|)* # \u8a18\u4e8b\u540d|\u3000\u7121\u304b\u3063\u305f\u308a\u7e70\u308a\u8fd4\u3055\u308c\u305f\u308a ([^]]+) # \u8868\u793a\u6587\u5b57 pattern\u306b\u30de\u30c3\u30c1\u3057\u305f\u90e8\u5206\u3092\u3053\u3044\u3064\u306b\u7f6e\u63db\u3059\u308b \\]\\] # ]] \"\"\" , re . VERBOSE ) \u30ad\u30e3\u30d7\u30c1\u30e3 ( ) \u3067\u30de\u30c3\u30c1\u3057\u305f\u6587\u5b57\u5217\u3092\u3001\\1, \\2, ... \\n\u3067\u9806\u756a\u306b\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 text = \"2016-05-08\" pattern = re . compile ( r '(\\d+)-(\\d+)-(\\d+)' ) pattern . sub ( r '\\1\u5e74\\2\u6708\\3\u65e5' , text ) # => 2016\u5e7405\u670808\u65e5 \u5f62\u614b\u7d20\u89e3\u6790\uff084\u7ae0 MeCab\uff09 \u82f1\u8a9e\u3068\u9055\u3044\u3001\u65e5\u672c\u8a9e\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f\u5358\u8a9e\u9593\u306e\u533a\u5207\u308a\u304c\u660e\u78ba\u3067\u306a\u3044\u3067\u3059\u3002\u82f1\u8a9e\u306a\u3089\u5358\u7d14\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\"Hello World.\"\u2192[\"hello\", \"world\"]\u3067\u304d\u307e\u3059\u304c\u3002 MeCab\u306f\u65e5\u672c\u8a9e\u306e\u6587\u7ae0\u3092\u5358\u8a9e\u306b\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 import MeCab wakati = MeCab . Tagger ( \"-Owakati\" ) words = wakati . parse ( \"\u3053\u3053\u3067\u306f\u304d\u3082\u306e\u3092\u8131\u3044\u3067\u304f\u3060\u3055\u3044\" ) print ( words ) #\u3053\u3053 \u3067 \u306f \u304d\u3082\u306e \u3092 \u8131\u3044 \u3067 \u304f\u3060\u3055\u3044 \u3082\u3063\u3068\u65e9\u304f\u52d5\u4f5c\u3059\u308bginza\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002 ginza,spacy\u306e\u89e3\u8aac \u4fc2\u308a\u53d7\u3051\u89e3\u6790\uff085\u7ae0 CaboCha\uff09 \u5358\u8a9e\u9593\u306e\u4fee\u98fe\u95a2\u4fc2\u306a\u3069\u3001\u4fc2\u308a\u304b\u305f\u3092\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\u91cd\u8981\u8a9e\u62bd\u51fa\u3092 \u30b0\u30e9\u30d5\u7684\u306b\u89e3\u304f \uff08\u591a\u304f\u306e\u30b0\u30e9\u30d5\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u307b\u3069\u91cd\u8981\uff09\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3082ginza\u4f7f\u3048\u307e\u3059\u3002 \u756a\u53f7 \u6587\u7bc0 \u4fc2\u308a\u5148 ------ ---------- -------- 0 \u543e\u8f29\u306f 5 1 \u3053\u3053\u3067 2 2 \u59cb\u3081\u3066 3 3 \u4eba\u9593\u3068\u3044\u3046 4 4 \u3082\u306e\u3092 5 5 \u898b\u305f\u3002 -1 \u6a5f\u68b0\u5b66\u7fd2\uff086\u7ae0 pytorch\uff09 \u82f1\u8a9e\u306e\u30cb\u30e5\u30fc\u30b9\u306e\u30bf\u30a4\u30c8\u30eb\u304b\u3089\u305d\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\uff08business, science\u306a\u30694\u7a2e\u985e\uff09\u3092\u5206\u985e\u3059\u308b\u554f\u984c\u3092\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3092\u7528\u3044\u3066\u6311\u307f\u307e\u3057\u305f\u3002\u7279\u5fb4\u91cf\u306f\u5358\u8a9e\u30ab\u30a6\u30f3\u30c8\uff08Bag of Words\uff09\u3092\u7528\u3044\u307e\u3057\u305f\u3002 Bag of Words \u5358\u8a9e\u306e\u7a2e\u985e\u3092\u6b21\u5143\u306e\u6570\u3068\u3057\u3066\u3001\u3042\u308b\u6587\u7ae0\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306e\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u30d9\u30af\u30c8\u30eb\u3068\u3057\u307e\u3059\u3002 \u5358\u8a9e\u306e\u9806\u5e8f\u306f\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\u5358\u7d14\u306a\u304c\u3089\u3082\u3001\u6587\u66f8\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u5206\u985e\u306a\u3069\u3067\u305d\u3053\u305d\u3053\u7cbe\u5ea6\u3092\u51fa\u305b\u307e\u3059\u3002 Dataset \u554f\u984c\u3068\u7b54\u3048(label)\u306e\u30da\u30a2\u3092\u8aad\u307f\u8fbc\u3080\u30af\u30e9\u30b9\u3002\u524d\u51e6\u7406\u3092\u542b\u3080\u3002 train,validation,test\u306b\u3064\u3044\u3066\u4f5c\u6210\u3059\u308b\u3002 DataLoader Dataset\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u304b\u3092\u6c7a\u3081\u308b\u30af\u30e9\u30b9\u3002\u30d0\u30c3\u30c1(\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u6c17\u306b\u5b66\u7fd2\u3055\u305b\u308b\u305f\u3081\u3001\u307e\u3068\u3081\u305f\u3082\u306e)\u3092\u4f5c\u308b\u3002 DataLoader\u306b\u304a\u3044\u3066\u3001\u5358\u8a9e\u306f \u30d9\u30af\u30c8\u30eb\u3067\u306a\u304fID \u3067\u8868\u73fe\u3059\u308b\u3002 \u3053\u308c\u306f\u3001\u30d9\u30af\u30c8\u30eb\u8868\u73fe\u3067\u5358\u8a9e\u30c7\u30fc\u30bf\u3092\u6301\u3064\u3068\u30e1\u30e2\u30ea\u3092\u5927\u91cf\u6d88\u8cbb\u3059\u308b\u304b\u3089\u3002\u30e2\u30c7\u30eb\u306eemmbeder\u5c64\u3067ID\u2192\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3055\u305b\u305f\u308a\u3057\u307e\u3059\u3002 nn.Module()\u3068forward \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u3092\u62c5\u3046\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u57fa\u672c\u3068\u3059\u308b\u3002 import torch.nn as nn import torch.nn.functional as F class Model ( nn . Module ): # nn.Module()\u3067\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f def __init__ ( self , arg * ): # \u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u3068\u547c\u3076\u3002 Model()\u3092\u5ba3\u8a00\u3057\u305f\u6642\u3001\u6700\u521d\u306b\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570\u3002arg*\u304cModel()\u306e\u300c\u5f15\u6570\u300d super () . __init__ () # \u7d99\u627f\u5143\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u304c\u7834\u68c4\u3055\u308c\u306a\u3044\u3088\u3046\u7d99\u627f\u3059\u308b\u3002 # \u3053\u3053\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u3092\u8a18\u8ff0\u3059\u308b\u3002net1,2,3,..\u306a\u3069\u3002\u4ee5\u4e0b\u306fconvolution\u5c64\u304c2\u5c64\u306e\u5834\u5408\u3002 self . conv1 = nn . Conv2d ( 1 , 20 , 5 ) # \u2191\u3067self.conv1,2\u306e\u4ed6\u306b\u3001 self . conv2 = nn . Conv2d ( 20 , 20 , 5 ) # nn.Module\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u3067\u5ba3\u8a00\u3057\u3066\u3044\u308b\u5909\u6570(self.training\u306a\u3069)\u3082\u4f7f\u3048\u308b\u3002 def forward ( self , x ): # nn.Module\u306e__call__\u95a2\u6570\u306b\u3088\u308a\u3001Model()(x)\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002 x = F . relu ( self . conv1 ( x )) return F . relu ( self . conv2 ( x )) # forward\u306ereturn\u304cModel()()\u306ereturn \u640d\u5931\u95a2\u6570 loss \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u304c\u3060\u3057\u305f\u4e88\u6e2c\u3068\u3001\u5b9f\u969b\u306e\u7b54\u3048\u306e\u89e3\u96e2\u3092\u51fa\u3059\u3002 \u6700\u9069\u5316\u624b\u6cd5 optimizer \u91cd\u307f\u306e\u66f4\u65b0\u3092\u884c\u3046\u3002 model\u306e\u91cd\u307f\u3092model.parameters()\u3067\u6e21\u3059\u3002 \u91cd\u307f\u306fModel.conv1.weight\u3068\u304b\u306b\u4fdd\u5b58\u3055\u308c\u3066\u308b\u3002 \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306f\u3001y=ax+b\u3092\u640d\u5931\u95a2\u6570\uff08\u30d2\u30f3\u30b8\u640d\u5931\uff09\u3068\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308a\u91cd\u307fa\u3084\u30d0\u30a4\u30a2\u30b9b\u3092\u6700\u9069\u5316\uff08\u3064\u307e\u308a\u5b66\u7fd2\uff09\u3055\u305b\u308b\u3002\u6d3b\u6027\u5316\u95a2\u6570\u306f2\u5024\uff08[0,1]\u3084[-1,1]\uff09\u3092\u51fa\u529b\u3059\u308b\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u304c\u4f7f\u308f\u308c\u308b\u3002 \u30d2\u30f3\u30b8\u640d\u5931\uff1a\uff08\u771f\u306e\u5024\uff09-\uff08\u4e88\u6e2c\u5024\uff09^2 \u3053\u308c\u306b\u5bfe\u3057\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f\u6d3b\u6027\u5316\u304c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3067\u3001 \u640d\u5931\u95a2\u6570\u304c\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570\u3067\u3001 \u904e\u5b66\u7fd2\u3092\u9632\u3050\u305f\u3081\u306e\u7f70\u5247\u5316\u9805\u304c\u52a0\u308f\u3063\u3066\u3044\u308b\u3002 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u3082\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u3082\u3001\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u306a\u5bfe\u8c61\u3092\u5206\u96e2\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b\u3002\uff08\u7dda\u3067\u533a\u5207\u3063\u3066\u3001\u4e0a\u304b\u4e0b\u304b\u3067\u5206\u985e\uff09 \u56f3\u306e\u5f15\u7528wiki \u6027\u80fd\u8a55\u4fa1 \u6df7\u540c\u884c\u5217 \u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\uff08x\uff09\u3068\u5b9f\u969b\u306e\u7b54\u3048\uff08y\uff09\u306e\u5b9f\u6e2c\u5024\uff08\u56de\u6570n\uff09\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e\u3002 \u5de6\u4e0a\u304b\u3089\u53f3\u4e0b\u3078\u659c\u3081\u306b\u6570\u5b57\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u307b\u3069\u7cbe\u5ea6\u304c\u826f\u3044\u3002 \u518d\u73fe\u7387(\u967d\u6027\u306e\u4e2d\u3067\u306e\u6b63\u89e3\u7387)\u3001\u9069\u5408\u7387\uff08\u967d\u6027\u3068\u4e88\u6e2c\u3057\u305f\u6642\u306e\u6b63\u89e3\u7387\uff09 \u5f15\u7528\u3000 https://mathwords.net/kensa \u30de\u30a4\u30af\u30ed\u5e73\u5747\uff1a\u30e9\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u3092\u7121\u8996\u3057\u305f\uff08\u4e0b\u8a18b,t,e,m\u3092\u533a\u5225\u3057\u306a\u3044\uff09\u5e73\u5747 \u30de\u30af\u30ed\u5e73\u5747\uff1a\u30e9\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u6bce\u306e\u78ba\u7387\u306e\u548c/\u30af\u30e9\u30b9\u6570\u306b\u3088\u3063\u3066\u51fa\u3055\u308c\u308b\u5e73\u5747 https://datascience.stackexchange.com/questions/15989/micro-average-vs-macro-average-performance-in-a-multiclass-classification-settin \u6587\u7ae0\u3092b,t,e,m\u306b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308b\u3002 \u5358\u8a9e\u30d9\u30af\u30c8\u30eb\uff087\u7ae0\uff09 \u5358\u8a9e\u2192\u30d9\u30af\u30c8\u30eb\u3092\u51fa\u529b\u3059\u308b\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u7528\u3044\u307e\u3057\u305f\u3002 from gensim.models import KeyedVectors model = KeyedVectors . load_word2vec_format ( 'GoogleNews-vectors-negative300.bin.gz' , binary = True ) model [ \"United_States\" ] # model[\u5358\u8a9e] word2vec\u3067\u306fCBOW\u3084skip-gram\u3068\u3044\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\u6587\u7ae0\u4e2d\u306e\u3042\u308b\u6587\u5b57\u3092\u96a0\u3057\u3066\u3001\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306b\u96a0\u3057\u305f\u6587\u5b57\u3092\u5f53\u3066\u3055\u305b\u308b\u3068\u3044\u3046\u554f\u984c\u3092\u89e3\u304b\u305b\u3001\u30e2\u30c7\u30eb\u306b\u5358\u8a9e\u3092\u7a81\u3063\u8fbc\u3093\u3060\u3068\u304d\u306e\u91cd\u307f\u3092\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002 RGB\u8868\u8a18\u3060\u3068\u8272\u306e\u8fd1\u3055\u304c\u5206\u304b\u308b\u3088\u3046\u306b\u3001(\u30bf\u30fc\u30b3\u30a4\u30ba=(0,183,206)\u3068\u30b7\u30a2\u30f3=(0,174,239)) \u5358\u8a9e\u306e\u610f\u5473\u306e\u8fd1\u3055\u304c\u5206\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306a\u3069) \u610f\u5473\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\u3001\u6587\u6cd5\u7684\u30a2\u30ca\u30ed\u30b8\u30fc \u610f\u5473\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\uff08semantic analogy\uff09\uff1a\u5358\u8a9e\u306e\u610f\u5473\u95a2\u4fc2\u304b\u3089\u306e\u985e\u63a8\u3002man + queen = king \u6587\u6cd5\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\uff08syntactic analogy\uff09\uff1a\u5358\u8a9e\u306e\u6587\u6cd5\u95a2\u4fc2\u3000\u3000\u3003\u3000\u3000\u3002\u300ceat \u2192 ate\u300d \u306a\u3089\u300ccook \u2192 cooked\u300d \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\uff088\u7ae0\uff09 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\uff1a\u6d3b\u6027\u5316\u95a2\u6570\u3092\u5909\u66f4\u3057\u305f\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3092\u591a\u5c64\u306b\u3057\u305f\u3082\u306e\u3002 \uff08\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u2192\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3001ReLU\u95a2\u6570\u306a\u3069\uff09 \u4eca\u56de\u306f\u7279\u5fb4\u91cf\u3068\u3057\u3066\u3001\u6587\u7ae0\u30c7\u30fc\u30bf\u3092\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u5e73\u5747\u3068\u3057\u3066\u6271\u3063\u305f\u3002 \u6587\u7ae0\u3092\u76f4\u63a5\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3002(bert\u30e2\u30c7\u30eb\u3084 SCDV (Sparse Composite Document Vector)\u3000\u306a\u3069) RNN(LSTM)\uff089\u7ae0\uff09 \u6587\u7ae0\u4e2d\u306e\u5358\u8a9e\u9593\u306e\u9806\u5e8f\u3092\u8003\u616e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001RNN\u3067\u4f7f\u3046\u96a0\u308c\u72b6\u614b\u30d9\u30af\u30c8\u30ebh\u306f\u76f4\u524d\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u5f71\u97ff\u3092\u5927\u304d\u304f\u53d7\u3051\u308b\u306e\u3067\u3001\u6587\u4e2d\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3092\u4efb\u610f\u306e\u91cd\u307f\u3067\u53c2\u7167\u3067\u304d\u308b\u3001Self-Attention\u306e\u65b9\u304c\u597d\u307e\u308c\u307e\u3059\u3002 https://qiita.com/t_Signull/items/21b82be280b46f467d1b \u305f\u3060\u3057 NLP100Knock\u304b\u3089\u5f15\u7528 \u6a5f\u68b0\u7ffb\u8a33\uff0810\u7ae0 fairseq\uff09 (fairseq-train\u306b\u306fpytorch1.4>\u3068GPU\u304c\u5fc5\u8981) Facebook AI Research Sequence-to-Sequence Toolkit\u3089\u3057\u3044\u3067\u3059\u3002\u6a5f\u68b0\u7ffb\u8a33\u306e LSTM, Transformer, Bert_base\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 fairseq-preprocess # \u8f9e\u66f8\u4f5c\u3063\u305f\u308a\u30d0\u30a4\u30ca\u30ea\u30fc\u5316\u3002 faiseq-train # GPU\u3092\u4f7f\u7528\u3057\u3066\u5b66\u7fd2\u3002tensorboard\u7528\u30ed\u30b0\u3082\u4fdd\u5b58\u3067\u304d\u308b\u3002CPU\u306e\u5f15\u6570\u3082\u3042\u308b\uff1f from fairseq.models.transformer import TransformerModel model = TransformerModel . from_pretrained ( 'path/to/checkpoint_dir' , checkpoint_file = 'model.pt' ) model . translate ( \"Hello world.\" ) # \u4e16\u754c\u306e\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\u3002(\u65e5\u672c\u8a9e\u2192\u82f1\u8a9e\u306e\u6a5f\u68b0\u7ffb\u8a33\u30e2\u30c7\u30eb\u306e\u5834\u5408) Transformer \u79c1\u305f\u3061\u306f\u65e5\u672c\u8a9e\u2192\u82f1\u8a9e\u306b\u7ffb\u8a33\u3092\u884c\u3046\u3068\u304d\u3001\uff08\u732b\u2192cat\uff09\u306a\u3069\u306e\u3088\u3046\u306b\u3001\u7279\u5b9a\u306e\u5358\u8a9e\u304b\u3089\u7ffb\u8a33\u3092\u884c\u3044\u307e\u3059\u3002 RNN\u306e\u96a0\u308c\u72b6\u614b\u30d9\u30af\u30c8\u30eb\u306f\u76f4\u524d\u306e\u5358\u8a9e\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u305f\u3082\u306e\u3067\u3001\u76f4\u524d\u3067\u306a\u304f\u7279\u5b9a\u306e\u5358\u8a9e\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u305f\u30d9\u30af\u30c8\u30eb\u306e\u65b9\u304c\u597d\u307e\u3057\u3044\u3067\u3059\u3002 \u307e\u305f\u3001RNN\u306fGPU\u3092\u30d5\u30eb\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u6d88\u3059\u308bAttention\u3068\u3044\u3046\u6280\u8853\u3092\u4f7f\u7528\u3057\u305f\u30e2\u30c7\u30eb\u304cTransformer\u3067\u3059\u3002 \u5165\u529b\u3055\u308c\u305f\u6587\u7ae0\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb(\u7dd1)\u3001Attention(\u9ec4\u8272)\u3001\u7ffb\u8a33\u3055\u308c\u305f\u5358\u8a9e(\u30aa\u30ec\u30f3\u30b8) \u3053\u306e\u8fba\u304cAttention\u306e\u8aac\u660e\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002 https://qiita.com/Kosuke-Szk/items/d49e2127bf95a1a8e19f BLEU\u30b9\u30b3\u30a2 \u4eba\u9593\u304c\u7ffb\u8a33\u3057\u305f\u6587\u7ae0\u306b\u4f3c\u3066\u3044\u308c\u3070\u4f3c\u3066\u3044\u308b\u307b\u3069\u3001\u6a5f\u68b0\u304c\u751f\u6210\u3057\u305f\u6587\u306f\u6b63\u3057\u305d\u3046\u3060\u3068\u3044\u3046\u524d\u63d0\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002 \u7ffb\u8a33\u3057\u305f\u6587\u7ae0\u306en-gram\u3068\u6b63\u89e3\u6587\u7ae0\u306en-gram\u306e\u5dee\u304c\u5c11\u306a\u3044\u304b\u3092\u30b9\u30b3\u30a2\u306b\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u306f4-gram\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 100\u306b\u8fd1\u3044\u307b\u3069\u6027\u80fd\u304c\u3088\u304f\u3001Transformer\u306720\u304f\u3089\u3044\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002 https://to-in.com/blog/102282 fairseq-score --sys translated.spacy --ref test.spacy.en #Namespace(ignore_case=False, order=4, ref='test.spacy.en', sacrebleu=False, sentence_bleu=False, sys='98_2.out.spacy') #BLEU4 = 11.07, 36.2/14.0/7.2/4.1 (BP=1.000, ratio=1.129, syslen=31201, reflen=27625) BLEU\u30b9\u30b3\u30a2\u306f\u540c\u7fa9\u8a9e\u3067\u3082\u9593\u9055\u3044\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001 BERT\u30b9\u30b3\u30a2 \u3068\u3044\u3046\u3082\u306e\u306f\u6587\u7ae0\u30d9\u30af\u30c8\u30eb\u3092\u6bd4\u8f03\u3059\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002 \u30d3\u30fc\u30e0\u30b5\u30fc\u30c1 \u5e45\u512a\u5148\u63a2\u7d22\u3092\u3001\u6307\u5b9a\u3057\u305f\u30d3\u30fc\u30e0\u5e45\u5206\u3060\u3051\u66f4\u306b\u63a2\u7d22\u3057\u3066\u3044\u304f\u3002 \u6587\u7ae0\u306e\u6a5f\u68b0\u7ffb\u8a33\u3067\u3001\u6b63\u89e3\u7387\u304c\u9ad8\u3044\u5358\u8a9e\u304b\u3089\u59cb\u307e\u308b\u6587\u3060\u3051\uff08\u30d3\u30fc\u30e0\u5e45\u5206\uff09\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 N = 5 # \u30d3\u30fc\u30e0\u5e45 fairseq-interactive --path checkpoint.pt --beam $N data \u30b5\u30d6\u30ef\u30fc\u30c9 \u4f4e\u983b\u5ea6\u3067\u73fe\u308c\u308b\u5358\u8a9e\u3092\u3001\u6570\u6587\u5b57\u5358\u4f4d\u306b\u5206\u5272\u3059\u308b\u65b9\u6cd5\u3002 \u5f93\u6765\u306e\u5358\u8a9e\u306b\u5206\u5272\u3059\u308b\u524d\u51e6\u7406\u306b\u6bd4\u3079\u3001\u6587\u5b57\u5358\u4f4d\u306b\u5206\u5272\u3059\u308c\u3070 \u8a9e\u5f59\u6570\u3092\u6291\u3048\u3066\u8a08\u7b97\u91cf\u3092\u5c11\u306a\u304f\u3057\u3064\u3064 \u672a\u77e5\u8a9e\u304c\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308b\u3002 https://qiita.com/NLPingu/items/78f11ec4c3b777f56f11 word2vec\u306b\u30b5\u30d6\u30ef\u30fc\u30c9\u306a\u3069\u3092\u53d6\u308a\u5165\u308c\u305f\u3082\u306e\u304cfastext\u3089\u3057\u3044\u3002 subword-nmt learn-bpe -s 3000 < wakati_wagahai.txt > codes.txt subword-nmt apply-bpe -c codes.txt < wakati_wagahai.txt > subword_wagahai.txt # The rain@@ y season began in the southern area of Kyushu around May@@ .@@ 31 (F@@ ri@@ ) as norm@@ al. # rain@@ y\u306f\u5143\u3005rainy\u4e00\u8a9e\u3067\u3042\u3063\u305f\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002 \u5358\u8a9e\u2192\u6570\u6587\u5b57\u304c\u30b5\u30d6\u30ef\u30fc\u30c9\u3067\u3042\u308b\u4e00\u65b9\u3001 \u6587\u7ae0\u2192\u6570\u6587\u5b57\u306f SentencePiece \u3068\u3044\u3046\u3002\u6700\u8fd1\u306e\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306estate of the art(\u7cbe\u5ea6\u65b0\u8a18\u9332)\u306f\u3053\u308c\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u304b\u3002 \u6a5f\u68b0\u7ffb\u8a33\u306e\u7d50\u679c fairseq \u3092\u7528\u3044\u3066\u65e5\u672c\u8a9e\u306e\u53e4\u6587\u2192\u82f1\u8a9e\u306e\u7ffb\u8a33\u3092\u5b66\u7fd2\u3055\u305b\u305f Transformer \u30e2\u30c7\u30eb(.pt)\u3092 flask \u3092\u4f7f\u7528\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 \u7cbe\u5ea6\u306f\u5fae\u5999\u3067\u3059...","title":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u307e\u3068\u3081"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#100","text":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3067\u5f97\u3089\u308c\u305f\u77e5\u898b\u306e\u30e1\u30e2\u3002","title":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u307e\u3068\u3081"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#1","text":"","title":"\u6e96\u5099\uff081\u7ae0\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#n-gram","text":"\u6587\u5b57\u5217\u3092\"n\"\u500b\u306e\u6587\u5b57\uff08\u3084\u5358\u8a9e\uff09\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3002 \u6587\u5b57\u3067\u5206\u5272\u3000N=2 bigram '\u4eca\u65e5' , '\u65e5\u306f' , '\u306f\u3044' , '\u3044\u3044' , '\u3044\u5929' , '\u5929\u6c17' , '\u6c17\u3067' , '\u3067\u3059' , '\u3059\u306d' , '\u306d\u3002' \u6587\u5b57\u3067\u5206\u5272\u3000N=3 trigram '\u4eca\u65e5\u306f' , '\u65e5\u306f\u3044' , '\u306f\u3044\u3044' , '\u3044\u3044\u5929' , '\u3044\u5929\u6c17' , '\u5929\u6c17\u3067' , '\u6c17\u3067\u3059' , '\u3067\u3059\u306d' , '\u3059\u306d\u3002' \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u524d\u51e6\u7406\u306b\u4f7f\u7528\u3057\u305f\u308a\u3001\u6a5f\u68b0\u7ffb\u8a33\u306e\u8a55\u4fa1\u6307\u6570\u3067\u3042\u308bBLEU\u30b9\u30b3\u30a2\u306b\u3082\u4f7f\u308f\u308c\u308b\u3002\u65e5\u672c\u8a9e\u3067\u306f\u3001\u6587\u7ae0\u3092\u5358\u8a9e\u6bce\u306b\u5206\u3051\u308b\u5f62\u614b\u7d20\u89e3\u6790\u3068\u6bd4\u3079\u3066\u672a\u77e5\u8a9e\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u5229\u70b9\u304c\u3042\u308b\u3002\u8f9e\u66f8\u3092\u4f5c\u308b\u624b\u9593\u304c\u7701\u3051\u3066\u3001\u5171\u8d77\u8868\u73fe\u3092\u542b\u3093\u3060\u5206\u5272\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u5730\u5473\u306b\u4eca\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\uff08\u305f\u3060\u3057\u30ce\u30a4\u30ba\u3082\u591a\u3044\uff09","title":"n-gram"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#unix2","text":"\u7c21\u5358\u306a\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306fpython\u4f7f\u3046\u3088\u308a\u624b\u8efd\u3067\u3068\u3066\u3082\u4fbf\u5229\u3002 wc -l { file } # \u884c\u6570\u3092\u51fa\u3059\u3002word count(wc) l\u306f\u591a\u5206line\u3002 # 1100\u3000\u306a\u3069 sed 's/\\t/ /g' { file } # \u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u3002 Stream EDitor(sed). # file\u306e\u30bf\u30d6\u3092\u7a7a\u767d\u306b\u7f6e\u304d\u63db\u308f\u308b","title":"UNIX\u30b3\u30de\u30f3\u30c9\uff082\u7ae0\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#3-regex","text":"","title":"\u6b63\u898f\u8868\u73fe\uff083\u7ae0 regex\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#json","text":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306bpython\u306ejson\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u4f7f\u7528\u3057\u305f\u3002 import json dic = json . loads ( '{\"bar\":[\"baz\", null, 1.0, 2]}' ) print ( type ( dic )) print ( dic ) # out #<class 'dict'> #{'bar': ['baz', None, 1.0, 2]} loads, dumps\u306es\u306f3\u5358\u73fe\u3067\u306f\u306a\u304fstring\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3089\u3057\u3044\u3002","title":"json"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#jsonlines","text":"\u8981\u7d20\u6bce\u306b\u6539\u884c\u304c\u5165\u3063\u305fjsonl\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u4fdd\u5b58\u3059\u308b\u3068\u898b\u3084\u3059\u3044\u3002 import pandas as pd df . to_json ( \"filename.jsonl\" , orient = 'records' , lines = True )) # {\"col1\":1,\"col2\":\"a\"} # {\"col1\":2,\"col2\":\"x\"} # {\"col1\":3,\"col2\":\"\\u3042\"}","title":"jsonlines"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#regex","text":"\u6587\u5b57\u5217\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8a18\u53f7\u3067\u6307\u5b9a\u3059\u308b\u624b\u6cd5\u3002 \u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308b\u3068 \u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308b\u306a \u3068\u601d\u3063\u305f\u3002 import re pattern = re . compile ( r \"\"\" \\[\\[ # [[ ([^|]+\\|)* # \u8a18\u4e8b\u540d|\u3000\u7121\u304b\u3063\u305f\u308a\u7e70\u308a\u8fd4\u3055\u308c\u305f\u308a ([^]]+) # \u8868\u793a\u6587\u5b57 pattern\u306b\u30de\u30c3\u30c1\u3057\u305f\u90e8\u5206\u3092\u3053\u3044\u3064\u306b\u7f6e\u63db\u3059\u308b \\]\\] # ]] \"\"\" , re . VERBOSE )","title":"regex"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_1","text":"( ) \u3067\u30de\u30c3\u30c1\u3057\u305f\u6587\u5b57\u5217\u3092\u3001\\1, \\2, ... \\n\u3067\u9806\u756a\u306b\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 text = \"2016-05-08\" pattern = re . compile ( r '(\\d+)-(\\d+)-(\\d+)' ) pattern . sub ( r '\\1\u5e74\\2\u6708\\3\u65e5' , text ) # => 2016\u5e7405\u670808\u65e5","title":"\u30ad\u30e3\u30d7\u30c1\u30e3"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#4-mecab","text":"\u82f1\u8a9e\u3068\u9055\u3044\u3001\u65e5\u672c\u8a9e\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f\u5358\u8a9e\u9593\u306e\u533a\u5207\u308a\u304c\u660e\u78ba\u3067\u306a\u3044\u3067\u3059\u3002\u82f1\u8a9e\u306a\u3089\u5358\u7d14\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\"Hello World.\"\u2192[\"hello\", \"world\"]\u3067\u304d\u307e\u3059\u304c\u3002 MeCab\u306f\u65e5\u672c\u8a9e\u306e\u6587\u7ae0\u3092\u5358\u8a9e\u306b\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 import MeCab wakati = MeCab . Tagger ( \"-Owakati\" ) words = wakati . parse ( \"\u3053\u3053\u3067\u306f\u304d\u3082\u306e\u3092\u8131\u3044\u3067\u304f\u3060\u3055\u3044\" ) print ( words ) #\u3053\u3053 \u3067 \u306f \u304d\u3082\u306e \u3092 \u8131\u3044 \u3067 \u304f\u3060\u3055\u3044 \u3082\u3063\u3068\u65e9\u304f\u52d5\u4f5c\u3059\u308bginza\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002 ginza,spacy\u306e\u89e3\u8aac","title":"\u5f62\u614b\u7d20\u89e3\u6790\uff084\u7ae0 MeCab\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#5-cabocha","text":"\u5358\u8a9e\u9593\u306e\u4fee\u98fe\u95a2\u4fc2\u306a\u3069\u3001\u4fc2\u308a\u304b\u305f\u3092\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\u91cd\u8981\u8a9e\u62bd\u51fa\u3092 \u30b0\u30e9\u30d5\u7684\u306b\u89e3\u304f \uff08\u591a\u304f\u306e\u30b0\u30e9\u30d5\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u307b\u3069\u91cd\u8981\uff09\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3082ginza\u4f7f\u3048\u307e\u3059\u3002 \u756a\u53f7 \u6587\u7bc0 \u4fc2\u308a\u5148 ------ ---------- -------- 0 \u543e\u8f29\u306f 5 1 \u3053\u3053\u3067 2 2 \u59cb\u3081\u3066 3 3 \u4eba\u9593\u3068\u3044\u3046 4 4 \u3082\u306e\u3092 5 5 \u898b\u305f\u3002 -1","title":"\u4fc2\u308a\u53d7\u3051\u89e3\u6790\uff085\u7ae0 CaboCha\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#6-pytorch","text":"\u82f1\u8a9e\u306e\u30cb\u30e5\u30fc\u30b9\u306e\u30bf\u30a4\u30c8\u30eb\u304b\u3089\u305d\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\uff08business, science\u306a\u30694\u7a2e\u985e\uff09\u3092\u5206\u985e\u3059\u308b\u554f\u984c\u3092\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3092\u7528\u3044\u3066\u6311\u307f\u307e\u3057\u305f\u3002\u7279\u5fb4\u91cf\u306f\u5358\u8a9e\u30ab\u30a6\u30f3\u30c8\uff08Bag of Words\uff09\u3092\u7528\u3044\u307e\u3057\u305f\u3002","title":"\u6a5f\u68b0\u5b66\u7fd2\uff086\u7ae0 pytorch\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#bag-of-words","text":"\u5358\u8a9e\u306e\u7a2e\u985e\u3092\u6b21\u5143\u306e\u6570\u3068\u3057\u3066\u3001\u3042\u308b\u6587\u7ae0\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306e\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u30d9\u30af\u30c8\u30eb\u3068\u3057\u307e\u3059\u3002 \u5358\u8a9e\u306e\u9806\u5e8f\u306f\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\u5358\u7d14\u306a\u304c\u3089\u3082\u3001\u6587\u66f8\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u5206\u985e\u306a\u3069\u3067\u305d\u3053\u305d\u3053\u7cbe\u5ea6\u3092\u51fa\u305b\u307e\u3059\u3002","title":"Bag of Words"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#dataset","text":"\u554f\u984c\u3068\u7b54\u3048(label)\u306e\u30da\u30a2\u3092\u8aad\u307f\u8fbc\u3080\u30af\u30e9\u30b9\u3002\u524d\u51e6\u7406\u3092\u542b\u3080\u3002 train,validation,test\u306b\u3064\u3044\u3066\u4f5c\u6210\u3059\u308b\u3002","title":"Dataset"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#dataloader","text":"Dataset\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u304b\u3092\u6c7a\u3081\u308b\u30af\u30e9\u30b9\u3002\u30d0\u30c3\u30c1(\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u6c17\u306b\u5b66\u7fd2\u3055\u305b\u308b\u305f\u3081\u3001\u307e\u3068\u3081\u305f\u3082\u306e)\u3092\u4f5c\u308b\u3002 DataLoader\u306b\u304a\u3044\u3066\u3001\u5358\u8a9e\u306f \u30d9\u30af\u30c8\u30eb\u3067\u306a\u304fID \u3067\u8868\u73fe\u3059\u308b\u3002 \u3053\u308c\u306f\u3001\u30d9\u30af\u30c8\u30eb\u8868\u73fe\u3067\u5358\u8a9e\u30c7\u30fc\u30bf\u3092\u6301\u3064\u3068\u30e1\u30e2\u30ea\u3092\u5927\u91cf\u6d88\u8cbb\u3059\u308b\u304b\u3089\u3002\u30e2\u30c7\u30eb\u306eemmbeder\u5c64\u3067ID\u2192\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3055\u305b\u305f\u308a\u3057\u307e\u3059\u3002","title":"DataLoader"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#nnmoduleforward","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u3092\u62c5\u3046\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u57fa\u672c\u3068\u3059\u308b\u3002 import torch.nn as nn import torch.nn.functional as F class Model ( nn . Module ): # nn.Module()\u3067\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f def __init__ ( self , arg * ): # \u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u3068\u547c\u3076\u3002 Model()\u3092\u5ba3\u8a00\u3057\u305f\u6642\u3001\u6700\u521d\u306b\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570\u3002arg*\u304cModel()\u306e\u300c\u5f15\u6570\u300d super () . __init__ () # \u7d99\u627f\u5143\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u304c\u7834\u68c4\u3055\u308c\u306a\u3044\u3088\u3046\u7d99\u627f\u3059\u308b\u3002 # \u3053\u3053\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u3092\u8a18\u8ff0\u3059\u308b\u3002net1,2,3,..\u306a\u3069\u3002\u4ee5\u4e0b\u306fconvolution\u5c64\u304c2\u5c64\u306e\u5834\u5408\u3002 self . conv1 = nn . Conv2d ( 1 , 20 , 5 ) # \u2191\u3067self.conv1,2\u306e\u4ed6\u306b\u3001 self . conv2 = nn . Conv2d ( 20 , 20 , 5 ) # nn.Module\u306e\u30b3\u30f3\u30c8\u30e9\u30af\u30bf\u3067\u5ba3\u8a00\u3057\u3066\u3044\u308b\u5909\u6570(self.training\u306a\u3069)\u3082\u4f7f\u3048\u308b\u3002 def forward ( self , x ): # nn.Module\u306e__call__\u95a2\u6570\u306b\u3088\u308a\u3001Model()(x)\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002 x = F . relu ( self . conv1 ( x )) return F . relu ( self . conv2 ( x )) # forward\u306ereturn\u304cModel()()\u306ereturn","title":"nn.Module()\u3068forward"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#loss","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u304c\u3060\u3057\u305f\u4e88\u6e2c\u3068\u3001\u5b9f\u969b\u306e\u7b54\u3048\u306e\u89e3\u96e2\u3092\u51fa\u3059\u3002","title":"\u640d\u5931\u95a2\u6570 loss"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#optimizer","text":"\u91cd\u307f\u306e\u66f4\u65b0\u3092\u884c\u3046\u3002 model\u306e\u91cd\u307f\u3092model.parameters()\u3067\u6e21\u3059\u3002 \u91cd\u307f\u306fModel.conv1.weight\u3068\u304b\u306b\u4fdd\u5b58\u3055\u308c\u3066\u308b\u3002","title":"\u6700\u9069\u5316\u624b\u6cd5 optimizer"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_2","text":"\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306f\u3001y=ax+b\u3092\u640d\u5931\u95a2\u6570\uff08\u30d2\u30f3\u30b8\u640d\u5931\uff09\u3068\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308a\u91cd\u307fa\u3084\u30d0\u30a4\u30a2\u30b9b\u3092\u6700\u9069\u5316\uff08\u3064\u307e\u308a\u5b66\u7fd2\uff09\u3055\u305b\u308b\u3002\u6d3b\u6027\u5316\u95a2\u6570\u306f2\u5024\uff08[0,1]\u3084[-1,1]\uff09\u3092\u51fa\u529b\u3059\u308b\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u304c\u4f7f\u308f\u308c\u308b\u3002 \u30d2\u30f3\u30b8\u640d\u5931\uff1a\uff08\u771f\u306e\u5024\uff09-\uff08\u4e88\u6e2c\u5024\uff09^2 \u3053\u308c\u306b\u5bfe\u3057\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f\u6d3b\u6027\u5316\u304c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3067\u3001 \u640d\u5931\u95a2\u6570\u304c\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570\u3067\u3001 \u904e\u5b66\u7fd2\u3092\u9632\u3050\u305f\u3081\u306e\u7f70\u5247\u5316\u9805\u304c\u52a0\u308f\u3063\u3066\u3044\u308b\u3002 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u3082\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u3082\u3001\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u306a\u5bfe\u8c61\u3092\u5206\u96e2\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b\u3002\uff08\u7dda\u3067\u533a\u5207\u3063\u3066\u3001\u4e0a\u304b\u4e0b\u304b\u3067\u5206\u985e\uff09 \u56f3\u306e\u5f15\u7528wiki","title":"\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_3","text":"","title":"\u6027\u80fd\u8a55\u4fa1"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_4","text":"\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\uff08x\uff09\u3068\u5b9f\u969b\u306e\u7b54\u3048\uff08y\uff09\u306e\u5b9f\u6e2c\u5024\uff08\u56de\u6570n\uff09\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e\u3002 \u5de6\u4e0a\u304b\u3089\u53f3\u4e0b\u3078\u659c\u3081\u306b\u6570\u5b57\u304c\u96c6\u307e\u3063\u3066\u3044\u308b\u307b\u3069\u7cbe\u5ea6\u304c\u826f\u3044\u3002","title":"\u6df7\u540c\u884c\u5217"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_5","text":"\u5f15\u7528\u3000 https://mathwords.net/kensa \u30de\u30a4\u30af\u30ed\u5e73\u5747\uff1a\u30e9\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u3092\u7121\u8996\u3057\u305f\uff08\u4e0b\u8a18b,t,e,m\u3092\u533a\u5225\u3057\u306a\u3044\uff09\u5e73\u5747 \u30de\u30af\u30ed\u5e73\u5747\uff1a\u30e9\u30d9\u30eb\u306e\u30af\u30e9\u30b9\u6bce\u306e\u78ba\u7387\u306e\u548c/\u30af\u30e9\u30b9\u6570\u306b\u3088\u3063\u3066\u51fa\u3055\u308c\u308b\u5e73\u5747 https://datascience.stackexchange.com/questions/15989/micro-average-vs-macro-average-performance-in-a-multiclass-classification-settin \u6587\u7ae0\u3092b,t,e,m\u306b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308b\u3002","title":"\u518d\u73fe\u7387(\u967d\u6027\u306e\u4e2d\u3067\u306e\u6b63\u89e3\u7387)\u3001\u9069\u5408\u7387\uff08\u967d\u6027\u3068\u4e88\u6e2c\u3057\u305f\u6642\u306e\u6b63\u89e3\u7387\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#7","text":"\u5358\u8a9e\u2192\u30d9\u30af\u30c8\u30eb\u3092\u51fa\u529b\u3059\u308b\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u7528\u3044\u307e\u3057\u305f\u3002 from gensim.models import KeyedVectors model = KeyedVectors . load_word2vec_format ( 'GoogleNews-vectors-negative300.bin.gz' , binary = True ) model [ \"United_States\" ] # model[\u5358\u8a9e] word2vec\u3067\u306fCBOW\u3084skip-gram\u3068\u3044\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\u6587\u7ae0\u4e2d\u306e\u3042\u308b\u6587\u5b57\u3092\u96a0\u3057\u3066\u3001\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306b\u96a0\u3057\u305f\u6587\u5b57\u3092\u5f53\u3066\u3055\u305b\u308b\u3068\u3044\u3046\u554f\u984c\u3092\u89e3\u304b\u305b\u3001\u30e2\u30c7\u30eb\u306b\u5358\u8a9e\u3092\u7a81\u3063\u8fbc\u3093\u3060\u3068\u304d\u306e\u91cd\u307f\u3092\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002 RGB\u8868\u8a18\u3060\u3068\u8272\u306e\u8fd1\u3055\u304c\u5206\u304b\u308b\u3088\u3046\u306b\u3001(\u30bf\u30fc\u30b3\u30a4\u30ba=(0,183,206)\u3068\u30b7\u30a2\u30f3=(0,174,239)) \u5358\u8a9e\u306e\u610f\u5473\u306e\u8fd1\u3055\u304c\u5206\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306a\u3069)","title":"\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\uff087\u7ae0\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_6","text":"\u610f\u5473\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\uff08semantic analogy\uff09\uff1a\u5358\u8a9e\u306e\u610f\u5473\u95a2\u4fc2\u304b\u3089\u306e\u985e\u63a8\u3002man + queen = king \u6587\u6cd5\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\uff08syntactic analogy\uff09\uff1a\u5358\u8a9e\u306e\u6587\u6cd5\u95a2\u4fc2\u3000\u3000\u3003\u3000\u3000\u3002\u300ceat \u2192 ate\u300d \u306a\u3089\u300ccook \u2192 cooked\u300d","title":"\u610f\u5473\u7684\u30a2\u30ca\u30ed\u30b8\u30fc\u3001\u6587\u6cd5\u7684\u30a2\u30ca\u30ed\u30b8\u30fc"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#8","text":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\uff1a\u6d3b\u6027\u5316\u95a2\u6570\u3092\u5909\u66f4\u3057\u305f\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3092\u591a\u5c64\u306b\u3057\u305f\u3082\u306e\u3002 \uff08\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u2192\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3001ReLU\u95a2\u6570\u306a\u3069\uff09 \u4eca\u56de\u306f\u7279\u5fb4\u91cf\u3068\u3057\u3066\u3001\u6587\u7ae0\u30c7\u30fc\u30bf\u3092\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u5e73\u5747\u3068\u3057\u3066\u6271\u3063\u305f\u3002 \u6587\u7ae0\u3092\u76f4\u63a5\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3002(bert\u30e2\u30c7\u30eb\u3084 SCDV (Sparse Composite Document Vector)\u3000\u306a\u3069)","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\uff088\u7ae0\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#rnnlstm9","text":"\u6587\u7ae0\u4e2d\u306e\u5358\u8a9e\u9593\u306e\u9806\u5e8f\u3092\u8003\u616e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001RNN\u3067\u4f7f\u3046\u96a0\u308c\u72b6\u614b\u30d9\u30af\u30c8\u30ebh\u306f\u76f4\u524d\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306e\u5f71\u97ff\u3092\u5927\u304d\u304f\u53d7\u3051\u308b\u306e\u3067\u3001\u6587\u4e2d\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3092\u4efb\u610f\u306e\u91cd\u307f\u3067\u53c2\u7167\u3067\u304d\u308b\u3001Self-Attention\u306e\u65b9\u304c\u597d\u307e\u308c\u307e\u3059\u3002 https://qiita.com/t_Signull/items/21b82be280b46f467d1b \u305f\u3060\u3057 NLP100Knock\u304b\u3089\u5f15\u7528","title":"RNN(LSTM)\uff089\u7ae0\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#10-fairseq","text":"(fairseq-train\u306b\u306fpytorch1.4>\u3068GPU\u304c\u5fc5\u8981) Facebook AI Research Sequence-to-Sequence Toolkit\u3089\u3057\u3044\u3067\u3059\u3002\u6a5f\u68b0\u7ffb\u8a33\u306e LSTM, Transformer, Bert_base\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 fairseq-preprocess # \u8f9e\u66f8\u4f5c\u3063\u305f\u308a\u30d0\u30a4\u30ca\u30ea\u30fc\u5316\u3002 faiseq-train # GPU\u3092\u4f7f\u7528\u3057\u3066\u5b66\u7fd2\u3002tensorboard\u7528\u30ed\u30b0\u3082\u4fdd\u5b58\u3067\u304d\u308b\u3002CPU\u306e\u5f15\u6570\u3082\u3042\u308b\uff1f from fairseq.models.transformer import TransformerModel model = TransformerModel . from_pretrained ( 'path/to/checkpoint_dir' , checkpoint_file = 'model.pt' ) model . translate ( \"Hello world.\" ) # \u4e16\u754c\u306e\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\u3002(\u65e5\u672c\u8a9e\u2192\u82f1\u8a9e\u306e\u6a5f\u68b0\u7ffb\u8a33\u30e2\u30c7\u30eb\u306e\u5834\u5408)","title":"\u6a5f\u68b0\u7ffb\u8a33\uff0810\u7ae0 fairseq\uff09"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#transformer","text":"\u79c1\u305f\u3061\u306f\u65e5\u672c\u8a9e\u2192\u82f1\u8a9e\u306b\u7ffb\u8a33\u3092\u884c\u3046\u3068\u304d\u3001\uff08\u732b\u2192cat\uff09\u306a\u3069\u306e\u3088\u3046\u306b\u3001\u7279\u5b9a\u306e\u5358\u8a9e\u304b\u3089\u7ffb\u8a33\u3092\u884c\u3044\u307e\u3059\u3002 RNN\u306e\u96a0\u308c\u72b6\u614b\u30d9\u30af\u30c8\u30eb\u306f\u76f4\u524d\u306e\u5358\u8a9e\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u305f\u3082\u306e\u3067\u3001\u76f4\u524d\u3067\u306a\u304f\u7279\u5b9a\u306e\u5358\u8a9e\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u305f\u30d9\u30af\u30c8\u30eb\u306e\u65b9\u304c\u597d\u307e\u3057\u3044\u3067\u3059\u3002 \u307e\u305f\u3001RNN\u306fGPU\u3092\u30d5\u30eb\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u6d88\u3059\u308bAttention\u3068\u3044\u3046\u6280\u8853\u3092\u4f7f\u7528\u3057\u305f\u30e2\u30c7\u30eb\u304cTransformer\u3067\u3059\u3002 \u5165\u529b\u3055\u308c\u305f\u6587\u7ae0\u306e\u5358\u8a9e\u30d9\u30af\u30c8\u30eb(\u7dd1)\u3001Attention(\u9ec4\u8272)\u3001\u7ffb\u8a33\u3055\u308c\u305f\u5358\u8a9e(\u30aa\u30ec\u30f3\u30b8) \u3053\u306e\u8fba\u304cAttention\u306e\u8aac\u660e\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002 https://qiita.com/Kosuke-Szk/items/d49e2127bf95a1a8e19f","title":"Transformer"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#bleu","text":"\u4eba\u9593\u304c\u7ffb\u8a33\u3057\u305f\u6587\u7ae0\u306b\u4f3c\u3066\u3044\u308c\u3070\u4f3c\u3066\u3044\u308b\u307b\u3069\u3001\u6a5f\u68b0\u304c\u751f\u6210\u3057\u305f\u6587\u306f\u6b63\u3057\u305d\u3046\u3060\u3068\u3044\u3046\u524d\u63d0\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002 \u7ffb\u8a33\u3057\u305f\u6587\u7ae0\u306en-gram\u3068\u6b63\u89e3\u6587\u7ae0\u306en-gram\u306e\u5dee\u304c\u5c11\u306a\u3044\u304b\u3092\u30b9\u30b3\u30a2\u306b\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u306f4-gram\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 100\u306b\u8fd1\u3044\u307b\u3069\u6027\u80fd\u304c\u3088\u304f\u3001Transformer\u306720\u304f\u3089\u3044\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002 https://to-in.com/blog/102282 fairseq-score --sys translated.spacy --ref test.spacy.en #Namespace(ignore_case=False, order=4, ref='test.spacy.en', sacrebleu=False, sentence_bleu=False, sys='98_2.out.spacy') #BLEU4 = 11.07, 36.2/14.0/7.2/4.1 (BP=1.000, ratio=1.129, syslen=31201, reflen=27625) BLEU\u30b9\u30b3\u30a2\u306f\u540c\u7fa9\u8a9e\u3067\u3082\u9593\u9055\u3044\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001 BERT\u30b9\u30b3\u30a2 \u3068\u3044\u3046\u3082\u306e\u306f\u6587\u7ae0\u30d9\u30af\u30c8\u30eb\u3092\u6bd4\u8f03\u3059\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002","title":"BLEU\u30b9\u30b3\u30a2"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_7","text":"\u5e45\u512a\u5148\u63a2\u7d22\u3092\u3001\u6307\u5b9a\u3057\u305f\u30d3\u30fc\u30e0\u5e45\u5206\u3060\u3051\u66f4\u306b\u63a2\u7d22\u3057\u3066\u3044\u304f\u3002 \u6587\u7ae0\u306e\u6a5f\u68b0\u7ffb\u8a33\u3067\u3001\u6b63\u89e3\u7387\u304c\u9ad8\u3044\u5358\u8a9e\u304b\u3089\u59cb\u307e\u308b\u6587\u3060\u3051\uff08\u30d3\u30fc\u30e0\u5e45\u5206\uff09\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 N = 5 # \u30d3\u30fc\u30e0\u5e45 fairseq-interactive --path checkpoint.pt --beam $N data","title":"\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_8","text":"\u4f4e\u983b\u5ea6\u3067\u73fe\u308c\u308b\u5358\u8a9e\u3092\u3001\u6570\u6587\u5b57\u5358\u4f4d\u306b\u5206\u5272\u3059\u308b\u65b9\u6cd5\u3002 \u5f93\u6765\u306e\u5358\u8a9e\u306b\u5206\u5272\u3059\u308b\u524d\u51e6\u7406\u306b\u6bd4\u3079\u3001\u6587\u5b57\u5358\u4f4d\u306b\u5206\u5272\u3059\u308c\u3070 \u8a9e\u5f59\u6570\u3092\u6291\u3048\u3066\u8a08\u7b97\u91cf\u3092\u5c11\u306a\u304f\u3057\u3064\u3064 \u672a\u77e5\u8a9e\u304c\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308b\u3002 https://qiita.com/NLPingu/items/78f11ec4c3b777f56f11 word2vec\u306b\u30b5\u30d6\u30ef\u30fc\u30c9\u306a\u3069\u3092\u53d6\u308a\u5165\u308c\u305f\u3082\u306e\u304cfastext\u3089\u3057\u3044\u3002 subword-nmt learn-bpe -s 3000 < wakati_wagahai.txt > codes.txt subword-nmt apply-bpe -c codes.txt < wakati_wagahai.txt > subword_wagahai.txt # The rain@@ y season began in the southern area of Kyushu around May@@ .@@ 31 (F@@ ri@@ ) as norm@@ al. # rain@@ y\u306f\u5143\u3005rainy\u4e00\u8a9e\u3067\u3042\u3063\u305f\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002 \u5358\u8a9e\u2192\u6570\u6587\u5b57\u304c\u30b5\u30d6\u30ef\u30fc\u30c9\u3067\u3042\u308b\u4e00\u65b9\u3001 \u6587\u7ae0\u2192\u6570\u6587\u5b57\u306f SentencePiece \u3068\u3044\u3046\u3002\u6700\u8fd1\u306e\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306estate of the art(\u7cbe\u5ea6\u65b0\u8a18\u9332)\u306f\u3053\u308c\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u304b\u3002","title":"\u30b5\u30d6\u30ef\u30fc\u30c9"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/a_nlp/#_9","text":"fairseq \u3092\u7528\u3044\u3066\u65e5\u672c\u8a9e\u306e\u53e4\u6587\u2192\u82f1\u8a9e\u306e\u7ffb\u8a33\u3092\u5b66\u7fd2\u3055\u305b\u305f Transformer \u30e2\u30c7\u30eb(.pt)\u3092 flask \u3092\u4f7f\u7528\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 \u7cbe\u5ea6\u306f\u5fae\u5999\u3067\u3059...","title":"\u6a5f\u68b0\u7ffb\u8a33\u306e\u7d50\u679c"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/","text":"\u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u7b54\u3048 Q1. \u30c1\u30e3\u30f3\u30cd\u30eb\u5165\u308c\u66ff\u3048 \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u3001BGR\u304b\u3089RGB\u3078\u3068\u5909\u63db\u3002 \u89e3\u7b54 import cv2 img = cv2.imread(\"./img/imori.jpeg\") rgb_img = img[:, :, [2,1,0]].copy() numpy\u914d\u5217\u306e\u64cd\u4f5c\u3067\u5909\u63db\u3067\u304d\u308b\u3002 cv2.cvtColor(img,cv2.COLOR_BGR2RGB) \u3067\u5909\u63db\u53ef\u80fd Q2. \u753b\u50cf\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316 Y= 0.2126 R + 0.7152 G + 0.0722 B\u3001\u3067\u8868\u3055\u308c\u308b\u3002 \u89e3\u7b54 img = cv2.imread(\"./img/imori.jpeg\") gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 opencv\u306e\u6a5f\u80fd\u3067 cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) \u3067\u5909\u63db\u3067\u304d\u308b\u3002 \u884c\u5217\u8a08\u7b97\u3067\u3082\u51fa\u6765\u305d\u3046\u3002 Q3. \uff12\u5024\u5316 \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306e\uff12\u5024\u5316\u3002\u95be\u5024\u306f128 \u89e3\u7b54 img = cv2.imread(\"./img/imori.jpeg\") gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 ret, gray_img = cv2.threshold(gray_img,128,255,cv2.THRESH_BINARY) \u4e00\u500b\u4e00\u500b\u6761\u4ef6\u5206\u5c90\u3055\u305b\u308b\u3068\u8a08\u7b97\u91cf\u304c\u591a\u305d\u3046\u3002 Q4. \u5927\u6d25\u306e\u4e8c\u5024\u5316 \u4e8c\u5024\u5316\u306b\u304a\u3051\u308b\u5206\u96e2\u306e\u95be\u5024\u3092\u81ea\u52d5\u6c7a\u5b9a\u3059\u308b\u624b\u6cd5\u3067\u3042\u308b\u3002 \u30af\u30e9\u30b9\u9593\u5206\u6563\u304c\u6700\u5927\u3068\u306a\u308c\u3070\u826f\u3044\u3002 ret, gray_img = cv2.threshold(gray_img,0,255,cv2.THRESH_OTSU) \u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3002 \u4e8b\u524d\u306e gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 \u304c\u539f\u56e0\u3002gray_img\u304cfloat\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002 \u89e3\u7b54 gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY) ret, th = cv2.threshold(gray_img, 0, 255, cv2.THRESH_OTSU) Q5. HSV\u5909\u63db HSV\u5909\u63db\u3068\u306f\u3001Hue(\u8272\u76f8)\u3001Saturation(\u5f69\u5ea6)\u3001Value(\u660e\u5ea6) \u3067\u8272\u3092\u8868\u73fe\u3059\u308b\u624b\u6cd5\u3067\u3042\u308b\u3002 hsv_img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV) hsv_img[:,:,0] = (hsv_img[:,:,0] + 180) % 360 hsv_img = cv2.cvtColor(hsv_img, cv2.COLOR_HSV2BGR) \u82e5\u5e72\u8272\u304c\u9055\u3046\u6c17\u304c\u3059\u308b\u3002 Hue\u306e\u7bc4\u56f2\u304c[0:179]\u3089\u3057\u3044\u3002 hsv[:,:,0] = (hsv[:,:,0] + 90) % 180 \u307e\u3060\u9055\u3046\u3002 opencv\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u305f\u3002 \u89e3\u7b54 import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") h,w,c = img.shape hsv = img / 255 for i in range(w): for j in range(h): b,g,r = img[i,j,:] / 255 max_val = max(b,g,r) min_val = min(b,g,r) val = max_val sat = max_val - min_val if max_val == min_val: hue = 0 elif min_val == b: hue = 60 * (g-r) / sat + 60 elif min_val == r: hue = 60 * (b-g) / sat + 180 else: hue = 60 * (r-b) / sat + 300 # print(hsv[i,j,:]) hsv[i,j,:] = [hue,sat,val] # print(hsv[i,j,:]) cv2.imwrite(\"./img/hsv_moto.jpeg\",hsv) hsv[:,:,0] = (hsv[:,:,0] + 180) % 360 revers_img = img/255 for i in range(w): for j in range(h): hue,sat,val = hsv[i,j,:] c = sat h_dot = hue / 60 x = c * (1 - abs(h_dot % 2 - 1)) if (0 <= h_dot) & (h_dot < 1): add_h = [c,x,0] elif (1<= h_dot) & (h_dot < 2): add_h = [x,c,0] elif (2<= h_dot) & (h_dot < 3): add_h = [0,c,x] elif (3<= h_dot) & (h_dot < 4): add_h = [0,x,c] elif (4<= h_dot) & (h_dot < 5): add_h = [x,0,c] elif (5<= h_dot) & (h_dot < 6): add_h = [c,0,x] else: add_h = [0,0,0] revers_img[i,j,:] = np.multiply([1,1,1], (val - c)) + add_h revers_img = revers_img * 255 revers_img = revers_img[:, :, [2,1,0]] cv2.imwrite(\"./img/hsv.jpeg\",revers_img) height,width,channel\u306e\u9806\u5e8f\u3092\u3082\u3063\u3068\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u3082\u3063\u3068\u30b3\u30fc\u30c9\u3092\u77ed\u304f\u3067\u304d\u308b\u3068\u826f\u3044\u3068\u601d\u3046\u3002if\u306e\u5206\u5c90\u304c\u591a\u3059\u304e\u308b\u3002 Q6. \u6e1b\u8272\u51e6\u7406 \u3059\u306a\u308f\u3061R,G,B in {32, 96, 160, 224}\u306e\u54044\u5024\u306b\u6e1b\u8272\u305b\u3088\u3002 \u89e3\u7b54 img = cv2.imread(\"./img/imori.jpeg\") img = (img // 64 + 1) * 64 - 32 cv2.imwrite(\"./img/result_img.jpeg\",img) if\u6587\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002 Q7. \u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0 \u753b\u50cf\u3092\u30b0\u30ea\u30c3\u30c9\u5206\u5272(\u3042\u308b\u56fa\u5b9a\u9577\u306e\u9818\u57df\u306b\u5206\u3051\u308b)\u3057\u3001\u304b\u304f\u9818\u57df\u5185(\u30bb\u30eb)\u306e\u5e73\u5747\u5024\u3067\u305d\u306e\u9818\u57df\u5185\u306e\u5024\u3092\u57cb\u3081\u308b\u3002 imori.jpg\u306f128x128\u306a\u306e\u3067\u30018x8\u306b\u30b0\u30ea\u30c3\u30c9\u5206\u5272\u3057\u3001\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0\u305b\u3088\u3002 \u89e3\u7b54 import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") def average_pooling(img,karnel): pool_img = img.copy() height,width,channel = img.shape for i in range(0,height,karnel[0]): for j in range(0,width,karnel[1]): ave = np.mean(img[i:i+karnel[0],j:j+karnel[1],:],axis = 0) ave = np.mean(ave,axis = 0) pool_img[i:i+karnel[0],j:j+karnel[1],:] = ave return pool_img kar = (8,8) img = average_pooling(img,kar) cv2.imwrite(\"./img/pool_img.jpeg\",img) for\u6587\u30922\u56de\u4f7f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u4ee5\u4e0a\u6e1b\u3089\u3059\u65b9\u6cd5\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3002 \u307e\u305f\u884c\u3068\u5217\u306e\u5e73\u5747\u30922\u56de\u306b\u5206\u3051\u3066\u6c42\u3081\u3066\u308b\u306e\u3067\u3053\u308c\u3092\u4e00\u5ea6\u306b\u3067\u304d\u308b\u65b9\u6cd5\u304c\u3042\u308c\u3070\u3088\u304b\u3063\u305f\u3002 def average_pooling(img,karnel) img\u306f\u753b\u50cf\u3001karnel\u306f\u30b0\u30ea\u30c3\u30c9\u306e\u5206\u5272\u306e\u7bc4\u56f2 Q8. Max\u30d7\u30fc\u30ea\u30f3\u30b0 \u3053\u3053\u3067\u306f\u5e73\u5747\u5024\u3067\u306a\u304f\u6700\u5927\u5024\u3067\u30d7\u30fc\u30ea\u30f3\u30b0\u305b\u3088\u3002 \u89e3\u7b54 import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") def average_pooling(img,karnel): pool_img = img.copy() height,width,channel = img.shape for i in range(0,height,karnel[0]): for j in range(0,width,karnel[1]): ave = np.max(img[i:i+karnel[0],j:j+karnel[1],:],axis = 0) ave = np.max(ave,axis = 0) pool_img[i:i+karnel[0],j:j+karnel[1],:] = ave return pool_img kar = (8,8) img = average_pooling(img,kar) cv2.imwrite(\"./img/poolmax_img.jpeg\",img) \u5e73\u5747\u3092\u6c42\u3081\u308b\u90e8\u5206\u3092\u3001\u6700\u5927\u5024\u306b\u5909\u66f4\u3057\u305f\u3002 Q9. \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf(3x3\u3001\u6a19\u6e96\u504f\u5dee1.3)\u3092\u5b9f\u88c5\u3057\u3001imori_noise.jpg\u306e\u30ce\u30a4\u30ba\u3092\u9664\u53bb\u305b\u3088\u3002 \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u6ce8\u76ee\u753b\u7d20\u306e\u5468\u8fba\u753b\u7d20\u3092\u3001\u30ac\u30a6\u30b9\u5206\u5e03\u306b\u3088\u308b\u91cd\u307f\u4ed8\u3051\u3067\u5e73\u6ed1\u5316\u3057\u3001\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u91cd\u307f\u306f\u30ab\u30fc\u30cd\u30eb\u3084\u30d5\u30a3\u30eb\u30bf\u3068\u547c\u3070\u308c\u308b\u3002 \u89e3\u7b54 import cv2 import numpy as np img = cv2.imread(\"./img/imori_noise.jpeg\") def gausu_filter(img,karnel,sigma): height,width,channel = img.shape pad = karnel // 2 pad_img = np.zeros((height + pad * 2,width + pad * 2, channel)) pad_img[pad:pad+height,pad:pad+width] = img weight = gausu(sigma,karnel,pad) gausu_img = img.copy() for i in range(height): for j in range(width): gausu_img[i,j,0] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,0]*weight) gausu_img[i,j,1] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,1]*weight) gausu_img[i,j,2] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,2]*weight) print(gausu_img) return gausu_img def gausu(sigma,karnel,pading): filt = np.zeros((karnel,karnel)) for x in range(pading * -1, pading + 1): for y in range(pading * -1, pading + 1): print(x,y) filt[x+pading,y+pading] = 1 / (2*np.pi*sigma*sigma) * np.exp((-1 * (x*x + y*y))/(2 * (sigma**2))) filt /= filt.sum() return filt kar = 3 sig = 1.3 img = gausu_filter(img,kar,sig) cv2.imwrite(\"./img/gausu_img.jpeg\",img) \u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u4f5c\u6210\u306b\u3082\u95a2\u6570\u3092\u7528\u3044\u305f\u3002 Q10. \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u3057\u3001imori_noise.jpg\u306e\u30ce\u30a4\u30ba\u3092\u9664\u53bb\u305b\u3088\u3002 \u3053\u308c\u306f\u6ce8\u76ee\u753b\u7d20\u306e3x3\u306e\u9818\u57df\u5185\u306e\u3001\u30e1\u30c7\u30a3\u30a2\u30f3\u5024(\u4e2d\u592e\u5024)\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308b\u3002 \u3053\u308c\u3082\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u305b\u3088\u3002 \u30b5\u30a4\u30c8 \u3092\u53c2\u8003\u306b\u3057\u3066\u3001for\u6587\u3092\u5c11\u306a\u304f\u66f8\u3044\u3066\u307f\u308b\u3002 \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori_noise.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 medhian = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='med') cv2.imwrite(\"./img/medhian_img.jpeg\",medhian) \u53c2\u8003\u306b\u3057\u305f\u7d50\u679cfor\u6587\u3092\u4f7f\u308f\u306a\u3044\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 \u3057\u304b\u3057as_strided\u306e\u5f15\u6570strides\u306e\u5f79\u5272\u304c\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\u8abf\u3079\u305f\u3068\u3053\u308d\u30e1\u30e2\u30ea\u306e\u79fb\u52d5\u8ddd\u96e2\u306e\u3088\u3046\u3060\u3063\u305f\u3002 strides = (stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) \u306eshape\u304c (390, 3, 1, 390, 3) \u3068\u306a\u3063\u3066\u3044\u308b\u3002\u524d\u534a\u306e(390,3,1)\u306f(height,width,channel)\u3092\u8868\u3057\u3066\u3044\u3066\u3001\u52d5\u304b\u3059(height,width)\u3092\u3082\u3046\u4e00\u5ea6\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u304b\uff1f Q11. \u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf \u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf\u306f\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u753b\u7d20\u306e\u5e73\u5747\u5024\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308b\u3002 \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 mean = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='avg') cv2.imwrite(\"./img/mean_img.jpeg\",mean) \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u6700\u5f8c\u306e\u90e8\u5206\u3092\u5e73\u5747\u306b\u5909\u3048\u305f\u3060\u3051\u3067\u3042\u308b\u3002 Q12. \u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf \u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3068\u306f\u5bfe\u89d2\u65b9\u5411\u306e\u5e73\u5747\u5024\u3092\u53d6\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u308b. [[1/3,0,0] [0,1/3,0] [0,0,1/3]] \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 motion = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='motion') print(motion.shape) cv2.imwrite(\"./img/motion_img.jpeg\",motion) \u91cd\u307f\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u5024\u3092\u305d\u308c\u305e\u308c\u306b\u304b\u3051\u305f\u3002 Q13. MAX-MIN\u30d5\u30a3\u30eb\u30bf MAX-MIN\u30d5\u30a3\u30eb\u30bf\u3068\u306f\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u753b\u7d20\u306e\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u306e\u5dee\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u30a8\u30c3\u30b8\u691c\u51fa\u306e\u30d5\u30a3\u30eb\u30bf\u306e\u4e00\u3064\u3067\u3042\u308b\u3002 \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1) kernel_size = (kernel_size, kernel_size) # print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], ) + A.strides) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'min': return A_w.min(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) elif pool_mode == \"max_min\": max_pool = A_w.max(axis=(1,2)).reshape(output_shape) min_pool = A_w.min(axis=(1,2)).reshape(output_shape) return max_pool - min_pool img = cv2.imread(\"./img/imori.jpeg\") img = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) height,width= img.shape karn = 3 padding = karn // 2 max_min = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='max_min') print(max_min.shape) cv2.imwrite(\"./img/min_max_img.jpeg\",max_min) \u4e8b\u524d\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3057\u305f\u304c\u3001BGR\u753b\u50cf\u3067\u4f5c\u6210\u3057\u305f\u5f8c\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3057\u3066\u3082\u540c\u3058\u306a\u306e\u304b\uff1f Q14. \u5fae\u5206\u30d5\u30a3\u30eb\u30bf \u5fae\u5206\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u5fae\u5206\u30d5\u30a3\u30eb\u30bf\u306f\u8f1d\u5ea6\u306e\u6025\u6fc0\u306a\u5909\u5316\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u30a8\u30c3\u30b8\u3092\u53d6\u308a\u51fa\u3059\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u96a3\u308a\u5408\u3046\u753b\u7d20\u540c\u58eb\u306e\u5dee\u3092\u53d6\u308b\u3002 \u7e26\u306e\u30d5\u30a3\u30eb\u30bf [[0,0,0] [-1,1,0] [0,0,0]] \u6a2a\u306e\u30d5\u30a3\u30eb\u30bf [[0,-1,0] [0,1,0] [0,0,0]] ### \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) weight_w = [[0,0,0],[-1,1,0],[0,0,0]] weight_h = [[0,-1,0],[0,1,0],[0,0,0]] weight_w = np.array(weight_w).reshape(-1,3,3) weight_h = np.array(weight_h).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'min': return A_w.min(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) elif pool_mode == \"max_min\": max_pool = A_w.max(axis=(1,2)).reshape(output_shape) min_pool = A_w.min(axis=(1,2)).reshape(output_shape) return max_pool - min_pool elif pool_mode == \"diff_w\": return np.sum(A_w*weight_w,axis = (1,2)).reshape(output_shape) elif pool_mode == \"diff_h\": return np.sum(A_w*weight_h,axis = (1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 diff_w_img = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='diff_w') diff_h_img = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='diff_h') cv2.imwrite(\"./img/diff_h_img.jpeg\",diff_h_img) cv2.imwrite(\"./img/diff_w_img.jpeg\",diff_w_img) \u30d5\u30a3\u30eb\u30bf\u3054\u3068\u306b\u5206\u96e2\u3057\u3066\u304a\u3051\u3070\u51e6\u7406\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002 Q20. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u8868\u793a matplotlib\u3092\u7528\u3044\u3066imori_dark.jpg\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8868\u793a\u305b\u3088\u3002 \u89e3\u7b54 import numpy as np import cv2 import matplotlib.pyplot as plt img = cv2.imread(\"./img/imori_dark.jpeg\") gaso = np.array(img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) plt.show() \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306b\u3059\u308b\u3068\u304d\u306f\uff11\u6b21\u5143\u306b\u3057\u306a\u3044\u3068\u51e6\u7406\u3067\u304d\u306a\u3044\u3002 Q21. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316\u3092\u5b9f\u88c5\u305b\u3088\u3002 [c,d]\u306e\u753b\u7d20\u5024\u3092\u6301\u3064\u753b\u50cf\u3092[a,b]\u306e\u30ec\u30f3\u30b8\u306b\u5909\u63db\u3059\u308b\u3002 \u89e3\u7b54 import numpy as np import cv2 import matplotlib.pyplot as plt def gray_scale_trans(img,a=0,b=255): out = img.copy() c = img.min() d = img.max() out = (b-a)/(d-c)*(out-c)+a np.where(out < a, a, out) np.where(b < out, b, out) return out img = cv2.imread(\"./img/imori_dark.jpeg\") trans_img = gray_scale_trans(img) gaso = np.array(trans_img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) cv2.imwrite(\"./img/trans_img.jpeg\",trans_img) plt.show() np.where\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316\u3092\u95a2\u6570\u3068\u3057\u3066\u8868\u3057\u305f\u3002 Q.22 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u64cd\u4f5c \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u5e73\u5747\u5024\u3092m0=128\u3001\u6a19\u6e96\u504f\u5dee\u3092s0=52\u306b\u306a\u308b\u3088\u3046\u306b\u64cd\u4f5c\u305b\u3088\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u5909\u66f4\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308b. \u89e3\u7b54 import numpy as np import cv2 import matplotlib.pyplot as plt def hist_heitan(img,m0=128,s0=52): out = img.copy() s = np.std(img) m = np.average(img) out = s0 / s * (out - m) + m0 return out img = cv2.imread(\"./img/imori_dark.jpeg\") trans_img = hist_heitan(img) gaso = np.array(trans_img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) cv2.imwrite(\"./img/trans_img_1.jpeg\",trans_img) plt.show() \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u305f\u3002 Q.23 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316\u3068\u306f\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u5909\u66f4\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308a\u3001\u4e0a\u8a18\u306e\u5e73\u5747\u5024\u3084\u6a19\u6e96\u504f\u5dee\u306a\u3069\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5024\u3092\u5747\u8861\u306b\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308b\u3002 import numpy as np import cv2 import matplotlib.pyplot as plt def hist_heitan_function(img, z_max=255): out = img.copy() height, width, channel = img.shape S = height * width * channel sum_h = 0 for i in range(1, 255): ind = np.where(img == i) sum_h += len(img[ind]) z_prime = z_max / S * sum_h out[ind] = z_prime return out img = cv2.imread(\"./img/imori.jpeg\") trans_img = hist_heitan_function(img) gaso = np.array(trans_img).flatten() plt.hist(gaso, bins=255, range=(0, 255), rwidth=0.8) cv2.imwrite(\"./img/trans_img_3.jpeg\", trans_img) plt.show() np.where\u3092\u7528\u3044\u3066for\u6587\u3092\u7121\u304f\u305d\u3046\u3068\u3057\u305f\u304c\u4e0a\u624b\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u3002","title":"\u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u7b54\u3048"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#100","text":"","title":"\u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u7b54\u3048"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q1","text":"\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u3001BGR\u304b\u3089RGB\u3078\u3068\u5909\u63db\u3002","title":"Q1.\u30c1\u30e3\u30f3\u30cd\u30eb\u5165\u308c\u66ff\u3048"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_1","text":"import cv2 img = cv2.imread(\"./img/imori.jpeg\") rgb_img = img[:, :, [2,1,0]].copy() numpy\u914d\u5217\u306e\u64cd\u4f5c\u3067\u5909\u63db\u3067\u304d\u308b\u3002 cv2.cvtColor(img,cv2.COLOR_BGR2RGB) \u3067\u5909\u63db\u53ef\u80fd","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q2","text":"Y= 0.2126 R + 0.7152 G + 0.0722 B\u3001\u3067\u8868\u3055\u308c\u308b\u3002","title":"Q2.\u753b\u50cf\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_2","text":"img = cv2.imread(\"./img/imori.jpeg\") gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 opencv\u306e\u6a5f\u80fd\u3067 cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) \u3067\u5909\u63db\u3067\u304d\u308b\u3002 \u884c\u5217\u8a08\u7b97\u3067\u3082\u51fa\u6765\u305d\u3046\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q32","text":"\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306e\uff12\u5024\u5316\u3002\u95be\u5024\u306f128","title":"Q3.\uff12\u5024\u5316"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_3","text":"img = cv2.imread(\"./img/imori.jpeg\") gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 ret, gray_img = cv2.threshold(gray_img,128,255,cv2.THRESH_BINARY) \u4e00\u500b\u4e00\u500b\u6761\u4ef6\u5206\u5c90\u3055\u305b\u308b\u3068\u8a08\u7b97\u91cf\u304c\u591a\u305d\u3046\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q4","text":"\u4e8c\u5024\u5316\u306b\u304a\u3051\u308b\u5206\u96e2\u306e\u95be\u5024\u3092\u81ea\u52d5\u6c7a\u5b9a\u3059\u308b\u624b\u6cd5\u3067\u3042\u308b\u3002 \u30af\u30e9\u30b9\u9593\u5206\u6563\u304c\u6700\u5927\u3068\u306a\u308c\u3070\u826f\u3044\u3002 ret, gray_img = cv2.threshold(gray_img,0,255,cv2.THRESH_OTSU) \u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3002 \u4e8b\u524d\u306e gray_img = img[:,:,0] * 0.0722 + img[:,:,1] * 0.7152 + img[:,:,2] * 0.2126 \u304c\u539f\u56e0\u3002gray_img\u304cfloat\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002","title":"Q4.\u5927\u6d25\u306e\u4e8c\u5024\u5316"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_4","text":"gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY) ret, th = cv2.threshold(gray_img, 0, 255, cv2.THRESH_OTSU)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q5hsv","text":"HSV\u5909\u63db\u3068\u306f\u3001Hue(\u8272\u76f8)\u3001Saturation(\u5f69\u5ea6)\u3001Value(\u660e\u5ea6) \u3067\u8272\u3092\u8868\u73fe\u3059\u308b\u624b\u6cd5\u3067\u3042\u308b\u3002 hsv_img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV) hsv_img[:,:,0] = (hsv_img[:,:,0] + 180) % 360 hsv_img = cv2.cvtColor(hsv_img, cv2.COLOR_HSV2BGR) \u82e5\u5e72\u8272\u304c\u9055\u3046\u6c17\u304c\u3059\u308b\u3002 Hue\u306e\u7bc4\u56f2\u304c[0:179]\u3089\u3057\u3044\u3002 hsv[:,:,0] = (hsv[:,:,0] + 90) % 180 \u307e\u3060\u9055\u3046\u3002 opencv\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u305f\u3002","title":"Q5.HSV\u5909\u63db"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_5","text":"import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") h,w,c = img.shape hsv = img / 255 for i in range(w): for j in range(h): b,g,r = img[i,j,:] / 255 max_val = max(b,g,r) min_val = min(b,g,r) val = max_val sat = max_val - min_val if max_val == min_val: hue = 0 elif min_val == b: hue = 60 * (g-r) / sat + 60 elif min_val == r: hue = 60 * (b-g) / sat + 180 else: hue = 60 * (r-b) / sat + 300 # print(hsv[i,j,:]) hsv[i,j,:] = [hue,sat,val] # print(hsv[i,j,:]) cv2.imwrite(\"./img/hsv_moto.jpeg\",hsv) hsv[:,:,0] = (hsv[:,:,0] + 180) % 360 revers_img = img/255 for i in range(w): for j in range(h): hue,sat,val = hsv[i,j,:] c = sat h_dot = hue / 60 x = c * (1 - abs(h_dot % 2 - 1)) if (0 <= h_dot) & (h_dot < 1): add_h = [c,x,0] elif (1<= h_dot) & (h_dot < 2): add_h = [x,c,0] elif (2<= h_dot) & (h_dot < 3): add_h = [0,c,x] elif (3<= h_dot) & (h_dot < 4): add_h = [0,x,c] elif (4<= h_dot) & (h_dot < 5): add_h = [x,0,c] elif (5<= h_dot) & (h_dot < 6): add_h = [c,0,x] else: add_h = [0,0,0] revers_img[i,j,:] = np.multiply([1,1,1], (val - c)) + add_h revers_img = revers_img * 255 revers_img = revers_img[:, :, [2,1,0]] cv2.imwrite(\"./img/hsv.jpeg\",revers_img) height,width,channel\u306e\u9806\u5e8f\u3092\u3082\u3063\u3068\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u3082\u3063\u3068\u30b3\u30fc\u30c9\u3092\u77ed\u304f\u3067\u304d\u308b\u3068\u826f\u3044\u3068\u601d\u3046\u3002if\u306e\u5206\u5c90\u304c\u591a\u3059\u304e\u308b\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q6","text":"\u3059\u306a\u308f\u3061R,G,B in {32, 96, 160, 224}\u306e\u54044\u5024\u306b\u6e1b\u8272\u305b\u3088\u3002","title":"Q6.\u6e1b\u8272\u51e6\u7406"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_6","text":"img = cv2.imread(\"./img/imori.jpeg\") img = (img // 64 + 1) * 64 - 32 cv2.imwrite(\"./img/result_img.jpeg\",img) if\u6587\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q7","text":"\u753b\u50cf\u3092\u30b0\u30ea\u30c3\u30c9\u5206\u5272(\u3042\u308b\u56fa\u5b9a\u9577\u306e\u9818\u57df\u306b\u5206\u3051\u308b)\u3057\u3001\u304b\u304f\u9818\u57df\u5185(\u30bb\u30eb)\u306e\u5e73\u5747\u5024\u3067\u305d\u306e\u9818\u57df\u5185\u306e\u5024\u3092\u57cb\u3081\u308b\u3002 imori.jpg\u306f128x128\u306a\u306e\u3067\u30018x8\u306b\u30b0\u30ea\u30c3\u30c9\u5206\u5272\u3057\u3001\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0\u305b\u3088\u3002","title":"Q7.\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_7","text":"import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") def average_pooling(img,karnel): pool_img = img.copy() height,width,channel = img.shape for i in range(0,height,karnel[0]): for j in range(0,width,karnel[1]): ave = np.mean(img[i:i+karnel[0],j:j+karnel[1],:],axis = 0) ave = np.mean(ave,axis = 0) pool_img[i:i+karnel[0],j:j+karnel[1],:] = ave return pool_img kar = (8,8) img = average_pooling(img,kar) cv2.imwrite(\"./img/pool_img.jpeg\",img) for\u6587\u30922\u56de\u4f7f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u4ee5\u4e0a\u6e1b\u3089\u3059\u65b9\u6cd5\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3002 \u307e\u305f\u884c\u3068\u5217\u306e\u5e73\u5747\u30922\u56de\u306b\u5206\u3051\u3066\u6c42\u3081\u3066\u308b\u306e\u3067\u3053\u308c\u3092\u4e00\u5ea6\u306b\u3067\u304d\u308b\u65b9\u6cd5\u304c\u3042\u308c\u3070\u3088\u304b\u3063\u305f\u3002 def average_pooling(img,karnel) img\u306f\u753b\u50cf\u3001karnel\u306f\u30b0\u30ea\u30c3\u30c9\u306e\u5206\u5272\u306e\u7bc4\u56f2","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q8max","text":"\u3053\u3053\u3067\u306f\u5e73\u5747\u5024\u3067\u306a\u304f\u6700\u5927\u5024\u3067\u30d7\u30fc\u30ea\u30f3\u30b0\u305b\u3088\u3002","title":"Q8.Max\u30d7\u30fc\u30ea\u30f3\u30b0"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_8","text":"import cv2 import numpy as np img = cv2.imread(\"./img/imori.jpeg\") def average_pooling(img,karnel): pool_img = img.copy() height,width,channel = img.shape for i in range(0,height,karnel[0]): for j in range(0,width,karnel[1]): ave = np.max(img[i:i+karnel[0],j:j+karnel[1],:],axis = 0) ave = np.max(ave,axis = 0) pool_img[i:i+karnel[0],j:j+karnel[1],:] = ave return pool_img kar = (8,8) img = average_pooling(img,kar) cv2.imwrite(\"./img/poolmax_img.jpeg\",img) \u5e73\u5747\u3092\u6c42\u3081\u308b\u90e8\u5206\u3092\u3001\u6700\u5927\u5024\u306b\u5909\u66f4\u3057\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q9","text":"\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf(3x3\u3001\u6a19\u6e96\u504f\u5dee1.3)\u3092\u5b9f\u88c5\u3057\u3001imori_noise.jpg\u306e\u30ce\u30a4\u30ba\u3092\u9664\u53bb\u305b\u3088\u3002 \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u6ce8\u76ee\u753b\u7d20\u306e\u5468\u8fba\u753b\u7d20\u3092\u3001\u30ac\u30a6\u30b9\u5206\u5e03\u306b\u3088\u308b\u91cd\u307f\u4ed8\u3051\u3067\u5e73\u6ed1\u5316\u3057\u3001\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u91cd\u307f\u306f\u30ab\u30fc\u30cd\u30eb\u3084\u30d5\u30a3\u30eb\u30bf\u3068\u547c\u3070\u308c\u308b\u3002","title":"Q9.\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_9","text":"import cv2 import numpy as np img = cv2.imread(\"./img/imori_noise.jpeg\") def gausu_filter(img,karnel,sigma): height,width,channel = img.shape pad = karnel // 2 pad_img = np.zeros((height + pad * 2,width + pad * 2, channel)) pad_img[pad:pad+height,pad:pad+width] = img weight = gausu(sigma,karnel,pad) gausu_img = img.copy() for i in range(height): for j in range(width): gausu_img[i,j,0] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,0]*weight) gausu_img[i,j,1] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,1]*weight) gausu_img[i,j,2] = np.sum(pad_img[i:i+pad*2+1,j:j+pad*2+1,2]*weight) print(gausu_img) return gausu_img def gausu(sigma,karnel,pading): filt = np.zeros((karnel,karnel)) for x in range(pading * -1, pading + 1): for y in range(pading * -1, pading + 1): print(x,y) filt[x+pading,y+pading] = 1 / (2*np.pi*sigma*sigma) * np.exp((-1 * (x*x + y*y))/(2 * (sigma**2))) filt /= filt.sum() return filt kar = 3 sig = 1.3 img = gausu_filter(img,kar,sig) cv2.imwrite(\"./img/gausu_img.jpeg\",img) \u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u4f5c\u6210\u306b\u3082\u95a2\u6570\u3092\u7528\u3044\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q10","text":"\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u3057\u3001imori_noise.jpg\u306e\u30ce\u30a4\u30ba\u3092\u9664\u53bb\u305b\u3088\u3002 \u3053\u308c\u306f\u6ce8\u76ee\u753b\u7d20\u306e3x3\u306e\u9818\u57df\u5185\u306e\u3001\u30e1\u30c7\u30a3\u30a2\u30f3\u5024(\u4e2d\u592e\u5024)\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308b\u3002 \u3053\u308c\u3082\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u305b\u3088\u3002 \u30b5\u30a4\u30c8 \u3092\u53c2\u8003\u306b\u3057\u3066\u3001for\u6587\u3092\u5c11\u306a\u304f\u66f8\u3044\u3066\u307f\u308b\u3002","title":"Q10.\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_10","text":"import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori_noise.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 medhian = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='med') cv2.imwrite(\"./img/medhian_img.jpeg\",medhian) \u53c2\u8003\u306b\u3057\u305f\u7d50\u679cfor\u6587\u3092\u4f7f\u308f\u306a\u3044\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 \u3057\u304b\u3057as_strided\u306e\u5f15\u6570strides\u306e\u5f79\u5272\u304c\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\u8abf\u3079\u305f\u3068\u3053\u308d\u30e1\u30e2\u30ea\u306e\u79fb\u52d5\u8ddd\u96e2\u306e\u3088\u3046\u3060\u3063\u305f\u3002 strides = (stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) \u306eshape\u304c (390, 3, 1, 390, 3) \u3068\u306a\u3063\u3066\u3044\u308b\u3002\u524d\u534a\u306e(390,3,1)\u306f(height,width,channel)\u3092\u8868\u3057\u3066\u3044\u3066\u3001\u52d5\u304b\u3059(height,width)\u3092\u3082\u3046\u4e00\u5ea6\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u304b\uff1f","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q11","text":"\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf\u306f\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u753b\u7d20\u306e\u5e73\u5747\u5024\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308b\u3002","title":"Q11.\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_11","text":"import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 mean = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='avg') cv2.imwrite(\"./img/mean_img.jpeg\",mean) \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u6700\u5f8c\u306e\u90e8\u5206\u3092\u5e73\u5747\u306b\u5909\u3048\u305f\u3060\u3051\u3067\u3042\u308b\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q12","text":"\u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3068\u306f\u5bfe\u89d2\u65b9\u5411\u306e\u5e73\u5747\u5024\u3092\u53d6\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u308b. [[1/3,0,0] [0,1/3,0] [0,0,1/3]]","title":"Q12.\u30e2\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_12","text":"import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 motion = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='motion') print(motion.shape) cv2.imwrite(\"./img/motion_img.jpeg\",motion) \u91cd\u307f\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u5024\u3092\u305d\u308c\u305e\u308c\u306b\u304b\u3051\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q13max-min","text":"MAX-MIN\u30d5\u30a3\u30eb\u30bf\u3068\u306f\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u753b\u7d20\u306e\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u306e\u5dee\u3092\u51fa\u529b\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u30a8\u30c3\u30b8\u691c\u51fa\u306e\u30d5\u30a3\u30eb\u30bf\u306e\u4e00\u3064\u3067\u3042\u308b\u3002","title":"Q13.MAX-MIN\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_13","text":"import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1) kernel_size = (kernel_size, kernel_size) # print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], ) + A.strides) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'min': return A_w.min(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) elif pool_mode == \"max_min\": max_pool = A_w.max(axis=(1,2)).reshape(output_shape) min_pool = A_w.min(axis=(1,2)).reshape(output_shape) return max_pool - min_pool img = cv2.imread(\"./img/imori.jpeg\") img = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) height,width= img.shape karn = 3 padding = karn // 2 max_min = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='max_min') print(max_min.shape) cv2.imwrite(\"./img/min_max_img.jpeg\",max_min) \u4e8b\u524d\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3057\u305f\u304c\u3001BGR\u753b\u50cf\u3067\u4f5c\u6210\u3057\u305f\u5f8c\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3057\u3066\u3082\u540c\u3058\u306a\u306e\u304b\uff1f","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q14","text":"\u5fae\u5206\u30d5\u30a3\u30eb\u30bf(3x3)\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u5fae\u5206\u30d5\u30a3\u30eb\u30bf\u306f\u8f1d\u5ea6\u306e\u6025\u6fc0\u306a\u5909\u5316\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u30a8\u30c3\u30b8\u3092\u53d6\u308a\u51fa\u3059\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u96a3\u308a\u5408\u3046\u753b\u7d20\u540c\u58eb\u306e\u5dee\u3092\u53d6\u308b\u3002 \u7e26\u306e\u30d5\u30a3\u30eb\u30bf [[0,0,0] [-1,1,0] [0,0,0]] \u6a2a\u306e\u30d5\u30a3\u30eb\u30bf [[0,-1,0] [0,1,0] [0,0,0]] ### \u89e3\u7b54 import numpy as np import cv2 from numpy.lib.stride_tricks import as_strided def pool2d(A, kernel_size, stride, padding, pool_mode='max'): ''' 2D Pooling Parameters: A: input 2D array kernel_size: int, the size of the window stride: int, the stride of the window padding: int, implicit zero paddings on both sides of the input pool_mode: string, 'max' or 'avg' ''' # Padding A = np.pad(A, ((padding,padding),(padding,padding),(0,0)), mode='constant') # Window view of A output_shape = ((A.shape[0] - kernel_size)//stride + 1, (A.shape[1] - kernel_size)//stride + 1, A.shape[2]) kernel_size = (kernel_size, kernel_size) print((stride*A.strides[0],stride*A.strides[1],stride*A.strides[2]) + A.strides[0:2]) A_w = as_strided(A, shape = output_shape + kernel_size, strides = (stride*A.strides[0], stride*A.strides[1], stride*A.strides[2] ) + A.strides[0:2]) A_w = A_w.reshape(-1, *kernel_size) weight = [[1/3,0,0],[0,1/3,0],[0,0,1/3]] weight = np.array(weight).reshape(-1,3,3) weight_w = [[0,0,0],[-1,1,0],[0,0,0]] weight_h = [[0,-1,0],[0,1,0],[0,0,0]] weight_w = np.array(weight_w).reshape(-1,3,3) weight_h = np.array(weight_h).reshape(-1,3,3) # Return the result of pooling if pool_mode == 'max': return A_w.max(axis=(1,2)).reshape(output_shape) elif pool_mode == 'min': return A_w.min(axis=(1,2)).reshape(output_shape) elif pool_mode == 'avg': return A_w.mean(axis=(1,2)).reshape(output_shape) elif pool_mode == \"med\": return np.median(A_w,axis=(1,2)).reshape(output_shape) elif pool_mode == \"motion\": return np.sum(A_w*weight,axis = (1,2)).reshape(output_shape) elif pool_mode == \"max_min\": max_pool = A_w.max(axis=(1,2)).reshape(output_shape) min_pool = A_w.min(axis=(1,2)).reshape(output_shape) return max_pool - min_pool elif pool_mode == \"diff_w\": return np.sum(A_w*weight_w,axis = (1,2)).reshape(output_shape) elif pool_mode == \"diff_h\": return np.sum(A_w*weight_h,axis = (1,2)).reshape(output_shape) img = cv2.imread(\"./img/imori.jpeg\") height,width,channel = img.shape karn = 3 padding = karn // 2 diff_w_img = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='diff_w') diff_h_img = pool2d(img, kernel_size=karn, stride=1, padding=padding, pool_mode='diff_h') cv2.imwrite(\"./img/diff_h_img.jpeg\",diff_h_img) cv2.imwrite(\"./img/diff_w_img.jpeg\",diff_w_img) \u30d5\u30a3\u30eb\u30bf\u3054\u3068\u306b\u5206\u96e2\u3057\u3066\u304a\u3051\u3070\u51e6\u7406\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002","title":"Q14.\u5fae\u5206\u30d5\u30a3\u30eb\u30bf"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q20","text":"matplotlib\u3092\u7528\u3044\u3066imori_dark.jpg\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8868\u793a\u305b\u3088\u3002","title":"Q20.\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u8868\u793a"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_14","text":"import numpy as np import cv2 import matplotlib.pyplot as plt img = cv2.imread(\"./img/imori_dark.jpeg\") gaso = np.array(img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) plt.show() \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306b\u3059\u308b\u3068\u304d\u306f\uff11\u6b21\u5143\u306b\u3057\u306a\u3044\u3068\u51e6\u7406\u3067\u304d\u306a\u3044\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q21","text":"\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316\u3092\u5b9f\u88c5\u305b\u3088\u3002 [c,d]\u306e\u753b\u7d20\u5024\u3092\u6301\u3064\u753b\u50cf\u3092[a,b]\u306e\u30ec\u30f3\u30b8\u306b\u5909\u63db\u3059\u308b\u3002","title":"Q21.\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_15","text":"import numpy as np import cv2 import matplotlib.pyplot as plt def gray_scale_trans(img,a=0,b=255): out = img.copy() c = img.min() d = img.max() out = (b-a)/(d-c)*(out-c)+a np.where(out < a, a, out) np.where(b < out, b, out) return out img = cv2.imread(\"./img/imori_dark.jpeg\") trans_img = gray_scale_trans(img) gaso = np.array(trans_img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) cv2.imwrite(\"./img/trans_img.jpeg\",trans_img) plt.show() np.where\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u6b63\u898f\u5316\u3092\u95a2\u6570\u3068\u3057\u3066\u8868\u3057\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q22","text":"\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u5e73\u5747\u5024\u3092m0=128\u3001\u6a19\u6e96\u504f\u5dee\u3092s0=52\u306b\u306a\u308b\u3088\u3046\u306b\u64cd\u4f5c\u305b\u3088\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u5909\u66f4\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308b.","title":"Q.22\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u64cd\u4f5c"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#_16","text":"import numpy as np import cv2 import matplotlib.pyplot as plt def hist_heitan(img,m0=128,s0=52): out = img.copy() s = np.std(img) m = np.average(img) out = s0 / s * (out - m) + m0 return out img = cv2.imread(\"./img/imori_dark.jpeg\") trans_img = hist_heitan(img) gaso = np.array(trans_img).flatten() plt.hist(gaso,bins=255,range=(0,255),rwidth=0.8) cv2.imwrite(\"./img/trans_img_1.jpeg\",trans_img) plt.show() \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/b_image/#q23","text":"\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316\u3092\u5b9f\u88c5\u305b\u3088\u3002 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316\u3068\u306f\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5e73\u5766\u306b\u5909\u66f4\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308a\u3001\u4e0a\u8a18\u306e\u5e73\u5747\u5024\u3084\u6a19\u6e96\u504f\u5dee\u306a\u3069\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5024\u3092\u5747\u8861\u306b\u3059\u308b\u64cd\u4f5c\u3067\u3042\u308b\u3002 import numpy as np import cv2 import matplotlib.pyplot as plt def hist_heitan_function(img, z_max=255): out = img.copy() height, width, channel = img.shape S = height * width * channel sum_h = 0 for i in range(1, 255): ind = np.where(img == i) sum_h += len(img[ind]) z_prime = z_max / S * sum_h out[ind] = z_prime return out img = cv2.imread(\"./img/imori.jpeg\") trans_img = hist_heitan_function(img) gaso = np.array(trans_img).flatten() plt.hist(gaso, bins=255, range=(0, 255), rwidth=0.8) cv2.imwrite(\"./img/trans_img_3.jpeg\", trans_img) plt.show() np.where\u3092\u7528\u3044\u3066for\u6587\u3092\u7121\u304f\u305d\u3046\u3068\u3057\u305f\u304c\u4e0a\u624b\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u3002","title":"Q.23\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u5e73\u5766\u5316"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/","text":"Numpy100\u672c\u30ce\u30c3\u30af\u7b54\u3048 numpy-100 \u306e\u554f\u984c\u3092\u89e3\u3044\u305f\u3082\u306e Q1. Import the numpy package under the name np numpy\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 \u89e3\u7b54 import numpy as np Q2.Print the numpy version and the configuration numpy\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u3002 \u89e3\u7b54 import numpy as np print(np.__version__) 1.20.2\u3060\u3063\u305f\u3002 Q3.Create a null vector of size 10 \u30b5\u30a4\u30ba\uff11\uff10\u306e\uff10\u306e\u914d\u5217\u4f5c\u6210 \u89e3\u7b54 import numpy as np a = np.zeros(10) print(a) Q4.How to find the memory size of any array \u914d\u5217\u306e\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u3092\u898b\u308b \u89e3\u7b54 a = np.zeros((10, 10)) print(a.nbytes)\u3000#800 \u4e00\u3064\u306e\u8981\u7d20\u306e\u30d0\u30a4\u30c8\u6570\u306f a.itemsize \u3067\u5f97\u3089\u308c\u308b\u3002 Q5.How to get the documentation of the numpy add function from the command line? numpy\u306eadd\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u898b\u308b\u65b9\u6cd5 \u89e3\u7b54 python -c \"import numpy; numpy.info(numpy.add)\" Q6.Create a null vector of size 10 but the fifth value which is 1 \u30b5\u30a4\u30ba10\u306e0\u30d9\u30af\u30c8\u30eb\u30675\u756a\u76ee\u306e\u5024\u3060\u30511\u306e\u3082\u306e\u3092\u4f5c\u6210\u3059\u308b\u3002 \u89e3\u7b54 a = np.zeros((10)) a[4] = 1 print(a) Q7.Create a vector with values ranging from 10 to 49 10~49\u306e\u7bc4\u56f2\u306e\u5024\u3092\u3082\u3064\u914d\u5217\u306e\u4f5c\u6210 \u89e3\u7b54 b = np.arange(10, 50) print(b) Q8. Reverse a vector (first element becomes last) \u30d9\u30af\u30c8\u30eb\u3092\u53cd\u8ee2 \u89e3\u7b54 b = np.arange(10, 50) print(b[::-1]) Q9.Create a 3x3 matrix with values ranging from 0 to 8 3\u00d73\u306e\u884c\u5217\u306b0~9\u3092\u5165\u308c\u308b \u89e3\u7b54 c = np.arange(0, 9) print(c.reshape(3, 3)) reshape\u306f\u91cd\u8981\u306a\u6c17\u304c\u3059\u308b Q10. Find indices of non-zero elements from [1,2,0,0,4,0] \u30d9\u30af\u30c8\u30eb\u304b\u3089\uff10\u3067\u306f\u306a\u3044\u30d9\u30af\u30c8\u30eb\u3092\u898b\u3064\u3051\u308d \u89e3\u7b54 d = np.array([1, 2, 0, 0, 4, 0]) print(np.where(d != 0)) Q11. Create a 3x3 identity matrix \u5358\u4f4d\u884c\u5217\u3092\u4f5c\u308c \u89e3\u7b54 e = np.eye(3) print(e) Q12. Create a 3x3x3 array with random values \u30e9\u30f3\u30c0\u30e0\u306a\u884c\u5217\u3092\u4f5c\u308c \u89e3\u7b54 f = np.random.random((3, 3, 3)) print(f) Q13. Create a 10x10 array with random values and find the minimum and maximum values \u30e9\u30f3\u30c0\u30e0\u306a\u884c\u5217\u304b\u3089\u6700\u5927\u3001\u6700\u5c0f\u306e\u5024\u3092\u3068\u308c \u89e3\u7b54 f = np.random.random((10, 10)) print(np.max(f), np.min(f)) Q14.Create a random vector of size 30 and find the mean value \u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb\u304b\u3089\u5e73\u5747\u5024\u3092\u3068\u308c \u89e3\u7b54 g = np.random.random(30) print(np.mean(g)) Q15. Create a 2d array with 1 on the border and 0 inside \u5883\u754c\u304c0\u3001\u4e2d\u304c\uff11\u306e\uff12\u6b21\u5143\u306e\u884c\u5217\u3092\u4f5c\u6210\u305b\u3088 \u89e3\u7b54 size = 5 h = np.zeros((size, size)) h[1:size-1, 1:size-1] = 1 print(h) Q16.How to add a border (filled with 0's) around an existing array? \u5468\u308a\u306b0\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u305b\u3088 \u89e3\u7b54 i = np.ones((5, 5)) print(np.pad(i, 1)) pad\u3082\u6163\u308c\u3066\u3044\u304f\u5fc5\u8981\u304c\u3042\u308b Q17.What is the result of the following expression? \u89e3\u7b54 print(0 * np.nan) print(np.nan == np.nan) print(np.inf > np.nan) print(np.nan - np.nan) print(np.nan in set([np.nan])) print(0.3 == 3 * 0.1) \u5b9f\u884c\u7d50\u679c nan False False nan True False np.nan\u306e\u7279\u5fb4\u3092\u3057\u3063\u304b\u308a\u628a\u63e1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b Q18.Create a 5x5 matrix with values 1,2,3,4 just below the diagonal \u5bfe\u89d2\u306e\u4e0b\u306b1,2,3,4\u306e\u5024\u3092\u5165\u308c\u308b \u89e3\u7b54 j = np.diag(np.arange(4) + 1, k=-1) print(j) Q19.Create a 8x8 matrix and fill it with a checkerboard pattern \u884c\u5217\u3092\u30c1\u30a7\u30c3\u30ab\u30fc\u30dc\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u307e\u3057\u3087\u3046 \u89e3\u7b54 j = np.zeros((8, 8)) j[1::2, ::2] = 1 j[::2, 1::2] = 1 print(j) \u914d\u5217\u64cd\u4f5c\u306e::\u306e\u610f\u5473\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u3002 Q20.Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100 th element 100\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u305b \u89e3\u7b54 print(np.unravel_index(99, (6, 7, 8))) Q21. Create a checkerboard 8x8 matrix using the tile function tile\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u30c1\u30a7\u30c3\u30ab\u30fc\u30dc\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u6210\u305b\u3088 \u89e3\u7b54 j = np.tile(((0, 1), (1, 0)), (4, 4)) print(j) Q22. Normalize a 5x5 random matrix \u884c\u5217\u3092\u6b63\u898f\u5316\u305b\u3088 \u89e3\u7b54 k = np.random.random((5, 5)) k = (k - np.mean(k))/np.std(k) print(k) Q23. Create a custom dtype that describes a color as four unsigned bytes (RGBA) \u30ab\u30b9\u30bf\u30e0dtype\u3092\u4f5c\u6210\u305b\u3088 \u89e3\u7b54 color = np.dtype([(\"r\", np.ubyte, 1), (\"g\", np.ubyte, 1), (\"b\", np.ubyte, 1), (\"a\", np.ubyte, 1)]) \u81ea\u5206\u3067dtype\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u6a5f\u4f1a\u306f\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f Q24.Multiply a 5x3 matrix by a 3x2 matrix (real matrix product) \u884c\u5217\u7a4d\u3092\u884c\u3046 \u89e3\u7b54 p = np.ones((5, 3)) m = np.ones((3, 2)) n = np.dot(p, m) print(n) Q25 Given a 1D array, negate all elements which are between 3 and 8, in place. 3-8\u307e\u3067\u306e\u8981\u7d20\u3092\u8ca0\u306e\u5024 \u89e3\u7b54 q = np.arange(10) q[(3 < q) & (q <= 8)] *= -1 print(q) \u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3067\u3082\u3088\u304f\u898b\u305f\u3002 Q26.What is the output of the following script? \u4ee5\u4e0b\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088 print(sum(range(5),-1)) from numpy import * print(sum(range(5),-1)) \u7d50\u679c 9 10 \u4e0a\u306esum\u306f-1\u3092\u8a08\u7b97\u306b\u5165\u308c\u3066\u3044\u3066\u3001\u4e0b\u306esum\u306f\u8ef8\u3092-1\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u306a\u3063\u3066\u3044\u308b Q27.Consider an integer vector Z, which of these expressions are legal? \u4ee5\u4e0b\u306e\u5f0f\u306f\u6709\u52b9\u304b?(Z\u306f\u6574\u6570) Z = np.arange(5) Z**Z 2 << Z >> 2 Z <- Z 1j*Z Z/1/1 Z<Z>Z \u7d50\u679c [ 1 1 4 27 256] [0 1 2 4 8] [False False False False False] [0.+0.j 0.+1.j 0.+2.j 0.+3.j 0.+4.j] [0. 1. 2. 3. 4.] error \u30fb\u5404\u8981\u7d20\u5024\u3054\u3068\u306e\u7d2f\u4e57\u8a08\u7b97\u306e\u7d50\u679c\u3092\u793a\u3057\u3066\u3044\u308b [0^0,1^1,2^2,3^3,4^4] \u30fb\u30d3\u30c3\u30c8\u6f14\u7b97\u3092\u3057\u3066\u3044\u308b \u30fb\u5404\u8981\u7d20\u306e\u5927\u5c0f\u95a2\u4fc2 \u30fb\u865a\u6570\u306b\u3057\u3066\u3044\u308b \u30fb2\u56de\uff11\u3067\u5272\u3063\u3066\u3044\u308b \u30fb2\u3064\u306e\u8a08\u7b97\u306f\u3067\u304d\u306a","title":"Numpy100\u672c\u30ce\u30c3\u30af\u7b54\u3048"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#numpy100","text":"numpy-100 \u306e\u554f\u984c\u3092\u89e3\u3044\u305f\u3082\u306e","title":"Numpy100\u672c\u30ce\u30c3\u30af\u7b54\u3048"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q1-import-the-numpy-package-under-the-name-np","text":"numpy\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002","title":"Q1. Import the numpy package under the name np"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_1","text":"import numpy as np","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q2print-the-numpy-version-and-the-configuration","text":"numpy\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u3002","title":"Q2.Print the numpy version and the configuration"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_2","text":"import numpy as np print(np.__version__) 1.20.2\u3060\u3063\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q3create-a-null-vector-of-size-10","text":"\u30b5\u30a4\u30ba\uff11\uff10\u306e\uff10\u306e\u914d\u5217\u4f5c\u6210","title":"Q3.Create a null vector of size 10"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_3","text":"import numpy as np a = np.zeros(10) print(a)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q4how-to-find-the-memory-size-of-any-array","text":"\u914d\u5217\u306e\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u3092\u898b\u308b","title":"Q4.How to find the memory size of any array"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_4","text":"a = np.zeros((10, 10)) print(a.nbytes)\u3000#800 \u4e00\u3064\u306e\u8981\u7d20\u306e\u30d0\u30a4\u30c8\u6570\u306f a.itemsize \u3067\u5f97\u3089\u308c\u308b\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q5how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line","text":"numpy\u306eadd\u95a2\u6570\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u898b\u308b\u65b9\u6cd5","title":"Q5.How to get the documentation of the numpy add function from the command line?"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_5","text":"python -c \"import numpy; numpy.info(numpy.add)\"","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q6create-a-null-vector-of-size-10-but-the-fifth-value-which-is-1","text":"\u30b5\u30a4\u30ba10\u306e0\u30d9\u30af\u30c8\u30eb\u30675\u756a\u76ee\u306e\u5024\u3060\u30511\u306e\u3082\u306e\u3092\u4f5c\u6210\u3059\u308b\u3002","title":"Q6.Create a null vector of size 10 but the fifth value which is 1"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_6","text":"a = np.zeros((10)) a[4] = 1 print(a)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q7create-a-vector-with-values-ranging-from-10-to-49","text":"10~49\u306e\u7bc4\u56f2\u306e\u5024\u3092\u3082\u3064\u914d\u5217\u306e\u4f5c\u6210","title":"Q7.Create a vector with values ranging from 10 to 49"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_7","text":"b = np.arange(10, 50) print(b)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q8-reverse-a-vector-first-element-becomes-last","text":"\u30d9\u30af\u30c8\u30eb\u3092\u53cd\u8ee2","title":"Q8. Reverse a vector (first element becomes last)"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_8","text":"b = np.arange(10, 50) print(b[::-1])","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q9create-a-3x3-matrix-with-values-ranging-from-0-to-8","text":"3\u00d73\u306e\u884c\u5217\u306b0~9\u3092\u5165\u308c\u308b","title":"Q9.Create a 3x3 matrix with values ranging from 0 to 8"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_9","text":"c = np.arange(0, 9) print(c.reshape(3, 3)) reshape\u306f\u91cd\u8981\u306a\u6c17\u304c\u3059\u308b","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q10-find-indices-of-non-zero-elements-from-120040","text":"\u30d9\u30af\u30c8\u30eb\u304b\u3089\uff10\u3067\u306f\u306a\u3044\u30d9\u30af\u30c8\u30eb\u3092\u898b\u3064\u3051\u308d","title":"Q10. Find indices of non-zero elements from [1,2,0,0,4,0]"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_10","text":"d = np.array([1, 2, 0, 0, 4, 0]) print(np.where(d != 0))","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q11-create-a-3x3-identity-matrix","text":"\u5358\u4f4d\u884c\u5217\u3092\u4f5c\u308c","title":"Q11. Create a 3x3 identity matrix"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_11","text":"e = np.eye(3) print(e)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q12-create-a-3x3x3-array-with-random-values","text":"\u30e9\u30f3\u30c0\u30e0\u306a\u884c\u5217\u3092\u4f5c\u308c","title":"Q12. Create a 3x3x3 array with random values"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_12","text":"f = np.random.random((3, 3, 3)) print(f)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q13-create-a-10x10-array-with-random-values-and-find-the-minimum-and-maximum-values","text":"\u30e9\u30f3\u30c0\u30e0\u306a\u884c\u5217\u304b\u3089\u6700\u5927\u3001\u6700\u5c0f\u306e\u5024\u3092\u3068\u308c","title":"Q13. Create a 10x10 array with random values and find the minimum and maximum values"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_13","text":"f = np.random.random((10, 10)) print(np.max(f), np.min(f))","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q14create-a-random-vector-of-size-30-and-find-the-mean-value","text":"\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb\u304b\u3089\u5e73\u5747\u5024\u3092\u3068\u308c","title":"Q14.Create a random vector of size 30 and find the mean value"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_14","text":"g = np.random.random(30) print(np.mean(g))","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q15-create-a-2d-array-with-1-on-the-border-and-0-inside","text":"\u5883\u754c\u304c0\u3001\u4e2d\u304c\uff11\u306e\uff12\u6b21\u5143\u306e\u884c\u5217\u3092\u4f5c\u6210\u305b\u3088","title":"Q15. Create a 2d array with 1 on the border and 0 inside"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_15","text":"size = 5 h = np.zeros((size, size)) h[1:size-1, 1:size-1] = 1 print(h)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q16how-to-add-a-border-filled-with-0s-around-an-existing-array","text":"\u5468\u308a\u306b0\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u305b\u3088","title":"Q16.How to add a border (filled with 0's) around an existing array?"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_16","text":"i = np.ones((5, 5)) print(np.pad(i, 1)) pad\u3082\u6163\u308c\u3066\u3044\u304f\u5fc5\u8981\u304c\u3042\u308b","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q17what-is-the-result-of-the-following-expression","text":"","title":"Q17.What is the result of the following expression?"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_17","text":"print(0 * np.nan) print(np.nan == np.nan) print(np.inf > np.nan) print(np.nan - np.nan) print(np.nan in set([np.nan])) print(0.3 == 3 * 0.1) \u5b9f\u884c\u7d50\u679c nan False False nan True False np.nan\u306e\u7279\u5fb4\u3092\u3057\u3063\u304b\u308a\u628a\u63e1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q18create-a-5x5-matrix-with-values-1234-just-below-the-diagonal","text":"\u5bfe\u89d2\u306e\u4e0b\u306b1,2,3,4\u306e\u5024\u3092\u5165\u308c\u308b","title":"Q18.Create a 5x5 matrix with values 1,2,3,4 just below the diagonal"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_18","text":"j = np.diag(np.arange(4) + 1, k=-1) print(j)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q19create-a-8x8-matrix-and-fill-it-with-a-checkerboard-pattern","text":"\u884c\u5217\u3092\u30c1\u30a7\u30c3\u30ab\u30fc\u30dc\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u306b\u3057\u307e\u3057\u3087\u3046","title":"Q19.Create a 8x8 matrix and fill it with a checkerboard pattern"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_19","text":"j = np.zeros((8, 8)) j[1::2, ::2] = 1 j[::2, 1::2] = 1 print(j) \u914d\u5217\u64cd\u4f5c\u306e::\u306e\u610f\u5473\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q20consider-a-678-shape-array-what-is-the-index-xyz-of-the-100th-element","text":"100\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u305b","title":"Q20.Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_20","text":"print(np.unravel_index(99, (6, 7, 8)))","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q21-create-a-checkerboard-8x8-matrix-using-the-tile-function","text":"tile\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u30c1\u30a7\u30c3\u30ab\u30fc\u30dc\u30fc\u30c9\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u6210\u305b\u3088","title":"Q21. Create a checkerboard 8x8 matrix using the tile function"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_21","text":"j = np.tile(((0, 1), (1, 0)), (4, 4)) print(j)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q22-normalize-a-5x5-random-matrix","text":"\u884c\u5217\u3092\u6b63\u898f\u5316\u305b\u3088","title":"Q22. Normalize a 5x5 random matrix"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_22","text":"k = np.random.random((5, 5)) k = (k - np.mean(k))/np.std(k) print(k)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q23-create-a-custom-dtype-that-describes-a-color-as-four-unsigned-bytes-rgba","text":"\u30ab\u30b9\u30bf\u30e0dtype\u3092\u4f5c\u6210\u305b\u3088","title":"Q23. Create a custom dtype that describes a color as four unsigned bytes (RGBA)"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_23","text":"color = np.dtype([(\"r\", np.ubyte, 1), (\"g\", np.ubyte, 1), (\"b\", np.ubyte, 1), (\"a\", np.ubyte, 1)]) \u81ea\u5206\u3067dtype\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u6a5f\u4f1a\u306f\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q24multiply-a-5x3-matrix-by-a-3x2-matrix-real-matrix-product","text":"\u884c\u5217\u7a4d\u3092\u884c\u3046","title":"Q24.Multiply a 5x3 matrix by a 3x2 matrix (real matrix product)"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_24","text":"p = np.ones((5, 3)) m = np.ones((3, 2)) n = np.dot(p, m) print(n)","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q25-given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place","text":"3-8\u307e\u3067\u306e\u8981\u7d20\u3092\u8ca0\u306e\u5024","title":"Q25 Given a 1D array, negate all elements which are between 3 and 8, in place."},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_25","text":"q = np.arange(10) q[(3 < q) & (q <= 8)] *= -1 print(q) \u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3067\u3082\u3088\u304f\u898b\u305f\u3002","title":"\u89e3\u7b54"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q26what-is-the-output-of-the-following-script","text":"\u4ee5\u4e0b\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088 print(sum(range(5),-1)) from numpy import * print(sum(range(5),-1))","title":"Q26.What is the output of the following script?"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_26","text":"9 10 \u4e0a\u306esum\u306f-1\u3092\u8a08\u7b97\u306b\u5165\u308c\u3066\u3044\u3066\u3001\u4e0b\u306esum\u306f\u8ef8\u3092-1\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u306a\u3063\u3066\u3044\u308b","title":"\u7d50\u679c"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#q27consider-an-integer-vector-z-which-of-these-expressions-are-legal","text":"\u4ee5\u4e0b\u306e\u5f0f\u306f\u6709\u52b9\u304b?(Z\u306f\u6574\u6570) Z = np.arange(5) Z**Z 2 << Z >> 2 Z <- Z 1j*Z Z/1/1 Z<Z>Z","title":"Q27.Consider an integer vector Z, which of these expressions are legal?"},{"location":"100%E6%9C%AC%E3%83%8E%E3%83%83%E3%82%AF/c_numpy/#_27","text":"[ 1 1 4 27 256] [0 1 2 4 8] [False False False False False] [0.+0.j 0.+1.j 0.+2.j 0.+3.j 0.+4.j] [0. 1. 2. 3. 4.] error \u30fb\u5404\u8981\u7d20\u5024\u3054\u3068\u306e\u7d2f\u4e57\u8a08\u7b97\u306e\u7d50\u679c\u3092\u793a\u3057\u3066\u3044\u308b [0^0,1^1,2^2,3^3,4^4] \u30fb\u30d3\u30c3\u30c8\u6f14\u7b97\u3092\u3057\u3066\u3044\u308b \u30fb\u5404\u8981\u7d20\u306e\u5927\u5c0f\u95a2\u4fc2 \u30fb\u865a\u6570\u306b\u3057\u3066\u3044\u308b \u30fb2\u56de\uff11\u3067\u5272\u3063\u3066\u3044\u308b \u30fb2\u3064\u306e\u8a08\u7b97\u306f\u3067\u304d\u306a","title":"\u7d50\u679c"},{"location":"PyTorch/PyTorch/a_pytorch/","text":"pytorch\u306b\u3088\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5b9f\u88c5\u306e\u6d41\u308c \u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u3092\u78ba\u8a8d Dataset\u306e\u4f5c\u6210 DataLoader\u306e\u4f5c\u6210 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u4f5c\u6210 \u9806\u4f1d\u64ad(forward)\u306e\u5b9a\u7fa9 \u640d\u5931\u95a2\u6570\u306e\u5b9a\u7fa9 \u6700\u9069\u5316\u624b\u6cd5\u306e\u8a2d\u5b9a \u5b66\u7fd2\u691c\u8a3c\u306e\u5b9f\u65bd \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u63a8\u8ad6 \u8ffd\u8a18 \u3053\u308c\u304b\u3089PyTorch\u3067\u6df1\u5c64\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u306fPyTorch Lightning\u3092\u4e26\u884c\u3057\u3066\u5b66\u7fd2\u3057\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002 1~9\u307e\u3067\u3056\u3063\u304f\u308a\u3068\u307e\u3068\u3081\u3068\u304f\u3067 Dataset\u3068DataLoader\u306b\u3064\u3044\u3066 Dataset\u30af\u30e9\u30b9 \u5165\u529b\u3059\u308b\u30c7\u30fc\u30bf\u3068\u305d\u306e\u30e9\u30d9\u30eb\u306a\u3069\u3092\u30da\u30a2\u306b\u3057\u3066\u4fdd\u6301\u3057\u305f\u30af\u30e9\u30b9 \u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e0e\u3048\u3001\u5bfe\u8c61\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306b\u524d\u51e6\u7406\u3092\u81ea\u52d5\u3067\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b DataLoader\u30af\u30e9\u30b9 Dataset\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u30af\u30e9\u30b9 Dataset\u304b\u3089\u30df\u30cb\u30d0\u30c3\u30c1\u3092\u53d6\u308a\u51fa\u3057\u3084\u3059\u3044 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u4f5c\u6210 \u30bc\u30ed\u304b\u3089\u5168\u3066\u81ea\u5206\u3067\u4f5c\u6210\u3059\u308b\u30b1\u30fc\u30b9 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u7528\u3044\u308b\u30b1\u30fc\u30b9 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u81ea\u5206\u3067\u6539\u5909\u3059\u308b\u30b1\u30fc\u30b9 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u3067\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u81ea\u5206\u3067\u6539\u5909\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044 \u9806\u4f1d\u64ad(forward)\u306b\u3064\u3044\u3066 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30e2\u30c7\u30eb\u304c\u9014\u4e2d\u3067\u5206\u5c90\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u3001\u9806\u4f1d\u64ad\u304c\u8907\u96d1\u306a\u5834\u5408\u304c\u591a\u3044 \u5358\u7d14\u306a\u30cd\u30c3\u30c8\u30fc\u30af\u30e2\u30c7\u30eb\u306f\u524d\u304b\u3089\u5f8c\u308d\u306b\u6d41\u308c\u308b\u3060\u3051\u3060\u304c\u3001\u305d\u3046\u306f\u3044\u304b\u306a\u3044\u306e\u3067\u304d\u3061\u3093\u3068\u9806\u4f1d\u64ad\u95a2\u6570(forward)\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068 \u640d\u5931\u95a2\u6570\u306b\u3064\u3044\u3066 \u8aa4\u5dee\u9006\u4f1d\u64ad(Backpropagation)\u3092\u3059\u308b\u305f\u3081\u306b\u5b9a\u7fa9\u3059\u308b \u5358\u7d14\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u624b\u6cd5\u3067\u3042\u308c\u3070\uff12\u4e57\u8aa4\u5dee\u306a\u3069\u5358\u7d14\u306a\u95a2\u6570\u3060\u304c\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u3067\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u3082\u306e\u304c\u4f7f\u308f\u308c\u308b \u6700\u9069\u5316\u624b\u6cd5\u306b\u3064\u3044\u3066 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u308b\u969b\u306b\u4f7f\u3046\u3082\u306e \u8aa4\u5dee\u9006\u4f1d\u64ad\u306b\u3088\u3063\u3066\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aa4\u5dee\u306b\u5bfe\u3059\u308b\u52fe\u914d\u304c\u6c42\u307e\u308b\u306e\u3067\u3001\u305d\u306e\u52fe\u914d\u3092\u4f7f\u3063\u3066\u3001\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4fee\u6b63\u91cf\u3092\u3069\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b Momentum SGD\u3001Adam\u306a\u3069\u304c\u3042\u308b \u5b66\u7fd2\u3068\u691c\u8a3c\u3001\u63a8\u8ad6\u306b\u3064\u3044\u3066 \u57fa\u672c\u7684\u306b\u306fepoch\u3054\u3068\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u3092\u78ba\u8a8d\u3059\u308b \u691c\u8a3c\u30c7\u30fc\u30bf\u306e\u6027\u80fd\u304c\u5411\u4e0a\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3001\u305d\u306e\u5f8c\u306f\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u304b\u5b66\u7fd2\u306b\u9665\u3063\u3066\u3044\u304f\u305f\u3081\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5b66\u7fd2\u3092\u7d42\u4e86\u3055\u305b\u308b\u3053\u3068\u304c\u591a\u3044 early stopping \u5b66\u7fd2\u304c\u7d42\u4e86\u5f8c\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u63a8\u8ad6\u3092\u884c\u3046 \u8ee2\u79fb\u5b66\u7fd2\u306e\u5b9f\u88c5 \u753b\u50cf\u30c7\u30fc\u30bf\u304b\u3089Dataset\u3092\u4f5c\u6210\u3059\u308b Dataset\u304b\u3089DataLoader\u3092\u4f5c\u6210 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u5c64\u3092\u4efb\u610f\u306e\u5f62\u306b\u5909\u66f4 \u51fa\u529b\u5c64\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u307f\u3092\u5b66\u7fd2\u3055\u305b\u3001\u8ee2\u79fb\u5b66\u7fd2\u3092\u5b9f\u88c5 \u8ee2\u79fb\u5b66\u7fd2 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u3001\u6700\u7d42\u306e\u51fa\u529b\u5c64\u3092\u4ed8\u3051\u66ff\u3048\u3066\u5b66\u7fd2\u3055\u305b\u308b\u624b\u6cd5 \u6700\u7d42\u51fa\u529b\u5c64\u3092\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3057\u305f\u51fa\u529b\u5c64\u306b\u4ed8\u3051\u66ff\u3048\u3066\u3001\u4ed8\u3051\u66ff\u3048\u305f\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u5143\u306b\u3042\u308b\u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3067\u5b66\u7fd2\u3057\u76f4\u3059\u3068\u3044\u3046\u3053\u3068 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u306e\u3067\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u5c11\u91cf\u3067\u3082\u6027\u80fd\u306e\u3044\u3044\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\uff01 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u51fa\u529b\u5c64\u306a\u3069\u3092\u5909\u66f4\u3057\u305f\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3001\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30e2\u30c7\u30eb\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u308b\u624b\u6cd5 \u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5024\u306b\u306f\u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b \u8ee2\u79fb\u5b66\u7fd2\u3068\u306f\u7570\u306a\u308a\u3001\u51fa\u529b\u5c64\u30fb\u51fa\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u3060\u3051\u3067\u306a\u304f\u3001\u5168\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u518d\u5b66\u7fd2\u3055\u305b\u308b \u5165\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u7387\u3092\u5c0f\u3055\u304f\u8a2d\u5b9a\u3057\u3001\u51fa\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u7387\u3092\u5927\u304d\u304f\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u4e00\u822c\u7684 \u8ee2\u79fb\u5b66\u7fd2\u3068\u540c\u3058\u3067\u3001\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u5c11\u91cf\u3067\u3082\u6027\u80fd\u306e\u3044\u3044\u3067\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b \u6700\u9069\u5316\u624b\u6cd5\u306e\u8a2d\u5b9a\u90e8\u5206\u304c\u8ee2\u79fb\u5b66\u7fd2\u3068\u7570\u306a\u308b Dataset\u3092\u4f5c\u6210 Dataset\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001torchvision.datasets.ImageFolder\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u624b\u6cd5\u304c\u7c21\u5358 \u4e0a\u306e\u3084\u308a\u65b9\u306f\u7c21\u5358\u3060\u304c\u3001Dataset\u306f\u81ea\u5206\u3067\u3082\u4f5c\u308c\u308b Data Augmentation \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u7570\u306a\u308b\u753b\u50cf\u5909\u63db\u3092\u9069\u7528\u3057\u3001\u30c7\u30fc\u30bf\u3092\u6c34\u5897\u3057\u3059\u308b\u624b\u6cd5\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u7528\u3044\u3089\u308c\u308b\u3002 randomresizedcrop \uff1a\u6307\u5b9a\u3055\u308c\u305fPIL\u30a4\u30e1\u30fc\u30b8\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u30b5\u30a4\u30ba\u3068\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u306b\u30c8\u30ea\u30df\u30f3\u30b0\u3059\u308b\u30af\u30e9\u30b9 \uff08\u4f7f\u7528\u4f8b\uff09 RandomResizedCrop(resize, scale=(0.5~1.0)) 0.5~1.0\u306e\u5927\u304d\u3055\u3067\u62e1\u5927\u7e2e\u5c0f \u3055\u3089\u306b\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u00be\u304b\u30894/3\u306e\u9593\u306e\u3044\u305a\u308c\u304b\u3067\u5909\u66f4\u3057\u3066\u753b\u50cf\u3092\u6a2a\u3082\u3057\u304f\u306f\u7e26\u306b\u5f15\u304d\u4f38\u3070\u3059 \u6700\u5f8c\u306bresize\u3067\u6307\u5b9a\u3057\u305f\u5927\u304d\u3055\u3067\u753b\u50cf\u3092\u5207\u308a\u51fa\u3059 RandomHorizontalFlip \uff1a\u6307\u5b9a\u3055\u308c\u305f\u78ba\u7387\u3067\u3001\u6307\u5b9a\u3055\u308c\u305fPIL\u753b\u50cf\u3092\u6c34\u5e73\u65b9\u5411\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u53cd\u8ee2\u3059\u308b\u30af\u30e9\u30b9 \uff08\u4f7f\u7528\u4f8b\uff09 RandomHorizontalFlip() \u753b\u50cf\u306e\u5de6\u53f3\u309250%\u306e\u78ba\u7387\u3067\u53cd\u8ee2\u3055\u305b\u308b\u64cd\u4f5c torchvision.transforms albumentations\u3082\u3048\u3048\u305e \u30c7\u30fc\u30bf\u306e\u6c34\u5897\u3057\u3092\u884c\u3044\u591a\u69d8\u306a\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u6027\u80fd\uff08\u6c4e\u5316\u6027\u80fd\uff09\u304c\u5411\u4e0a\u3057\u3084\u3059\u304f\u306a\u308b\uff01 DataLoader\u3092\u4f5c\u6210 Dataset\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3059\u308b torch.utils.data.DataLoader shuffle=True \u753b\u50cf\u3092\u53d6\u308a\u51fa\u3059\u9806\u756a\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b \u640d\u5931\u95a2\u6570\u3092\u5b9a\u7fa9 \u901a\u5e38\u306e\u30af\u30e9\u30b9\u5206\u985e\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570\u3092\u4f7f\u7528 \u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570 \u5168\u7d50\u5408\u5c64\u304b\u3089\u306e\u51fa\u529b\u306b\u5bfe\u3057\u3066\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u3042\u3068\u3001\u30af\u30e9\u30b9\u5206\u985e\u306e\u640d\u5931\u95a2\u6570\u3067\u3042\u308bThe negative log likelihood loss(\u8ca0\u306e\u5bfe\u6570\u5c24\u5ea6\u640d\u5931?)\u3092\u8a08\u7b97\u3059\u308b \u6700\u9069\u5316\u624b\u6cd5\u3092\u8a2d\u5b9a (\u6df1\u5c64\u5b66\u7fd2\u306e\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)[https://qiita.com/ZoneTsuyoshi/items/8ef6fa1e154d176e25b8] requires_grad \u81ea\u52d5\u5fae\u5206\u306e\u5bfe\u8c61\u306e\u52fe\u914d\u306e\u8a08\u7b97\u3092\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3082\u306e requires_grad = True \u8aa4\u5dee\u9006\u4f1d\u64ad\u3067\u52fe\u914d\u304c\u8a08\u7b97\u3055\u308c\u3001\u5b66\u7fd2\u6642\u306b\u5024\u304c\u5909\u5316\u3059\u308b(\u81ea\u52d5\u5fae\u5206\u3092\u884c\u3046) requires_grad = False \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u56fa\u5b9a\u3055\u305b\u3001\u66f4\u65b0\u3057\u305f\u304f\u306a\u3044\u6642\u306b\u4f7f\u3046(\u81ea\u52d5\u5fae\u5206\u3092\u884c\u308f\u306a\u3044) \u5b66\u7fd2\u30fb\u691c\u8a3c\u3092\u5b9f\u65bd Dropout\u3084\u52fe\u914d\u8a08\u7b97\u306f\u8a13\u7df4\u6642\u306b\u306e\u307f\u884c\u3044\u3001\u4e88\u6e2c\u6642\u306b\u306f\u4f7f\u7528\u3057\u306a\u3044\u306e\u304c\u901a\u5e38 \u306a\u306e\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a13\u7df4\u30e2\u30fc\u30c9\u3001\u691c\u8a3c\u30e2\u30fc\u30c9\u306b\u3057\u3066\u308f\u3051\u308b \uff08\u4f8b\uff09net.train(), net.eval() \u691c\u8a3c\u6642\u306b\u306f\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u3001if\u6587\u3067\u5834\u5408\u5206\u3051\u3092\u884c\u3046 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u5b9f\u88c5 \u6700\u9069\u5316\u306e\u65b9\u6cd5\u304c\u8ee2\u79fb\u5b66\u7fd2\u3068\u7570\u306a\u308b \u5168\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306boptimizer\u3092\u8a2d\u5b9a","title":"pytorch\u306b\u3088\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5b9f\u88c5\u306e\u6d41\u308c"},{"location":"PyTorch/PyTorch/a_pytorch/#pytorch","text":"\u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u3092\u78ba\u8a8d Dataset\u306e\u4f5c\u6210 DataLoader\u306e\u4f5c\u6210 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u4f5c\u6210 \u9806\u4f1d\u64ad(forward)\u306e\u5b9a\u7fa9 \u640d\u5931\u95a2\u6570\u306e\u5b9a\u7fa9 \u6700\u9069\u5316\u624b\u6cd5\u306e\u8a2d\u5b9a \u5b66\u7fd2\u691c\u8a3c\u306e\u5b9f\u65bd \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u63a8\u8ad6","title":"pytorch\u306b\u3088\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5b9f\u88c5\u306e\u6d41\u308c"},{"location":"PyTorch/PyTorch/a_pytorch/#_1","text":"\u3053\u308c\u304b\u3089PyTorch\u3067\u6df1\u5c64\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u306fPyTorch Lightning\u3092\u4e26\u884c\u3057\u3066\u5b66\u7fd2\u3057\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002 1~9\u307e\u3067\u3056\u3063\u304f\u308a\u3068\u307e\u3068\u3081\u3068\u304f\u3067","title":"\u8ffd\u8a18"},{"location":"PyTorch/PyTorch/a_pytorch/#datasetdataloader","text":"Dataset\u30af\u30e9\u30b9 \u5165\u529b\u3059\u308b\u30c7\u30fc\u30bf\u3068\u305d\u306e\u30e9\u30d9\u30eb\u306a\u3069\u3092\u30da\u30a2\u306b\u3057\u3066\u4fdd\u6301\u3057\u305f\u30af\u30e9\u30b9 \u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e0e\u3048\u3001\u5bfe\u8c61\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306b\u524d\u51e6\u7406\u3092\u81ea\u52d5\u3067\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b DataLoader\u30af\u30e9\u30b9 Dataset\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u30af\u30e9\u30b9 Dataset\u304b\u3089\u30df\u30cb\u30d0\u30c3\u30c1\u3092\u53d6\u308a\u51fa\u3057\u3084\u3059\u3044","title":"Dataset\u3068DataLoader\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#_2","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u4f5c\u6210 \u30bc\u30ed\u304b\u3089\u5168\u3066\u81ea\u5206\u3067\u4f5c\u6210\u3059\u308b\u30b1\u30fc\u30b9 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u7528\u3044\u308b\u30b1\u30fc\u30b9 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u81ea\u5206\u3067\u6539\u5909\u3059\u308b\u30b1\u30fc\u30b9 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u3067\u306f\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u81ea\u5206\u3067\u6539\u5909\u3059\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044","title":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#forward","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30e2\u30c7\u30eb\u304c\u9014\u4e2d\u3067\u5206\u5c90\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u3001\u9806\u4f1d\u64ad\u304c\u8907\u96d1\u306a\u5834\u5408\u304c\u591a\u3044 \u5358\u7d14\u306a\u30cd\u30c3\u30c8\u30fc\u30af\u30e2\u30c7\u30eb\u306f\u524d\u304b\u3089\u5f8c\u308d\u306b\u6d41\u308c\u308b\u3060\u3051\u3060\u304c\u3001\u305d\u3046\u306f\u3044\u304b\u306a\u3044\u306e\u3067\u304d\u3061\u3093\u3068\u9806\u4f1d\u64ad\u95a2\u6570(forward)\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068","title":"\u9806\u4f1d\u64ad(forward)\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#_3","text":"\u8aa4\u5dee\u9006\u4f1d\u64ad(Backpropagation)\u3092\u3059\u308b\u305f\u3081\u306b\u5b9a\u7fa9\u3059\u308b \u5358\u7d14\u306a\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u624b\u6cd5\u3067\u3042\u308c\u3070\uff12\u4e57\u8aa4\u5dee\u306a\u3069\u5358\u7d14\u306a\u95a2\u6570\u3060\u304c\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fdc\u7528\u624b\u6cd5\u3067\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u3082\u306e\u304c\u4f7f\u308f\u308c\u308b","title":"\u640d\u5931\u95a2\u6570\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#_4","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u308b\u969b\u306b\u4f7f\u3046\u3082\u306e \u8aa4\u5dee\u9006\u4f1d\u64ad\u306b\u3088\u3063\u3066\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aa4\u5dee\u306b\u5bfe\u3059\u308b\u52fe\u914d\u304c\u6c42\u307e\u308b\u306e\u3067\u3001\u305d\u306e\u52fe\u914d\u3092\u4f7f\u3063\u3066\u3001\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4fee\u6b63\u91cf\u3092\u3069\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b Momentum SGD\u3001Adam\u306a\u3069\u304c\u3042\u308b","title":"\u6700\u9069\u5316\u624b\u6cd5\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#_5","text":"\u57fa\u672c\u7684\u306b\u306fepoch\u3054\u3068\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u3068\u691c\u8a3c\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u3092\u78ba\u8a8d\u3059\u308b \u691c\u8a3c\u30c7\u30fc\u30bf\u306e\u6027\u80fd\u304c\u5411\u4e0a\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3001\u305d\u306e\u5f8c\u306f\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u304b\u5b66\u7fd2\u306b\u9665\u3063\u3066\u3044\u304f\u305f\u3081\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5b66\u7fd2\u3092\u7d42\u4e86\u3055\u305b\u308b\u3053\u3068\u304c\u591a\u3044 early stopping \u5b66\u7fd2\u304c\u7d42\u4e86\u5f8c\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u63a8\u8ad6\u3092\u884c\u3046","title":"\u5b66\u7fd2\u3068\u691c\u8a3c\u3001\u63a8\u8ad6\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch/a_pytorch/#_6","text":"\u753b\u50cf\u30c7\u30fc\u30bf\u304b\u3089Dataset\u3092\u4f5c\u6210\u3059\u308b Dataset\u304b\u3089DataLoader\u3092\u4f5c\u6210 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u5c64\u3092\u4efb\u610f\u306e\u5f62\u306b\u5909\u66f4 \u51fa\u529b\u5c64\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u307f\u3092\u5b66\u7fd2\u3055\u305b\u3001\u8ee2\u79fb\u5b66\u7fd2\u3092\u5b9f\u88c5 \u8ee2\u79fb\u5b66\u7fd2 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u3001\u6700\u7d42\u306e\u51fa\u529b\u5c64\u3092\u4ed8\u3051\u66ff\u3048\u3066\u5b66\u7fd2\u3055\u305b\u308b\u624b\u6cd5 \u6700\u7d42\u51fa\u529b\u5c64\u3092\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3057\u305f\u51fa\u529b\u5c64\u306b\u4ed8\u3051\u66ff\u3048\u3066\u3001\u4ed8\u3051\u66ff\u3048\u305f\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u5143\u306b\u3042\u308b\u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3067\u5b66\u7fd2\u3057\u76f4\u3059\u3068\u3044\u3046\u3053\u3068 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u306e\u3067\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u5c11\u91cf\u3067\u3082\u6027\u80fd\u306e\u3044\u3044\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\uff01 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u51fa\u529b\u5c64\u306a\u3069\u3092\u5909\u66f4\u3057\u305f\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3001\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30e2\u30c7\u30eb\u306e\u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u308b\u624b\u6cd5 \u7d50\u5408\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5024\u306b\u306f\u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b \u8ee2\u79fb\u5b66\u7fd2\u3068\u306f\u7570\u306a\u308a\u3001\u51fa\u529b\u5c64\u30fb\u51fa\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u3060\u3051\u3067\u306a\u304f\u3001\u5168\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u518d\u5b66\u7fd2\u3055\u305b\u308b \u5165\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u7387\u3092\u5c0f\u3055\u304f\u8a2d\u5b9a\u3057\u3001\u51fa\u529b\u5c64\u306b\u8fd1\u3044\u90e8\u5206\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u7387\u3092\u5927\u304d\u304f\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u4e00\u822c\u7684 \u8ee2\u79fb\u5b66\u7fd2\u3068\u540c\u3058\u3067\u3001\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u5c11\u91cf\u3067\u3082\u6027\u80fd\u306e\u3044\u3044\u3067\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b \u6700\u9069\u5316\u624b\u6cd5\u306e\u8a2d\u5b9a\u90e8\u5206\u304c\u8ee2\u79fb\u5b66\u7fd2\u3068\u7570\u306a\u308b","title":"\u8ee2\u79fb\u5b66\u7fd2\u306e\u5b9f\u88c5"},{"location":"PyTorch/PyTorch/a_pytorch/#dataset","text":"Dataset\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001torchvision.datasets.ImageFolder\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u624b\u6cd5\u304c\u7c21\u5358 \u4e0a\u306e\u3084\u308a\u65b9\u306f\u7c21\u5358\u3060\u304c\u3001Dataset\u306f\u81ea\u5206\u3067\u3082\u4f5c\u308c\u308b Data Augmentation \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u7570\u306a\u308b\u753b\u50cf\u5909\u63db\u3092\u9069\u7528\u3057\u3001\u30c7\u30fc\u30bf\u3092\u6c34\u5897\u3057\u3059\u308b\u624b\u6cd5\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u7528\u3044\u3089\u308c\u308b\u3002 randomresizedcrop \uff1a\u6307\u5b9a\u3055\u308c\u305fPIL\u30a4\u30e1\u30fc\u30b8\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u30b5\u30a4\u30ba\u3068\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u306b\u30c8\u30ea\u30df\u30f3\u30b0\u3059\u308b\u30af\u30e9\u30b9 \uff08\u4f7f\u7528\u4f8b\uff09 RandomResizedCrop(resize, scale=(0.5~1.0)) 0.5~1.0\u306e\u5927\u304d\u3055\u3067\u62e1\u5927\u7e2e\u5c0f \u3055\u3089\u306b\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u3092\u00be\u304b\u30894/3\u306e\u9593\u306e\u3044\u305a\u308c\u304b\u3067\u5909\u66f4\u3057\u3066\u753b\u50cf\u3092\u6a2a\u3082\u3057\u304f\u306f\u7e26\u306b\u5f15\u304d\u4f38\u3070\u3059 \u6700\u5f8c\u306bresize\u3067\u6307\u5b9a\u3057\u305f\u5927\u304d\u3055\u3067\u753b\u50cf\u3092\u5207\u308a\u51fa\u3059 RandomHorizontalFlip \uff1a\u6307\u5b9a\u3055\u308c\u305f\u78ba\u7387\u3067\u3001\u6307\u5b9a\u3055\u308c\u305fPIL\u753b\u50cf\u3092\u6c34\u5e73\u65b9\u5411\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u53cd\u8ee2\u3059\u308b\u30af\u30e9\u30b9 \uff08\u4f7f\u7528\u4f8b\uff09 RandomHorizontalFlip() \u753b\u50cf\u306e\u5de6\u53f3\u309250%\u306e\u78ba\u7387\u3067\u53cd\u8ee2\u3055\u305b\u308b\u64cd\u4f5c torchvision.transforms albumentations\u3082\u3048\u3048\u305e \u30c7\u30fc\u30bf\u306e\u6c34\u5897\u3057\u3092\u884c\u3044\u591a\u69d8\u306a\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u6027\u80fd\uff08\u6c4e\u5316\u6027\u80fd\uff09\u304c\u5411\u4e0a\u3057\u3084\u3059\u304f\u306a\u308b\uff01","title":"Dataset\u3092\u4f5c\u6210"},{"location":"PyTorch/PyTorch/a_pytorch/#dataloader","text":"Dataset\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3059\u308b torch.utils.data.DataLoader shuffle=True \u753b\u50cf\u3092\u53d6\u308a\u51fa\u3059\u9806\u756a\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b","title":"DataLoader\u3092\u4f5c\u6210"},{"location":"PyTorch/PyTorch/a_pytorch/#_7","text":"\u901a\u5e38\u306e\u30af\u30e9\u30b9\u5206\u985e\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570\u3092\u4f7f\u7528 \u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u95a2\u6570 \u5168\u7d50\u5408\u5c64\u304b\u3089\u306e\u51fa\u529b\u306b\u5bfe\u3057\u3066\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u3042\u3068\u3001\u30af\u30e9\u30b9\u5206\u985e\u306e\u640d\u5931\u95a2\u6570\u3067\u3042\u308bThe negative log likelihood loss(\u8ca0\u306e\u5bfe\u6570\u5c24\u5ea6\u640d\u5931?)\u3092\u8a08\u7b97\u3059\u308b","title":"\u640d\u5931\u95a2\u6570\u3092\u5b9a\u7fa9"},{"location":"PyTorch/PyTorch/a_pytorch/#_8","text":"(\u6df1\u5c64\u5b66\u7fd2\u306e\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)[https://qiita.com/ZoneTsuyoshi/items/8ef6fa1e154d176e25b8] requires_grad \u81ea\u52d5\u5fae\u5206\u306e\u5bfe\u8c61\u306e\u52fe\u914d\u306e\u8a08\u7b97\u3092\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3082\u306e requires_grad = True \u8aa4\u5dee\u9006\u4f1d\u64ad\u3067\u52fe\u914d\u304c\u8a08\u7b97\u3055\u308c\u3001\u5b66\u7fd2\u6642\u306b\u5024\u304c\u5909\u5316\u3059\u308b(\u81ea\u52d5\u5fae\u5206\u3092\u884c\u3046) requires_grad = False \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u56fa\u5b9a\u3055\u305b\u3001\u66f4\u65b0\u3057\u305f\u304f\u306a\u3044\u6642\u306b\u4f7f\u3046(\u81ea\u52d5\u5fae\u5206\u3092\u884c\u308f\u306a\u3044)","title":"\u6700\u9069\u5316\u624b\u6cd5\u3092\u8a2d\u5b9a"},{"location":"PyTorch/PyTorch/a_pytorch/#_9","text":"Dropout\u3084\u52fe\u914d\u8a08\u7b97\u306f\u8a13\u7df4\u6642\u306b\u306e\u307f\u884c\u3044\u3001\u4e88\u6e2c\u6642\u306b\u306f\u4f7f\u7528\u3057\u306a\u3044\u306e\u304c\u901a\u5e38 \u306a\u306e\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a13\u7df4\u30e2\u30fc\u30c9\u3001\u691c\u8a3c\u30e2\u30fc\u30c9\u306b\u3057\u3066\u308f\u3051\u308b \uff08\u4f8b\uff09net.train(), net.eval() \u691c\u8a3c\u6642\u306b\u306f\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u3001if\u6587\u3067\u5834\u5408\u5206\u3051\u3092\u884c\u3046","title":"\u5b66\u7fd2\u30fb\u691c\u8a3c\u3092\u5b9f\u65bd"},{"location":"PyTorch/PyTorch/a_pytorch/#_10","text":"\u6700\u9069\u5316\u306e\u65b9\u6cd5\u304c\u8ee2\u79fb\u5b66\u7fd2\u3068\u7570\u306a\u308b \u5168\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306boptimizer\u3092\u8a2d\u5b9a","title":"\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u5b9f\u88c5"},{"location":"PyTorch/PyTorch/dp/","text":"PyTorch\u306e\u5206\u6563\u8a08\u7b97\u51e6\u7406\u3092\u4f7f\u3046 \u5b9f\u9a13\u74b0\u5883 CUDNN\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307fLinux\u3067\u52d5\u4f5c\u78ba\u8a8d\u3001win\u306f\u308f\u304b\u3089\u3093 \u4f7f\u7528\u3059\u308bAPI torch.distributed\u306e\u4e2d\u306e Distributed RPC Framework \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u3002 torch.distributed\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306f\u3001\u5b9f\u884c\u6642\u306bgloo, mpi, nccl\u306e\uff13\u901a\u308a\u304b\u3089\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3088\u3063\u3066\u3001\u95a2\u6570\u3054\u3068\u306b\u6271\u3048\u308b\u30c6\u30f3\u30bd\u30eb(cpu, gpu)\u306e\u7a2e\u985e\u304c\u9055\u3063\u3066\u304f\u308b. \u5177\u4f53\u7684\u306b\u306fCPU\u4f7f\u7528\u6642\u306b\u306fGloo\u3001GPU\u4f7f\u7528\u6642\u306b\u306fnccl\u3092\u4f7f\u3046\u3068\u826f\u3044\u305d\u3046\u3060\u3002 \u3057\u304b\u3057\u3001nccl\u3092\u4f7f\u3046\u5834\u5408\u306b\u306fcpu\u4e0a\u306e\u30c6\u30f3\u30bd\u30eb\u306f\u6271\u3048\u305a\u3001\u3055\u3089\u306b\u4e00\u90e8\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u306a\u304f\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002 \u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u306a\u304f\u306a\u308b\u306e\u304b\uff1f\u306b\u3064\u3044\u3066\u306f \u516c\u5f0fdoc \u3092\u53c2\u7167\u3002 Pytorch\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u306f\u3001 Use multi-machine DistributedDataParallel and the launching script , if the application needs to scale across machine boundaries. \u3068\u3042\u308a\u3001\u4e00\u898b\u3059\u308b\u3068RPC\u3067\u306a\u304f\u3053\u3061\u3089\u304c\u4f7f\u3048\u305d\u3046\u306b\u898b\u3048\u308b\u304c DistributedDataParallel\u306a\u3069\u306e\u30c7\u30fc\u30bf\u4e26\u5217\u7528API\u306f\u3069\u3061\u3089\u304b\u3068\u8a00\u3048\u3070\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u7528\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u4f8b\u3048\u3070 In reinforcement learning, it might be relatively expensive to acquire training data from environments while the model itself can be quite small. In this case, it might be useful to spawn multiple observers running in parallel and share a single agent. In this case, the agent takes care of the training locally, but the application would still need libraries to send and receive data between observers and the trainer. \u3068\u3044\u3063\u305fSyncOnPolicy\u306e\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u305d\u3046\u3060\u3002 \u3053\u3046\u3044\u3063\u305f\u3082\u306e\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3001\u3088\u308a\u4e00\u822c\u7684\u306aAPI\u3068\u3057\u3066RPC\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u3002 (https://pytorch.org/tutorials/beginner/dist_overview.html#general-distributed-training) \u6ce8\u610f RPC \u3068\u3044\u3046\u8a00\u8449\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u304a\u3044\u3066\u6587\u8108\u6b21\u7b2c\u3067\u4ee5\u4e0b\u306e\u4e8b\u67c4\u306e\u3044\u305a\u308c\u304b\u3092\u6307\u3059\u3002\u6df7\u540c\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u3002 Distributed RPC Framework torch.distriuted\u306e\u4e2d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002 1\u306e\u4e2d\u306eRPC\u3068\u3044\u3046\u6a5f\u80fd \u9060\u9694\u547c\u3073\u51fa\u3057\u4e00\u822c\u3092\u6307\u3059\u8a00\u8449 Distributed RPC Framework(https://pytorch.org/docs/stable/rpc.html#basics) torch.distributed\u306e\u4e2d\u306e\u3001\u5f37\u5316\u5b66\u7fd2\u3067\u30e1\u30a4\u30f3\u3067\u7528\u3044\u3089\u308c\u308b\u3067\u3042\u308d\u3046API\u3002 \u4e0a\u306e windows\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044(\u6b21\u306e\u6b21\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089\u90e8\u5206\u7684\u306b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b) RPC\u3092\u4f7f\u3063\u3066Parameter Server\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb Remote Procedure Call(RPC) \u30ea\u30e2\u30fc\u30c8\u306e\u95a2\u6570\u3092\u5f15\u6570\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308bAPI \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308b\u307e\u3067\u3064\u304e\u306e\u51e6\u7406\u306b\u5199\u3089\u306a\u3044\uff08rpc_sync\uff09 \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u8fd4\u308a\u5024\u3092\u5f85\u3064(rpc_async) \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8fd4\u308a\u5024\u3078\u306e\u53c2\u7167\u3092\u5f85\u3064\u3002(remote) Remote Reference(RRef) \u4ed6\u306e\u30de\u30b7\u30f3\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167 Distributed Autograd -\u3000\u8907\u6570\u30de\u30b7\u30f3\u3067grad\u3092\u9001\u308a\u5408\u3046\u6a5f\u80fd\u3092\u63d0\u4f9b -\u3000\u8907\u6570\u30de\u30b7\u30f3\u4e0a\u306egrad\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066grad\u3092\u53d6\u3063\u3066\u304f\u308c\u308bAPI Distributed Optimizer Distributed Autograd\u3067\u8a08\u7b97\u3057\u305fgrad\u3067\u5404\u30de\u30b7\u30f3\u306e\u30ef\u30fc\u30ab\u3092\u66f4\u65b0\u3057\u3066\u304f\u308c\u308bAPI Distributed Autograd \u30ea\u30e2\u30fc\u30c8\u306e\u30de\u30b7\u30f3\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u628a\u63e1\u3057\u3001\u5404\u30de\u30b7\u30f3\u306e\u91cd\u307f\u306b\u5bfe\u3057\u3066\u52fe\u914d\u3092\u8a08\u7b97\u3001\u9006\u4f1d\u64ad\u3055\u305b\u3089\u308c\u308b\u3002 \u4f7f\u7528\u4f8b >>> import torch.distributed.autograd as dist_autograd >>> with dist_autograd . context () as context_id : >>> t1 = torch . rand (( 3 , 3 ), requires_grad = True ) >>> t2 = torch . rand (( 3 , 3 ), requires_grad = True ) >>> loss = rpc . rpc_sync ( \"worker1\" , torch . add , args = ( t1 , t2 )) . sum () >>> dist_autograd . backward ( context_id , [ loss ]) Distributed Optimizer https://pytorch.org/docs/master/rpc.html#module-torch.distributed.optim \u6e21\u3055\u308c\u305f\u30ea\u30e2\u30fc\u30c8/\u30ed\u30fc\u30ab\u30eb\u4e21\u65b9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u3078\u306e\u53c2\u7167 = rrefs\uff09\u306b\u5bfe\u3059\u308b\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u3002 \u4f8b import torch import torch.multiprocessing as mp import torch.distributed.autograd as dist_autograd from torch.distributed import rpc from torch import optim from torch.distributed.optim import DistributedOptimizer def random_tensor (): return torch . rand (( 3 , 3 ), requires_grad = True ) def _run_process ( rank , dst_rank , world_size ): name = \"worker {} \" . format ( rank ) dst_name = \"worker {} \" . format ( dst_rank ) # Initialize RPC. rpc . init_rpc ( name = name , rank = rank , world_size = world_size ) # Use a distributed autograd context. with dist_autograd . context () as context_id : # Forward pass (create references on remote nodes). rref1 = rpc . remote ( dst_name , random_tensor ) rref2 = rpc . remote ( dst_name , random_tensor ) loss = rref1 . to_here () + rref2 . to_here () # Backward pass (run distributed autograd). dist_autograd . backward ( context_id , [ loss . sum ()]) # Build DistributedOptimizer. dist_optim = DistributedOptimizer ( optim . SGD , [ rref1 , rref2 ], lr = 0.05 , ) # Run the distributed optimizer step. dist_optim . step ( context_id ) def run_process ( rank , world_size ): dst_rank = ( rank + 1 ) % world_size _run_process ( rank , dst_rank , world_size ) rpc . shutdown () if __name__ == '__main__' : # Run world_size workers world_size = 2 mp . spawn ( run_process , args = ( world_size ,), nprocs = world_size ) \u4f7f\u7528\u4f8b SyncOnPolicy https://pytorch.org/tutorials/intermediate/rpc_tutorial.html#distributed-reinforcement-learning-using-rpc-and-rref AsyncOnPolicy(ParameterServer) https://pytorch.org/tutorials/intermediate/rpc_param_server_tutorial.html","title":"PyTorch\u306e\u5206\u6563\u8a08\u7b97\u51e6\u7406\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch/dp/#pytorch","text":"","title":"PyTorch\u306e\u5206\u6563\u8a08\u7b97\u51e6\u7406\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch/dp/#_1","text":"CUDNN\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307fLinux\u3067\u52d5\u4f5c\u78ba\u8a8d\u3001win\u306f\u308f\u304b\u3089\u3093","title":"\u5b9f\u9a13\u74b0\u5883"},{"location":"PyTorch/PyTorch/dp/#api","text":"torch.distributed\u306e\u4e2d\u306e Distributed RPC Framework \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u3002 torch.distributed\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306f\u3001\u5b9f\u884c\u6642\u306bgloo, mpi, nccl\u306e\uff13\u901a\u308a\u304b\u3089\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3088\u3063\u3066\u3001\u95a2\u6570\u3054\u3068\u306b\u6271\u3048\u308b\u30c6\u30f3\u30bd\u30eb(cpu, gpu)\u306e\u7a2e\u985e\u304c\u9055\u3063\u3066\u304f\u308b. \u5177\u4f53\u7684\u306b\u306fCPU\u4f7f\u7528\u6642\u306b\u306fGloo\u3001GPU\u4f7f\u7528\u6642\u306b\u306fnccl\u3092\u4f7f\u3046\u3068\u826f\u3044\u305d\u3046\u3060\u3002 \u3057\u304b\u3057\u3001nccl\u3092\u4f7f\u3046\u5834\u5408\u306b\u306fcpu\u4e0a\u306e\u30c6\u30f3\u30bd\u30eb\u306f\u6271\u3048\u305a\u3001\u3055\u3089\u306b\u4e00\u90e8\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u306a\u304f\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002 \u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u306a\u304f\u306a\u308b\u306e\u304b\uff1f\u306b\u3064\u3044\u3066\u306f \u516c\u5f0fdoc \u3092\u53c2\u7167\u3002 Pytorch\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u306f\u3001 Use multi-machine DistributedDataParallel and the launching script , if the application needs to scale across machine boundaries. \u3068\u3042\u308a\u3001\u4e00\u898b\u3059\u308b\u3068RPC\u3067\u306a\u304f\u3053\u3061\u3089\u304c\u4f7f\u3048\u305d\u3046\u306b\u898b\u3048\u308b\u304c DistributedDataParallel\u306a\u3069\u306e\u30c7\u30fc\u30bf\u4e26\u5217\u7528API\u306f\u3069\u3061\u3089\u304b\u3068\u8a00\u3048\u3070\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u7528\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u4f8b\u3048\u3070 In reinforcement learning, it might be relatively expensive to acquire training data from environments while the model itself can be quite small. In this case, it might be useful to spawn multiple observers running in parallel and share a single agent. In this case, the agent takes care of the training locally, but the application would still need libraries to send and receive data between observers and the trainer. \u3068\u3044\u3063\u305fSyncOnPolicy\u306e\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u305d\u3046\u3060\u3002 \u3053\u3046\u3044\u3063\u305f\u3082\u306e\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3001\u3088\u308a\u4e00\u822c\u7684\u306aAPI\u3068\u3057\u3066RPC\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u3002 (https://pytorch.org/tutorials/beginner/dist_overview.html#general-distributed-training)","title":"\u4f7f\u7528\u3059\u308bAPI"},{"location":"PyTorch/PyTorch/dp/#_2","text":"RPC \u3068\u3044\u3046\u8a00\u8449\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u304a\u3044\u3066\u6587\u8108\u6b21\u7b2c\u3067\u4ee5\u4e0b\u306e\u4e8b\u67c4\u306e\u3044\u305a\u308c\u304b\u3092\u6307\u3059\u3002\u6df7\u540c\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u3002 Distributed RPC Framework torch.distriuted\u306e\u4e2d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002 1\u306e\u4e2d\u306eRPC\u3068\u3044\u3046\u6a5f\u80fd \u9060\u9694\u547c\u3073\u51fa\u3057\u4e00\u822c\u3092\u6307\u3059\u8a00\u8449","title":"\u6ce8\u610f"},{"location":"PyTorch/PyTorch/dp/#distributed-rpc-frameworkhttpspytorchorgdocsstablerpchtmlbasics","text":"torch.distributed\u306e\u4e2d\u306e\u3001\u5f37\u5316\u5b66\u7fd2\u3067\u30e1\u30a4\u30f3\u3067\u7528\u3044\u3089\u308c\u308b\u3067\u3042\u308d\u3046API\u3002 \u4e0a\u306e windows\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044(\u6b21\u306e\u6b21\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089\u90e8\u5206\u7684\u306b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b) RPC\u3092\u4f7f\u3063\u3066Parameter Server\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb Remote Procedure Call(RPC) \u30ea\u30e2\u30fc\u30c8\u306e\u95a2\u6570\u3092\u5f15\u6570\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308bAPI \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308b\u307e\u3067\u3064\u304e\u306e\u51e6\u7406\u306b\u5199\u3089\u306a\u3044\uff08rpc_sync\uff09 \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u8fd4\u308a\u5024\u3092\u5f85\u3064(rpc_async) \u547c\u3073\u51fa\u3057\u5143\u306e\u30e6\u30fc\u30b6\u304c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8fd4\u308a\u5024\u3078\u306e\u53c2\u7167\u3092\u5f85\u3064\u3002(remote) Remote Reference(RRef) \u4ed6\u306e\u30de\u30b7\u30f3\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167 Distributed Autograd -\u3000\u8907\u6570\u30de\u30b7\u30f3\u3067grad\u3092\u9001\u308a\u5408\u3046\u6a5f\u80fd\u3092\u63d0\u4f9b -\u3000\u8907\u6570\u30de\u30b7\u30f3\u4e0a\u306egrad\u306e\u6d41\u308c\u3092\u628a\u63e1\u3057\u3066grad\u3092\u53d6\u3063\u3066\u304f\u308c\u308bAPI Distributed Optimizer Distributed Autograd\u3067\u8a08\u7b97\u3057\u305fgrad\u3067\u5404\u30de\u30b7\u30f3\u306e\u30ef\u30fc\u30ab\u3092\u66f4\u65b0\u3057\u3066\u304f\u308c\u308bAPI","title":"Distributed RPC Framework(https://pytorch.org/docs/stable/rpc.html#basics)"},{"location":"PyTorch/PyTorch/dp/#distributed-autograd","text":"\u30ea\u30e2\u30fc\u30c8\u306e\u30de\u30b7\u30f3\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u628a\u63e1\u3057\u3001\u5404\u30de\u30b7\u30f3\u306e\u91cd\u307f\u306b\u5bfe\u3057\u3066\u52fe\u914d\u3092\u8a08\u7b97\u3001\u9006\u4f1d\u64ad\u3055\u305b\u3089\u308c\u308b\u3002 \u4f7f\u7528\u4f8b >>> import torch.distributed.autograd as dist_autograd >>> with dist_autograd . context () as context_id : >>> t1 = torch . rand (( 3 , 3 ), requires_grad = True ) >>> t2 = torch . rand (( 3 , 3 ), requires_grad = True ) >>> loss = rpc . rpc_sync ( \"worker1\" , torch . add , args = ( t1 , t2 )) . sum () >>> dist_autograd . backward ( context_id , [ loss ])","title":"Distributed Autograd"},{"location":"PyTorch/PyTorch/dp/#distributed-optimizer","text":"https://pytorch.org/docs/master/rpc.html#module-torch.distributed.optim \u6e21\u3055\u308c\u305f\u30ea\u30e2\u30fc\u30c8/\u30ed\u30fc\u30ab\u30eb\u4e21\u65b9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u3078\u306e\u53c2\u7167 = rrefs\uff09\u306b\u5bfe\u3059\u308b\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u3002 \u4f8b import torch import torch.multiprocessing as mp import torch.distributed.autograd as dist_autograd from torch.distributed import rpc from torch import optim from torch.distributed.optim import DistributedOptimizer def random_tensor (): return torch . rand (( 3 , 3 ), requires_grad = True ) def _run_process ( rank , dst_rank , world_size ): name = \"worker {} \" . format ( rank ) dst_name = \"worker {} \" . format ( dst_rank ) # Initialize RPC. rpc . init_rpc ( name = name , rank = rank , world_size = world_size ) # Use a distributed autograd context. with dist_autograd . context () as context_id : # Forward pass (create references on remote nodes). rref1 = rpc . remote ( dst_name , random_tensor ) rref2 = rpc . remote ( dst_name , random_tensor ) loss = rref1 . to_here () + rref2 . to_here () # Backward pass (run distributed autograd). dist_autograd . backward ( context_id , [ loss . sum ()]) # Build DistributedOptimizer. dist_optim = DistributedOptimizer ( optim . SGD , [ rref1 , rref2 ], lr = 0.05 , ) # Run the distributed optimizer step. dist_optim . step ( context_id ) def run_process ( rank , world_size ): dst_rank = ( rank + 1 ) % world_size _run_process ( rank , dst_rank , world_size ) rpc . shutdown () if __name__ == '__main__' : # Run world_size workers world_size = 2 mp . spawn ( run_process , args = ( world_size ,), nprocs = world_size )","title":"Distributed Optimizer"},{"location":"PyTorch/PyTorch/dp/#_3","text":"","title":"\u4f7f\u7528\u4f8b"},{"location":"PyTorch/PyTorch/dp/#synconpolicy","text":"https://pytorch.org/tutorials/intermediate/rpc_tutorial.html#distributed-reinforcement-learning-using-rpc-and-rref","title":"SyncOnPolicy"},{"location":"PyTorch/PyTorch/dp/#asynconpolicyparameterserver","text":"https://pytorch.org/tutorials/intermediate/rpc_param_server_tutorial.html","title":"AsyncOnPolicy(ParameterServer)"},{"location":"PyTorch/PyTorch/video/","text":"PyTorch Dataset API \u3067\u52d5\u753b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u65b9\u6cd5 \u4ecaVideo Recognition\u306e\u5206\u91ce\u304c\u30a2\u30c4\u3044\uff1f YouTube\u3084TikTok\u7b49\u5927\u898f\u6a21\u306a\u52d5\u753b\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u6628\u4eca\u3001 3DCNN \u3084 ViT \u3092\u7528\u3044\u305f\u52d5\u753b\u5185\u3067\u306e\u59ff\u52e2\u63a8\u5b9a\u3084\u30af\u30e9\u30b9\u5206\u985e\u304c\u76db\u3093\u306b\u7814\u7a76\u3055\u308c\u3066\u3044\u307e\u3059\u3002SoTA\u30e2\u30c7\u30eb\u3060\u3068\u5b9f\u88c5\u304c\u5927\u5909\u3067\u3059\u304c\u5b9f\u306f\u65e2\u5b58\u306eCNN+LSTM\u306a\u3069\u3067\u3082\u7d50\u69cb\u3044\u3044\u7cbe\u5ea6\u304c\u3060\u305b\u305f\u308a\u3057\u307e\u3059\u3002 \u4eca\u56de\u306f\u305d\u3093\u306aVideo Recognition\u3092\u304a\u624b\u8efd\u306b\u8a66\u3059\u4e0a\u3067\u4ee5\u5916\u3068\u9762\u5012\u304f\u3055\u3044\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u308a\u65b9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002 \u306a\u304a\u3001\u52d5\u753b\u30c7\u30fc\u30bf\u306f\u5404\u30d5\u30ec\u30fc\u30e0\u3092\u753b\u50cf\u30c7\u30fc\u30bf\u3068\u3057\u3066\u305d\u308c\u3089\u306e\u96c6\u5408\u3068\u3057\u3066\u6271\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u306e\u3067\u305d\u3053\u307e\u3067\u306e\u5909\u63db\u306f\u5225\u9014\u884c\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 ffmpeg \u3084 torchvision.io \u7b49\u3067\u8abf\u3079\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u307e\u3059\u3002 \u3084\u308a\u65b9 \u4eca\u56de\u306f\u3001 \u6570\u30d5\u30ec\u30fc\u30e0\u306e\u52d5\u753b\u3092\u5b66\u7fd2\u3057\u3001\u305d\u308c\u304c\u306a\u3093\u306e\u52d5\u4f5c\u304b\u4e88\u6e2c\u3059\u308b \u3068\u3044\u3046\u30bf\u30b9\u30af\u3092\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u52d5\u753b\u306e3\u30d5\u30ec\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u304c\u306a\u3093\u306e\u52d5\u4f5c\u306a\u306e\u304b\u3092\u63a8\u8ad6\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u4efb\u610f\u306e\u4e00\u9023\u306e4\u30d5\u30ec\u30fc\u30e0\u3068\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3067\u304d\u308c\u3070\u304ak\u3002 import torch class VideoDataset ( torch . utils . data . Dataset ): def __init__ ( self , frames ): self . idxs = [ 0 , 1 , 2 , 3 , 4 ] self . data = \"a b c d e\" . split () self . labels = \"a b c d e\" . split () self . frames = frames def __len__ ( self ): return 5 - ( self . frames - 1 ) def __getitem__ ( self , idx ): res = [ self . data [ i ] for i in range ( idx , idx + self . frames )] return res , self . labels [ idx + ( self . frames - 1 )] \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u52d5\u753b\u306e\u5404\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u306e\u30d1\u30b9\u3092abcde\u3068\u3057\u3066\u4e00\u9023\u306e\u4e09\u679a\u3068\u3001\u305d\u306e3\u679a\u76ee\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 train = VideoDataset ( frames = 3 ) for x , t in train : print ( x , t ) # out [ 'a' , 'b' , 'c' ] c [ 'b' , 'c' , 'd' ] d [ 'c' , 'd' , 'e' ] e __getitem__ \u306e\u6700\u7d42\u884c\u3092\u5e30\u308c\u3070\u51fa\u529b\u3059\u308b\u30e9\u30d9\u30eb\u306e\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4e00\u9023\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u3069\u3053\u3092\u30e9\u30d9\u30eb\u3068\u3059\u308b\u304b\u306f\u554f\u984c\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u6765\u307e\u3059\u304c\u3001\u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u30e9\u30d9\u30eb\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3042\u308b\u610f\u5473\u672a\u6765\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u5927\u62b5\u306e\u5834\u5408\u306f\u6700\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u6559\u5e2b\u30c7\u30fc\u30bf\u306b\u3057\u307e\u3059\u3002 \u3053\u3053\u3089\u8fba\u306f\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u6539\u3081\u3066\u89e6\u308c\u307e\u3059\u3002 \u6b21\u56de\u306f\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u5206\u985e\u30e2\u30c7\u30eb\u3092\u66f8\u304d\u307e\u3059\u3002","title":"PyTorch Dataset API \u3067\u52d5\u753b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u65b9\u6cd5"},{"location":"PyTorch/PyTorch/video/#pytorch-dataset-api","text":"","title":"PyTorch Dataset API \u3067\u52d5\u753b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u65b9\u6cd5"},{"location":"PyTorch/PyTorch/video/#video-recognition","text":"YouTube\u3084TikTok\u7b49\u5927\u898f\u6a21\u306a\u52d5\u753b\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u6628\u4eca\u3001 3DCNN \u3084 ViT \u3092\u7528\u3044\u305f\u52d5\u753b\u5185\u3067\u306e\u59ff\u52e2\u63a8\u5b9a\u3084\u30af\u30e9\u30b9\u5206\u985e\u304c\u76db\u3093\u306b\u7814\u7a76\u3055\u308c\u3066\u3044\u307e\u3059\u3002SoTA\u30e2\u30c7\u30eb\u3060\u3068\u5b9f\u88c5\u304c\u5927\u5909\u3067\u3059\u304c\u5b9f\u306f\u65e2\u5b58\u306eCNN+LSTM\u306a\u3069\u3067\u3082\u7d50\u69cb\u3044\u3044\u7cbe\u5ea6\u304c\u3060\u305b\u305f\u308a\u3057\u307e\u3059\u3002 \u4eca\u56de\u306f\u305d\u3093\u306aVideo Recognition\u3092\u304a\u624b\u8efd\u306b\u8a66\u3059\u4e0a\u3067\u4ee5\u5916\u3068\u9762\u5012\u304f\u3055\u3044\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u308a\u65b9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002 \u306a\u304a\u3001\u52d5\u753b\u30c7\u30fc\u30bf\u306f\u5404\u30d5\u30ec\u30fc\u30e0\u3092\u753b\u50cf\u30c7\u30fc\u30bf\u3068\u3057\u3066\u305d\u308c\u3089\u306e\u96c6\u5408\u3068\u3057\u3066\u6271\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u306e\u3067\u305d\u3053\u307e\u3067\u306e\u5909\u63db\u306f\u5225\u9014\u884c\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 ffmpeg \u3084 torchvision.io \u7b49\u3067\u8abf\u3079\u308b\u3068\u5e78\u305b\u306b\u306a\u308c\u307e\u3059\u3002","title":"\u4ecaVideo Recognition\u306e\u5206\u91ce\u304c\u30a2\u30c4\u3044\uff1f"},{"location":"PyTorch/PyTorch/video/#_1","text":"\u4eca\u56de\u306f\u3001 \u6570\u30d5\u30ec\u30fc\u30e0\u306e\u52d5\u753b\u3092\u5b66\u7fd2\u3057\u3001\u305d\u308c\u304c\u306a\u3093\u306e\u52d5\u4f5c\u304b\u4e88\u6e2c\u3059\u308b \u3068\u3044\u3046\u30bf\u30b9\u30af\u3092\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u52d5\u753b\u306e3\u30d5\u30ec\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u304c\u306a\u3093\u306e\u52d5\u4f5c\u306a\u306e\u304b\u3092\u63a8\u8ad6\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u4efb\u610f\u306e\u4e00\u9023\u306e4\u30d5\u30ec\u30fc\u30e0\u3068\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3067\u304d\u308c\u3070\u304ak\u3002 import torch class VideoDataset ( torch . utils . data . Dataset ): def __init__ ( self , frames ): self . idxs = [ 0 , 1 , 2 , 3 , 4 ] self . data = \"a b c d e\" . split () self . labels = \"a b c d e\" . split () self . frames = frames def __len__ ( self ): return 5 - ( self . frames - 1 ) def __getitem__ ( self , idx ): res = [ self . data [ i ] for i in range ( idx , idx + self . frames )] return res , self . labels [ idx + ( self . frames - 1 )] \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u52d5\u753b\u306e\u5404\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u306e\u30d1\u30b9\u3092abcde\u3068\u3057\u3066\u4e00\u9023\u306e\u4e09\u679a\u3068\u3001\u305d\u306e3\u679a\u76ee\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 train = VideoDataset ( frames = 3 ) for x , t in train : print ( x , t ) # out [ 'a' , 'b' , 'c' ] c [ 'b' , 'c' , 'd' ] d [ 'c' , 'd' , 'e' ] e __getitem__ \u306e\u6700\u7d42\u884c\u3092\u5e30\u308c\u3070\u51fa\u529b\u3059\u308b\u30e9\u30d9\u30eb\u306e\u4f4d\u7f6e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4e00\u9023\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u3069\u3053\u3092\u30e9\u30d9\u30eb\u3068\u3059\u308b\u304b\u306f\u554f\u984c\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u6765\u307e\u3059\u304c\u3001\u6700\u521d\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u30e9\u30d9\u30eb\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3042\u308b\u610f\u5473\u672a\u6765\u306e\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3055\u305b\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u5927\u62b5\u306e\u5834\u5408\u306f\u6700\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u6559\u5e2b\u30c7\u30fc\u30bf\u306b\u3057\u307e\u3059\u3002 \u3053\u3053\u3089\u8fba\u306f\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u6539\u3081\u3066\u89e6\u308c\u307e\u3059\u3002 \u6b21\u56de\u306f\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u5206\u985e\u30e2\u30c7\u30eb\u3092\u66f8\u304d\u307e\u3059\u3002","title":"\u3084\u308a\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/checkpoint/","text":"PyTorch Lightning\u306eCheckpointCallback\u306e\u4fbf\u5229\u6a5f\u80fd \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306b\u306a\u3093\u3067\u3082\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u542b\u3081\u3066\u30bb\u30fc\u30d6\u3067\u304d\u308b\u6a5f\u80fd\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u30e1\u30e2\u3002 on_save_checkpoint def on_save_checkpoint ( self , checkpoint ): # 99% of use cases you don't need to implement this method checkpoint [ 'something_cool_i_want_to_save' ] = my_cool_pickable_object \u30b3\u30ec\u3092\u4f7f\u3046\u3068parameter\u4ee5\u5916\u306b\u63a8\u8ad6\u6642\u306b\u4f7f\u3046\u60c5\u5831\u3092checkpoint\u3068\u3057\u3066\u4fdd\u6301\u3067\u304d\u308b\u306e\u3067\u63a8\u8ad6\u6642\u306b\u624b\u52d5\u3067\u30ed\u30fc\u30c9\u3057\u305f\u308a\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u4fdd\u5b58\u3057\u3066\u304a\u304f\u624b\u9593\u304c\u7701\u3051\u308b\u3002 def on_load_checkpoint \u3053\u308c\u3067\u30ed\u30fc\u30c9\u3067\u304d\u308b def on_load_checkpoint ( self , checkpoint ): # 99% of the time you don't need to implement this method self . something_cool_i_want_to_save = checkpoint [ 'something_cool_i_want_to_save' ] Use case \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u5171\u5206\u6563\u884c\u5217\u3068\u304b\u3092\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3068\u4e00\u7dd2\u306b\u4fdd\u5b58\u3067\u304d\u308b\u3002","title":"PyTorch Lightning\u306eCheckpointCallback\u306e\u4fbf\u5229\u6a5f\u80fd"},{"location":"PyTorch/PyTorch%20Lightning/checkpoint/#pytorch-lightningcheckpointcallback","text":"\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306b\u306a\u3093\u3067\u3082\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u542b\u3081\u3066\u30bb\u30fc\u30d6\u3067\u304d\u308b\u6a5f\u80fd\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u30e1\u30e2\u3002","title":"PyTorch Lightning\u306eCheckpointCallback\u306e\u4fbf\u5229\u6a5f\u80fd"},{"location":"PyTorch/PyTorch%20Lightning/checkpoint/#on_save_checkpoint","text":"def on_save_checkpoint ( self , checkpoint ): # 99% of use cases you don't need to implement this method checkpoint [ 'something_cool_i_want_to_save' ] = my_cool_pickable_object \u30b3\u30ec\u3092\u4f7f\u3046\u3068parameter\u4ee5\u5916\u306b\u63a8\u8ad6\u6642\u306b\u4f7f\u3046\u60c5\u5831\u3092checkpoint\u3068\u3057\u3066\u4fdd\u6301\u3067\u304d\u308b\u306e\u3067\u63a8\u8ad6\u6642\u306b\u624b\u52d5\u3067\u30ed\u30fc\u30c9\u3057\u305f\u308a\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u4fdd\u5b58\u3057\u3066\u304a\u304f\u624b\u9593\u304c\u7701\u3051\u308b\u3002","title":"on_save_checkpoint"},{"location":"PyTorch/PyTorch%20Lightning/checkpoint/#def-on_load_checkpoint","text":"\u3053\u308c\u3067\u30ed\u30fc\u30c9\u3067\u304d\u308b def on_load_checkpoint ( self , checkpoint ): # 99% of the time you don't need to implement this method self . something_cool_i_want_to_save = checkpoint [ 'something_cool_i_want_to_save' ]","title":"def on_load_checkpoint"},{"location":"PyTorch/PyTorch%20Lightning/checkpoint/#use-case","text":"\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u5171\u5206\u6563\u884c\u5217\u3068\u304b\u3092\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3068\u4e00\u7dd2\u306b\u4fdd\u5b58\u3067\u304d\u308b\u3002","title":"Use case"},{"location":"PyTorch/PyTorch%20Lightning/data_module/","text":"\u3010PyTorch Lightning\u3011LightningDataModule\u306b\u3064\u3044\u3066 \u3061\u3083\u3093\u3068\u3057\u305f\u65e5\u672c\u8a9e\u89e3\u8aac\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u4eca\u5f8c\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u6982\u8981 PyTorch Lightning\u3067\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u3059\u6642\u306eDataLoader(\u5834\u5408\u306b\u3088\u3063\u3066\u306fDataset\u3082)\u3068\u306a\u308b\u30af\u30e9\u30b9\u3001 PyTorch\u306e\u8a72\u5f53\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u4e92\u63db\u6027\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u542b\u3081\u3066\u3001 LightningModule \u304c\u30e2\u30c7\u30eb LightningDataModule \u304c\u30c7\u30fc\u30bf \u305d\u306e\u4ed6\u5fc5\u8981\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\uff08 Callbacks API , LR_FINDER \u7b49\uff09 \u3092\u66f8\u3051\u3070\u304ak LightningDataModule\u306e\u66f8\u304d\u65b9 init \u4ee5\u5916\u306b3\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 prepare_data \uff08\u7121\u304f\u3066\u3082\u52d5\u304f\uff09 setup ~_dataloader 0. __init__ \u5fc5\u8981\u306aparameters\u3092\u4f5c\u308b\u3002Dataset\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u8a13\u7df4\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u5225\u308c\u3066\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 import pytorch - lightning as pl from torch.utils.data import random_split , DataLoader from torchvision import transforms class DataModule ( pl . LightningDataModule ): def __init__ ( self , train_dir = './train' , test_dir = './test' , batch_size = 64 ): super () . __init__ () self . train_dir = train_dir self . test_dir = test_dir self . batch_size = batch_size self . transform = transforms . Compose ([ transforms . ToTensor (), transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ]) self . data_augmentation = transforms . Compose ([ transforms . ToTensor (), # ... some data augmentations... transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ]) \u4f59\u8ac7\uff1aalbumentations\u3068\u3044\u3046DA\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fbf\u5229\u3067\u3059\u3001torchvision\u306etransform\u3068\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u3053\u3067\u3082\u4f7f\u3048\u307e\u3059\u3002 1. prepare_data \u6700\u521d\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306a\u3069 GPU\u6570\u306b\u304b\u304b\u308f\u3089\u305a\u4e00\u56de\u884c\u3044\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f \u3002 \u3053\u3053\u306b\u66f8\u304f\u3053\u3068\u3067\u30de\u30eb\u30c1GPU\u3067\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406\u3092\u3088\u3057\u306a\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001MNIST\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408 def prepare_data ( self ): # download MNIST ( self . data_dir , train = True , download = True ) MNIST ( self . data_dir , train = False , download = True ) 2. setup \uff12\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 Trainer.fit() \u3068 Trainer.test() \u304c\u547c\u3070\u308c\u305f\u6642\u306b\u7570\u306a\u308bDataset\u3092\u6d41\u3059\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002 DA\u306e\u6709\u7121\u7b49\u3082\u3053\u3053\u3067\u30b9\u30a4\u30c3\u30c1\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002 \u4f55\u304b\u3057\u3089\u306eDataset\u30af\u30e9\u30b9\u3092\u5225\u306b\u4f5c\u3063\u3066\u304a\u304f\u3068\u8aad\u307f\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u6ce8\u610f\uff1aTrainer\u304b\u3089stage\u5f15\u6570\u306b\u30e2\u30fc\u30c9\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u304f\u308b\u3088\u3046\u3067\u3059\u304c\u3001None\u306b\u306a\u3063\u305f\u6642\u306e\u51e6\u7406\u3092 \u66f8\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002setup\u3092\u624b\u52d5\u3067\u547c\u3076\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\uff12\uff1a\u30de\u30eb\u30c1GPU\u306e\u5834\u5408\u5404GPU\u304b\u3089\u4e00\u56de\u3065\u3064\u547c\u3070\u308c\u307e\u3059\u3002 def setup ( self , stage = None ): if stage == 'fit' or stage is None : self . train_set = MyDataset ( self . train_dir , transform = self . data_augmentation ) size = len ( self . train_set ) t , v = ( int ( size * 0.9 ), int ( size * 0.1 )) # if using holdout method t += ( t + v != size ) self . train_set , self . valid_set = random_split ( self . train_set , [ t , v ]) if stage == 'test' or stage is None : self . test_set = MyDataset ( self . test_dir , transform = self . transform ) 3. ~_dataloader \u6700\u5f8c\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001Dataloader\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002 \u8a13\u7df4\u3001\u691c\u8a3c\u3001\u30c6\u30b9\u30c8\u3088\u3046\u306b\u4e09\u3064\u66f8\u304d\u307e\u3059\u3002 def train_dataloader ( self ): return DataLoader ( self . train_set , batch_size = self . batch_size , ) def val_dataloader ( self ): return DataLoader ( self . test_set , batch_size = self . batch_size , ) def test_dataloader ( self ): return DataLoader ( self . valid_set , batch_size = self . batch_size , ) \u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002 EXTRA: LightningDataModule\u3092\u4f7f\u3046 \u901a\u5e38\u306e\u5834\u5408, dm = DataModule () model = Model () trainer . fit ( model , dm ) trainer . test ( datamodule = dm ) \u3067\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u52dd\u624b\u306b\u547c\u3093\u3067\u8a13\u7df4\u307e\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002 \u304c\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\u6642\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u60c5\u5831\uff08\u30af\u30e9\u30b9\u6570\u3084\u753b\u50cf\u30b5\u30a4\u30ba\u3001\u3061\u3083\u3093\u306d\u308b\u6570\uff09\u304c \u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u305d\u306e\u6642\u306f setup \u5185\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u51e6\u7406\u3092\u8a18\u8f09\u3057\u3066\u304b\u3089 dm = DataModule () dm . prepare_data () dm . setup ( 'fit' ) \u3000 # \u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306b\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u304a\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068 model = Model ( num_classes = dm . num_classes , width = dm .= img_size ) trainer . fit ( model , dm )","title":"\u3010PyTorch Lightning\u3011LightningDataModule\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#pytorch-lightninglightningdatamodule","text":"\u3061\u3083\u3093\u3068\u3057\u305f\u65e5\u672c\u8a9e\u89e3\u8aac\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u4eca\u5f8c\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002","title":"\u3010PyTorch Lightning\u3011LightningDataModule\u306b\u3064\u3044\u3066"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#_1","text":"PyTorch Lightning\u3067\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u3059\u6642\u306eDataLoader(\u5834\u5408\u306b\u3088\u3063\u3066\u306fDataset\u3082)\u3068\u306a\u308b\u30af\u30e9\u30b9\u3001 PyTorch\u306e\u8a72\u5f53\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u4e92\u63db\u6027\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u542b\u3081\u3066\u3001 LightningModule \u304c\u30e2\u30c7\u30eb LightningDataModule \u304c\u30c7\u30fc\u30bf \u305d\u306e\u4ed6\u5fc5\u8981\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\uff08 Callbacks API , LR_FINDER \u7b49\uff09 \u3092\u66f8\u3051\u3070\u304ak","title":"\u6982\u8981"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#lightningdatamodule","text":"init \u4ee5\u5916\u306b3\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 prepare_data \uff08\u7121\u304f\u3066\u3082\u52d5\u304f\uff09 setup ~_dataloader","title":"LightningDataModule\u306e\u66f8\u304d\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#0-__init__","text":"\u5fc5\u8981\u306aparameters\u3092\u4f5c\u308b\u3002Dataset\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u8a13\u7df4\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u5225\u308c\u3066\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 import pytorch - lightning as pl from torch.utils.data import random_split , DataLoader from torchvision import transforms class DataModule ( pl . LightningDataModule ): def __init__ ( self , train_dir = './train' , test_dir = './test' , batch_size = 64 ): super () . __init__ () self . train_dir = train_dir self . test_dir = test_dir self . batch_size = batch_size self . transform = transforms . Compose ([ transforms . ToTensor (), transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ]) self . data_augmentation = transforms . Compose ([ transforms . ToTensor (), # ... some data augmentations... transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ])","title":"0. __init__"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#albumentationsdatorchvisiontransform","text":"","title":"\u4f59\u8ac7\uff1aalbumentations\u3068\u3044\u3046DA\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fbf\u5229\u3067\u3059\u3001torchvision\u306etransform\u3068\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u3053\u3067\u3082\u4f7f\u3048\u307e\u3059\u3002"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#1-prepare_data","text":"\u6700\u521d\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306a\u3069 GPU\u6570\u306b\u304b\u304b\u308f\u3089\u305a\u4e00\u56de\u884c\u3044\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f \u3002 \u3053\u3053\u306b\u66f8\u304f\u3053\u3068\u3067\u30de\u30eb\u30c1GPU\u3067\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406\u3092\u3088\u3057\u306a\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001MNIST\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408 def prepare_data ( self ): # download MNIST ( self . data_dir , train = True , download = True ) MNIST ( self . data_dir , train = False , download = True )","title":"1. prepare_data"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#2-setup","text":"\uff12\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002 Trainer.fit() \u3068 Trainer.test() \u304c\u547c\u3070\u308c\u305f\u6642\u306b\u7570\u306a\u308bDataset\u3092\u6d41\u3059\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\u3002 DA\u306e\u6709\u7121\u7b49\u3082\u3053\u3053\u3067\u30b9\u30a4\u30c3\u30c1\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002 \u4f55\u304b\u3057\u3089\u306eDataset\u30af\u30e9\u30b9\u3092\u5225\u306b\u4f5c\u3063\u3066\u304a\u304f\u3068\u8aad\u307f\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u6ce8\u610f\uff1aTrainer\u304b\u3089stage\u5f15\u6570\u306b\u30e2\u30fc\u30c9\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u304f\u308b\u3088\u3046\u3067\u3059\u304c\u3001None\u306b\u306a\u3063\u305f\u6642\u306e\u51e6\u7406\u3092 \u66f8\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002setup\u3092\u624b\u52d5\u3067\u547c\u3076\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\uff12\uff1a\u30de\u30eb\u30c1GPU\u306e\u5834\u5408\u5404GPU\u304b\u3089\u4e00\u56de\u3065\u3064\u547c\u3070\u308c\u307e\u3059\u3002 def setup ( self , stage = None ): if stage == 'fit' or stage is None : self . train_set = MyDataset ( self . train_dir , transform = self . data_augmentation ) size = len ( self . train_set ) t , v = ( int ( size * 0.9 ), int ( size * 0.1 )) # if using holdout method t += ( t + v != size ) self . train_set , self . valid_set = random_split ( self . train_set , [ t , v ]) if stage == 'test' or stage is None : self . test_set = MyDataset ( self . test_dir , transform = self . transform )","title":"2. setup"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#3-_dataloader","text":"\u6700\u5f8c\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001Dataloader\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002 \u8a13\u7df4\u3001\u691c\u8a3c\u3001\u30c6\u30b9\u30c8\u3088\u3046\u306b\u4e09\u3064\u66f8\u304d\u307e\u3059\u3002 def train_dataloader ( self ): return DataLoader ( self . train_set , batch_size = self . batch_size , ) def val_dataloader ( self ): return DataLoader ( self . test_set , batch_size = self . batch_size , ) def test_dataloader ( self ): return DataLoader ( self . valid_set , batch_size = self . batch_size , ) \u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002","title":"3. ~_dataloader"},{"location":"PyTorch/PyTorch%20Lightning/data_module/#extra-lightningdatamodule","text":"\u901a\u5e38\u306e\u5834\u5408, dm = DataModule () model = Model () trainer . fit ( model , dm ) trainer . test ( datamodule = dm ) \u3067\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u52dd\u624b\u306b\u547c\u3093\u3067\u8a13\u7df4\u307e\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002 \u304c\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\u6642\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u60c5\u5831\uff08\u30af\u30e9\u30b9\u6570\u3084\u753b\u50cf\u30b5\u30a4\u30ba\u3001\u3061\u3083\u3093\u306d\u308b\u6570\uff09\u304c \u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u305d\u306e\u6642\u306f setup \u5185\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u51e6\u7406\u3092\u8a18\u8f09\u3057\u3066\u304b\u3089 dm = DataModule () dm . prepare_data () dm . setup ( 'fit' ) \u3000 # \u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306b\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u304a\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068 model = Model ( num_classes = dm . num_classes , width = dm .= img_size ) trainer . fit ( model , dm )","title":"EXTRA: LightningDataModule\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/","text":"PyTorch Lightning Bolts\u306e\u4f7f\u3044\u65b9 \u4fbf\u5229\u306a\u6642\u4ee3\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002 Bolts\u3068\u306f\uff1f PyTorch Lightning\u7528\u306e\u4fbf\u5229\u30b3\u30fc\u30c9\u304c\u8a70\u307e\u3063\u305f\u516c\u5f0f\u30e9\u30a4\u30d6\u30e9\u30ea\u3002 \u8a13\u7df4\u6e08\u307fSOTA\u30e2\u30c7\u30eb \u3088\u304f\u4f7f\u3046\u30e2\u30c7\u30eb\u30b3\u30f3\u30dd\u30cd\u30fc\u30c8 Callback\u7528\u306e\u30d5\u30a9\u30ef\u30fc\u30c9\u3001\u30d0\u30c3\u30af\u30d5\u30c3\u30af \u30ed\u30b9\u95a2\u6570 \u6709\u540d\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3053\u308c\u3089\u304cPyTorch Lightning\u3067\u76f4\u3050\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3068\u3063\u3066\u3082\u4fbf\u5229\u3002 \u4ee5\u4e0b\u3001\u4f7f\u3044\u65b9\u306e\u4f8b 1.\u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046 \u6700\u65b0\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u4f7f\u3063\u3066\u307f\u305f\u3044\u6642\u306a\u3069\u306f from pl_bolts.models.self_supervised import SwAV weight_path = 'https://pl-bolts-weights.s3.us-east-2.amazonaws.com/swav/swav_imagenet/swav_imagenet.pth.tar' # weight file of ImageNet swav = SwAV . load_from_checkpoint ( weight_path , strict = True ) swav . freeze () \u4ee5\u964d swav \u306f\u901a\u5e38\u306e nn.Module \u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002 2.\u30b3\u30f3\u30dd\u30cd\u30fc\u30c8\u5358\u4f4d\u3067\u4f7f\u3046 \u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\u306b\u3057\u305f\u308a\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u90e8\u5206\u3060\u3051\u63a1\u7528\u3057\u305f\u308a\u3082\u3067\u304d\u308b\u3002 \u4eca\u56de\u306f ResNet152 \u306e\u5165\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u30923\u304b\u30894\u306b\u3057\u3066\u307f\u305f\u3002 from pl_bolts.models.self_supervised.resnets import resnet152 model = resnet152 ( pretrained = True ) temp_weight = model . conv1 . weight . data . clone () # \u65e2\u5b58\u306e\u91cd\u307f\u3092\u9000\u907f model . conv1 = nn . Conv2d ( 4 , 64 , kernel_size = 7 , stride = 2 , padding = 3 , bias = False ) # input_channel\u3060\u3051\u5897\u3084\u3059 model . conv1 . weight . data [:, : 3 ] = temp_weight # 3 channel\u307e\u3067\u306f\u65e2\u5b58\u306e\u91cd\u307f model . conv1 . weight . data [:, 3 ] = model . conv1 . weight . data [:, 0 ] # R\u306e\u91cd\u307f\u30924\u3064\u3081\u306e\u91cd\u307f\u3068\u3057\u3066\u63a1\u7528 \u9006\u306b model.conv1 \u3060\u3051\u3092\u5225\u306e\u30e2\u30c7\u30eb\u306b\u4f7f\u3063\u305f\u308a\u3082\u3067\u304d\u308b\u3002 3.\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u3046 PyTorch Lightning \u306e Callback \u3000API\u7528\u306e\u4fbf\u5229\u306a\u51e6\u7406\u304c\u8272\u3005\u63c3\u3063\u3066\u308b\u3002 \u5fc5\u8981\u306aCallback\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5ba3\u8a00\u3057\u3066\u305d\u308c\u3089\u306e\u30ea\u30b9\u30c8\u3092\u30c8\u30ec\u30a4\u30ca\u30fc\u306b\u6e21\u3059\u3060\u3051\u3067\u4f7f\u3048\u308b \u3002 \u3053\u3053\u3067\u306f\u4e8c\u3064\u7d39\u4ecb\u3002 \u30a8\u30dd\u30c3\u30af\u6bce\u306b\u30ed\u30b9\u3092\u8868\u793a\u3059\u308b from pl_bolts.callbacks import PrintTableMetricsCallback print_callback = PrintTableMetricsCallback () trainer pl . Trainer ( callback = [ print_callback ]) trainer . fit ( model ) GAN\u306eforward\u6642\u306b\u751f\u6210\u3057\u305f\u753b\u50cf\u3092TensorBoard\u306b\u8868\u793a\u3059\u308b model . img_dim = ( 1 , 28 , 28 ) # model forward must work for sampling z = torch . rand ( batch_size , latent_dim ) img_samples = GAN ( z ) from pl_bolts.callbacks import TensorboardGenerativeModelImageSampler trainer = Trainer ( callbacks = [ TensorboardGenerativeModelImageSampler ()]) trainer . fit ( GAN ) 4.\u30ed\u30b9\u95a2\u6570\u3092\u4f7f\u3046 \u30bf\u30b9\u30af\u6bce\u306b\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304c\u307e\u3060\u6570\u304c\u5c11\u306a\u3044\u3002 \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068PyTorch\u306e\u30ed\u30b9\u95a2\u6570\u306b\u306a\u308b\u306e\u3067\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b lossfun \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3002 \u4e0b\u8a18\u306f\u7269\u4f53\u691c\u77e5\u7528\u306eGeneralizedIoU\u3002 >>> import torch >>> from pl_bolts.losses.object_detection import giou_loss >>> preds = torch . tensor ([[ 100 , 100 , 200 , 200 ]]) >>> target = torch . tensor ([[ 150 , 150 , 250 , 250 ]]) >>> giou_loss ( preds , target ) tensor ([[ 1.0794 ]]) def lossfun ( self , y , t ): # method of a network return giou_loss ( y , t ) 5.\u30c7\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046 LightningDataModule \u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u63c3\u3063\u3066\u3044\u308b\u3002 \u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8\u3092\u76f4\u3050\u306b\u59cb\u3081\u3089\u308c\u308b\u3002\u30de\u30eb\u30c1GPU\u5bfe\u5fdc\u3002 DA\u3092\u81ea\u5206\u3067\u5909\u66f4\u3057\u305f\u308a\u3067\u304d\u308b from pl_bolts.datamodules import CIFAR10DataModule dm = CIFAR10DataModule ( 'PATH_to_download/to_load' ) dm . train_transforms = ... # \u3053\u3053\u306bCompose\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u305b\u3070\u304ak dm . test_transforms = ... dm . val_transforms = ... Numpy\u3067x,y\u3092\u6e21\u3059\u3060\u3051\u3067 LightningDataModule \u5316\u3057\u3066\u304f\u308c\u3066\u51c4\u3044\u3068\u601d\u3044\u307e\u3057\u305f\uff08\u8a9e\u5f59\u529b\uff09 >>> from sklearn.datasets import load_boston >>> from pl_bolts.datamodules import SklearnDataset ... >>> X , y = load_boston ( return_X_y = True ) >>> dataset = SklearnDataset ( X , y ) # \u30b7\u30a7\u30a4\u30d7\u304c\u3042\u3063\u3066\u308c\u3070\u306a\u3093\u3067\u3082\u6e21\u305b\u308b","title":"PyTorch Lightning Bolts\u306e\u4f7f\u3044\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#pytorch-lightning-bolts","text":"\u4fbf\u5229\u306a\u6642\u4ee3\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002","title":"PyTorch Lightning Bolts\u306e\u4f7f\u3044\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#bolts","text":"PyTorch Lightning\u7528\u306e\u4fbf\u5229\u30b3\u30fc\u30c9\u304c\u8a70\u307e\u3063\u305f\u516c\u5f0f\u30e9\u30a4\u30d6\u30e9\u30ea\u3002 \u8a13\u7df4\u6e08\u307fSOTA\u30e2\u30c7\u30eb \u3088\u304f\u4f7f\u3046\u30e2\u30c7\u30eb\u30b3\u30f3\u30dd\u30cd\u30fc\u30c8 Callback\u7528\u306e\u30d5\u30a9\u30ef\u30fc\u30c9\u3001\u30d0\u30c3\u30af\u30d5\u30c3\u30af \u30ed\u30b9\u95a2\u6570 \u6709\u540d\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3053\u308c\u3089\u304cPyTorch Lightning\u3067\u76f4\u3050\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3068\u3063\u3066\u3082\u4fbf\u5229\u3002 \u4ee5\u4e0b\u3001\u4f7f\u3044\u65b9\u306e\u4f8b","title":"Bolts\u3068\u306f\uff1f"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#1","text":"\u6700\u65b0\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u4f7f\u3063\u3066\u307f\u305f\u3044\u6642\u306a\u3069\u306f from pl_bolts.models.self_supervised import SwAV weight_path = 'https://pl-bolts-weights.s3.us-east-2.amazonaws.com/swav/swav_imagenet/swav_imagenet.pth.tar' # weight file of ImageNet swav = SwAV . load_from_checkpoint ( weight_path , strict = True ) swav . freeze () \u4ee5\u964d swav \u306f\u901a\u5e38\u306e nn.Module \u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"1.\u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#2","text":"\u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\u306b\u3057\u305f\u308a\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u90e8\u5206\u3060\u3051\u63a1\u7528\u3057\u305f\u308a\u3082\u3067\u304d\u308b\u3002 \u4eca\u56de\u306f ResNet152 \u306e\u5165\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u30923\u304b\u30894\u306b\u3057\u3066\u307f\u305f\u3002 from pl_bolts.models.self_supervised.resnets import resnet152 model = resnet152 ( pretrained = True ) temp_weight = model . conv1 . weight . data . clone () # \u65e2\u5b58\u306e\u91cd\u307f\u3092\u9000\u907f model . conv1 = nn . Conv2d ( 4 , 64 , kernel_size = 7 , stride = 2 , padding = 3 , bias = False ) # input_channel\u3060\u3051\u5897\u3084\u3059 model . conv1 . weight . data [:, : 3 ] = temp_weight # 3 channel\u307e\u3067\u306f\u65e2\u5b58\u306e\u91cd\u307f model . conv1 . weight . data [:, 3 ] = model . conv1 . weight . data [:, 0 ] # R\u306e\u91cd\u307f\u30924\u3064\u3081\u306e\u91cd\u307f\u3068\u3057\u3066\u63a1\u7528 \u9006\u306b model.conv1 \u3060\u3051\u3092\u5225\u306e\u30e2\u30c7\u30eb\u306b\u4f7f\u3063\u305f\u308a\u3082\u3067\u304d\u308b\u3002","title":"2.\u30b3\u30f3\u30dd\u30cd\u30fc\u30c8\u5358\u4f4d\u3067\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#3","text":"PyTorch Lightning \u306e Callback \u3000API\u7528\u306e\u4fbf\u5229\u306a\u51e6\u7406\u304c\u8272\u3005\u63c3\u3063\u3066\u308b\u3002 \u5fc5\u8981\u306aCallback\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5ba3\u8a00\u3057\u3066\u305d\u308c\u3089\u306e\u30ea\u30b9\u30c8\u3092\u30c8\u30ec\u30a4\u30ca\u30fc\u306b\u6e21\u3059\u3060\u3051\u3067\u4f7f\u3048\u308b \u3002 \u3053\u3053\u3067\u306f\u4e8c\u3064\u7d39\u4ecb\u3002 \u30a8\u30dd\u30c3\u30af\u6bce\u306b\u30ed\u30b9\u3092\u8868\u793a\u3059\u308b from pl_bolts.callbacks import PrintTableMetricsCallback print_callback = PrintTableMetricsCallback () trainer pl . Trainer ( callback = [ print_callback ]) trainer . fit ( model ) GAN\u306eforward\u6642\u306b\u751f\u6210\u3057\u305f\u753b\u50cf\u3092TensorBoard\u306b\u8868\u793a\u3059\u308b model . img_dim = ( 1 , 28 , 28 ) # model forward must work for sampling z = torch . rand ( batch_size , latent_dim ) img_samples = GAN ( z ) from pl_bolts.callbacks import TensorboardGenerativeModelImageSampler trainer = Trainer ( callbacks = [ TensorboardGenerativeModelImageSampler ()]) trainer . fit ( GAN )","title":"3.\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#4","text":"\u30bf\u30b9\u30af\u6bce\u306b\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304c\u307e\u3060\u6570\u304c\u5c11\u306a\u3044\u3002 \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068PyTorch\u306e\u30ed\u30b9\u95a2\u6570\u306b\u306a\u308b\u306e\u3067\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b lossfun \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3002 \u4e0b\u8a18\u306f\u7269\u4f53\u691c\u77e5\u7528\u306eGeneralizedIoU\u3002 >>> import torch >>> from pl_bolts.losses.object_detection import giou_loss >>> preds = torch . tensor ([[ 100 , 100 , 200 , 200 ]]) >>> target = torch . tensor ([[ 150 , 150 , 250 , 250 ]]) >>> giou_loss ( preds , target ) tensor ([[ 1.0794 ]]) def lossfun ( self , y , t ): # method of a network return giou_loss ( y , t )","title":"4.\u30ed\u30b9\u95a2\u6570\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/lightning_bolts/#5","text":"LightningDataModule \u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u63c3\u3063\u3066\u3044\u308b\u3002 \u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8\u3092\u76f4\u3050\u306b\u59cb\u3081\u3089\u308c\u308b\u3002\u30de\u30eb\u30c1GPU\u5bfe\u5fdc\u3002 DA\u3092\u81ea\u5206\u3067\u5909\u66f4\u3057\u305f\u308a\u3067\u304d\u308b from pl_bolts.datamodules import CIFAR10DataModule dm = CIFAR10DataModule ( 'PATH_to_download/to_load' ) dm . train_transforms = ... # \u3053\u3053\u306bCompose\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u305b\u3070\u304ak dm . test_transforms = ... dm . val_transforms = ... Numpy\u3067x,y\u3092\u6e21\u3059\u3060\u3051\u3067 LightningDataModule \u5316\u3057\u3066\u304f\u308c\u3066\u51c4\u3044\u3068\u601d\u3044\u307e\u3057\u305f\uff08\u8a9e\u5f59\u529b\uff09 >>> from sklearn.datasets import load_boston >>> from pl_bolts.datamodules import SklearnDataset ... >>> X , y = load_boston ( return_X_y = True ) >>> dataset = SklearnDataset ( X , y ) # \u30b7\u30a7\u30a4\u30d7\u304c\u3042\u3063\u3066\u308c\u3070\u306a\u3093\u3067\u3082\u6e21\u305b\u308b","title":"5.\u30c7\u30fc\u30bf\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/","text":"PyTorchVideo \u4f7f\u3044\u65b9 \u8272\u3005\u4fbf\u5229\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2 \u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u4f7f\u3046 1. \u30e2\u30c7\u30eb\u306e\u30ed\u30fc\u30c9\uff08torch hub\u7d4c\u7531\uff09 master branch\u306b\u5c02\u7528\u306e hubconf.py \u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3078\u306e\u30d1\u30b9\u3092\u8a18\u8ff0\u3057\u3066,string\u3067\u30e2\u30c7\u30eb\u3092\u6307\u5b9a\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\u3002 model_name = \"slow_r50\" path = 'path/to/directory/of/hubconf.py' model = torch . hub . load ( path , source = \"local\" , model = model_name , pretrained = True ) \u3061\u306a\u307f\u306b\u30e2\u30c7\u30eb\u306f 'pytorchvideo.models.net.Net' \u3068\u3044\u3046\u578b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u30e9\u30a4\u30c8\u30cb\u30f3\u30b0\u306b\u7d44\u307f\u8fbc\u3080\u3068\u304d\u306f\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306b\u3059\u308b\u3002 ### 2. \u5165\u529b\u52d5\u753b\u3092\u898f\u5b9a\u306e\u5f62\u306b\u3067\u304d\u308b\u69d8Transform\u3092\u6e96\u5099\u3059\u308b \u52d5\u753b\u306e\u30e2\u30c7\u30eb\u3054\u3068\u306e\u898f\u683c\u3092\u5408\u308f\u305b\u308b\u3002 slow_50 \u306f256\u56db\u65b9\u304b\u3064RGB\u304c\u6a19\u6e96\u5316\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u3001\uff11\u30a4\u30f3\u30d7\u30c3\u30c8\u304c\u4f55\u30d5\u30ec\u30fc\u30e0\u304b\u3082\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u9055\u3046\u306e\u3067\u3042\u3089\u304b\u3058\u3081\u66f8\u3044\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 \u8a73\u3057\u304f\u306f \u3053\u3061\u3089 ```python from pytorchvideo.transforms import ( ApplyTransformToKey, ShortSideScale, UniformTemporalSubsample ) side_size = 256 mean = [0.45, 0.45, 0.45] std = [0.225, 0.225, 0.225] crop_size = 256 num_frames = 8 sampling_rate = 8 frames_per_second = 30 clip_duration = (num_frames * sampling_rate)/frames_per_second transform = ApplyTransformToKey( key=\"video\", transform=Compose( [ UniformTemporalSubsample(num_frames), Lambda(lambda x: x/255.0), NormalizeVideo(mean, std), ShortSideScale( size=side_size ), CenterCropVideo(crop_size=(crop_size, crop_size)) ] ), ) ``` 3. \u52d5\u753b\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b \u9069\u5f53\u306a\u52d5\u753b\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u30a8\u30f3\u30b3\u30fc\u30c9\u3082\u4efb\u305b\u3089\u308c\u308b\u3002 .avi \u3067\u3082\u3044\u3051\u307e\u3057\u305f\u3002 \u624b\u9806\u3068\u3057\u3066\u306f 1. \u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b 2. \u79d2\u3092\u6307\u5b9a\u3057\u3066\u5207\u308a\u53d6\u308b 3. \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\u3092\u901a\u3059 from pytorchvideo.data.encoded_video import EncodedVideo sample_path = 'sample.avi' # 1 video = EncodedVideo . from_path ( sample_path ) # 2 video_cliped = video . get_clip ( start_sec = 0 , end_sec = 10 ) # 3 video_data = transform ( video_data ) 4. \u30e2\u30c7\u30eb\u306b\u5165\u529b\u3059\u308b \u5909\u63db\u3057\u305f\u52d5\u753b\u306f\u8f9e\u66f8\u578b\u306b\u306a\u3063\u3066\u3066 video \u3067\u52d5\u753b\uff08C, T, H, W\uff09 audio \u3067\u97f3\u58f0, video_name \u3067\u5143\u306e\u30d1\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002 \u30e2\u30c7\u30eb\u306f (batch_size, C, T, H, W) shape\u306etensor\u3092\u3068\u308b\u306e\u3067 input = video_data [ 'video' ] prediction = model ( input . unsqueeze ( 0 )) \u304a\u307e\u3051 Lightning\u7d44\u307f\u8fbc\u3080 \u3084\u308b\u3053\u3068\u306f\u4e8c\u70b9 model\u3092\u7d44\u307f\u8fbc\u3080 DataModule\u3092\u66f8\u304f(Transform + label\u4ed8\u4e0e) class VideoClassification ( pytorch_lightning . LightningModule ): def __init__ ( self , path ): super () . __init__ () self . model = torch . hub . load ( path , source = \"local\" , model = model_name , pretrained = True ) def configure_optimizers ( self ): return torch . optim . Adam ( self . parameters (), lr = 1e-1 ) def forward ( self , x ): return self . model ( x ) def training_step ( self , batch , batch_idx ): y = self . model ( batch [ \"video\" ]) t = batch [ \"label\" ] loss = F . cross_entropy ( y , t ) return loss from pytorchvideo.transforms import ( ApplyTransformToKey , RandomShortSideScale , RemoveKey , ShortSideScale , UniformTemporalSubsample ) from torchvision.transforms import ( Compose , Normalize , RandomCrop , RandomHorizontalFlip ) class KineticsDataModule ( pytorch_lightning . LightningDataModule ): def setup ( self ); self . train_dataset = pytorchvideo . data . Kinetics ( data_path = os . path . join ( self . _DATA_PATH , \"train.csv\" ), clip_sampler = pytorchvideo . data . make_clip_sampler ( \"random\" , self . _CLIP_DURATION ), transform = train_transform ) def train_dataloader ( self ): train_transform = Compose ( [ ApplyTransformToKey ( key = \"video\" , transform = Compose ( [ UniformTemporalSubsample ( 8 ), Normalize (( 0.45 , 0.45 , 0.45 ), ( 0.225 , 0.225 , 0.225 )), RandomShortSideScale ( min_size = 256 , max_size = 320 ), RandomCrop ( 244 ), RandomHorizontalFlip ( p = 0.5 ), ] ), ), ] ) return torch . utils . data . DataLoader ( train_dataset , batch_size = self . _BATCH_SIZE , num_workers = self . _NUM_WORKERS , )","title":"PyTorchVideo \u4f7f\u3044\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#pytorchvideo","text":"\u8272\u3005\u4fbf\u5229\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2","title":"PyTorchVideo \u4f7f\u3044\u65b9"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#_1","text":"","title":"\u8a13\u7df4\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u4f7f\u3046"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#1-torch-hub","text":"master branch\u306b\u5c02\u7528\u306e hubconf.py \u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3078\u306e\u30d1\u30b9\u3092\u8a18\u8ff0\u3057\u3066,string\u3067\u30e2\u30c7\u30eb\u3092\u6307\u5b9a\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\u3002 model_name = \"slow_r50\" path = 'path/to/directory/of/hubconf.py' model = torch . hub . load ( path , source = \"local\" , model = model_name , pretrained = True ) \u3061\u306a\u307f\u306b\u30e2\u30c7\u30eb\u306f 'pytorchvideo.models.net.Net' \u3068\u3044\u3046\u578b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u30e9\u30a4\u30c8\u30cb\u30f3\u30b0\u306b\u7d44\u307f\u8fbc\u3080\u3068\u304d\u306f\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306b\u3059\u308b\u3002 ### 2. \u5165\u529b\u52d5\u753b\u3092\u898f\u5b9a\u306e\u5f62\u306b\u3067\u304d\u308b\u69d8Transform\u3092\u6e96\u5099\u3059\u308b \u52d5\u753b\u306e\u30e2\u30c7\u30eb\u3054\u3068\u306e\u898f\u683c\u3092\u5408\u308f\u305b\u308b\u3002 slow_50 \u306f256\u56db\u65b9\u304b\u3064RGB\u304c\u6a19\u6e96\u5316\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u3001\uff11\u30a4\u30f3\u30d7\u30c3\u30c8\u304c\u4f55\u30d5\u30ec\u30fc\u30e0\u304b\u3082\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u9055\u3046\u306e\u3067\u3042\u3089\u304b\u3058\u3081\u66f8\u3044\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 \u8a73\u3057\u304f\u306f \u3053\u3061\u3089 ```python from pytorchvideo.transforms import ( ApplyTransformToKey, ShortSideScale, UniformTemporalSubsample ) side_size = 256 mean = [0.45, 0.45, 0.45] std = [0.225, 0.225, 0.225] crop_size = 256 num_frames = 8 sampling_rate = 8 frames_per_second = 30 clip_duration = (num_frames * sampling_rate)/frames_per_second transform = ApplyTransformToKey( key=\"video\", transform=Compose( [ UniformTemporalSubsample(num_frames), Lambda(lambda x: x/255.0), NormalizeVideo(mean, std), ShortSideScale( size=side_size ), CenterCropVideo(crop_size=(crop_size, crop_size)) ] ), ) ```","title":"1. \u30e2\u30c7\u30eb\u306e\u30ed\u30fc\u30c9\uff08torch hub\u7d4c\u7531\uff09"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#3","text":"\u9069\u5f53\u306a\u52d5\u753b\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u30a8\u30f3\u30b3\u30fc\u30c9\u3082\u4efb\u305b\u3089\u308c\u308b\u3002 .avi \u3067\u3082\u3044\u3051\u307e\u3057\u305f\u3002 \u624b\u9806\u3068\u3057\u3066\u306f 1. \u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b 2. \u79d2\u3092\u6307\u5b9a\u3057\u3066\u5207\u308a\u53d6\u308b 3. \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\u3092\u901a\u3059 from pytorchvideo.data.encoded_video import EncodedVideo sample_path = 'sample.avi' # 1 video = EncodedVideo . from_path ( sample_path ) # 2 video_cliped = video . get_clip ( start_sec = 0 , end_sec = 10 ) # 3 video_data = transform ( video_data )","title":"3. \u52d5\u753b\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#4","text":"\u5909\u63db\u3057\u305f\u52d5\u753b\u306f\u8f9e\u66f8\u578b\u306b\u306a\u3063\u3066\u3066 video \u3067\u52d5\u753b\uff08C, T, H, W\uff09 audio \u3067\u97f3\u58f0, video_name \u3067\u5143\u306e\u30d1\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002 \u30e2\u30c7\u30eb\u306f (batch_size, C, T, H, W) shape\u306etensor\u3092\u3068\u308b\u306e\u3067 input = video_data [ 'video' ] prediction = model ( input . unsqueeze ( 0 ))","title":"4. \u30e2\u30c7\u30eb\u306b\u5165\u529b\u3059\u308b"},{"location":"PyTorch/PyTorch%20Lightning/pytorchvideo/#lightning","text":"\u3084\u308b\u3053\u3068\u306f\u4e8c\u70b9 model\u3092\u7d44\u307f\u8fbc\u3080 DataModule\u3092\u66f8\u304f(Transform + label\u4ed8\u4e0e) class VideoClassification ( pytorch_lightning . LightningModule ): def __init__ ( self , path ): super () . __init__ () self . model = torch . hub . load ( path , source = \"local\" , model = model_name , pretrained = True ) def configure_optimizers ( self ): return torch . optim . Adam ( self . parameters (), lr = 1e-1 ) def forward ( self , x ): return self . model ( x ) def training_step ( self , batch , batch_idx ): y = self . model ( batch [ \"video\" ]) t = batch [ \"label\" ] loss = F . cross_entropy ( y , t ) return loss from pytorchvideo.transforms import ( ApplyTransformToKey , RandomShortSideScale , RemoveKey , ShortSideScale , UniformTemporalSubsample ) from torchvision.transforms import ( Compose , Normalize , RandomCrop , RandomHorizontalFlip ) class KineticsDataModule ( pytorch_lightning . LightningDataModule ): def setup ( self ); self . train_dataset = pytorchvideo . data . Kinetics ( data_path = os . path . join ( self . _DATA_PATH , \"train.csv\" ), clip_sampler = pytorchvideo . data . make_clip_sampler ( \"random\" , self . _CLIP_DURATION ), transform = train_transform ) def train_dataloader ( self ): train_transform = Compose ( [ ApplyTransformToKey ( key = \"video\" , transform = Compose ( [ UniformTemporalSubsample ( 8 ), Normalize (( 0.45 , 0.45 , 0.45 ), ( 0.225 , 0.225 , 0.225 )), RandomShortSideScale ( min_size = 256 , max_size = 320 ), RandomCrop ( 244 ), RandomHorizontalFlip ( p = 0.5 ), ] ), ), ] ) return torch . utils . data . DataLoader ( train_dataset , batch_size = self . _BATCH_SIZE , num_workers = self . _NUM_WORKERS , )","title":"\u304a\u307e\u3051 Lightning\u7d44\u307f\u8fbc\u3080"},{"location":"UofT/game_theory/","text":"# Game Theory \u307e\u3068\u3081 \u6614\u306e\u8a18\u4e8b 1 2 Substraction Game Terminal = P State connected to P state is N State connected to only N state is P Return to 2 Sum of Combinatorial Games Given two distinct games, SG function of the combination of the two games is nim sum of SG functions of each game. \\(x \\bigoplus y = 0\\) IFF \\(x = y\\) Nim-sum is commutative and associative Zero-Sum Game Solution of 2 by 2 If exists, the saddle point is the solution Otherwise, MINMAX strategy of 1 st player gives the optimal player Value of Game is the expected payoff of 1 st player Solution of 2 by M If saddle point exists, done Otherwise, try to reduce into 2 by 2 by domination If not possible, use test domination. Plot \\(M\\) lines in terms of p such that each line is the expected payoff for each column. The point which maximizes the minimum of those \\(M\\) lines is MINMAX. If M by 2, take transpose and multiply negative one. Then second player becomes first player. Or plot for each row and minimize maximum. Solution of N by N If no reduction is possible, use indifference. That assumes that all column expectation is equivalent to the value of the game. This translates the problem into solving linear equation. Use calculator. NTU 1. PNE Max of the column for first player Max of the row for second player 2. MNE Reduce to 2 by 2. Consider one's expected gain in terms of opponent's move For each case, consider the best reaction of one's move. 3. TU feasible set and NTU feasible set A feasible payoff vector, \\((v_1,v_2)\\) , is said to be Pareto optimal if the only feasible payoff vector \\((v_1\u2032 ,v_2\u2032 )\\) such that \\(v_1\u2032 \u2265 v_1\\) and \\(v_2\u2032 \u2265 v_2\\) is the vector \\((v_1\u2032 ,v_2\u2032 ) = (v_1,v_2)\\) . It is the right top edge of the set. 4. Solution of NTU Game Find safety values for each player One of NME, NPE or MINMAX strategy is the solution. TU The game is inessential if $sum(v(i)) = v(n), otherwise essential (if inessential, only Imputation is \\(v(i)\\) ) 5. Solution of TU Game \\(\u03c3\\) = max( sum of each entry of bi-matrix) \\((D_1, D_2)\\) = \\((Val(A), Val(B))\\) Optimal payoff line = \\((D_1, \u03c3 - D_2)\\) and \\((\u03c3 - D_1, D_2)\\) \\(\u03b4\\) = \\(Val(A - B)\\) \\(\u03c6\\) = \\(\u03c3+\u03b4 / 2 , \u03c3-\u03b4 / 2\\) 6. Imputation Possible distributions of \\(v(N)\\) Convert to coalitional form Find the payoff vector with \\(sum(x) = v(N)\\) and \\(x_i \\geq v(i)\\) 7. Core Subset of Imputation with \\(sum(x_S) = v(S)\\) . The core is also called Stable imputation . Other imputations not core is said to be Unstable . 8. Shapley Shapley is unique Shapley vector must satisfy Efficiency : \\(sum(\u03c6_i) = v(N)\\) Symmetry : if characteristic function is symmetric for some two players, Shapley is also equivalent. Dummy Axiom : If player \\(x\\) does not increase values of any coalition with \\(x\\) , \\(\u03c6_x = 0\\) Additivity : sum of Shapley values of two distinct games equals to Shapley of sum of two game. Calculated as Summation occurs for all coalitions including the player \\(i\\)","title":"Game theory"},{"location":"UofT/game_theory/#substraction-game","text":"Terminal = P State connected to P state is N State connected to only N state is P Return to 2","title":"Substraction Game"},{"location":"UofT/game_theory/#sum-of-combinatorial-games","text":"Given two distinct games, SG function of the combination of the two games is nim sum of SG functions of each game. \\(x \\bigoplus y = 0\\) IFF \\(x = y\\) Nim-sum is commutative and associative","title":"Sum of Combinatorial Games"},{"location":"UofT/game_theory/#zero-sum-game","text":"","title":"Zero-Sum Game"},{"location":"UofT/game_theory/#solution-of-2-by-2","text":"If exists, the saddle point is the solution Otherwise, MINMAX strategy of 1 st player gives the optimal player Value of Game is the expected payoff of 1 st player","title":"Solution of 2 by 2"},{"location":"UofT/game_theory/#solution-of-2-by-m","text":"If saddle point exists, done Otherwise, try to reduce into 2 by 2 by domination If not possible, use test domination. Plot \\(M\\) lines in terms of p such that each line is the expected payoff for each column. The point which maximizes the minimum of those \\(M\\) lines is MINMAX. If M by 2, take transpose and multiply negative one. Then second player becomes first player. Or plot for each row and minimize maximum.","title":"Solution of 2 by M"},{"location":"UofT/game_theory/#solution-of-n-by-n","text":"If no reduction is possible, use indifference. That assumes that all column expectation is equivalent to the value of the game. This translates the problem into solving linear equation. Use calculator.","title":"Solution of N by N"},{"location":"UofT/game_theory/#ntu","text":"","title":"NTU"},{"location":"UofT/game_theory/#1-pne","text":"Max of the column for first player Max of the row for second player","title":"1. PNE"},{"location":"UofT/game_theory/#2-mne","text":"Reduce to 2 by 2. Consider one's expected gain in terms of opponent's move For each case, consider the best reaction of one's move.","title":"2. MNE"},{"location":"UofT/game_theory/#3-tu-feasible-set-and-ntu-feasible-set","text":"A feasible payoff vector, \\((v_1,v_2)\\) , is said to be Pareto optimal if the only feasible payoff vector \\((v_1\u2032 ,v_2\u2032 )\\) such that \\(v_1\u2032 \u2265 v_1\\) and \\(v_2\u2032 \u2265 v_2\\) is the vector \\((v_1\u2032 ,v_2\u2032 ) = (v_1,v_2)\\) . It is the right top edge of the set.","title":"3. TU feasible set and NTU feasible set"},{"location":"UofT/game_theory/#4-solution-of-ntu-game","text":"Find safety values for each player One of NME, NPE or MINMAX strategy is the solution.","title":"4. Solution of NTU Game"},{"location":"UofT/game_theory/#tu","text":"The game is inessential if $sum(v(i)) = v(n), otherwise essential (if inessential, only Imputation is \\(v(i)\\) )","title":"TU"},{"location":"UofT/game_theory/#5-solution-of-tu-game","text":"\\(\u03c3\\) = max( sum of each entry of bi-matrix) \\((D_1, D_2)\\) = \\((Val(A), Val(B))\\) Optimal payoff line = \\((D_1, \u03c3 - D_2)\\) and \\((\u03c3 - D_1, D_2)\\) \\(\u03b4\\) = \\(Val(A - B)\\) \\(\u03c6\\) = \\(\u03c3+\u03b4 / 2 , \u03c3-\u03b4 / 2\\)","title":"5. Solution of TU Game"},{"location":"UofT/game_theory/#6-imputation","text":"Possible distributions of \\(v(N)\\) Convert to coalitional form Find the payoff vector with \\(sum(x) = v(N)\\) and \\(x_i \\geq v(i)\\)","title":"6. Imputation"},{"location":"UofT/game_theory/#7-core","text":"Subset of Imputation with \\(sum(x_S) = v(S)\\) . The core is also called Stable imputation . Other imputations not core is said to be Unstable .","title":"7. Core"},{"location":"UofT/game_theory/#8-shapley","text":"Shapley is unique Shapley vector must satisfy Efficiency : \\(sum(\u03c6_i) = v(N)\\) Symmetry : if characteristic function is symmetric for some two players, Shapley is also equivalent. Dummy Axiom : If player \\(x\\) does not increase values of any coalition with \\(x\\) , \\(\u03c6_x = 0\\) Additivity : sum of Shapley values of two distinct games equals to Shapley of sum of two game. Calculated as Summation occurs for all coalitions including the player \\(i\\)","title":"8. Shapley"},{"location":"UofT/note/","text":"# CSC413 MATOME 1. Non-deep Learning AI models Linear reg Logistic reg Feature mapping Lack of complexity. Can not fit non-convex set. (Non-linearity) Dataset needs to be manifolding. 1-1. Optimization in High Dimensional space Convexity : Linear regression and logistic regressions are convex i.e. has exactly one minima Saddle Points : Minima with respect to some direction but not global minima Plateaux : Flat surface. Usually occurs due to saturated unit a.k.a dead unit Ravines : Mixture of high and small gradients. Must be dealt with Momentum def gradient_decent ( x , t ): b_ = 0 w_ = 0 y = forward ( x ) for i in range ( iterations ): b_ += - 2 / N * ( t - y ) * a w_ += - 2 / N * ( t - y ) * x * a return 2. MLP Basic neural network. Composition of linear transformations Can be used as both embedder and classifier The more layers, the higher risk of overfitting Not convext hence has multiple minima Unlimited complexity under the universal approximation theorems which asserts that MLP with infinite number of neurons can regress any linear function. Dropout: Enabled only on training 2-1. Language Modeling N-gram : Constract a table of all possible inputs and probabilities of all possible outputs GloVe : Embedding space that relies on Distributional Hypothesis and built co-occurrence matrix that indicates wether two words appears in the similar context or not. 2-2. Training Neural Network Genelarization : Increase test accuracy Data Augmentation : 3. CNN Convert 2d image into 1d vector along channel dimension High robustness with various size of images Classification is done by MLP Affine layers Still overfits without skip-connection and residual blocks BatchNorm : Channel wise normalization increasing robustness Loss function : Cross Entropy in classification, MSE in regression AlexNet, VGG, ResNet, U-net Major models used for fine-tuning and transfer learning. Transfer learning usually freezes Conv layers and only train FC layers while fine-tuning trains all parameters from scratch. 4. RNN Some major architectures are LSTM MLP GRU MLP VAE RCNN ConvLSTM LSTM layer has 4 logic gates while GRU has 3 LSTM GATES 4-1 Encoder-Decoder Model (Seq2Seq) Context Vector : Dimensional vector representing context of the sentece. The dimension is equivalent to the number of hidden state. 4-2. VAE VAE is the first generative image model Encoder learns a mapping from input image to gaussian parameters mean and variance Generator takes a sampling as an input from normal distribution with given gaussian parameters by the encoder. If regression, generator outputs new gaussian parameters otherwise output an image depending on the task Loss function The training of VAE is equivalent to MAP with respect to decoder's log likelihood \\[ \\begin{eqnarray} \\log p_\\theta(x) &=& \\log \\int p_\\theta(x, z) dz \\\\ &=& \\log \\int q_\\varphi(z|x)\\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &\\geq& \\int q_\\varphi(z|x) \\log \\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &=& L(x; \\varphi, \\theta) \\end{eqnarray} \\] The difference between LHS and RHS is KL-divergence \\[ \\begin{eqnarray} \\log p_\\theta(x) \u2013 L(x; \\varphi, \\theta) &=& \\log p_\\theta(x) \u2013 \\int q_\\varphi(z|x) \\log \\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &=& \\log p_{\\theta}(x) \\int q_{\\varphi} (z|x) dz \u2013 \\int q_{\\varphi} (z|x) \\log \\frac{p_{\\theta} (z|x)p(x)}{q_{\\varphi}(z|x)} dz \\\\ &=& \\int q_\\varphi (z|x) \\{ \\log p_{\\theta}(x) \u2013 \\log p_\\theta(z|x) \u2013 \\log p_{\\theta}(x) + \\log q_\\varphi (z|x) \\} dz\\\\ &=& \\int q_\\varphi (z|x) \\{ \\log q_\\varphi (z|x) \u2013 \\log p_\\theta(z|x) \\} dz\\\\ &=& KL[q_\\varphi (z|x) \\| p_\\theta (z|x)] \\end{eqnarray} \\] This is equivalent to maximizing the evidence lower bound. $$ \\begin{eqnarray} E_{q_\\varphi (z|x)}[\\log p_\\theta (x|z)] &=& E_{q_\\varphi (z|x)}[\\log \\prod_l^{L} f(z_l)^x (1 \u2013 f(z_l))^{(1 \u2013 x)}] \\ &=& \\frac{1}{L} \\sum_{l=1}^L { x \\log f(z_l) + (1 \u2013 x) \\log (1 \u2013 f(z_l)) } \\end{eqnarray} $$ Translation from first line to second line is called monte carlo estimation . Minimizing the difference stricts the encoder's divergence. 5. GAN Composition of generator and discriminator MLPs. It is represented as a two-player minimax game. Modified loss \\[minEz [\u2212logD\u03b8(G\u03c6(z))]\\] 5-1. Cycle GAN GAN with extra MLP after","title":"Note"},{"location":"UofT/note/#1-non-deep-learning-ai-models","text":"Linear reg Logistic reg Feature mapping Lack of complexity. Can not fit non-convex set. (Non-linearity) Dataset needs to be manifolding.","title":"1. Non-deep Learning AI models"},{"location":"UofT/note/#1-1-optimization-in-high-dimensional-space","text":"Convexity : Linear regression and logistic regressions are convex i.e. has exactly one minima Saddle Points : Minima with respect to some direction but not global minima Plateaux : Flat surface. Usually occurs due to saturated unit a.k.a dead unit Ravines : Mixture of high and small gradients. Must be dealt with Momentum def gradient_decent ( x , t ): b_ = 0 w_ = 0 y = forward ( x ) for i in range ( iterations ): b_ += - 2 / N * ( t - y ) * a w_ += - 2 / N * ( t - y ) * x * a return","title":"1-1. Optimization in High Dimensional space"},{"location":"UofT/note/#2-mlp","text":"Basic neural network. Composition of linear transformations Can be used as both embedder and classifier The more layers, the higher risk of overfitting Not convext hence has multiple minima Unlimited complexity under the universal approximation theorems which asserts that MLP with infinite number of neurons can regress any linear function. Dropout: Enabled only on training","title":"2. MLP"},{"location":"UofT/note/#2-1-language-modeling","text":"N-gram : Constract a table of all possible inputs and probabilities of all possible outputs GloVe : Embedding space that relies on Distributional Hypothesis and built co-occurrence matrix that indicates wether two words appears in the similar context or not.","title":"2-1. Language Modeling"},{"location":"UofT/note/#2-2-training-neural-network","text":"Genelarization : Increase test accuracy Data Augmentation :","title":"2-2. Training Neural Network"},{"location":"UofT/note/#3-cnn","text":"Convert 2d image into 1d vector along channel dimension High robustness with various size of images Classification is done by MLP Affine layers Still overfits without skip-connection and residual blocks BatchNorm : Channel wise normalization increasing robustness Loss function : Cross Entropy in classification, MSE in regression","title":"3. CNN"},{"location":"UofT/note/#alexnet-vgg-resnet-u-net","text":"Major models used for fine-tuning and transfer learning. Transfer learning usually freezes Conv layers and only train FC layers while fine-tuning trains all parameters from scratch.","title":"AlexNet, VGG, ResNet, U-net"},{"location":"UofT/note/#4-rnn","text":"Some major architectures are LSTM MLP GRU MLP VAE RCNN ConvLSTM LSTM layer has 4 logic gates while GRU has 3 LSTM GATES","title":"4. RNN"},{"location":"UofT/note/#4-1-encoder-decoder-model-seq2seq","text":"Context Vector : Dimensional vector representing context of the sentece. The dimension is equivalent to the number of hidden state.","title":"4-1 Encoder-Decoder Model (Seq2Seq)"},{"location":"UofT/note/#4-2-vae","text":"VAE is the first generative image model Encoder learns a mapping from input image to gaussian parameters mean and variance Generator takes a sampling as an input from normal distribution with given gaussian parameters by the encoder. If regression, generator outputs new gaussian parameters otherwise output an image depending on the task","title":"4-2. VAE"},{"location":"UofT/note/#loss-function","text":"The training of VAE is equivalent to MAP with respect to decoder's log likelihood \\[ \\begin{eqnarray} \\log p_\\theta(x) &=& \\log \\int p_\\theta(x, z) dz \\\\ &=& \\log \\int q_\\varphi(z|x)\\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &\\geq& \\int q_\\varphi(z|x) \\log \\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &=& L(x; \\varphi, \\theta) \\end{eqnarray} \\] The difference between LHS and RHS is KL-divergence \\[ \\begin{eqnarray} \\log p_\\theta(x) \u2013 L(x; \\varphi, \\theta) &=& \\log p_\\theta(x) \u2013 \\int q_\\varphi(z|x) \\log \\frac{p_\\theta(x, z)}{q_\\varphi(z|x)} dz \\\\ &=& \\log p_{\\theta}(x) \\int q_{\\varphi} (z|x) dz \u2013 \\int q_{\\varphi} (z|x) \\log \\frac{p_{\\theta} (z|x)p(x)}{q_{\\varphi}(z|x)} dz \\\\ &=& \\int q_\\varphi (z|x) \\{ \\log p_{\\theta}(x) \u2013 \\log p_\\theta(z|x) \u2013 \\log p_{\\theta}(x) + \\log q_\\varphi (z|x) \\} dz\\\\ &=& \\int q_\\varphi (z|x) \\{ \\log q_\\varphi (z|x) \u2013 \\log p_\\theta(z|x) \\} dz\\\\ &=& KL[q_\\varphi (z|x) \\| p_\\theta (z|x)] \\end{eqnarray} \\] This is equivalent to maximizing the evidence lower bound. $$ \\begin{eqnarray} E_{q_\\varphi (z|x)}[\\log p_\\theta (x|z)] &=& E_{q_\\varphi (z|x)}[\\log \\prod_l^{L} f(z_l)^x (1 \u2013 f(z_l))^{(1 \u2013 x)}] \\ &=& \\frac{1}{L} \\sum_{l=1}^L { x \\log f(z_l) + (1 \u2013 x) \\log (1 \u2013 f(z_l)) } \\end{eqnarray} $$ Translation from first line to second line is called monte carlo estimation . Minimizing the difference stricts the encoder's divergence.","title":"Loss function"},{"location":"UofT/note/#5-gan","text":"Composition of generator and discriminator MLPs. It is represented as a two-player minimax game. Modified loss \\[minEz [\u2212logD\u03b8(G\u03c6(z))]\\]","title":"5. GAN"},{"location":"UofT/note/#5-1-cycle-gan","text":"GAN with extra MLP after","title":"5-1. Cycle GAN"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/","text":"\u6a5f\u68b0\u5b66\u7fd2\u7528\u8a9e\u8f9e\u5178 DNN CNN(Convolution Neural Network): \u901a\u5e38\u306eNeural Network\u306bConvolution\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3002\u3053\u3053\u3067\u306f\u3001Convolution\u3001\u7573\u307f\u8fbc\u307f\u3068\u306f\u4e00\u4f53\u306a\u3093\u306a\u306e\u304b\u3001\u3068\u3044\u3046\u70b9\u3068\u3001\u306a\u305c\u305d\u308c\u304c\u753b\u50cf\u8a8d\u8b58\u306b\u6709\u52b9\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002 CNN\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u9818\u57df\u306e\u60c5\u5831\u3092\u7573\u307f\u8fbc\u3093\u3067\u4f5c\u6210\u3059\u308bConvolution Layer\u3092\u5c0e\u5165\u3057\u305f\u3001Neural Network\u306e\u3053\u3068\u3067\u3042\u308b Convolution Layer\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u79fb\u52d5\u3055\u305b\u306a\u304c\u3089\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u4f5c\u6210\u3057\u3001\u30d5\u30a3\u30eb\u30bf\u306e\u6570\u3060\u3051\u4f5c\u6210\u3055\u308c\u308b\u3002\u3053\u308c\u3092\u91cd\u306d\u3066\u6d3b\u6027\u5316\u95a2\u6570(ReLU\u7b49)\u3067\u7e4b\u3044\u3067\u3044\u304f\u3053\u3068\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u3002 \u7573\u307f\u8fbc\u307f\u306b\u3088\u308a\u70b9\u3067\u306f\u306a\u304f\u9818\u57df\u30d9\u30fc\u30b9\u3067\u306e\u7279\u5fb4\u62bd\u51fa\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u753b\u50cf\u306e\u79fb\u52d5\u3084\u5909\u5f62\u306a\u3069\u306b\u9811\u5065\u306b\u306a\u308b\u3002\u307e\u305f\u3001\u30a8\u30c3\u30b8\u306a\u3069\u9818\u57df\u30d9\u30fc\u30b9\u3067\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u7279\u5fb4\u62bd\u51fa\u3082\u53ef\u80fd\u306b\u306a\u308b\u3002 RNN\uff08Recurrent Neural Network\uff09:CNN\u304c\u6271\u3046\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u4e8c\u6b21\u5143\u306e\u77e9\u5f62\u30c7\u30fc\u30bf\u3067\u3057\u305f\u304c\u3001\u97f3\u58f0\u30c7\u30fc\u30bf\u306f\u53ef\u5909\u9577\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3067\u3059\u3002\u3053\u306e\u53ef\u5909\u9577\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u6271\u3046\u305f\u3081\u3001\u96a0\u308c\u5c64\u306e\u5024\u3092\u518d\u3073\u96a0\u308c\u5c64\u306b\u5165\u529b\u3059\u308b\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u306b\u3057\u305f\u306e\u304c\u3001RNN\uff08Recurrent Neural Network\uff09\u3067\u3059\u3002\u3053\u306eRNN\u306b\u306f\u3001\u9577\u6642\u9593\u524d\u306e\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u8aa4\u5dee\u304c\u6d88\u6ec5\u3057\u305f\u308a\u6f14\u7b97\u91cf\u304c\u7206\u767a\u3059\u308b\u306a\u3069\u306e\u554f\u984c\u304c\u3042\u308a\u3001\u77ed\u6642\u9593\u306e\u30c7\u30fc\u30bf\u3057\u304b\u51e6\u7406\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 LSTM:LSTM\uff08Long Short-Term Memory\uff09\u306fRNN\u306e\u6b20\u70b9\u3092\u89e3\u6d88\u3057\u3001\u9577\u671f\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5f37\u529b\u306a\u30e2\u30c7\u30eb\u3067\u3059\u3002\u767a\u8868\u3055\u308c\u305f\u306e\u306f1997\u5e74\u3068\u304b\u306a\u308a\u524d\u3067\u3059\u304c\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u6d41\u884c\u3068\u5171\u306b\u3001\u6700\u8fd1\u6025\u901f\u306b\u6ce8\u76ee\u3055\u308c\u59cb\u3081\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306b\u5fdc\u7528\u3055\u308c\u308b\u3001\u5927\u304d\u306a\u6210\u679c\u3092\u3042\u3052\u59cb\u3081\u3066\u3044\u307e\u3059\u3002 \u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\uff08\u81ea\u5df1\u7b26\u53f7\u5316\u5668\uff09:\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u6838\u306f\u6b21\u5143\u524a\u6e1b\u3067\u3042\u308b\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e00\u7a2e\u3067\u3001\u60c5\u5831\u91cf\u3092\u5c0f\u3055\u304f\u3057\u305f\u7279\u5fb4\u8868\u73fe\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306b\u3042\u308b\u3002\u5727\u7e2e\u3057\u3066\u3044\u304f\u904e\u7a0b\u3092\u30a8\u30f3\u30b3\u30fc\u30c0\u3068\u547c\u3073\u3001\u5fa9\u5143\u3059\u308b\u904e\u7a0b\u3092\u30c7\u30b3\u30fc\u30c0\u3068\u547c\u3076\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u7528\u3044\u3066\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u91cd\u307f\u306e\u521d\u671f\u5024\u3092\u4e88\u3081\u63a8\u5b9a\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u4e8b\u524d\u5b66\u7fd2(pre-training)\u3068\u3044\u3046\u304c\u3001\u3082\u3046\u4eca\u3067\u306f\u5b9f\u7528\u7684\u306a\u7528\u9014\u3068\u3057\u3066\u306f\u3081\u3063\u305f\u306b\u4f7f\u308f\u308c\u3066\u306a\u3044\u3089\u3057\u3044\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306f\u6b21\u5143\u5727\u7e2e\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u304c\u3001\u5165\u529b\u3068\u51fa\u529b\u3092\u540c\u3058\u306b\u3059\u308b\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u5bfe\u8c61\u306e\u7279\u5fb4\u8868\u73fe\u3092\u81ea\u5df1\u5b66\u7fd2\u3057\u3066\u3057\u307e\u3046\u3068\u3053\u308d\u304c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u611f\u3058\u3055\u305b\u308b\u3002\u305d\u3057\u3066\u3001\u4eca\u306f\u751f\u6210\u30e2\u30c7\u30eb\u3067\u3082\u52b9\u679c\u3092\u767a\u63ee\u3057\u306f\u3058\u3081\u3066\u3044\u308b\u3002 GAN: \u6700\u65b0\u306e\u751f\u6210\u30e2\u30c7\u30eb\u3067\u3042\u308bGAN\uff08Generative Adversarial Network\uff09\u306f\u3001\u975e\u5e38\u306b\u6ce8\u76ee\u3092\u96c6\u3081\u3066\u3044\u308b\u624b\u6cd5\u3067\u3059\u3002GAN\u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001\u305f\u3068\u3048\u8a71\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\u56f3\u306e\u30a4\u30e9\u30b9\u30c8\u306e\u3088\u3046\u306b\u3001\u30cb\u30bb\u672d\u9020\u308a\u306e\u507d\u9020\u8005\u3068\u8b66\u5bdf\u5b98\u306e2\u540d\u306e\u767b\u5834\u4eba\u7269\u304c\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u507d\u9020\u8005\u306f\u3001\u672c\u7269\u306e\u7d19\u5e63\u3068\u4f3c\u305f\u30cb\u30bb\u672d\u3092\u9020\u308a\u307e\u3059\u3002\u8b66\u5bdf\u5b98\u306f\u3001\u30cb\u30bb\u672d\u3092\u898b\u7834\u308d\u3046\u3068\u3057\u307e\u3059\u3002\u4e0b\u624b\u306a\u30cb\u30bb\u672d\u306f\u7c21\u5358\u306b\u8b66\u5bdf\u5b98\u306b\u898b\u7834\u3089\u308c\u307e\u3059\u304c\u3001\u507d\u9020\u8005\u306e\u8155\u304c\u4e0a\u304c\u3063\u3066\u7cbe\u5de7\u306a\u30cb\u30bb\u672d\u306b\u306a\u3063\u3066\u3044\u304f\u3068\u3001\u8b66\u5bdf\u5b98\u3082\u306a\u3093\u3068\u304b\u30cb\u30bb\u672d\u3092\u898b\u7834\u308d\u3046\u3068\u9811\u5f35\u3063\u3066\u898b\u5206\u3051\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u304a\u4e92\u3044\u306b\u5207\u78cb\u7422\u78e8\u3057\u3066\u3044\u304f\u3068\u3001\u6700\u7d42\u7684\u306b\u306f\u30cb\u30bb\u672d\u304c\u672c\u7269\u306e\u7d19\u5e63\u3068\u533a\u5225\u304c\u3064\u304b\u306a\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002 SNN(Spiking Neural Network):\u5f93\u6765\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u7570\u306a\u308a\u767a\u706b\u983b\u5ea6\u3067\u306f\u306a\u304f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5185\u90e8\u96fb\u4f4d\u306b\u6ce8\u76ee\u3057\u305f\u30e2\u30c7\u30eb\u3002\u30a2\u30ca\u30ed\u30b0\u91cf\u3092\u30d1\u30eb\u30b9\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u751f\u4f53\u6a21\u5023\u306e\u5fe0\u5b9f\u5ea6\u304c\u9ad8\u3044\u3002\u975e\u540c\u671f\u52d5\u4f5c\u306a\u306e\u3067\u9ad8\u901f\u51e6\u7406\u304c\u8ab2\u984c\u3002 NNA(Neural Network Accelerator): \u5c02\u7528HW\u3002\u57fa\u672c\u884c\u5217\u7a4d\u548c\u7b97\u306e\u9ad8\u901f\u5316\u3002 \u6a5f\u68b0\u5b66\u7fd2FW\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea PyTorch: Define-by-Run \u3067\u52d5\u7684\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u3059\u308b\u30d1\u30e9\u30c0\u30a4\u30e0\u3002 PyTorch Lightning: PyTorch\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066PyTorch\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u91cf\u3092\u5927\u5e45\u306b\u524a\u6e1b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002 Caffe: [C++(python,matlab\u3082\u53ef\u80fd?)]. \u753b\u50cf\u8a8d\u8b58\u306b\u5411\u3044\u3066\u3044\u308b\uff1fC++\u3067\u5b9f\u88c5\u3055\u308c\u3001GPU\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u9ad8\u901f\u306a\u8a08\u7b97\u51e6\u7406\u304c\u53ef\u80fd\u3002Caffe is a community\u3000\u3068\u3044\u3046\u30ad\u30e3\u30c3\u30c1\u30b3\u30d4\u30fc\u3082\u3042\u308b\u307b\u3069\u3001\u305d\u306e\u958b\u767a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc\u304c\u6d3b\u767a\u306bgithub\u3092\u66f4\u65b0\u3057\u3066\u3044\u305f\u308a\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3082\u591a\u304f\u521d\u5fc3\u8005\u306b\u63a8\u5968\u3055\u308c\u308b\u3002\u5927\u898f\u6a21\u753b\u50cf\u8a8d\u8b58\u306e\u30b3\u30f3\u30c6\u30b9\u30c8ILSVRC\u30672012\u5e74\u306b1\u4f4d\u3068\u306a\u3063\u305f\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u753b\u50cf\u5c3e\u5206\u985e\u30e2\u30c7\u30eb\u304c\u3059\u3050\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002Caffe\u306f\u3001\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5927\u5b66\u30d0\u30fc\u30af\u30ec\u30fc\u6821\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u304a\u3088\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u7814\u7a76\u30bb\u30f3\u30bf\u30fc\u3067\u3042\u308bBVLC\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3002\u30e4\u30d5\u30fc\u30b8\u30e3\u30d1\u30f3\u306f2014\u5e746\u6708\u304b\u3089\u540c\u30bb\u30f3\u30bf\u30fc\u306e\u30b9\u30dd\u30f3\u30b5\u30fc\u306b\u306a\u3063\u3066\u3044\u3066\u3001Caffe\u306e\u958b\u767a\u3092\u542b\u3081\u305f\u30bb\u30f3\u30bf\u30fc\u306e\u7814\u7a76\u306e\u652f\u63f4\u3092\u884c\u3063\u3066\u3044\u308b\u3002 Caffe2: C++.Facebook?\u3000Caffe\u306f\u3001\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5927\u5b66\u30d0\u30fc\u30af\u30ec\u30fc\u6821\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u304a\u3088\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u7814\u7a76\u30bb\u30f3\u30bf\u30fc\u3067\u3042\u308bBVLC\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3002 Chainer: [Python].\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a18\u8ff0\u306b\u7279\u5316\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\u30d7\u30ea\u30d5\u30a1\u30fc\u30c9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u793e\u306e\u65e5\u672c\u7523\u3067\u3042\u308a\u3001\u975e\u5e38\u306b\u6271\u3044\u3084\u3059\u3044\u8a18\u8ff0\u4f53\u7cfb\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002Define by Run\u306b\u3088\u3063\u3066\u67d4\u8edf\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u3001\u6700\u3082\u5927\u304d\u306a\u7279\u5fb4\u3002Python\u3060\u304c\u3001\u8a08\u7b97\u306e\u51e6\u7406\u306fnumpy\uff08C\u8a00\u8a9e\u3067\u306e\u5b9f\u88c5\uff09\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u308b\u3002\u4e3b\u306a\u9700\u8981\u306f\u56fd\u5185\u306e\u307f\u3002\u65e5\u672c\u88fd\u3089\u3057\u304f\u7701\u30e1\u30e2\u30ea\u6307\u5411\uff1f Keras: \u2605TensorFlow\u306e\u4e0a\u4f4dAPI\u306b\u7d71\u5408\u3055\u308c\u308b?\u2605 \u5c64\u3092\u305f\u3060\u305f\u3060\u7a4d\u307f\u91cd\u306d\u3066\u3044\u304f\u3060\u3051\u3068\u3044\u3046\u3001\u3068\u3093\u3067\u3082\u306a\u304f\u7c21\u5358\u306a\u5b9f\u88c5\u304c\u53ef\u80fd\u3067\u3059\u3002Keras\u306e\u767b\u5834\u306b\u3088\u308a\u3001Chainer\u3092\u4f7f\u3063\u3066\u3044\u305f\u4eba\u305f\u3061\u304c\u4e00\u6c17\u306b\u6d41\u308c\u3066\u3044\u3063\u305f\u5370\u8c61\u3055\u3048\u3042\u308a\u307e\u3059\u3002Keras\u306f\u300cTheano\u300d\u3084\u300cTensorFlow\u300d\u306e\u3088\u3046\u306a\u30c6\u30f3\u30bd\u30eb\u3092\u9ad8\u901f\u8a08\u7b97\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066\u767b\u5834\u3057\u307e\u3057\u305f\u3002\u8a18\u8ff0\u3092\u7c21\u4fbf\u5316\u3059\u308b\u306e\u304c\u5f79\u5272\u3067\u3042\u308b\u305f\u3081\u3001\u7c21\u5358\u306b\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u306f\u5f53\u305f\u308a\u524d\u3068\u8a00\u3048\u3070\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u7c21\u5358\u306a\u3060\u3051\u3067\u306a\u304f\u3001\u5b66\u7fd2\u306e\u30b3\u30fc\u30c9\u3082\u3001\u5b66\u7fd2\u56de\u6570\u306a\u3069\u306e\u6761\u4ef6\u3092\u5f15\u6570\u306b\u305f\u3063\u305f\u4e00\u884c\u3067\u5b9f\u88c5\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002 TensorFlow :[Python/C++].\u5b9f\u969b\u306b\u306f\u591a\u6b21\u5143\u914d\u5217\u306e\u8a08\u7b97\u3092\u52b9\u7387\u5316\u3057\u3001\u8a08\u7b97\u30b0\u30e9\u30d5\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304cTensorFlow\u306e\u5f79\u5272\u3067\u3059\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u8a18\u8ff0\u3067\u304d\u308b\u305f\u3081\u3001\u5f53\u7136TensorFlow\u304c\u6df1\u5c64\u5b66\u7fd2\u304c\u5927\u6d3b\u8e8d\u3059\u308b\u306e\u306f\u7591\u3044\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u5b9f\u969b\u306b\u306f\u3001\u6df1\u5c64\u5b66\u7fd2\u306b\u504f\u3063\u305f\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u5e83\u304f\u4e00\u822c\u7684\u306a\u8a08\u7b97\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6df1\u5c64\u5b66\u7fd2\u306e\u767a\u5c55\u306b\u3088\u3063\u3066\u3001TensorFlow\u5074\u3082\u3001\u6df1\u5c64\u5b66\u7fd2\u306e\u5b9f\u88c5\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3079\u304f\u69d8\u3005\u306a\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a18\u8ff0\u306e\u3057\u3084\u3059\u3055\u3068\u3044\u3046\u70b9\u306b\u304a\u3044\u3066\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u52dd\u3063\u3066\u3044\u305f\u304b\u3068\u3044\u3048\u3070\u305d\u3046\u3067\u3082\u7121\u3044\u3068\u3044\u3046\u306e\u304c\u4eca\u307e\u3067\u306e\u5370\u8c61\u3067\u3057\u305f\u3002Define and Run\u306e\u305f\u3081\u3001\u5b66\u7fd2\u4e2d\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u5909\u66f4\u4e0d\u53ef\u304c\u30c7\u30e1\u30ea\u30c3\u30c8\u3002GPU/\u30e1\u30e2\u30ea\u3092\u3042\u308b\u3060\u3051\u4f7f\u3046\u306e\u3067\u91cd\u3044\uff1f Theano: [Python] \u30e2\u30f3\u30c8\u30ea\u30aa\u30fc\u30eb\u5927\u5b66. \u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u4ed6\u306b\u300c\u884c\u5217\u6f14\u7b97\u300d\u300c\u5b9f\u884c\u6642\u306bC\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u300d\u300c\u81ea\u52d5\u5fae\u5206\u300d\u300cGPU\u51e6\u7406(\u8981CUDA)\u300d\u3082\u3042\u308a\u3001\u30b1\u30fc\u30b9\u306b\u3088\u3063\u3066\u306f\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u300cNumpy\u300d\u3088\u308a\u3082\u9ad8\u901f\u306b\u8a08\u7b97\u3067\u304d\u308b\u3002Deep learning \u306b\u95a2\u3059\u308bTutorial\u306e\u91cf\u304c\u3068\u3066\u3082\u591a\u3044\u3002Theano\u81ea\u4f53\u306f\u81ea\u52d5\u504f\u5fae\u5206\u6a5f\u80fd\u30fbGPU\u5bfe\u5fdc\u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Deep learning\u5c02\u7528\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u3044\u3002\u81ea\u5206\u3067\u7406\u8ad6\u304b\u3089\u7406\u89e3\u3057\u3066Scratch\u3067\u5b9f\u88c5\u3057\u305f\u3044\u4eba\u306b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b\u3002Theano\u3092\u30d9\u30fc\u30b9\u306b\u958b\u767a\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044\u3088\u3046\u3060\u3002 TensorFlow XLA: XLA (Accelerated Linear Algebra \u76f4\u8a33\u3059\u308c\u3070\u3001\u52a0\u901f\u3055\u308c\u305f\u7dda\u5f62\u4ee3\u6570) \u3002\u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u6210\u3057\u305f TensorFlow \u30b0\u30e9\u30d5\u3092 JIT \u30b3\u30f3\u30d1\u30a4\u30eb\u6280\u8853\u306b\u3088\u308a\u5b9f\u884c\u6642\u306b\u5206\u6790\u3057\u307e\u3059\u3002\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u304a\u3051\u308b\u5b9f\u969b\u306e\u6b21\u5143\u3084\u578b\u306b\u5fdc\u3058\u3066\u7279\u5316\u3057\u305f\u30b0\u30e9\u30d5\u3092\u3092\u751f\u6210\u3057\u3001\u8907\u6570\u306e\u6f14\u7b97\u3092\u307e\u3068\u3081\u3066\u3001CPU \u3084 GPU\u3001\u30ab\u30b9\u30bf\u30e0 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\uff08Google \u306e TPU \u306a\u3069\uff09\u306a\u3069\u3067\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3067\u304d\u308b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002tfcompile\u3092\u4f7f\u3063\u3066TensorFlow\u8868\u8a18\u3092CPU\u306e\u5b9f\u884c\u30b3\u30fc\u30c9(TensorFlow Runtime\u4e0d\u8981)\u306b\u5909\u63db\u3067\u304d\u308b\u3002 cuDNN:NVIDIA\u304c\u516c\u958b\u3057\u3066\u3044\u308bDeep Learning\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea core ML: Apple ARMComputeLibrary sonnet: DeepMind\u793e\u306eTensorFlow-based neural network library Protocol Buffers: Node\u9593\u306e\u30c7\u30fc\u30bf\u4ea4\u63db\u306b\u4f7f\u308f\u308c\u308b\u3002\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u308b\u3002NN\u306e\u30c7\u30fc\u30bf\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u308b\u3002tflite\u306fFlatBuffers\u3089\u3057\u3044\u3002 ONNX(Open Neural Network Exchange): AI \u30e2\u30c7\u30eb\u306e\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8.Microsoft\u3068Facebook\u304c\u63d0\u6848\u3002tensorflow\u3078\u306f\u30b3\u30f3\u30d0\u30fc\u30bf\u5bfe\u5fdc\u3002\u5b66\u7fd2\u6e08\u30c7\u30fc\u30bf\u306f\u542b\u307e\u306a\u3044\uff1f\uff1f\uff1f NNEF\uff08Neural Network Exchange Format\uff09: Khronos Group\u304c2017/12/25\u306b1.0(\u66ab\u5b9a\u4ed5\u69d8)\u3092\u767a\u8868\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306e\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002ONNX\u3068\u306e\u9055\u3044\u306f\u30c6\u30ad\u30b9\u30c8\u3068\u975e\u55b6\u5229\u56e3\u4f53\u4e3b\u5c0e\uff1fOpenVX\u3068\u3082\u9023\u643a\u3002 OpenVX: Khronos Group\u3002\u753b\u50cf\u8a8d\u8b58\u306eAPI\u3078\u306e\u6a19\u6e96\u5316\u3002OpenXR\u3068\u5171\u306bVR, Vision, NN\u95a2\u9023\u3002 NHWC: Num_samples x Height x Width x Channels\u306eData formats, NHWC is the TensorFlow default and NCHW is the optimal format to use when training on NVIDIA GPUs using cuDNN. \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7684\u306b\u306f\u3001NHWC\u3068NCHW\u306e\u4e21\u5bfe\u5fdc\u304c\u671b\u307e\u3057\u3044\uff1f \u6a5f\u68b0\u5b66\u7fd2\u6307\u6a19\u306e\u7528\u8a9e http://www.procrasist.com/entry/ml-metrics \u4e8c\u5024\u5206\u985e\u306elogloss(Logarithm Loss)\u306f\u3001\u5206\u985e\u306e\u7d50\u679c\u3060\u3051\u3092\u898b\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5404\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u78ba\u7acb(\u5206\u985e\u5668\u306e\u81ea\u4fe1?)\u306elog\u5024\u306e\u5e73\u5747\u3067\u3001\u5206\u985e\u306b\u81f3\u3063\u305f\u904e\u7a0b\u307e\u3067\u898b\u308b \u95a2\u6570\u8fd1\u4f3c\uff1aNN\u3092\u5b66\u7fd2\u3057\u3066\u95a2\u6570\u306e\u632f\u308b\u821e\u3044\u3092\u8fd1\u4f8d\u3059\u308b\u3053\u3068 Accuracy \u6b63\u89e3\u7387\u306e\u3053\u3068\u3002\u4e88\u6e2c\u7d50\u679c\u5168\u4f53\u3068\u3001\u7b54\u3048\u304c\u3069\u308c\u3050\u3089\u3044\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u6307\u6a19\u3002\u2605\u8ad6\u6587\u3067\u306f\u4f7f\u308f\u306a\u3044 Precision \u9069\u5408\u7387/\u7cbe\u5ea6\u306e\u3053\u3068\u3002\u4e88\u6e2c\u3092\u6b63\u3068\u5224\u65ad\u3057\u305f\u4e2d\u3067\u3001\u7b54\u3048\u3082\u6b63\u306e\u3082\u306e\u3002\u2605\u518d\u73fe\u7387\u3068\u3068\u3082\u306b\u60c5\u5831\u691c\u7d22\u304b\u3089\u306e\u7528\u8a9e\u3002\u7247\u65b9\u56fa\u5b9a\u3067\u4f7f\u3046\u5834\u5408\u3082\uff1f Recall \u518d\u73fe\u7387\u306e\u3053\u3068\u3002\u7b54\u3048\u304c\u6b63\u306e\u4e2d\u3067\u3001\u4e88\u6e2c\u304c\u6b63\u3068\u3055\u308c\u305f\u3082\u306e\u3002 F-measure F\u5024\u306e\u3053\u3068\u3002\u4e88\u6e2c\u7cbe\u5ea6\u306e\u8a55\u4fa1\u6307\u6a19\u3002Presicion\u3068Recall\u306e\u8abf\u548c\u5e73\u5747\u3002\u2605\u8a9e\u6e90\u306fE\u5024\u306e\u8a18\u61b6\u9055\u3044\uff1f https://ci.nii.ac.jp/naid/110002939532 \u9069\u5408\u7387\u306e\u30de\u30a4\u30af\u30ed\u5e73\u5747\u3001\u30de\u30af\u30ed\u5e73\u5747\uff1a\u30de\u30a4\u30af\u30ed\u304c\u8db3\u3057\u305f\u3042\u3068\u9069\u5408\u7387\u3001\u30de\u30af\u30ed\u304c\u9069\u5408\u7387\u306e\u5e73\u5747 \u2605\u30de\u30af\u30ed\u306f\u7d4c\u6e08\u5b66\u3067\u306f\u5404\u56fd\uff08\u30ab\u30c6\u30b4\u30ea)\u3054\u3068\u306e\u6307\u6a19\u3092\u898b\u308b\u3088\u3046\u306b\u30de\u30af\u30ed\u306a\u5358\u4f4d\u3067\u898b\u308b\u3002\u30de\u30a4\u30af\u30ed\u306f\u56fd(\u30ab\u30c6\u30b4\u30ea)\u3092\u7121\u8996\u3057\u3066\u7d30\u304b\u3044\u5358\u4f4d\u3067\u898b\u308b\uff1f \u6df7\u540c\u884c\u5217(confusion matrix):True/False Positive/Negative\u3000\u2605\u6587\u5b57\u8a8d\u8b58\u3060\u3068\u884c\u5217\u6570\u304c\u591a\u304f\u3001\u672c\u5f53\u306b\u6df7\u540c\u3059\u308b\u72b6\u6cc1\u3092\u793a\u3059 \u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee(Root mean squared error,RMSE): \u2605\u4e8c\u4e57\u306a\u306e\u306f\u6a19\u6e96\u504f\u5dee\u3068\u306e\u304b\u3089\u307f\u3002 \u6c7a\u5b9a\u4fc2\u6570(Coefficient of Determination): R2\u3068\u3082\u547c\u3070\u308c\u308b\u30020-1\u30671\u306b\u8fd1\u3044\u307b\u3069\u826f\u3044\u3002\u2605\u5206\u5b50\u304c\u5168\u554f\u6b63\u89e3\u30670\u306b\u306a\u308b\u3002\u5206\u6bcd\u306f1\u306b\u3059\u308b\u6b63\u898f\u5316\u3002 \u6df7\u540c\u884c\u5217(confusion matrix) True/False\u306f\u5f62\u5bb9\u8a5e\u3067\u3001\u4f8b\u3048\u3070\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u306fTP\u3068FN\u3067\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3002 True Positive(TP)\uff1a \u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u6b63\u3057\u304f\u6b63\u3068\u4e88\u6e2c\u3067\u304d\u305f\u6570 False Positive(FP)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u9593\u9055\u3063\u3066\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u6570 Flase Negative(FN)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u9593\u9055\u3063\u3066\u8ca0\u3068\u4e88\u6e2c\u3057\u305f\u6570 True Negative(TN)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u6b63\u3057\u304f\u8ca0\u3068\u4e88\u6e2c\u3067\u304d\u305f\u6570 False Positive Rate(\u507d\u967d\u6027\u7387\uff09\uff1aFP/(FP+TN) \u300c\u507d\u967d\u6027\u7387\u300d\u306f\u3001\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u9593\u9055\u3063\u3066\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u5272\u5408\u3002(\u5206\u6bcd\u304c\u6b63\u89e3\u30c7\u30fc\u30bf\u8ca0\u306e\u7dcf\u548c) True Positive Rate(\u771f\u967d\u6027\u7387\uff09\uff1aTP/(TP+FN) \u300c\u771f\u967d\u6027\u7387\u300d\u306f\u3001\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u6b63\u3057\u304f\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u5272\u5408\u3002(\u5206\u6bcd\u304c\u6b63\u89e3\u30c7\u30fc\u30bf\u6b63\u306e\u7dcf\u548c) ROC\u66f2\u7dda False Positive Rate\uff08\u507d\u967d\u6027\u7387\uff09\u3092\u6a2a\u8ef8\u306bTrue Positive Rate\uff08\u771f\u967d\u6027\u7387\uff09\u3092\u7e26\u8ef8\u306b\u7f6e\u3044\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e ROC\u66f2\u7dda\u306e\u7279\u5fb4 ROC\u66f2\u7dda\u306f\u53f3\u306b\u3044\u304f\u307b\u3069\u4e0b\u304c\u308b\u3053\u3068\u306f\u306a\u3044 \u507d\u967d\u6027\u7387\u306e\u5024\u304c\u5c0f\u3055\u3044\u6642\u70b9\u3067\u3001\u9ad8\u3044\u771f\u967d\u6027\u7387\u3092\u9054\u6210\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u307b\u3069\u826f\u3044 AUC(Area under an ROC curve):ROC\u66f2\u7dda\u3068x\u8ef8y\u8ef8\u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\uff08\u4e0b\u56f3\u306e\u659c\u7dda\u90e8\uff09\u306e\u9762\u7a4d\u304c\u3067\u304d\u308b\u3060\u3051\u5927\u304d\u3044\u3082\u306e\u307b\u3069\u826f\u3044\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u9762\u7a4d\u306e\u5024\u304cAUC(Area under an ROC curve)\u3068\u306a\u308a\u307e\u3059\u3002AUC\u304c1\u306b\u8fd1\u3044\u307b\u3069\u6027\u80fd\u304c\u9ad8\u3044\u30e2\u30c7\u30eb\u3068\u306a\u308a\u3001\u5b8c\u5168\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u4e88\u6e2c\u3055\u308c\u308b\u5834\u5408\u3001AUC\u306f0.5\u3001\u3064\u307e\u308aROC\u66f2\u7dda\u306f\u539f\u70b9(0,0)\u3068(1,1)\u3092\u7d50\u3076\u76f4\u7dda\u306b\u306a\u308a\u307e\u3059\u3002 \u30ea\u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\uff08LiftChart\uff09 \u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\u306b\u306f\u8907\u6570\u306e\u5b9a\u7fa9\u304c\u3042\u308a\u3001DataRobot\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u6587\u732e\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093(\u7d2f\u7a4d\u53cd\u5fdc\u66f2\u7dda\u3068\u8a00\u308f\u308c\u308b\u5225\u306e\u3082\u306e\u3092\u30ea\u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\u3068\u547c\u3076\u3053\u3068\u304c\u3042\u308b)\u3002\u4e88\u6e2c\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u3092\u306f\u304b\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u3059\u308b\u4e88\u6e2c\u5024\u304c\u3069\u308c\u304f\u3089\u3044\u306e\u5224\u5225\u80fd\u529b\u3084\u4e88\u77e5\u80fd\u529b\u3092\u6709\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u307e\u305f\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u6bd4\u8f03\u3057\u305f\u6642\u306b\u3001\u3069\u3061\u3089\u306e\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u304c\u826f\u3044\u306e\u304b\u3092\u7d20\u65e9\u304f\u8996\u899a\u7684\u306b\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b9f\u6e2c\u306e\u7dda\u306e\u89d2\u5ea6 \u2013 \u4e00\u822c\u7684\u306b\u306f\u3001\u6025\u306a\u307b\u3069\u3088\u3044 \u4e88\u6e2c\u3068\u5b9f\u6e2c\u306e\u8fd1\u3057\u3055 \u2013 \u4e00\u822c\u7684\u306b\u306f\u3001\u8fd1\u3044\u307b\u3069\u3088\u3044 \u7d2f\u7a4d\u53cd\u5fdc\u66f2\u7dda/Cumulative Response Curve\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3088\u3046\u3067\u3042\u308b\u3002ROC\u3068\u306e\u9055\u3044\u306f\u3001\u7e26\u8ef8\u306f\u771f\u967d\u6027\u7387/True Positive Rate(TPR)\u3068\u540c\u3058\u307e\u307e\u3060\u304c\u3001\u6a2a\u8ef8\u3092\u967d\u6027\u4e88\u6e2c\u7387/Positive Prediction Rate\u3068\u3059\u308b\u3002 \u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u5b66\u7fd2 https://www.codexa.net/what-is-ensemble-learning/ \u6027\u80fd\u306e\u4f4e\u3044\u5b66\u7fd2\u5668\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u9ad8\u6027\u80fd\u306a\u5b66\u7fd2\u5668\u3092\u4f5c\u308b\u65b9\u6cd5. \u4ee5\u4e0b\u306e\uff13\u3064\u3042\u308b\u3002\u5206\u985e\u306f\u5404\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u3092\u6700\u7d42\u7684\u306b\u591a\u6570\u6c7a\u3001\u56de\u5e30\u306f\u5e73\u5747\u5024\u3092\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3002 - \u30d0\u30ae\u30f3\u30b0: \u5f31\u5b66\u7fd2\u5668\u3092\u4e26\u5217\u306b\u5b66\u7fd2\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308b\u2f3f\u6cd5\u3002bagging = bootstrap(\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7) + aggregating(\u96c6\u7d04)\u3002\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306f\u3053\u308c\u3002\u4e00\u822c\u7684\u306b\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7d50\u679c\u306e\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u4f4e\u304f\u3059\u308b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002 - \u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0: \u5f31\u5b66\u7fd2\u5668\u3092\u9806\u756a\u306b\u5b66\u7fd2\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u3066\u5f37\u304f\u3057\u3066\u3044\u304f\u2f3f\u6cd5. \u524d\u306e\u5b66\u7fd2\u5668\u304c\u8aa4\u5206\u985e\u3057\u305f\u30c7\u30fc\u30bf\u3092\u512a\u5148\u7684\u306b\u6b63\u3057\u304f\u5206\u985e\u3067\u304d\u308b\u3088\u3046\u306b\u5b66 \u7fd2\u3057\u3066\u3044\u304f.\u4e00\u822c\u7684\u306b\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7cbe\u5ea6\u306b\u5bfe\u3057\u3066\u30d0\u30a4\u30a2\u30b9\u3092\u4e0b\u3052\u308b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002XgBoost\u306f\u3053\u308c\u3002 - \u30b9\u30bf\u30c3\u30ad\u30f3\u30b0: \u30e2\u30c7\u30eb\u3092\u7a4d\u307f\u4e0a\u3052\u3066\u3044\u304f\u65b9\u6cd5\u3067\u9ad8\u5ea6\u30fb\u8907\u96d1\u3002\u4e0a\u624b\u304f\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u30d0\u30e9\u30f3\u30b9\u3088\u304f\u8abf\u6574\u3059\u308b\u4e8b\u304c\u53ef\u80fd. \u5f31\u5b66\u7fd2\u5668(\u6027\u80fd\u306e\u4f4e\u3044\u5b66\u7fd2\u5668) \ud835\udc53(\ud835\udc65) \u2022 \u6b63\u89e3\u7387\u304c0.5\u3088\u308a\u2f24\u304d\u3044 \u2022 = \u30e9\u30f3\u30c0\u30e0\u306b+1\u304b-1\u3092\u8fd4\u3059\u3082\u306e\u3088\u308a\u306f\u826f\u3044\u3082\u306e \u2022 \u6b63\u89e3\u7387\u304c0.5\u3088\u308a\u2f29\u3055\u3044\u5b66\u7fd2\u5668\u306f\u5206\u985e\u7d50\u679c\u3092\u53cd\u5bfe\u306b\u3059\u308c\u3070\u3001\u6b63\u89e3\u7387\u304c 0.5\u3088\u308a\u2f24\u304d\u3044\u3082\u306e\u3092\u4f5c\u308c\u308b \u2022 \u6ce8\u610f \u2022 \u8907\u96d1\u306a\u5b66\u7fd2\u5668\u3082\u4f7f\u3048\u308b\u304c\u8a08\u7b97\u91cf\u306e\u2f29\u3055\u3044\u5358\u7d14\u306a\u5b66\u7fd2\u5668\u304c\u3088\u304f\u4f7f\u308f\u308c\u308b \u2022 \u6c7a\u5b9a\u682a\u3001\u6c7a\u5b9a\u2f4a\u306a\u3069 \u2022 \u5168\u304f\u540c\u3058\u5206\u985e\u5668\u3067\u306f\u6027\u80fd\u306f\u4e0a\u304c\u3089\u306a\u3044(\u591a\u69d8\u6027\u304c\u5fc5\u8981 \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7 N\u500b\u306e\u30c7\u30fc\u30bf\u304b\u3089\u91cd\u8907\u3092\u8a31\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306bN\u56de\u30c7\u30fc\u30bf\u3092\u9078\u3076\u3053\u3068\u3002\u7d71\u8a08\u306e\u5206\u91ce\u3067\u2e9f\u96c6\u56e3\u306e\u7d71\u8a08\u91cf\u306e\u63a8\u5b9a\u306b\u4f7f\u308f\u308c\u3066\u304d\u305f\u2f3f\u6cd5\u3002\u3061\u3087\u3063\u3068\u3060\u3051\u9055\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u305f\u304f\u3055\u3093\u4f5c\u308c\u308b\u3002 \u300c\u30d0\u30a4\u30a2\u30b9\uff08Bias\uff09\u300d\u3068\u300c\u30d0\u30ea\u30a2\u30f3\u30b9\uff08Variance\uff09\u300d:\u30d0\u30a4\u30a2\u30b9\u306f\u5b9f\u969b\u5024\u3068\u4e88\u6e2c\u5024\u3068\u306e\u8aa4\u5dee\u306e\u5e73\u5747\u306e\u3053\u3068\u3067\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4e88\u6e2c\u5024\u3068\u771f\u306e\u5024\u306e\u8aa4\u5dee\u304c\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u5bfe\u3057\u3066\u30d0\u30ea\u30a2\u30f3\u30b9\u306f\u4e88\u6e2c\u5024\u304c\u3069\u308c\u3060\u3051\u6563\u3089\u3070\u3063\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u5ea6\u5408\u3044\u306e\u3053\u3068\u3067\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4e88\u6e2c\u5024\u306e\u6563\u3089\u3070\u308a\u304c\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b \u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0 \u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3092\u62bd\u51fa\u3057\u3066\u305d\u308c\u3067\u5f31\u5b66\u7fd2\u6a5f\u3092\u4f5c\u308a\u3001\u6700\u5f8c\u306b\u5408\u308f\u305b\u308b\u306e\u306f\u30d0\u30ae\u30f3\u30b0\u3068\u540c\u69d8\u3002\u9055\u3044\u306f\u524d\u56de\u306e\u7d50\u679c\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3002\u306a\u306e\u3067\u4e26\u5217\u51e6\u7406\u306f\u3067\u304d\u306a\u3044\u3002 \u30a2\u30c0\u30d6\u30fc\u30b9\u30c8:\u524d\u56de\u306e\u7d50\u679c\u3067\u8aa4\u5206\u985e\u3055\u308c\u305f\u5024\u306e\u91cd\u307f\u3092\u5927\u304d\u304f\u3059\u308b\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b\u3002\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3068\u5358\u306b\u8a00\u3048\u3070\u3053\u308c\u3092\u6307\u3059\u3053\u3068\u304c\u591a\u3044\u3089\u3057\u3044\u3002 \u30de\u30c0\u30d6\u30fc\u30b9\u30c8\u30fb\u30ed\u30b8\u30c3\u30c8\u30d6\u30fc\u30b9\u30c8:\u30a2\u30c0\u30d6\u30fc\u30b9\u30c8\u306e\u640d\u5931\u95a2\u6570\u304c\u9055\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u307f\u305f\u3044\u3002\u300e\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u4f1a\u5b66\u7fd2\u300f\u306b\u51fa\u3066\u3044\u305f\u304c\u4ed6\u3067\u306f\u898b\u305f\u8a18\u61b6\u304c\u306a\u3044\u3002 \u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0:\u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u4f7f\u3063\u305f\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u3053\u3068\u3002\u6b63\u76f4\u306a\u3068\u3053\u308d\u30a2\u30c0\u30d6\u30fc\u30b9\u30c8\u3068\u306e\u9055\u3044\u304c\u3044\u307e\u3044\u3061\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002 GBDT(Gradient Boosting Decision Tree):\u5f31\u5b66\u7fd2\u6a5f\u306b\u6c7a\u5b9a\u6728\u3092\u4f7f\u3063\u305f\u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u3053\u3068\u3002\u304b\u3063\u3053\u3088\u304f\u805e\u3053\u3048\u308b\u3002 XgBoost: \u3053\u308c\u306fGradient Boosting\uff08\u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\uff09\u306e\u9ad8\u901f\u306aC++\u5b9f\u88c5S\uff0e\u5f93\u6765\u4f7f\u308f\u308c\u3066\u305fgbt\u3088\u308a10\u500d\u9ad8\u901f\u3089\u3057\u3044 \u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u308f\u308c\u308b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5f62\u5f0f https://www.sambaiz.net/article/46/ MessagePack: JSON\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u901f\u304f\u3066\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3002 ProtocolBuffers: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\u8a00\u8a9e (IDL) \u3067\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\u901a\u4fe1\u3084\u6c38\u7d9a\u5316\u3067\u306e\u5229\u7528\u3092\u76ee\u7684\u3068\u3057\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308a\u3001Google\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3002gRPC\u3067\u3082\u4f7f\u308f\u308c\u308b\u3002message type\u3092proto\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3059\u308b(proto3)\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5404\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002pb\u3067Google\u306e\u3042\u3089\u3086\u308b\u30b5\u30fc\u30d3\u30b9\u3084tensorflow\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b FlatBuffers: Google\u306e\u3001\u30b2\u30fc\u30e0\u306a\u3069\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8981\u6c42\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002 \u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u524d\u306bparse\u3084unpack\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306e\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3002proto\u306e\u4ee3\u308f\u308a\u306bschema\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u3002tensorflow lite\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3002 \u5b66\u7fd2\u306e\u7a2e\u985e \u6559\u5e2b\u30a2\u30ea\u5b66\u7fd2(supervised learning):\u5224\u65ad\u306e\u7d50\u679c\u304c\u308f\u304b\u3063\u305f\u72b6\u614b\u3067\u5b9f\u65bd \u6559\u5e2b\u30ca\u30b7\u5b66\u7fd2(unsupervised learning):\u5224\u65ad\u306e\u7d50\u679c\u304c\u308f\u304b\u3089\u306a\u3044\u72b6\u614b\u3067\u5b9f\u65bd\u2026\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3092\u8aad\u307f\u53d6\u308b\u2026\u30de\u30a4\u30cb\u30f3\u30b0\u8981\u7d20\u3002\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0 \u5f37\u5316\u5b66\u7fd2(reinforcement learning):\u30c7\u30fc\u30bf\u304b\u3089\u5224\u65ad\u3092\u3057\u3066\u884c\u52d5\u3059\u308b\u3068\u3001\u305d\u306e\u884c\u52d5\u304c\u8a55\u4fa1\u3055\u308c\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3001\u5224\u65ad\u3092\u6539\u5584\u3057\u3066\u3044\u304f.\u4f8b\u3048\u3070Q\u5b66\u7fd2 \u534a\u6559\u5e2b\u30a2\u30ea\u5b66\u7fd2(semi-supervised learning):\u6559\u5e2b\u30a2\u30ea\u3068\u6559\u5e2b\u30ca\u30b7\u3092\u4f75\u305b\u308b\u3002\u6b63\u7b54\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3068\u3001\u306a\u3044\u30c7\u30fc\u30bf\u306e\u4e21\u65b9\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3092\u884c\u3046\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306f\u3001\u8fd1\u4f3c\u95a2\u6570\u3084\u5206\u985e\u5668\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u304a\u308a\u3001\u30c7\u30fc\u30bf\u53ce\u96c6\u306e\u305f\u3081\u306e\u30b3\u30b9\u30c8\u304c\u4f4e\u304f\u3066\u3059\u3080\u3068\u3044\u3046\u610f\u5916\u306a\u5229\u70b9\u3082\u3042\u308a\u307e\u3059\u3002\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u306a\u304b\u3067\u3001\u7279\u306b\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u306e\u4e2d\u306e\u30e9\u30d9\u30eb\u304c\u306a\u3044\u3082\u306e\u306b\u95a2\u3057\u3066\u306e\u307f\u3001\u4e88\u6e2c\u3092\u884c\u3046\u30c8\u30e9\u30f3\u30b9\u30c0\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u5b66\u7fd2\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 \u30c8\u30e9\u30f3\u30b9\u30c0\u30af\u30b7\u30e7\u30f3(transduction. transductive inference):\u89b3\u6e2c\u3055\u308c\u305f\u5177\u4f53\u7684\u306a\uff08\u8a13\u7df4\uff09\u4f8b\u304b\u3089\u5177\u4f53\u7684\u304b\u3064\u56fa\u5b9a\u306e\uff08\u30c6\u30b9\u30c8\uff09\u4f8b\u306e\u65b0\u305f\u306a\u51fa\u529b\u3092\u4e88\u6e2c\u3057\u3088\u3046\u3068\u3059\u308b\u3002\u6f14\u7e79(deduction)\u3068\u5e30\u7d0d(induction)\u3068\u3001Transduction\u3002Deduction\u306f\u5165\u529b\u304b\u3089\u30eb\u30fc\u30eb\u3092\u307f\u3064\u3051\u308b\u3053\u3068\u3002 Learning to learn:\u8907\u6570\u306e\u5224\u65ad\u3092\u4e00\u7dd2\u306b\u884c\u3046\u3053\u3068\u3067\u5224\u65ad\u4f5c\u696d\u5168\u4f53\u306e\u6539\u5584\u3092\u76ee\u6307\u3059 \u6df1\u5c64\u5f37\u5316\u5b66\u7fd2: \u81ea\u52d5\u904b\u8ee2\u306a\u3069\u8a66\u884c\u306b\u5bfe\u3057\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u4e0e\u3048(\u5f37\u5316\u5b66\u7fd2)\u308b\u6df1\u5c64\u5b66\u7fd2\u3002 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\uff08Backpropagation): \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 backwards propagation of errors\u306e\u7565\u3002\u30a8\u30e9\u30fc(\u304a\u3088\u3073\u5b66\u7fd2)\u306f\u51fa\u529b\u30ce\u30fc\u30c9\u304b\u3089\u5f8c\u65b9\u306e\u30ce\u30fc\u30c9\u3078\u3068\u4f1d\u64ad\u3059\u308b\u3002\u6280\u8853\u7684\u306b\u8a00\u3048\u3070\u3001\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5909\u66f4\u53ef\u80fd\u306a\u91cd\u307f\u306b\u3064\u3044\u3066\u3001\u8aa4\u5dee\u306e\u50be\u659c\u3092\u8a08\u7b97\u3059\u308b\u3082\u306e\u3067\u3042\u308b[11]\u3002\u3053\u306e\u50be\u659c\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u8aa4\u5dee\u3092\u6700\u5c0f\u306b\u3059\u308b\u5358\u7d14\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b\u78ba\u7387\u7684\u6700\u6025\u964d\u4e0b\u6cd5\u3067\u4f7f\u308f\u308c\u308b\u3002\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u5834\u5408\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5c11\u306a\u304f\u3068\u3082\u4e09\u5c64\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u5165\u529b\u5c64\u3001\u4e2d\u9593\u5c64\u3001\u51fa\u529b\u5c64\uff09\u3002\u307e\u305f\u3001\u591a\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e2d\u9593\u5c64\u304c\u610f\u5473\u306e\u3042\u308b\u95a2\u6570\u3092\u8868\u3059\u306b\u306f\u3001\u975e\u7dda\u5f62\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u7dda\u5f62\u306a\u6d3b\u6027\u5316\u95a2\u6570\u306e\u591a\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u5358\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u7b49\u4fa1\u3067\u3042\u308b\u3002\u975e\u7dda\u5f62\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3068\u3057\u3066\u306f\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570(\u4e2d\u3067\u3082 tanh \u306a\u3069\u306e\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570)\u3001\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u3001\u30ac\u30a6\u30b9\u95a2\u6570\u306a\u3069\u304c\u4e00\u822c\u7684\u3067\u3042\u3063\u305f\u304c\u3001\u4e2d\u9593\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3068\u3057\u3066\u306f\u73fe\u5728\u306f max(x, 0) \u304c\u6700\u5584\u3067\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u308b \u52fe\u914d\u964d\u4e0b\u6cd5::optimizer \u300c\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u300d\u306e\u4e00\u7a2e\u3002 \u6700\u6025\u964d\u4e0b\u6cd5(Gradient Descent):\u3059\u3079\u3066\u306e\u8aa4\u5dee\u306e\u5408\u8a08\u3092\u53d6\u3063\u3066\u304b\u3089\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0\u3002\u8a08\u7b97\u304c\u9045\u3044 \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff08Stochastic Gradient Descent - SDG\uff09\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b1\u3064\u3092\u53d6\u308a\u51fa\u3057\u3066\u8aa4\u5dee\u3092\u8a08\u7b97\u3001\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0\u3002\u8a08\u7b97\u304c\u65e9\u3044 \u30df\u30cb\u30d0\u30c3\u30c1\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff08Minibatch SGD - MSGD\uff09:\u4e0a\u4e8c\u3064\u306e\u9593\u3092\u53d6\u3063\u305f\u3088\u3046\u306a\u5f62\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u3044\u304f\u3064\u304b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066\u8aa4\u5dee\u3092\u8a08\u7b97\u3001\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0 \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff1a \u300c\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u305f\u5171\u5f79\u52fe\u914d\u300d\u3002\u5171\u5f79\u52fe\u914d\u6cd5\u306e\u4f7f\u7528\u3092\u6b63\u5f53\u5316\u3059\u308b\u4eee\u5b9a\u306f\u3001\u30d0\u30c3\u30c1\u5b66\u7fd2\u30bf\u30a4\u30d7\u306b\u306e\u307f\u9069\u7528\u3055\u308c\u308b\u305f\u3081\u3001\u3053\u306e\u65b9\u6cd5\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002 \u300c\u52fe\u914d\u964d\u4e0b\u300d\u3002\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 epoch: \u300c\u5b66\u7fd2\u7387\u306e\u6e1b\u8870 (\u30a8\u30dd\u30c3\u30af)\u300d:\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u52fe\u914d\u964d\u4e0b\u304c\u4f7f\u7528\u3055\u308c\u308b\u5834\u5408\u3001\u521d\u671f\u306e\u5b66\u7fd2\u7387\u3092\u5b66\u7fd2\u7387\u306e\u4e0b\u9650\u307e\u3067\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b66\u7fd2\u30b5\u30f3\u30d7\u30eb\u306e\u30a8\u30dd\u30c3\u30af\u6570 (p) \u307e\u305f\u306f\u30c7\u30fc\u30bf\u30fb\u30d1\u30b9\u6570\u3067\u3059\u3002 \u6d3b\u6027\u5316\u95a2\u6570(activation function)\uff1a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3044\u3066\u3001\u7dda\u5f62\u5909\u63db\u3092\u3057\u305f\u5f8c\u306b\u9069\u7528\u3059\u308b\u975e\u7dda\u5f62\u95a2\u6570\u3082\u3057\u304f\u306f\u6052\u7b49\u95a2\u6570\u306e\u3053\u3068\u3002\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u3001\u7dda\u5f62\u7d50\u5408\u3001\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3001\u30bd\u30d5\u30c8\u30b5\u30a4\u30f3\u3001\u30bd\u30d5\u30c8\u30d7\u30e9\u30b9\u3001ReLU\uff08\u30e9\u30f3\u30d7\u95a2\u6570.max(0, x) \uff09 \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30(Logistic regression)\uff1a\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306b\u5f93\u3046\u5909\u6570\u306e\u7d71\u8a08\u7684\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\u9023\u7d50\u95a2\u6570\u3068\u3057\u3066\u30ed\u30b8\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb (GLM) \u306e\u4e00\u7a2e\u3067\u3082\u3042\u308b\u3002\u30e2\u30c7\u30eb\u306f\u540c\u3058\u304f1958\u5e74\u306b\u767a\u8868\u3055\u308c\u305f\u5358\u7d14\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3068\u7b49\u4fa1\u3067\u3042\u308b\u304c\u3001scikit-learn \u306a\u3069\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c7a\u3081\u308b\u6700\u9069\u5316\u554f\u984c\u3067\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u4f7f\u7528\u3059\u308b\u7269\u3092\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3068\u547c\u3073\u3001\u5ea7\u6a19\u964d\u4e0b\u6cd5\u3084\u6e96\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u7269\u3092\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u547c\u3093\u3067\u3044\u308b\u3002 \u30d0\u30c3\u30c1\u5b66\u7fd2\uff1a\u5b66\u7fd2\u30c7\u30fc\u30bfx\u304cN\u500b\u3042\u308b\u3068\u304d\u306b\u3001N\u500b\u306e\u30c7\u30fc\u30bf\u3092\u5168\u3066\u7528\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u3067\u306e\u640d\u5931l\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u3001\u305d\u308c\u3092\u30c7\u30fc\u30bf\u5168\u4f53\u306e\u640d\u5931L\u3068\u8003\u3048\u3001L(t,x;w)=1N\u2211i=1Nl(ti,xi;w)\u3068\u5b9a\u7fa9\u3057\u3066\u5b66\u7fd2\u306b\u81e8\u3080\u306e\u304c\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u3059\u3002\u4e00\u822c\u7684\u306b\u5b66\u7fd2\u306f\u5b89\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u5165\u308c\u305f\u30c7\u30fc\u30bf\u306f\u4e8b\u5b9f\u4e0a\u8a08\u7b97\u3082\u540c\u6642\u306b\u884c\u3048\u308b\u305f\u3081\u3001\u4ee5\u4e0b2\u3064\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u9ad8\u901f\u3067\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff1a\u4e00\u65b9\u3067\u3001N\u500b\u306e\u30c7\u30fc\u30bfx1,x2,...,xN\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\uff11\u3064xi\u3092\u9078\u3073\u51fa\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\uff11\u3064\u306b\u5bfe\u3059\u308b\u640d\u5931l\u3092\u305d\u306e\u307e\u307eL\u306b\u7528\u3044\u3066L(t,x;w)=l(ti,xi;w)\u3068\u640d\u5931\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u5b66\u7fd2\u306b\u81e8\u3080\u306e\u304c\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u3001\u3042\u308b\u3044\u306f\u300c\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\u901a\u5e38\u3001\u3053\u306e\u5b66\u7fd2\u306f\u3042\u307e\u308a\u5b89\u5b9a\u3057\u307e\u305b\u3093\u3002 \u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\uff1a\u5168\u4f53\u3092\u8003\u616e\u3057\u305f\u30d0\u30c3\u30c1\u5b66\u7fd2\u3068\u3001\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u306e\u9593\u3092\u53d6\u3063\u305f\u306e\u304c\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u3042\u308a\u3001\u3053\u306e\u3068\u304d\u5b66\u7fd2\u30c7\u30fc\u30bfx\u304cN\u500b\u3042\u308b\u3068\u304d\u306b\u3001\u30e9\u30f3\u30c0\u30e0\u306an(?N)\u500b\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3044L(t,x;w)=1n\u2211i=1nl(ti,xi;w)\u3092\u640d\u5931\u95a2\u6570\u3068\u5b9a\u7fa9\u3057\u3001\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002\u5b9f\u969b\u306f\u591a\u304f\u306e\u5834\u9762\u3067\u3053\u306e\u65b9\u6cd5\u304c\u7528\u3044\u3089\u308c\u3066\u304a\u308a\u3001\u300c\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u300d\u3068\u8a00\u3046\u6642\u306b\u306f\u3001\u3082\u306f\u3084\u3053\u3061\u3089\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3092\u6307\u3059\u3053\u3068\u306e\u307b\u3046\u304c\u4eca\u3067\u306f\u591a\u3044\u3067\u3059\u3002 \u30e9\u30d9\u30eb: \u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u308b\u7b54\u3048\u3002 HW TPU/Clould TPU\uff1a\u521d\u4ee3TPU\u306f\u63a8\u8ad6\u5c02\u7528\u3002Cloud TPU\u306b\u306a\u3063\u3066\u5b66\u7fd2\u306b\u3082\u5bfe\u5fdc NPU: Haiwai AI\u30d7\u30ed\u30bb\u30c3\u30b5 Neural Engine: Apple A11 Bionic Qualcomm\u306f\u3001GPU\u3067\u306f\u7121\u304fDSP\u4f7f\u7528\uff1f Pixel Visual Core: Google\u304cPixel 2\u306b\u642d\u8f09\u3002HDR\uff0b\u54c1\u8cea\u3002Pixel Visual Core\u306fGoogle\u304c\u8a2d\u8a08\u3057\u305f8\u500b\u306e\u300cImage Processing Unit\uff08IPU\uff09\u300d\u3092\u642d\u8f09\u3059\u308b\u3002\u3053\u306eIPU\u306fMIT\u304c\u958b\u767a\u3057\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u753b\u50cf\u51e6\u7406\u5411\u3051\u8a00\u8a9e\u300cHalide\u300d\u3068Google\u306e\u6a5f\u68b0\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTensorFlow\u300d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u4eca\u5f8c\u306f\u753b\u50cf\u51e6\u7406\u4ee5\u5916\u306e\u6a5f\u80fd\u3067\u3082\u4f7f\u3063\u3066\u3044\u304f\u8a08\u753b\u3002 \u25cf\u30bb\u30f3\u30b5\u30fc ToF(Time of Flight):\u6295\u5c04\u3057\u305f\u30ec\u30fc\u30b6\u30fc\u304c\u5bfe\u8c61\u307e\u3067\u5f80\u5fa9\u3059\u308b\u306e\u306b\u304b\u304b\u308b\u6642\u9593\uff08\u30d1\u30eb\u30b9\u306e\u4f4d\u76f8\u5dee\uff09\u304b\u3089\u8ddd\u96e2\u3092\u8a08\u6e2c RiDAR(Light Detection and Ranging): \u30ec\u30fc\u30b6\u30fc\u5149\u3092\u4f7f\u3063\u305f\u30ec\u30fc\u30c0\u30fc\u3002\u30ec\u30fc\u30b6\u30fc\u3092\u9023\u7d9a\u7684\u306b\u767a\u5c04\u3057\u3001\u305d\u306e\u53cd\u5c04\u70b9\u306e\u4e09\u6b21\u5143\u4f4d\u7f6e\u3092\u9ad8\u5bc6\u5ea6\u306b\u3057\u304b\u3082\u5b89\u4fa1\u306b\u6e2c\u5b9a\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b\u3002Google Car\u3092\u306f\u3058\u3081\u3068\u3059\u308b\u81ea\u52d5\u904b\u8ee2\u8eca\u306b\u4ed8\u3044\u3066\u3044\u308b\u30bb\u30f3\u30b5\u30fc\u306e\u4e2d\u3067\u3001\u3072\u3068\u304d\u308f\u76ee\u3092\u5f15\u304f\u306e\u304c\u3001\u3053\u306eLIDAR\u3067\u3057\u3087\u3046\u3002\u30d1\u30c8\u30ab\u30fc\u306e\u56de\u8ee2\u706f\u306e\u3088\u3046\u306b\u3050\u308b\u3050\u308b\u3068\u5c4b\u6839\u306e\u4e0a\u3067\u56de\u8ee2\u3059\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u76ee\u7acb\u3064\u306e\u3067\u3059\u3002\u3053\u306eLIDAR\u306f\u5468\u56f2360\u5ea6\u306e3D\u7a7a\u9593\u69cb\u9020\u3092\u77ac\u6642\u306b\u8aad\u307f\u53d6\u3063\u3066\u30c7\u30fc\u30bf\u5316\u3059\u308b\u305f\u3081\u306e\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002\u539f\u7406\u306f\u300ctime-of-flight\u300d\u65b9\u5f0f\u3092\u63a1\u7528\u3057\u3066\u3044\u308b2\u4ee3\u76eeKinect\u3068\u540c\u3058\u3067\u3059\u3002\u81ea\u52d5\u904b\u8ee2\u305f\u3081\u306e\u30bb\u30f3\u30b5\u30fc\u3068\u3057\u3066LIDAR\u304c\u512a\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u5468\u56f2\u306e3D\u7a7a\u9593\u3092\u7d20\u65e9\u304f\u6b63\u78ba\u306b\u628a\u63e1\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3060\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u597d\u90fd\u5408\u306a\u3053\u3068\u306b\u3001LIDAR\u306f\u3001\u9053\u8def\u306b\u5f15\u304b\u308c\u3066\u3044\u308b\u767d\u7dda\u306b\u4ee3\u8868\u3055\u308c\u308b\u30ec\u30fc\u30f3\u30de\u30fc\u30ab\u30fc\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u9053\u8def\u306e\u767d\u7dda\u306f\u9ad8\u3044\u53cd\u5c04\u7387\u3092\u6301\u3064\u5857\u6599\u3067\u5857\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\u3001LIDAR\u306f\u3001\u767d\u7dda\u3068\u8def\u9762\u306e\u53cd\u5c04\u7387\u306e\u9055\u3044\u30923D\u30c7\u30fc\u30bf\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3067\u3059\u3002 \u30df\u30ea\u6ce2\u30ec\u30fc\u30c0\u30fc:\u96fb\u6ce2\u3092\u4f7f\u3046\u30df\u30ea\u6ce2\u30ec\u30fc\u30c0\u30fc\u306f\u3001\u5206\u89e3\u80fd\u306fLIDAR\u3088\u308a\u3082\u52a3\u308b\u3082\u306e\u306e\u3001\u5929\u5019\u306b\u95a2\u308f\u3089\u305a\u691c\u77e5\u53ef\u80fd\u3067\u3001\u305d\u306e\u7bc4\u56f2\u3082250m\u3068\u5e83\u3044\u3002 TrueDepth: \u300ciPhone X\u300d\u306e\u524d\u9762\u4e0a\u90e8\u306b\u642d\u8f09\u3055\u308c\u305f\u30d5\u30ed\u30f3\u30c8\u30ab\u30e1\u30e9\u3084\u8d64\u5916\u7dda\u30ab\u30e1\u30e9\u3001\u74b0\u5883\u5149\u30bb\u30f3\u30b5\u30fc\u3001\u8fd1\u63a5\u30bb\u30f3\u30b5\u30fc\u3001\u30c9\u30c3\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30bf\u30fc\u306a\u3069\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30ab\u30e1\u30e9\u30b7\u30b9\u30c6\u30e0\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u76ee\u3092\u958b\u3044\u3066\u753b\u9762\u3092\u898b\u3064\u3081\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3089\u30013\u4e07\u4ee5\u4e0a\u306e\u8d64\u5916\u7dda\u30c9\u30c3\u30c8\u3092\u9854\u306b\u6295\u5f71\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\u3067\u9854\u306e\u6df1\u5ea6\u30de\u30c3\u30d7\u3001\u304a\u3088\u30732D\u306e\u8d64\u5916\u7dda\u753b\u50cf\u3092\u4f5c\u6210\u3002 DMI\uff08Distance Measuring Instrument\uff09:\u8d70\u884c\u8ddd\u96e2\u8a08\uff1a\u30bf\u30a4\u30e4\u306e\u56de\u8ee2\u3092\u6570\u3048\u308b\u3053\u3068\u3067\u3001\u8eca\u304c\u3069\u308c\u3060\u3051\u9032\u3093\u3060\u304b\u3092\u6e2c\u5b9a\u3059\u308b\u30bb\u30f3\u30b5\u30fc\uff08\u8d70\u884c\u8ddd\u96e2\u8a08\uff09\u3067\u3059\u3002 IMU\uff08Inertial Measurement Unit\uff09:\u6163\u6027\u822a\u6cd5\u306e\u305f\u3081\u306e6\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc EDA: \u7814\u7a76\u30d5\u30a7\u30fc\u30ba\u3002\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790\uff08Exploratory Data Analysis\uff09\u306e\u982d\u6587\u5b57 Vanilla LSTM: \u53e4\u5178\u7684\u306aLSTM \u30b9\u30d1\u30fc\u30b9\u30e2\u30c7\u30ea\u30f3\u30b0\u3001\u6b63\u5247\u5316 \u30ea\u30c3\u30b8\u56de\u5e30\u3001Lasso\u56de\u5e30\u3001Elastic Net https://aizine.ai/ridge-lasso-elasticnet/##toc8 \u30ab\u30fc\u30cd\u30eb\u6cd5 \u6982\u8981\u3001\uff12\u3064\u306e\u6349\u3048\u65b9 https://su-butsu-kikaigakusyuu.hatenablog.com/entry/2018/04/21/122541 \u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3067\u5199\u50cf\u306e\u5185\u7a4d\u8a08\u7b97\u3060\u3051\u3067\u6e08\u3080\uff1d\uff1e\u30ab\u30fc\u30cd\u30eb\u30c8\u30ea\u30c3\u30af https://www.hellocybernetics.tech/entry/2016/08/09/051355 \u52fe\u914d\u6cd5 \u5ea7\u6a19\u964d\u4e0b\u6cd5\u3068\u6700\u6025\u964d\u4e0b\u6cd5 \u30df\u30cb\u30d0\u30c3\u30c1\u3068\u78ba\u7387\u52fe\u914d\u6cd5 => \u5c40\u6240\u89e3\u306b\u56de\u907f\u3059\u308b\u53ef\u80fd\u6027\u3042\u308a \u7279\u7570\u5024\u5206\u89e3SVD\u3068\u4f4e\u30e9\u30f3\u30af\u884c\u5217\u8fd1\u4f3c \u7279\u7570\u5024\u5206\u89e3\u3055\u308c\u305f\u3082\u306e\u306e\u3046\u3061\u3001\u4e0a\u4f4d\u306e\u30e9\u30f3\u30af\u3060\u3051\u9078\u3093\u3067\u518d\u69cb\u6210\u3059\u308c\u3070\u4f4e\u30e9\u30f3\u30af\u8fd1\u4f3c\u306b\u306a\u308a\u307e\u3059\u3002 \u4f4e\u30e9\u30f3\u30af\u884c\u5217\u306e\u518d\u69cb\u6210\u3068\u306f\u7570\u306a\u308b\uff1f \u4f4e\u30e9\u30f3\u30af\u884c\u5217\u518d\u69cb\u6210\u3082\u5185\u90e8\u7684\u306b\u306f\u7279\u7570\u5024\u5206\u89e3\u3092\u3057\u3066\u3044\u308b \u672a\u77e5\u306eN1\u00d7N2\u884c\u5217X0\u306b\u5bfe\u3057\u3066\uff0c\u7dda\u5f62\u89b3\u6e2c\u3092M\u56de\u884c\u3046\u3082\u306e\u3068\u3057\uff0c\u89b3\u6e2c\u7d50\u679c\u3092y= (y1, y2, . . . , yM)T,yi=\u27e8Ai, X0\u27e9,i= 1,2, . . . , M\u3068\u3059\u308b\uff0e\u305f\u3060\u3057\uff0c\u27e8X, Y\u27e9=tr(XTY)\u3067\u3042\u308b\uff0e\u89b3\u6e2c\u884c\u5217{A1, A2, . . . , Am}\u306f\u65e2\u77e5\u3067\u3042\u308b\u3082\u306e\u3068\u3057\uff0c\u89b3\u6e2c\u3092\u7dda\u5f62\u4f5c\u7528\u7d20A:RN1\u00d7N27\u2192RM\u3092\u4f7f\u3063\u3066y=AX0\u3068\u8868\u3059\u3053\u3068\u306b\u3059\u308b\uff0e\u672a\u77e5\u306e\u884c\u5217X0\u306e\u968e\u6570rankX0\u304c\u5c0f\u3055\u3044\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u3068\u304d\uff0cy\u3068A\u3068\u304b\u3089X0\u3092\u63a8\u5b9a\u3059\u308b\u306e\u304c\uff0c\u3053\u3053\u3067\u306e\u884c\u5217\u518d\u69cb\u6210\u306e\u554f\u984c\u3067\u3042\u308b\uff0e SVD\u3068\u306f \u7279\u7570\u5024\u5206\u89e3(singular value decomposition: SVD)\u306f\u3001\u6570\u5b66\u7684\u306b\u306fM\u00d7N(M\u884cN\u5217)\u306e\u884c\u5217\u3092\u5206\u89e3\u3059\u308b\u65b9\u6cd5\u306e\u4e00\u3064\u3067\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3067\u306f\u3001\u884c\u5217\u3067\u8868\u73fe\u3055\u308c\u308b\u7279\u5fb4(\u60c5\u5831\u691c\u7d22\u306e\u5206\u91ce\u3067\u306f\u3001\u4f8b\u3048\u3070\u6587\u66f8\u6bce\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u306e\u884c\u5217\u306a\u3069)\u3092\u53ef\u80fd\u306a\u9650\u308a\u640d\u306d\u308b\u3053\u3068\u7121\u304f\u6b21\u5143\u3092\u5727\u7e2e\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3001\u591a\u6b21\u5143\u306e\u7279\u5fb4\u3092\u6271\u3046\u753b\u50cf\u51e6\u7406\u3001\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3001\u691c\u7d22\u3084\u63a8\u85a6\u306b\u5fdc\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u6b21\u5143\u5727\u7e2e\u624b\u6cd5\u3068\u3057\u3066\u306f\u3001\u4e3b\u6210\u5206\u5206\u6790(PCA)\u3084\u975e\u8ca0\u5024\u884c\u5217\u56e0\u5b50\u5206\u89e3(NMF)\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002 NMF (non-negative matrix factorization) \u975e\u8ca0\u5024\u884c\u5217\u56e0\u5b50\u5206\u89e3 https://abicky.net/2010/03/25/101719/ NMF\u3068\u306f\u975e\u8ca0\u5024\u884c\u5217\u30922\u3064\u306e\u975e\u8ca0\u5024\u884c\u5217\u306b\u5206\u89e3\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e \u3053\u3046\u3059\u308b\u3053\u3068\u3067\uff0c\u3082\u3068\u306e\u884c\u5217\u304c\u6301\u3064\u6f5c\u5728\u7684\u8981\u7d20\u3092\u660e\u78ba\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\uff0e https://qiita.com/kusano_t/items/4c0429778613bb4a336d \u6700\u5c24\u63a8\u5b9a(\u6cd5) maximum likelihood estimation \u7d71\u8a08\u5b66\u306b\u304a\u3044\u3066\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u305d\u308c\u304c\u5f93\u3046\u78ba\u7387\u5206\u5e03\u306e\u6bcd\u6570\u3092\u70b9\u63a8\u5b9a\u3059\u308b\u65b9\u6cd5 \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f\u3001\u6700\u5c24\u63a8\u5b9a\u3092\u4f7f\u7528\u3057\u305f\u56de\u5e30 \u30d9\u30a4\u30ba\u63a8\u5b9a\u3067\u30c7\u30fc\u30bf\u6570\u304c\u5341\u5206\u591a\u3044\u306a\u3069\u4e8b\u5f8c\u5206\u5e03\u304c\u4e8b\u524d\u5206\u5e03\u306e\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u6642\u306f\u6700\u5c24\u63a8\u5b9a\u3068\u540c\u3058 \uff1d\uff1e\u6700\u5c0f\u4e8c\u4e57\u6cd5\u306a\u3069\u3067\u63a8\u5b9a\u3055\u308c\u308b\u95a2\u6570\u306e\u5468\u8fba\u306b\u4e00\u5b9a\u306e\u78ba\u7387\u3067\u5206\u5e03\u3059\u308b\u3068\u3057\u3066\u63a8\u5b9a\u3059\u308b\u611f\u3058 \u89e3\u6cd5\u306bEM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308b \u6df7\u5408\u30ac\u30a6\u30b9\u5206\u5e03 k-means\u306e\u6642\u306f\u3001\u5404\u30c7\u30fc\u30bf\u306f\u3069\u3053\u304b\u306e\u30af\u30e9\u30b9\u30bf\uff11\u3064\u306b\u6240\u5c5e\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u306a\u306e\u3067\u3001r1=(0,1,0)r1=(0,1,0)\u306e\u3088\u3046\u306b0-1\u306e\u6307\u793a\u5909\u6570\u3067\u304d\u3063\u3061\u308a\u3068\u5206\u3051\u3066\u3044\u307e\u3057\u305f\u3002\u6df7\u5408\u30ac\u30a6\u30b9\u5206\u5e03\u3067\u306f\u3001\u5404\u30c7\u30fc\u30bf\u304c\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u306b\u6240\u5c5e\u3059\u308b\u3053\u3068\u306f\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6307\u793a\u5909\u6570\u304c\u78ba\u7387\u5909\u6570\u306b\u5909\u308f\u308a\u3001\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\u3002 IoU: IoU \u306f Intersection(\u9818\u57df\u306e\u5171\u901a\u90e8\u5206) over Union(\u9818\u57df\u306e\u548c\u96c6\u5408)\u306e\u7565\u3067\u3059\u3002over \u306f\u300c\u5272\u308a\u7b97\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u30022\u3064\u306e\u9818\u57df\u304c\u300c\u3069\u308c\u304f\u3089\u3044\u91cd\u306a\u3063\u3066\u3044\u308b\u304b\u300d\u3092\u8868\u3059\u6307\u6a19\u3067\u3059\u3002 https://mathwords.net/iou \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u5b66\u8853\u7684\u306b\u306f\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3001\u78ba\u7387\u5909\u6570\u304c\u30ce\u30fc\u30c9\u3001\u30ce\u30fc\u30c9\u9593\u306e\u95a2\u4fc2\u304c\u77e2\u7dda\u306b\u5bfe\u5fdc\u3059\u308b\u6709\u5411\u975e\u5faa\u74b0\u30b0\u30e9\u30d5\uff08DAG\uff09\u306b\u3088\u3063\u3066\u8868\u308f\u3057\u305f\u3082\u306e\u3002 \u8907\u6570\u306e\u4e8b\u8c61\u306b\u5bfe\u3059\u308b\u4e8b\u524d\u306e\u78ba\u4fe1\u304c\u65b0\u3057\u3044\u8a3c\u62e0\u306b\u3088\u3063\u3066\u5909\u5316\u3059\u308b\u69d8\u5b50\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u306f\u305f\u3089\u304d\u304c\u30d9\u30a4\u30ba\u7684\u3001\u3059\u306a\u308f\u3061\u300c\u30d9\u30a4\u30b8\u30a2\u30f3\u300d\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u547c\u3070\u308c\u308b\u3086\u3048\u3093 https://www.synergy-marketing.co.jp/blog/introduction-bayesian-network \u30de\u30eb\u30b3\u30d5\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30ea\u30f3\u30af\u304b\u3089\u77e2\u5370\u3092\u7121\u304f\u3057\u305f\u3082\u306e\u304c\u30de\u30eb\u30b3\u30d5\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3088\u308a\u8868\u73fe\u529b\u304c\u5f31\u3044\u3082\u306e\u306e\u63a8\u8ad6\u3092\u3059\u308b\u6642\u306e\u8a08\u7b97\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u3001\u97f3\u58f0\u3084\u753b\u50cf\u51e6\u7406\u306e\u5206\u91ce\u3067\u7528\u3044\u3089\u308c\u307e\u3059\u3002\uff09 \u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba(\u5358\u7d14\u5206\u985e\u5668) \u30d9\u30a4\u30ba\u306e\u5b9a\u7406\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u57fa\u3065\u3044\u305f\u5358\u7d14\u306a\u78ba\u7387\u5206\u985e\u5668\u3002\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u306b\u983b\u7e41\u306b\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306b\u306f\u6700\u5c24\u6cd5\u304c\u4f7f\u308f\u308c\u308b\u3002 \u30ca\u30a4\u30fc\u30d6\u306f\u300c\u3070\u304b\u3089\u3057\u3044\u307b\u3069\u5358\u7d14\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u89aa\u304c1\u3064\u3067\u5b50\u306f\u8907\u6570\u3042\u308a\u304a\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u6700\u3082\u5358\u7d14\u306a\u5f62\u306e\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba\u3068\u547c\u3073\u307e\u3059\u3002\u4e00\u6642\u671f\u30b9\u30d1\u30e0\u30d5\u30a3\u30eb\u30bf\u306b\u4f7f\u308f\u308c\u305f\u3053\u3068\u3067\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5358\u7d14\u3068\u306f\u3044\u3048\u99ac\u9e7f\u306b\u3067\u304d\u306a\u3044\u5206\u985e\u6027\u80fd\u3092\u6301\u3064\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3082\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u3044\u3046\u306b\u306f\u5358\u7d14\u3059\u304e\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u591a\u6bb5\u306e\u89aa\u5b50\u95a2\u4fc2\u3084\u3001\u5b50\u540c\u58eb\u306e\u76f8\u4e92\u4f5c\u7528\u307e\u3067\u8003\u616e\u3059\u308b\u3088\u3046\u306a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3067\u3053\u305d\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u672c\u9818\u304c\u767a\u63ee\u3067\u304d\u307e\u3059\u3002 \u6c7a\u5b9a\u6728 \u8449\u3068\u6839\u3092\u5229\u7528\u3057\u305f\u4e88\u6e2c\u30e2\u30c7\u30eb\u3002 \u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u3067\u3088\u304f\u5229\u7528\u3055\u308c\u3001\u8449\u304c\u5206\u985e\u3001\u679d\u304c\u305d\u306e\u5206\u985e\u306b\u81f3\u308b\u307e\u3067\u306e\u7279\u5fb4\u306e\u96c6\u5408\u3002 K-\u5e73\u5747(\u6cd5) \u8ddd\u96e2\u30d9\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u30bf\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4e8b\u524d\u306b\u6c7a\u3081\u3089\u308c\u305f\u6570\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30fc\u30bf\u3092\u5272\u308a\u632f\u308b\u3002 \uff1d\uff1e\u6559\u5e2b\u7121\u3057\u5b66\u7fd2\u3067\u4ee3\u8868\u70b9\u304b\u3089\u306e\u8ddd\u96e2\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3001\u305d\u306e\u7d50\u679c\u306e\u91cd\u5fc3\u306b\u4ee3\u8868\u70b9\u3092\u79fb\u52d5\u3057\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u7e70\u308a\u8fd4\u3059 k\u8fd1\u508d\u6cd5\u306f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2 SVM Support Vector Machine\u3002\uff12\u5024\u5206\u985e\u5668\u3002 \u5ea7\u6a19\u4e0a\u306b\u30b5\u30f3\u30d7\u30eb\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3001\u6b63\u5024/\u8ca0\u4f8b\u306e\u96c6\u5408\u304b\u3089\u3082\u3063\u3068\u3082\u8ddd\u96e2\u304c\u5927\u304d\u304f\u306a\u308b\u8b58\u5225\u9762 BERT(Bidirectional Encoder Representations from Transformer) \u30de\u30b9\u30af\u306b\u3088\u308b\u7a74\u57cb\u3081\u554f\u984c\u3067\u53cc\u65b9\u5411\u306e\u5b66\u7fd2\u3092\u5b9f\u73fe\u3057\u305f\u3002Attention\u304c\u5168\u3066\uff1fWORD2VEC\u3068\u6bd4\u3079\u300c\u8a18\u53f7\u7a7a\u9593\u304b\u3089\u4e00\u56de\u308a\u5927\u304d\u3044\u8868\u73fe\u7a7a\u9593\u304b\u3089\u60c5\u5831\u3092\u63b4\u3093\u3060\u3053\u3068\u304cBERT\u304c\u6c4e\u7528\u6027\u3092\u7372\u5f97\u3057\u305f\u80cc\u666f\u300d \u30d0\u30f3\u30c7\u30a3\u30c3\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u63a2\u7d22\u3068\u6d3b\u7528\u3092\u52b9\u7387\u7684\u306b\u884c\u3044\u3001\u4e00\u5b9a\u671f\u9593\u3067\u306e\u5229\u76ca\u3092\u6700\u5927\u5316\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \uff08\u5f37\u5316\u5b66\u7fd2\u306e\u6587\u8108\u3067\u306f\uff09\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u52b9\u7387\u7684\u306a\u5b66\u7fd2\u3092\u884c\u3046\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u5358\u7d14\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u3067\u306f\u5024\u306f2\u5024\uff1d\uff1e\u5f53\u305f\u308a\u304b\u30cf\u30ba\u30ec\u304b\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u5426\u304b\u3001\u8cfc\u5165\u3055\u308c\u305f\u304b\u5426\u304b \u6b63\u89e3\u7387\u3067\u6b63\u3057\u3044\u5834\u5408\u306f\u3042\u308b\uff1f \uff1d\uff1e\u30af\u30e9\u30b9\u306b\u504f\u308a\u304c\u7121\u3051\u308c\u3070OK\u3002\u3067\u3082\u30de\u30af\u30ed\u30fb\u30de\u30a4\u30af\u30edF\u5024\u306e\u65b9\u304c\u7121\u96e3\uff1f \u30de\u30a4\u30af\u30ed\u5e73\u5747\u3068\u30de\u30af\u30ed\u5e73\u5747\u306e\u9055\u3044\uff1f \uff1d\uff1e\u30de\u30a4\u30af\u30ed\u5e73\u5747\u306f, \u307e\u305a\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u7121\u8996\u3057\u3066\u5168\u4f53\u306e\u9069\u5408\u7387\u3068\u518d\u73fe\u7387\u3092\u8a08\u7b97\u3057, \u305d\u308c\u3089\u3092\u7528\u3044\u3066F\u5024\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7b97\u51fa\u3055\u308c\u308b. \u30de\u30af\u30ed\u5e73\u5747\u306f\u307e\u305a\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306eF\u5024\u3092\u8a08\u7b97\u3057, \u305d\u308c\u3089F\u5024\u306e\u5358\u7d14\u5e73\u5747\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7b97\u51fa\u3055\u308c\u308b. \u30de\u30a4\u30af\u30ed\u5e73\u5747\u306f, \u4e8b\u4f8b\u6570\u306e\u5927\u304d\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53d7\u3051, \u30de\u30af\u30ed\u5e73\u5747\u306f\u4e8b\u4f8b\u6570\u306e\u5c0f\u3055\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53d7\u3051\u308b. \u8abf\u548c\u5e73\u5747\uff1a \u540c\u3058\u8ddd\u96e2\u3092\u9055\u3046\u901f\u5ea6\u3067\u5f80\u5fa9\u3057\u305f\u6642\u306e\u5e73\u5747\u901f\u5ea6\u3002\u30b3\u30b9\u30c8\u3092\u52a0\u5473\u3057\u305f\u52b9\u7387\u306e\u5e73\u5747\uff1f\u300c\u8abf\u548c\u5e73\u5747\u306f\u540c\u3058\u8ab2\u984c\u3092\u7570\u306a\u308b\u52b9\u7387\u3067\u3053\u306a\u3059\u5834\u5408\u306e\u5e73\u5747\u52b9\u7387\u3067\u3042\u308a\uff0c\u9069\u5408\u7387\u3082\u518d\u73fe\u7387\u3082\u9069\u5408\u6587\u66f8\u3092\u5f97\u308b\u305f\u3081\u306e\u52b9\u7387\u300d\u3002\u96fb\u6c17\u62b5\u6297\u306e\u5408\u6210\u62b5\u6297\u306e\u9006\u6570(1/ R) \u3092\u3001\u62b5\u62971\u500b\u3042\u305f\u308a\u5e73\u5747\u5024 (n / R) \u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u8abf\u548c\u5e73\u5747 F\u5024\u306e\u7531\u6765\u306f\uff1f E\u5024(error)\u306e\u6b21\u304cF\u3063\u3066\u3060\u3051\uff1f http://d.hatena.ne.jp/sleepy_yoshi/20110410/p1 \u76f8\u4e57\u5e73\u5747\uff08\u5e7e\u4f55\u5e73\u5747\uff09\uff1a\u30d4\u30bf\u30b4\u30e9\u30b9\u306e\u5e73\u5747\u3002\u4e09\u89d2\u5f62\u306e\u6b8b\u308a\u306e\u4e00\u8fba\u306e\u6c42\u3081\u65b9\u3002\u4e8c\u4e57\u3057\u3066\u8db3\u3057\u3066\u5e73\u65b9\u6839\uff1f \u76f8\u52a0\u5e73\u5747\uff08\u7b97\u8853\u5e73\u5747\uff09\uff1a \u5e30\u7d0d\u3068\u6f14\u7e79\uff1a \u56de\u5e30\u306a\u3069\u30c7\u30fc\u30bf\u306b\u3088\u308b\u6a5f\u68b0\u5b66\u7fd2\u306f\u5e30\u7d0d\u6cd5\u3002\u7406\u8ad6\u306b\u3088\u308a\u51e6\u7406\u3059\u308b\u5834\u5408\u306f\u6f14\u7e79\u6cd5\u3002 \u671f\u5f85\u5024\uff1a\u5e73\u5747\u306e\u3053\u3068. E()\u3067\u8868\u3055\u308c\u308b\u3002\u3061\u306a\u307f\u306b\u7d71\u8a08\u3067\u306fmean\u304c\u7b97\u8853\u5e73\u5747\u3002avarage\u306f\u4e2d\u592e\u5024\u306a\u3069\u542b\u3081\u305f\u30a2\u30d0\u30a6\u30c8\u306a\u4f7f\u308f\u308c\u65b9\u3092\u3059\u308b\u305f\u3081\u3002 Mean Absolute Error (MAE):\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\u3068\u3082\u8a00\u3044\u307e\u3059\u3002RMSE \u3068 MAE \u306f\u3001\u3068\u3082\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u8aa4\u5dee\u306e\u6307\u6a19\u3067\u3059\u3002RMSE \u306f\u30eb\u30fc\u30c8\u306e\u4e2d\u8eab\u3067\u4e8c\u4e57\u3057\u3066\u3044\u308b\u306e\u3067\u3001MAE \u3088\u308a\u3082\u5916\u308c\u5024\uff08\u5927\u304d\u306a\u30ba\u30ec\uff09\u3092\u3001\u3088\u308a\u5927\u304d\u306a\u8aa4\u5dee\u3068\u3057\u3066\u6271\u3046\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002 Root mean squared error (RMSE):\u6a19\u6e96\u504f\u5dee\u3063\u307d\u3044\u5f0f\u3067\u3059\u3002\u5e73\u5747\u5e73\u65b9\u4e8c\u4e57\u8aa4\u5dee\u3001RMS Error\u3001RMSD\uff08Root Mean Square Deviation\uff09\u306a\u3069\u3068\u3082\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 MSE\uff08Mean Squared Error\uff09:\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u3068\u3082\u8a00\u3044\u307e\u3059\u3002\u5206\u6563\u3063\u307d\u3044\u5f0f\u3067\u3059\u3002 https://mathwords.net/rmsemae MAPE(Mean absolute percentage error):\u5e73\u5747\u7d76\u5bfe\u30d1\u30fc\u30bb\u30f3\u30c8\u8aa4\u5dee\u3001\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\u7387 https://qiita.com/japanesebonobo/items/ad51cbbf36236b023df0 \u30ed\u30b8\u30c3\u30c8\u95a2\u6570\u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u9006\u95a2\u6570 \u30ab\u30aa\u30b9\u7406\u8ad6\uff1a\u30ea\u30a2\u30d7\u30ce\u30d5\u6307\u6570\u3092\u7528\u3044\u3066\u691c\u8a3c\u3057\u305f\u3002\u30ea\u30a2\u30d7\u30ce\u30d5\u6307\u6570\u304c\u6b63\u3067\u3042\u308c\u3070\u3001\u30ab\u30aa\u30b9\u7cfb\u306e\u7279\u5fb4\u3067\u3042\u308b\u521d\u671f\u5024\u92ed\u654f\u6027\u3092\u3082\u3064\u3053\u3068\u306b\u306a\u308a\u3001\u305d\u306e\u30b7\u30e0\u30c6\u30e0\u306b\u304a\u3051\u308b\u4e88\u6e2c\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306b\u306a\u308b\u3068\u3044\u3046\u3002 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u25cf\u7528\u8a9e VAE\uff1a\u5909\u5206\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0 \u5c24\u5ea6(\u3086\u3046\u3069) : \u5c24(\u3082\u3063)\u3082\u3089\u3057\u3055 \u6a5f\u68b0\u5b66\u7fd2(machine learning)\uff1a \u6a5f\u68b0\u5b66\u7fd2\u3068\u306f\u3001\u5927\u91cf\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u6a5f\u68b0\u306b\u8aad\u307f\u8fbc\u307e\u305b\u3001\u5206\u985e\u3084\u5224\u65ad\u3068\u8a00\u3063\u305f\u63a8\u8ad6\u306e\u305f\u3081\u306e\u30eb\u30fc\u30eb\u3092\u6a5f\u68b0\u306b\u4f5c\u3089\u305b\u3088\u3046\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u5927\u304d\u304f\u300c\u5b66\u7fd2\u300d\u3068\u300c\u63a8\u8ad6\u300d\u306e\uff12\u3064\u306b\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b66\u7fd2(learning): \u30cb\u30e5\u30fc\u30e9\u30eb\u30fb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6559\u80b2\u8ab2\u7a0b\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0(training)\uff1flearning\u306f\u5e83\u7fa9\u306e\u5b66\u7fd2\u3067training\u306f\u72ed\u7fa9\uff1f \u63a8\u8ad6(inference): \u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58: \u97f3\u58f0\u8a8d\u8b58\u3001\u753b\u50cf\u8a8d\u8b58\u3001\u7a7a\u9593\u8a8d\u8b58\u306a\u3069\u7e8f\u3081\u305f\u8a00\u3044\u65b9\uff1f\u3000\u81ea\u7136\u60c5\u5831\u51e6\u7406\u306e\u3072\u3068\u3064\u3002\u753b\u50cf\u30fb\u97f3\u58f0\u306a\u3069\u306e\u96d1\u591a\u306a\u60c5\u5831\u3092\u542b\u3080\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u3001\u4e00\u5b9a\u306e\u898f\u5247\u3084\u610f\u5473\u3092\u6301\u3064\u5bfe\u8c61\u3092\u9078\u5225\u3057\u3066\u53d6\u308a\u51fa\u3059\u51e6\u7406\u3067\u3042\u308b\u3002\u300c\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306f\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306b\u8d77\u6e90\u3092\u6301\u3061\u3001\u6a5f\u68b0\u5b66\u7fd2\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u9818\u57df\u3067\u767a\u9054\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u540c\u3058\u5206\u91ce\u306e\uff12\u3064\u306e\u5074\u9762\u3068\u3082\u307f\u306a\u305b\u308b\u3002\u300d\u300c\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306f\u5de5\u5b66\u3092\u8d77\u6e90\u3068\u3059\u308b\u304c\u3001\u6a5f\u68b0\u5b66\u7fd2\u306f\u8a08\u7b97\u6a5f\u79d1\u5b66\u306e\u5206\u91ce\u304b\u3089\u751f\u3058\u3066\u3044\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u3089\u306e\u7814\u7a76\u6d3b\u52d5\u5185\u5bb9\u306f\u3001\u540c\u3058\u5206\u91ce\u30922\u3064\u306e\u5074\u9762\u304b\u3089\u898b\u305f\u3082\u306e\u3068\u307f\u306a\u305b\u3001\u4e21\u5206\u91ce\u3068\u308210\u5e74\u9593\u306b\u5927\u304d\u304f\u767a\u5c55\u3057\u305f\u3002\u300d Formal Method: \u5f62\u5f0f\u624b\u6cd5\uff08Formal Method\uff09\u6570\u5b66\u7684\u306a\u6982\u5ff5\u3092\u7528\u3044\u3066\u5bfe\u8c61\u3092\u8868\u73fe\u3059\u308b\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u4e3b\u306b\u300c\u96c6\u5408\u300d\u3068\u3001\u96c6\u5408\u3084\u96c6\u5408\u306e\u8981\u7d20\u540c\u58eb\u306e\u300c\u95a2\u4fc2\u300d\u3092\u7528\u3044\u3066\u5bfe\u8c61\u3092\u8868\u73fe\u3059\u308b\u3002\u305d\u3057\u3066\u8907\u6570\u306e\u96c6\u5408\u3084\u95a2\u4fc2\u306b\u5bfe\u3057\u3066\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306b\u3001\u305d\u308c\u3089\u306e\u95a2\u4fc2\u304c\u300c\u6210\u308a\u7acb\u3064\u300d\u3082\u3057\u304f\u306f\u300c\u6210\u308a\u7acb\u305f\u306a\u3044\u300d\u3068\u3044\u3046\u8a00\u660e\u3092\u300c\u8ad6\u7406\u547d\u984c\u300d\u306e\u5f62\u3067\u8868\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u300c\u8ad6\u7406\u300d\u3092\u6570\u5b66\u7684\u306b\u6271\u3046\u5b66\u554f\u5206\u91ce\u306f\u300c\u6570\u7406\u8ad6\u7406\u5b66\u300d\u3068\u547c\u3070\u308c\u3001\u5f62\u5f0f\u624b\u6cd5\u306f\u4e3b\u306b\u305d\u306e\u4e2d\u3067\u7814\u7a76\u3055\u308c\u3066\u304d\u305f\u3002 GEMM(General Matrix Multiply):\u6b63\u65b9\u884c\u5217\u540c\u58eb\u306e\u7a4d\u7b97 \u30c6\u30f3\u30bd\u30eb\uff1a \u30c6\u30f3\u30bd\u30eb\uff08\u82f1: tensor, \u72ec: Tensor\uff09\u3068\u306f\u3001\u7dda\u5f62\u7684\u306a\u91cf\u307e\u305f\u306f\u7dda\u5f62\u7684\u306a\u5e7e\u4f55\u6982\u5ff5\u3092\u4e00\u822c\u5316\u3057\u305f\u3082\u306e\u3067\u3001\u57fa\u5e95\u3092\u9078\u3079\u3070\u3001\u591a\u6b21\u5143\u306e\u914d\u5217\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002 \u3057\u304b\u3057\u3001\u30c6\u30f3\u30bd\u30eb\u81ea\u8eab\u306f\u3001\u7279\u5b9a\u306e\u5ea7\u6a19\u7cfb\u306b\u3088\u3089\u306a\u3044\u3067\u5b9a\u307e\u308b\u5bfe\u8c61\u3067\u3042\u308b\u3002 \u30c6\u30f3\u30bd\u30eb\u7a4d\uff1a\u6570\u5b66\u306b\u304a\u3051\u308b\u30c6\u30f3\u30bd\u30eb\u7a4d\uff08\u30c6\u30f3\u30bd\u30eb\u305b\u304d\u3001\u82f1: tensor product\uff09\u306f\u3001\u7dda\u578b\u4ee3\u6570\u5b66\u3067\u91cd\u7dda\u578b\u6027\u3092\u6271\u3046\u305f\u3081\u306e\u7dda\u578b\u5316\u3092\u62c5\u3046\u6982\u5ff5\u3067\u3001\u65e2\u77e5\u306e\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u30fb\u52a0\u7fa4\u306a\u3069\u69d8\u3005\u306a\u5bfe\u8c61\u304b\u3089\u65b0\u305f\u306a\u5bfe\u8c61\u3092\u4f5c\u308a\u51fa\u3059\u64cd\u4f5c\u306e\u4e00\u3064\u3067\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u3044\u305a\u308c\u306e\u5bfe\u8c61\u306b\u95a2\u3057\u3066\u3082\u3001\u30c6\u30f3\u30bd\u30eb\u7a4d\u306f\u6700\u3082\u81ea\u7531\u306a\u53cc\u7dda\u578b\u4e57\u6cd5\u3067\u3042\u308b\u3002 Define by Run \u3068 Define and Run\uff1a\u3000\u524d\u8005\u306f\u67d4\u8edf\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u53ef\u80fd Chainer\u7b49\u3001\u5f8c\u8005\u306f\u982d\u304c\u56fa\u3044TensorFlow\u7b49\u3002 YORO9000: FW\u3067\u306f\u306a\u30449000\u7a2e\u985e\u4ee5\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ab\u30c6\u30b4\u30ea\u3092\u691c\u51fa\u3067\u304d\u308b\u6700\u5148\u7aef\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u691c\u51fa\u30b7\u30b9\u30c6\u30e0 seq2seq(Sequence to Sequence):RNN\u7cfb\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u6587\u306e\u751f\u6210\u30e2\u30c7\u30eb\u3068\u3057\u3066\u3001\u6709\u540d\u306a\u3082\u306e\u306bsequence to sequence\uff08Seq2Seq\uff09\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002Seq2Seq\u3068\u306f\u3001RNN\u3092\u7528\u3044\u305fEncoderDecoder\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308a\u3001\u6a5f\u68b0\u5bfe\u8a71\u3084\u6a5f\u68b0\u7ffb\u8a33\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 word2vec:\u7c73\u30b0\u30fc\u30b0\u30eb\u306e\u7814\u7a76\u8005\u3067\u3042\u308b\u30c8\u30de\u30b9\u30fb\u30df\u30b3\u30ed\u30d5\u6c0f\u3089\u304c\u63d0\u6848\u3057\u305f\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u624b\u6cd5\u3002\u5358\u8a9e\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3057\u3066\u8868\u73fe\u3059\u308b\u3059\u308b\u5b9a\u91cf\u5316\u624b\u6cd5\u3067\u3042\u308b\u3002\u4f8b\u3048\u3070\u65e5\u672c\u4eba\u304c\u65e5\u5e38\u7684\u306b\u4f7f\u3046\u8a9e\u5f59\u6570\u306f\u6570\u4e07\u304b\u3089\u6570\u5341\u4e07\u3068\u3044\u308f\u308c\u308b\u304c\u3001Word2Vec\u3067\u306f\u5404\u5358\u8a9e\u3092200\u6b21\u5143\u304f\u3089\u3044\u306e\u7a7a\u9593\u5185\u306b\u304a\u3051\u308b\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u8868\u73fe\u3059\u308b\u3002\u305d\u306e\u7d50\u679c\u3001\u4eca\u307e\u3067\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u308a\u7cbe\u5ea6\u3092\u5411\u4e0a\u3059\u308b\u306e\u304c\u96e3\u3057\u304b\u3063\u305f\u5358\u8a9e\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3084\u3001\u5358\u8a9e\u9593\u3067\u306e\u52a0\u7b97\u30fb\u6e1b\u7b97\u306a\u3069\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5358\u8a9e\u306e\u300c\u610f\u5473\u300d\u3092\u6349\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002 \u8a18\u53f7\u8ad6\u7406\u5b66\uff1a\u5f62\u614b\u7d20\u89e3\u6790\uff08\u3082\u3063\u3068\u3082\u5c0f\u3055\u306a\u6587\u6cd5\u5358\u4f4d\u306b\u5206\u5272\u3057\u3066\u89e3\u6790\u3059\u308b\u3053\u3068\uff09\u3084\u69cb\u6587\u89e3\u6790\uff08\u4e0e\u3048\u3089\u308c\u305f\u8a00\u8a9e\u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u3001\u6587\u6cd5\u69cb\u9020\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\uff09\u306b\u3088\u3063\u3066\u81ea\u7136\u8a00\u8a9e\u6587\u3092\u89e3\u6790\u3067\u304d\u305f\u3068\u3057\u3066\u3001\u6587\u7ae0\u306b\u3072\u305d\u3080\u8ad6\u7406\u69cb\u9020\u3092\u898b\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\u8a00\u8449\u3067\u8868\u73fe\u3055\u308c\u308b\u6587\u3092\u8ad6\u7406\u8a18\u53f7\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u306e\u8ad6\u7406\u95a2\u4fc2\u306b\u3088\u3063\u3066\u6587\u3092\u6349\u3048\u308b\u3068\u3044\u3046\u5b66\u554f\u3092\u300e\u8a18\u53f7\u8ad6\u7406\u5b66\u300f\u3068\u547c\u3073\u3001\u767a\u7965\u306f\uff11\uff19\u4e16\u7d00\u3068\u3044\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u8ad6\u7406\u5b66\u306e\u4e2d\u3067\u6700\u3082\u57fa\u672c\u3068\u306a\u308b\u306e\u304c\u3001\u547d\u984c\u8ad6\u7406\u3067\u3059\u3002\u547d\u984c\u8ad6\u7406\u3067\u306f\u3001 \u547d\u984c\u3001\u3059\u306a\u308f\u3061\u3001\u4e00\u3064\u4e00\u3064\u306e\u4e8b\u8c61\u3092\u6700\u5c0f\u5358\u4f4d\u3068\u3057\u3066\u6271\u3044\u3001\u305d\u308c\u3089\u3068\u3001 \u8ad6\u7406\u6f14\u7b97\u5b50\uff08\u8ad6\u7406\u7a4d\u3084\u8ad6\u7406\u548c\u306a\u3069\uff09\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u8907\u96d1\u306a\u547d\u984c\u3092\u69cb\u6210\u3057\u3001 \u305d\u308c\u3089\u306e\u59a5\u5f53\u6027\uff08\u771f\u507d\u5024\uff09\u3092\u8a08\u7b97\u3057\u305f\u308a\u3057\u307e\u3059\u3002\u547d\u984c\u8ad6\u7406\u3067\u306f\u3001\u59a5\u5f53\u306a\u63a8\u8ad6\u304c\u5fc5\u305a\u3057\u3082\u5b9a\u5f0f\u5316\u3067\u304d\u307e\u305b\u3093\u3002 \u305d\u3053\u3067\u3001\u547d\u984c\u8ad6\u7406\u306b\u8ff0\u8a9e\u3068\u3044\u3046\u6982\u5ff5\u3092\u53d6\u308a\u5165\u308c\u62e1\u5f35\u3057\u305f\u306e\u304c\u8ff0\u8a9e\u8ad6\u7406 \u3067\u3059\u3002\u8ff0\u8a9e\u8ad6\u7406\u3067\u306f\u3001\u547d\u984c\u3092\u8ff0\u8a9e\u3068\u305d\u308c\u306b\u95a2\u308f\u308b\u30c7\u30fc\u30bf\u3068\u306b\u5206\u89e3\u3057\u3066 \u6271\u3044\u307e\u3059\u3002 \uff1d\uff1eDL\u4ee5\u524d\u306e\u4eba\u5de5\u77e5\u80fd\u6280\u8853\u3002But Formal Methods(\u5f62\u5f0f\u624b\u6cd5)\u306b\u306f\u8fd1\u3044\uff1f \u6f14\u7e79(deduction)\u3068\u5e30\u7d0d(induction):\u6f14\u7e79\u6cd5\u306f\u3001\u300c\u00d7\u00d7\u3060\u304b\u3089\u3001\u25cb\u25cb\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u8ad6\u7406\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3057\u3066\u3044\u304d\u3001\u7d50\u8ad6\u3092\u5f15\u304d\u51fa\u3059\u65b9\u6cd5\u3067\u3059\u3002\u5e30\u7d0d\u6cd5\u306f\u3001\u591a\u304f\u306e\u89b3\u5bdf\u4e8b\u9805\uff08\u4e8b\u5b9f\uff09\u304b\u3089\u985e\u4f3c\u70b9\u3092\u307e\u3068\u3081\u4e0a\u3052\u308b\u3053\u3068\u3067\u3001\u7d50\u8ad6\u3092\u5f15\u304d\u51fa\u3059\u3068\u3044\u3046\u8ad6\u6cd5\u3067\u3059\u3002 \u7d71\u8a08\u5b66(statistics) \u25cf\u753b\u50cf\u51e6\u7406\u95a2\u9023 Occlusion:\u906e\u853d. 3\u6b21\u5143\u7a7a\u9593\u3067\u306f\u3001\u4e0a\u4e0b\u30fb\u5de6\u53f3\u306e\u4ed6\u306b\u524d\u5f8c\u95a2\u4fc2\u304c\u3042\u308a\u3001\u624b\u524d\u306b\u3042\u308b\u7269\u4f53\u304c\u80cc\u5f8c\u306b\u3042\u308b\u7269\u4f53\u3092\u96a0\u3057\u3066\u898b\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u72b6\u614b\u304c\u767a\u751f\u3059\u308b\u3002\u3053\u308c\u3092\u30aa\u30af\u30eb\u30fc\u30b8\u30e7\u30f3\u3068\u3044\u3046\u3002 \u3007\u30ed\u30dc\u30c6\u30a3\u30af\u30b9 Robot Operating System (ROS) \u3007\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 PASCAL VOC: \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(\u56db\u89d2\u3044\u67a0)\u4ed8\u304d\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u3000 http://host.robots.ox.ac.uk/pascal/VOC/ COCO - Common Object in Context:\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u60c5\u5831(\u3044\u308f\u3086\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3088\u308a\u3082\u8a73\u3057\u3044\u3001\u753b\u7d20\u30ec\u30d9\u30eb\u3067\u306e\u7269\u4f53\u8a8d\u8b58\u60c5\u5831)\u304c\u4ed8\u52a0\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002 http://cocodataset.org/ CIFAR-10 / CIFAR-100: \u3042\u306eAlexNet\u306eAlex Krizhevsky\u6c0f\u306e\u30b0\u30eb\u30fc\u30d7\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u300210\u30af\u30e9\u30b9\u5206\u985e\u3068100\u30af\u30e9\u30b9\u5206\u985e\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002 http://www.cs.toronto.edu/~kriz/cifar.html ImageNet: 2009\u5e74\u306eCVPR\u306b\u3066\u30d7\u30ea\u30f3\u30b9\u30c8\u30f3\u5927\u5b66\u306e\u30c1\u30fc\u30e0\u304c\u516c\u958b\u3057\u305f\u306e\u304c\u304d\u3063\u304b\u3051\u3067\u767a\u5c55\u3057\u305f\u30011400\u4e07\u679a\u8d85\u306e\u753b\u50cf\u3068\u610f\u5473\u3092\u793a\u3059\u30bf\u30b0\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002100\u4e07\u679a\u307b\u3069\u306f\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u3059\u3002 http://www.image-net.org/ \u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc","title":"\u6a5f\u68b0\u5b66\u7fd2\u7528\u8a9e\u8f9e\u5178"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_1","text":"","title":"\u6a5f\u68b0\u5b66\u7fd2\u7528\u8a9e\u8f9e\u5178"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#dnn","text":"CNN(Convolution Neural Network): \u901a\u5e38\u306eNeural Network\u306bConvolution\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3002\u3053\u3053\u3067\u306f\u3001Convolution\u3001\u7573\u307f\u8fbc\u307f\u3068\u306f\u4e00\u4f53\u306a\u3093\u306a\u306e\u304b\u3001\u3068\u3044\u3046\u70b9\u3068\u3001\u306a\u305c\u305d\u308c\u304c\u753b\u50cf\u8a8d\u8b58\u306b\u6709\u52b9\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002 CNN\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u9818\u57df\u306e\u60c5\u5831\u3092\u7573\u307f\u8fbc\u3093\u3067\u4f5c\u6210\u3059\u308bConvolution Layer\u3092\u5c0e\u5165\u3057\u305f\u3001Neural Network\u306e\u3053\u3068\u3067\u3042\u308b Convolution Layer\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u79fb\u52d5\u3055\u305b\u306a\u304c\u3089\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u4f5c\u6210\u3057\u3001\u30d5\u30a3\u30eb\u30bf\u306e\u6570\u3060\u3051\u4f5c\u6210\u3055\u308c\u308b\u3002\u3053\u308c\u3092\u91cd\u306d\u3066\u6d3b\u6027\u5316\u95a2\u6570(ReLU\u7b49)\u3067\u7e4b\u3044\u3067\u3044\u304f\u3053\u3068\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u3002 \u7573\u307f\u8fbc\u307f\u306b\u3088\u308a\u70b9\u3067\u306f\u306a\u304f\u9818\u57df\u30d9\u30fc\u30b9\u3067\u306e\u7279\u5fb4\u62bd\u51fa\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u753b\u50cf\u306e\u79fb\u52d5\u3084\u5909\u5f62\u306a\u3069\u306b\u9811\u5065\u306b\u306a\u308b\u3002\u307e\u305f\u3001\u30a8\u30c3\u30b8\u306a\u3069\u9818\u57df\u30d9\u30fc\u30b9\u3067\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u7279\u5fb4\u62bd\u51fa\u3082\u53ef\u80fd\u306b\u306a\u308b\u3002 RNN\uff08Recurrent Neural Network\uff09:CNN\u304c\u6271\u3046\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u4e8c\u6b21\u5143\u306e\u77e9\u5f62\u30c7\u30fc\u30bf\u3067\u3057\u305f\u304c\u3001\u97f3\u58f0\u30c7\u30fc\u30bf\u306f\u53ef\u5909\u9577\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3067\u3059\u3002\u3053\u306e\u53ef\u5909\u9577\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u6271\u3046\u305f\u3081\u3001\u96a0\u308c\u5c64\u306e\u5024\u3092\u518d\u3073\u96a0\u308c\u5c64\u306b\u5165\u529b\u3059\u308b\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u306b\u3057\u305f\u306e\u304c\u3001RNN\uff08Recurrent Neural Network\uff09\u3067\u3059\u3002\u3053\u306eRNN\u306b\u306f\u3001\u9577\u6642\u9593\u524d\u306e\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u8aa4\u5dee\u304c\u6d88\u6ec5\u3057\u305f\u308a\u6f14\u7b97\u91cf\u304c\u7206\u767a\u3059\u308b\u306a\u3069\u306e\u554f\u984c\u304c\u3042\u308a\u3001\u77ed\u6642\u9593\u306e\u30c7\u30fc\u30bf\u3057\u304b\u51e6\u7406\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 LSTM:LSTM\uff08Long Short-Term Memory\uff09\u306fRNN\u306e\u6b20\u70b9\u3092\u89e3\u6d88\u3057\u3001\u9577\u671f\u306e\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5f37\u529b\u306a\u30e2\u30c7\u30eb\u3067\u3059\u3002\u767a\u8868\u3055\u308c\u305f\u306e\u306f1997\u5e74\u3068\u304b\u306a\u308a\u524d\u3067\u3059\u304c\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u6d41\u884c\u3068\u5171\u306b\u3001\u6700\u8fd1\u6025\u901f\u306b\u6ce8\u76ee\u3055\u308c\u59cb\u3081\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306b\u5fdc\u7528\u3055\u308c\u308b\u3001\u5927\u304d\u306a\u6210\u679c\u3092\u3042\u3052\u59cb\u3081\u3066\u3044\u307e\u3059\u3002 \u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\uff08\u81ea\u5df1\u7b26\u53f7\u5316\u5668\uff09:\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u6838\u306f\u6b21\u5143\u524a\u6e1b\u3067\u3042\u308b\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e00\u7a2e\u3067\u3001\u60c5\u5831\u91cf\u3092\u5c0f\u3055\u304f\u3057\u305f\u7279\u5fb4\u8868\u73fe\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306b\u3042\u308b\u3002\u5727\u7e2e\u3057\u3066\u3044\u304f\u904e\u7a0b\u3092\u30a8\u30f3\u30b3\u30fc\u30c0\u3068\u547c\u3073\u3001\u5fa9\u5143\u3059\u308b\u904e\u7a0b\u3092\u30c7\u30b3\u30fc\u30c0\u3068\u547c\u3076\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u7528\u3044\u3066\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u91cd\u307f\u306e\u521d\u671f\u5024\u3092\u4e88\u3081\u63a8\u5b9a\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u4e8b\u524d\u5b66\u7fd2(pre-training)\u3068\u3044\u3046\u304c\u3001\u3082\u3046\u4eca\u3067\u306f\u5b9f\u7528\u7684\u306a\u7528\u9014\u3068\u3057\u3066\u306f\u3081\u3063\u305f\u306b\u4f7f\u308f\u308c\u3066\u306a\u3044\u3089\u3057\u3044\u3002\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u306f\u6b21\u5143\u5727\u7e2e\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u304c\u3001\u5165\u529b\u3068\u51fa\u529b\u3092\u540c\u3058\u306b\u3059\u308b\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u5bfe\u8c61\u306e\u7279\u5fb4\u8868\u73fe\u3092\u81ea\u5df1\u5b66\u7fd2\u3057\u3066\u3057\u307e\u3046\u3068\u3053\u308d\u304c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u611f\u3058\u3055\u305b\u308b\u3002\u305d\u3057\u3066\u3001\u4eca\u306f\u751f\u6210\u30e2\u30c7\u30eb\u3067\u3082\u52b9\u679c\u3092\u767a\u63ee\u3057\u306f\u3058\u3081\u3066\u3044\u308b\u3002 GAN: \u6700\u65b0\u306e\u751f\u6210\u30e2\u30c7\u30eb\u3067\u3042\u308bGAN\uff08Generative Adversarial Network\uff09\u306f\u3001\u975e\u5e38\u306b\u6ce8\u76ee\u3092\u96c6\u3081\u3066\u3044\u308b\u624b\u6cd5\u3067\u3059\u3002GAN\u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001\u305f\u3068\u3048\u8a71\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\u56f3\u306e\u30a4\u30e9\u30b9\u30c8\u306e\u3088\u3046\u306b\u3001\u30cb\u30bb\u672d\u9020\u308a\u306e\u507d\u9020\u8005\u3068\u8b66\u5bdf\u5b98\u306e2\u540d\u306e\u767b\u5834\u4eba\u7269\u304c\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u507d\u9020\u8005\u306f\u3001\u672c\u7269\u306e\u7d19\u5e63\u3068\u4f3c\u305f\u30cb\u30bb\u672d\u3092\u9020\u308a\u307e\u3059\u3002\u8b66\u5bdf\u5b98\u306f\u3001\u30cb\u30bb\u672d\u3092\u898b\u7834\u308d\u3046\u3068\u3057\u307e\u3059\u3002\u4e0b\u624b\u306a\u30cb\u30bb\u672d\u306f\u7c21\u5358\u306b\u8b66\u5bdf\u5b98\u306b\u898b\u7834\u3089\u308c\u307e\u3059\u304c\u3001\u507d\u9020\u8005\u306e\u8155\u304c\u4e0a\u304c\u3063\u3066\u7cbe\u5de7\u306a\u30cb\u30bb\u672d\u306b\u306a\u3063\u3066\u3044\u304f\u3068\u3001\u8b66\u5bdf\u5b98\u3082\u306a\u3093\u3068\u304b\u30cb\u30bb\u672d\u3092\u898b\u7834\u308d\u3046\u3068\u9811\u5f35\u3063\u3066\u898b\u5206\u3051\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u304a\u4e92\u3044\u306b\u5207\u78cb\u7422\u78e8\u3057\u3066\u3044\u304f\u3068\u3001\u6700\u7d42\u7684\u306b\u306f\u30cb\u30bb\u672d\u304c\u672c\u7269\u306e\u7d19\u5e63\u3068\u533a\u5225\u304c\u3064\u304b\u306a\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002 SNN(Spiking Neural Network):\u5f93\u6765\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u7570\u306a\u308a\u767a\u706b\u983b\u5ea6\u3067\u306f\u306a\u304f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5185\u90e8\u96fb\u4f4d\u306b\u6ce8\u76ee\u3057\u305f\u30e2\u30c7\u30eb\u3002\u30a2\u30ca\u30ed\u30b0\u91cf\u3092\u30d1\u30eb\u30b9\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3059\u308b\u305f\u3081\u3001\u751f\u4f53\u6a21\u5023\u306e\u5fe0\u5b9f\u5ea6\u304c\u9ad8\u3044\u3002\u975e\u540c\u671f\u52d5\u4f5c\u306a\u306e\u3067\u9ad8\u901f\u51e6\u7406\u304c\u8ab2\u984c\u3002 NNA(Neural Network Accelerator): \u5c02\u7528HW\u3002\u57fa\u672c\u884c\u5217\u7a4d\u548c\u7b97\u306e\u9ad8\u901f\u5316\u3002","title":"DNN"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#fw","text":"PyTorch: Define-by-Run \u3067\u52d5\u7684\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u3059\u308b\u30d1\u30e9\u30c0\u30a4\u30e0\u3002 PyTorch Lightning: PyTorch\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066PyTorch\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u91cf\u3092\u5927\u5e45\u306b\u524a\u6e1b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002 Caffe: [C++(python,matlab\u3082\u53ef\u80fd?)]. \u753b\u50cf\u8a8d\u8b58\u306b\u5411\u3044\u3066\u3044\u308b\uff1fC++\u3067\u5b9f\u88c5\u3055\u308c\u3001GPU\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u9ad8\u901f\u306a\u8a08\u7b97\u51e6\u7406\u304c\u53ef\u80fd\u3002Caffe is a community\u3000\u3068\u3044\u3046\u30ad\u30e3\u30c3\u30c1\u30b3\u30d4\u30fc\u3082\u3042\u308b\u307b\u3069\u3001\u305d\u306e\u958b\u767a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc\u304c\u6d3b\u767a\u306bgithub\u3092\u66f4\u65b0\u3057\u3066\u3044\u305f\u308a\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3082\u591a\u304f\u521d\u5fc3\u8005\u306b\u63a8\u5968\u3055\u308c\u308b\u3002\u5927\u898f\u6a21\u753b\u50cf\u8a8d\u8b58\u306e\u30b3\u30f3\u30c6\u30b9\u30c8ILSVRC\u30672012\u5e74\u306b1\u4f4d\u3068\u306a\u3063\u305f\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u753b\u50cf\u5c3e\u5206\u985e\u30e2\u30c7\u30eb\u304c\u3059\u3050\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002Caffe\u306f\u3001\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5927\u5b66\u30d0\u30fc\u30af\u30ec\u30fc\u6821\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u304a\u3088\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u7814\u7a76\u30bb\u30f3\u30bf\u30fc\u3067\u3042\u308bBVLC\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3002\u30e4\u30d5\u30fc\u30b8\u30e3\u30d1\u30f3\u306f2014\u5e746\u6708\u304b\u3089\u540c\u30bb\u30f3\u30bf\u30fc\u306e\u30b9\u30dd\u30f3\u30b5\u30fc\u306b\u306a\u3063\u3066\u3044\u3066\u3001Caffe\u306e\u958b\u767a\u3092\u542b\u3081\u305f\u30bb\u30f3\u30bf\u30fc\u306e\u7814\u7a76\u306e\u652f\u63f4\u3092\u884c\u3063\u3066\u3044\u308b\u3002 Caffe2: C++.Facebook?\u3000Caffe\u306f\u3001\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5927\u5b66\u30d0\u30fc\u30af\u30ec\u30fc\u6821\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u304a\u3088\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3059\u308b\u7814\u7a76\u30bb\u30f3\u30bf\u30fc\u3067\u3042\u308bBVLC\u304c\u4e2d\u5fc3\u3068\u306a\u3063\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3002 Chainer: [Python].\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a18\u8ff0\u306b\u7279\u5316\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\u30d7\u30ea\u30d5\u30a1\u30fc\u30c9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u793e\u306e\u65e5\u672c\u7523\u3067\u3042\u308a\u3001\u975e\u5e38\u306b\u6271\u3044\u3084\u3059\u3044\u8a18\u8ff0\u4f53\u7cfb\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002Define by Run\u306b\u3088\u3063\u3066\u67d4\u8edf\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u3001\u6700\u3082\u5927\u304d\u306a\u7279\u5fb4\u3002Python\u3060\u304c\u3001\u8a08\u7b97\u306e\u51e6\u7406\u306fnumpy\uff08C\u8a00\u8a9e\u3067\u306e\u5b9f\u88c5\uff09\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u308b\u3002\u4e3b\u306a\u9700\u8981\u306f\u56fd\u5185\u306e\u307f\u3002\u65e5\u672c\u88fd\u3089\u3057\u304f\u7701\u30e1\u30e2\u30ea\u6307\u5411\uff1f Keras: \u2605TensorFlow\u306e\u4e0a\u4f4dAPI\u306b\u7d71\u5408\u3055\u308c\u308b?\u2605 \u5c64\u3092\u305f\u3060\u305f\u3060\u7a4d\u307f\u91cd\u306d\u3066\u3044\u304f\u3060\u3051\u3068\u3044\u3046\u3001\u3068\u3093\u3067\u3082\u306a\u304f\u7c21\u5358\u306a\u5b9f\u88c5\u304c\u53ef\u80fd\u3067\u3059\u3002Keras\u306e\u767b\u5834\u306b\u3088\u308a\u3001Chainer\u3092\u4f7f\u3063\u3066\u3044\u305f\u4eba\u305f\u3061\u304c\u4e00\u6c17\u306b\u6d41\u308c\u3066\u3044\u3063\u305f\u5370\u8c61\u3055\u3048\u3042\u308a\u307e\u3059\u3002Keras\u306f\u300cTheano\u300d\u3084\u300cTensorFlow\u300d\u306e\u3088\u3046\u306a\u30c6\u30f3\u30bd\u30eb\u3092\u9ad8\u901f\u8a08\u7b97\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066\u767b\u5834\u3057\u307e\u3057\u305f\u3002\u8a18\u8ff0\u3092\u7c21\u4fbf\u5316\u3059\u308b\u306e\u304c\u5f79\u5272\u3067\u3042\u308b\u305f\u3081\u3001\u7c21\u5358\u306b\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u306f\u5f53\u305f\u308a\u524d\u3068\u8a00\u3048\u3070\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u7c21\u5358\u306a\u3060\u3051\u3067\u306a\u304f\u3001\u5b66\u7fd2\u306e\u30b3\u30fc\u30c9\u3082\u3001\u5b66\u7fd2\u56de\u6570\u306a\u3069\u306e\u6761\u4ef6\u3092\u5f15\u6570\u306b\u305f\u3063\u305f\u4e00\u884c\u3067\u5b9f\u88c5\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002 TensorFlow :[Python/C++].\u5b9f\u969b\u306b\u306f\u591a\u6b21\u5143\u914d\u5217\u306e\u8a08\u7b97\u3092\u52b9\u7387\u5316\u3057\u3001\u8a08\u7b97\u30b0\u30e9\u30d5\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304cTensorFlow\u306e\u5f79\u5272\u3067\u3059\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u8a18\u8ff0\u3067\u304d\u308b\u305f\u3081\u3001\u5f53\u7136TensorFlow\u304c\u6df1\u5c64\u5b66\u7fd2\u304c\u5927\u6d3b\u8e8d\u3059\u308b\u306e\u306f\u7591\u3044\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u5b9f\u969b\u306b\u306f\u3001\u6df1\u5c64\u5b66\u7fd2\u306b\u504f\u3063\u305f\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u5e83\u304f\u4e00\u822c\u7684\u306a\u8a08\u7b97\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6df1\u5c64\u5b66\u7fd2\u306e\u767a\u5c55\u306b\u3088\u3063\u3066\u3001TensorFlow\u5074\u3082\u3001\u6df1\u5c64\u5b66\u7fd2\u306e\u5b9f\u88c5\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3079\u304f\u69d8\u3005\u306a\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a18\u8ff0\u306e\u3057\u3084\u3059\u3055\u3068\u3044\u3046\u70b9\u306b\u304a\u3044\u3066\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u52dd\u3063\u3066\u3044\u305f\u304b\u3068\u3044\u3048\u3070\u305d\u3046\u3067\u3082\u7121\u3044\u3068\u3044\u3046\u306e\u304c\u4eca\u307e\u3067\u306e\u5370\u8c61\u3067\u3057\u305f\u3002Define and Run\u306e\u305f\u3081\u3001\u5b66\u7fd2\u4e2d\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u5909\u66f4\u4e0d\u53ef\u304c\u30c7\u30e1\u30ea\u30c3\u30c8\u3002GPU/\u30e1\u30e2\u30ea\u3092\u3042\u308b\u3060\u3051\u4f7f\u3046\u306e\u3067\u91cd\u3044\uff1f Theano: [Python] \u30e2\u30f3\u30c8\u30ea\u30aa\u30fc\u30eb\u5927\u5b66. \u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u4ed6\u306b\u300c\u884c\u5217\u6f14\u7b97\u300d\u300c\u5b9f\u884c\u6642\u306bC\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u300d\u300c\u81ea\u52d5\u5fae\u5206\u300d\u300cGPU\u51e6\u7406(\u8981CUDA)\u300d\u3082\u3042\u308a\u3001\u30b1\u30fc\u30b9\u306b\u3088\u3063\u3066\u306f\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u300cNumpy\u300d\u3088\u308a\u3082\u9ad8\u901f\u306b\u8a08\u7b97\u3067\u304d\u308b\u3002Deep learning \u306b\u95a2\u3059\u308bTutorial\u306e\u91cf\u304c\u3068\u3066\u3082\u591a\u3044\u3002Theano\u81ea\u4f53\u306f\u81ea\u52d5\u504f\u5fae\u5206\u6a5f\u80fd\u30fbGPU\u5bfe\u5fdc\u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Deep learning\u5c02\u7528\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u3044\u3002\u81ea\u5206\u3067\u7406\u8ad6\u304b\u3089\u7406\u89e3\u3057\u3066Scratch\u3067\u5b9f\u88c5\u3057\u305f\u3044\u4eba\u306b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b\u3002Theano\u3092\u30d9\u30fc\u30b9\u306b\u958b\u767a\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044\u3088\u3046\u3060\u3002 TensorFlow XLA: XLA (Accelerated Linear Algebra \u76f4\u8a33\u3059\u308c\u3070\u3001\u52a0\u901f\u3055\u308c\u305f\u7dda\u5f62\u4ee3\u6570) \u3002\u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u6210\u3057\u305f TensorFlow \u30b0\u30e9\u30d5\u3092 JIT \u30b3\u30f3\u30d1\u30a4\u30eb\u6280\u8853\u306b\u3088\u308a\u5b9f\u884c\u6642\u306b\u5206\u6790\u3057\u307e\u3059\u3002\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u304a\u3051\u308b\u5b9f\u969b\u306e\u6b21\u5143\u3084\u578b\u306b\u5fdc\u3058\u3066\u7279\u5316\u3057\u305f\u30b0\u30e9\u30d5\u3092\u3092\u751f\u6210\u3057\u3001\u8907\u6570\u306e\u6f14\u7b97\u3092\u307e\u3068\u3081\u3066\u3001CPU \u3084 GPU\u3001\u30ab\u30b9\u30bf\u30e0 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\uff08Google \u306e TPU \u306a\u3069\uff09\u306a\u3069\u3067\u52b9\u7387\u7684\u306b\u5b9f\u884c\u3067\u304d\u308b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002tfcompile\u3092\u4f7f\u3063\u3066TensorFlow\u8868\u8a18\u3092CPU\u306e\u5b9f\u884c\u30b3\u30fc\u30c9(TensorFlow Runtime\u4e0d\u8981)\u306b\u5909\u63db\u3067\u304d\u308b\u3002 cuDNN:NVIDIA\u304c\u516c\u958b\u3057\u3066\u3044\u308bDeep Learning\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea core ML: Apple ARMComputeLibrary sonnet: DeepMind\u793e\u306eTensorFlow-based neural network library Protocol Buffers: Node\u9593\u306e\u30c7\u30fc\u30bf\u4ea4\u63db\u306b\u4f7f\u308f\u308c\u308b\u3002\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u308b\u3002NN\u306e\u30c7\u30fc\u30bf\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u308b\u3002tflite\u306fFlatBuffers\u3089\u3057\u3044\u3002 ONNX(Open Neural Network Exchange): AI \u30e2\u30c7\u30eb\u306e\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8.Microsoft\u3068Facebook\u304c\u63d0\u6848\u3002tensorflow\u3078\u306f\u30b3\u30f3\u30d0\u30fc\u30bf\u5bfe\u5fdc\u3002\u5b66\u7fd2\u6e08\u30c7\u30fc\u30bf\u306f\u542b\u307e\u306a\u3044\uff1f\uff1f\uff1f NNEF\uff08Neural Network Exchange Format\uff09: Khronos Group\u304c2017/12/25\u306b1.0(\u66ab\u5b9a\u4ed5\u69d8)\u3092\u767a\u8868\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306e\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002ONNX\u3068\u306e\u9055\u3044\u306f\u30c6\u30ad\u30b9\u30c8\u3068\u975e\u55b6\u5229\u56e3\u4f53\u4e3b\u5c0e\uff1fOpenVX\u3068\u3082\u9023\u643a\u3002 OpenVX: Khronos Group\u3002\u753b\u50cf\u8a8d\u8b58\u306eAPI\u3078\u306e\u6a19\u6e96\u5316\u3002OpenXR\u3068\u5171\u306bVR, Vision, NN\u95a2\u9023\u3002 NHWC: Num_samples x Height x Width x Channels\u306eData formats, NHWC is the TensorFlow default and NCHW is the optimal format to use when training on NVIDIA GPUs using cuDNN. \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7684\u306b\u306f\u3001NHWC\u3068NCHW\u306e\u4e21\u5bfe\u5fdc\u304c\u671b\u307e\u3057\u3044\uff1f","title":"\u6a5f\u68b0\u5b66\u7fd2FW\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_2","text":"http://www.procrasist.com/entry/ml-metrics \u4e8c\u5024\u5206\u985e\u306elogloss(Logarithm Loss)\u306f\u3001\u5206\u985e\u306e\u7d50\u679c\u3060\u3051\u3092\u898b\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5404\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u78ba\u7acb(\u5206\u985e\u5668\u306e\u81ea\u4fe1?)\u306elog\u5024\u306e\u5e73\u5747\u3067\u3001\u5206\u985e\u306b\u81f3\u3063\u305f\u904e\u7a0b\u307e\u3067\u898b\u308b \u95a2\u6570\u8fd1\u4f3c\uff1aNN\u3092\u5b66\u7fd2\u3057\u3066\u95a2\u6570\u306e\u632f\u308b\u821e\u3044\u3092\u8fd1\u4f8d\u3059\u308b\u3053\u3068 Accuracy \u6b63\u89e3\u7387\u306e\u3053\u3068\u3002\u4e88\u6e2c\u7d50\u679c\u5168\u4f53\u3068\u3001\u7b54\u3048\u304c\u3069\u308c\u3050\u3089\u3044\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u6307\u6a19\u3002\u2605\u8ad6\u6587\u3067\u306f\u4f7f\u308f\u306a\u3044 Precision \u9069\u5408\u7387/\u7cbe\u5ea6\u306e\u3053\u3068\u3002\u4e88\u6e2c\u3092\u6b63\u3068\u5224\u65ad\u3057\u305f\u4e2d\u3067\u3001\u7b54\u3048\u3082\u6b63\u306e\u3082\u306e\u3002\u2605\u518d\u73fe\u7387\u3068\u3068\u3082\u306b\u60c5\u5831\u691c\u7d22\u304b\u3089\u306e\u7528\u8a9e\u3002\u7247\u65b9\u56fa\u5b9a\u3067\u4f7f\u3046\u5834\u5408\u3082\uff1f Recall \u518d\u73fe\u7387\u306e\u3053\u3068\u3002\u7b54\u3048\u304c\u6b63\u306e\u4e2d\u3067\u3001\u4e88\u6e2c\u304c\u6b63\u3068\u3055\u308c\u305f\u3082\u306e\u3002 F-measure F\u5024\u306e\u3053\u3068\u3002\u4e88\u6e2c\u7cbe\u5ea6\u306e\u8a55\u4fa1\u6307\u6a19\u3002Presicion\u3068Recall\u306e\u8abf\u548c\u5e73\u5747\u3002\u2605\u8a9e\u6e90\u306fE\u5024\u306e\u8a18\u61b6\u9055\u3044\uff1f https://ci.nii.ac.jp/naid/110002939532 \u9069\u5408\u7387\u306e\u30de\u30a4\u30af\u30ed\u5e73\u5747\u3001\u30de\u30af\u30ed\u5e73\u5747\uff1a\u30de\u30a4\u30af\u30ed\u304c\u8db3\u3057\u305f\u3042\u3068\u9069\u5408\u7387\u3001\u30de\u30af\u30ed\u304c\u9069\u5408\u7387\u306e\u5e73\u5747 \u2605\u30de\u30af\u30ed\u306f\u7d4c\u6e08\u5b66\u3067\u306f\u5404\u56fd\uff08\u30ab\u30c6\u30b4\u30ea)\u3054\u3068\u306e\u6307\u6a19\u3092\u898b\u308b\u3088\u3046\u306b\u30de\u30af\u30ed\u306a\u5358\u4f4d\u3067\u898b\u308b\u3002\u30de\u30a4\u30af\u30ed\u306f\u56fd(\u30ab\u30c6\u30b4\u30ea)\u3092\u7121\u8996\u3057\u3066\u7d30\u304b\u3044\u5358\u4f4d\u3067\u898b\u308b\uff1f \u6df7\u540c\u884c\u5217(confusion matrix):True/False Positive/Negative\u3000\u2605\u6587\u5b57\u8a8d\u8b58\u3060\u3068\u884c\u5217\u6570\u304c\u591a\u304f\u3001\u672c\u5f53\u306b\u6df7\u540c\u3059\u308b\u72b6\u6cc1\u3092\u793a\u3059 \u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee(Root mean squared error,RMSE): \u2605\u4e8c\u4e57\u306a\u306e\u306f\u6a19\u6e96\u504f\u5dee\u3068\u306e\u304b\u3089\u307f\u3002 \u6c7a\u5b9a\u4fc2\u6570(Coefficient of Determination): R2\u3068\u3082\u547c\u3070\u308c\u308b\u30020-1\u30671\u306b\u8fd1\u3044\u307b\u3069\u826f\u3044\u3002\u2605\u5206\u5b50\u304c\u5168\u554f\u6b63\u89e3\u30670\u306b\u306a\u308b\u3002\u5206\u6bcd\u306f1\u306b\u3059\u308b\u6b63\u898f\u5316\u3002","title":"\u6a5f\u68b0\u5b66\u7fd2\u6307\u6a19\u306e\u7528\u8a9e"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#confusion-matrix","text":"True/False\u306f\u5f62\u5bb9\u8a5e\u3067\u3001\u4f8b\u3048\u3070\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u306fTP\u3068FN\u3067\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3002 True Positive(TP)\uff1a \u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u6b63\u3057\u304f\u6b63\u3068\u4e88\u6e2c\u3067\u304d\u305f\u6570 False Positive(FP)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u9593\u9055\u3063\u3066\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u6570 Flase Negative(FN)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u9593\u9055\u3063\u3066\u8ca0\u3068\u4e88\u6e2c\u3057\u305f\u6570 True Negative(TN)\uff1a\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u3001\u6b63\u3057\u304f\u8ca0\u3068\u4e88\u6e2c\u3067\u304d\u305f\u6570 False Positive Rate(\u507d\u967d\u6027\u7387\uff09\uff1aFP/(FP+TN) \u300c\u507d\u967d\u6027\u7387\u300d\u306f\u3001\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u8ca0\u3067\u3042\u308b\u3082\u306e\u3092\u9593\u9055\u3063\u3066\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u5272\u5408\u3002(\u5206\u6bcd\u304c\u6b63\u89e3\u30c7\u30fc\u30bf\u8ca0\u306e\u7dcf\u548c) True Positive Rate(\u771f\u967d\u6027\u7387\uff09\uff1aTP/(TP+FN) \u300c\u771f\u967d\u6027\u7387\u300d\u306f\u3001\u6b63\u89e3\u30c7\u30fc\u30bf\u304c\u6b63\u3067\u3042\u308b\u3082\u306e\u3092\u6b63\u3057\u304f\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u5272\u5408\u3002(\u5206\u6bcd\u304c\u6b63\u89e3\u30c7\u30fc\u30bf\u6b63\u306e\u7dcf\u548c)","title":"\u6df7\u540c\u884c\u5217(confusion matrix)"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#roc","text":"False Positive Rate\uff08\u507d\u967d\u6027\u7387\uff09\u3092\u6a2a\u8ef8\u306bTrue Positive Rate\uff08\u771f\u967d\u6027\u7387\uff09\u3092\u7e26\u8ef8\u306b\u7f6e\u3044\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e ROC\u66f2\u7dda\u306e\u7279\u5fb4 ROC\u66f2\u7dda\u306f\u53f3\u306b\u3044\u304f\u307b\u3069\u4e0b\u304c\u308b\u3053\u3068\u306f\u306a\u3044 \u507d\u967d\u6027\u7387\u306e\u5024\u304c\u5c0f\u3055\u3044\u6642\u70b9\u3067\u3001\u9ad8\u3044\u771f\u967d\u6027\u7387\u3092\u9054\u6210\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u307b\u3069\u826f\u3044 AUC(Area under an ROC curve):ROC\u66f2\u7dda\u3068x\u8ef8y\u8ef8\u3067\u56f2\u307e\u308c\u305f\u90e8\u5206\uff08\u4e0b\u56f3\u306e\u659c\u7dda\u90e8\uff09\u306e\u9762\u7a4d\u304c\u3067\u304d\u308b\u3060\u3051\u5927\u304d\u3044\u3082\u306e\u307b\u3069\u826f\u3044\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u9762\u7a4d\u306e\u5024\u304cAUC(Area under an ROC curve)\u3068\u306a\u308a\u307e\u3059\u3002AUC\u304c1\u306b\u8fd1\u3044\u307b\u3069\u6027\u80fd\u304c\u9ad8\u3044\u30e2\u30c7\u30eb\u3068\u306a\u308a\u3001\u5b8c\u5168\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u4e88\u6e2c\u3055\u308c\u308b\u5834\u5408\u3001AUC\u306f0.5\u3001\u3064\u307e\u308aROC\u66f2\u7dda\u306f\u539f\u70b9(0,0)\u3068(1,1)\u3092\u7d50\u3076\u76f4\u7dda\u306b\u306a\u308a\u307e\u3059\u3002","title":"ROC\u66f2\u7dda"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#liftchart","text":"\u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\u306b\u306f\u8907\u6570\u306e\u5b9a\u7fa9\u304c\u3042\u308a\u3001DataRobot\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u6587\u732e\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093(\u7d2f\u7a4d\u53cd\u5fdc\u66f2\u7dda\u3068\u8a00\u308f\u308c\u308b\u5225\u306e\u3082\u306e\u3092\u30ea\u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\u3068\u547c\u3076\u3053\u3068\u304c\u3042\u308b)\u3002\u4e88\u6e2c\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u3092\u306f\u304b\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u3059\u308b\u4e88\u6e2c\u5024\u304c\u3069\u308c\u304f\u3089\u3044\u306e\u5224\u5225\u80fd\u529b\u3084\u4e88\u77e5\u80fd\u529b\u3092\u6709\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u307e\u305f\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u6bd4\u8f03\u3057\u305f\u6642\u306b\u3001\u3069\u3061\u3089\u306e\u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u304c\u826f\u3044\u306e\u304b\u3092\u7d20\u65e9\u304f\u8996\u899a\u7684\u306b\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b9f\u6e2c\u306e\u7dda\u306e\u89d2\u5ea6 \u2013 \u4e00\u822c\u7684\u306b\u306f\u3001\u6025\u306a\u307b\u3069\u3088\u3044 \u4e88\u6e2c\u3068\u5b9f\u6e2c\u306e\u8fd1\u3057\u3055 \u2013 \u4e00\u822c\u7684\u306b\u306f\u3001\u8fd1\u3044\u307b\u3069\u3088\u3044 \u7d2f\u7a4d\u53cd\u5fdc\u66f2\u7dda/Cumulative Response Curve\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3088\u3046\u3067\u3042\u308b\u3002ROC\u3068\u306e\u9055\u3044\u306f\u3001\u7e26\u8ef8\u306f\u771f\u967d\u6027\u7387/True Positive Rate(TPR)\u3068\u540c\u3058\u307e\u307e\u3060\u304c\u3001\u6a2a\u8ef8\u3092\u967d\u6027\u4e88\u6e2c\u7387/Positive Prediction Rate\u3068\u3059\u308b\u3002","title":"\u30ea\u30d5\u30c8\u30c1\u30e3\u30fc\u30c8\uff08LiftChart\uff09"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_3","text":"https://www.codexa.net/what-is-ensemble-learning/ \u6027\u80fd\u306e\u4f4e\u3044\u5b66\u7fd2\u5668\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u9ad8\u6027\u80fd\u306a\u5b66\u7fd2\u5668\u3092\u4f5c\u308b\u65b9\u6cd5. \u4ee5\u4e0b\u306e\uff13\u3064\u3042\u308b\u3002\u5206\u985e\u306f\u5404\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u3092\u6700\u7d42\u7684\u306b\u591a\u6570\u6c7a\u3001\u56de\u5e30\u306f\u5e73\u5747\u5024\u3092\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3002 - \u30d0\u30ae\u30f3\u30b0: \u5f31\u5b66\u7fd2\u5668\u3092\u4e26\u5217\u306b\u5b66\u7fd2\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308b\u2f3f\u6cd5\u3002bagging = bootstrap(\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7) + aggregating(\u96c6\u7d04)\u3002\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306f\u3053\u308c\u3002\u4e00\u822c\u7684\u306b\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7d50\u679c\u306e\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u4f4e\u304f\u3059\u308b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002 - \u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0: \u5f31\u5b66\u7fd2\u5668\u3092\u9806\u756a\u306b\u5b66\u7fd2\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u3066\u5f37\u304f\u3057\u3066\u3044\u304f\u2f3f\u6cd5. \u524d\u306e\u5b66\u7fd2\u5668\u304c\u8aa4\u5206\u985e\u3057\u305f\u30c7\u30fc\u30bf\u3092\u512a\u5148\u7684\u306b\u6b63\u3057\u304f\u5206\u985e\u3067\u304d\u308b\u3088\u3046\u306b\u5b66 \u7fd2\u3057\u3066\u3044\u304f.\u4e00\u822c\u7684\u306b\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7cbe\u5ea6\u306b\u5bfe\u3057\u3066\u30d0\u30a4\u30a2\u30b9\u3092\u4e0b\u3052\u308b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002XgBoost\u306f\u3053\u308c\u3002 - \u30b9\u30bf\u30c3\u30ad\u30f3\u30b0: \u30e2\u30c7\u30eb\u3092\u7a4d\u307f\u4e0a\u3052\u3066\u3044\u304f\u65b9\u6cd5\u3067\u9ad8\u5ea6\u30fb\u8907\u96d1\u3002\u4e0a\u624b\u304f\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u3092\u30d0\u30e9\u30f3\u30b9\u3088\u304f\u8abf\u6574\u3059\u308b\u4e8b\u304c\u53ef\u80fd. \u5f31\u5b66\u7fd2\u5668(\u6027\u80fd\u306e\u4f4e\u3044\u5b66\u7fd2\u5668) \ud835\udc53(\ud835\udc65) \u2022 \u6b63\u89e3\u7387\u304c0.5\u3088\u308a\u2f24\u304d\u3044 \u2022 = \u30e9\u30f3\u30c0\u30e0\u306b+1\u304b-1\u3092\u8fd4\u3059\u3082\u306e\u3088\u308a\u306f\u826f\u3044\u3082\u306e \u2022 \u6b63\u89e3\u7387\u304c0.5\u3088\u308a\u2f29\u3055\u3044\u5b66\u7fd2\u5668\u306f\u5206\u985e\u7d50\u679c\u3092\u53cd\u5bfe\u306b\u3059\u308c\u3070\u3001\u6b63\u89e3\u7387\u304c 0.5\u3088\u308a\u2f24\u304d\u3044\u3082\u306e\u3092\u4f5c\u308c\u308b \u2022 \u6ce8\u610f \u2022 \u8907\u96d1\u306a\u5b66\u7fd2\u5668\u3082\u4f7f\u3048\u308b\u304c\u8a08\u7b97\u91cf\u306e\u2f29\u3055\u3044\u5358\u7d14\u306a\u5b66\u7fd2\u5668\u304c\u3088\u304f\u4f7f\u308f\u308c\u308b \u2022 \u6c7a\u5b9a\u682a\u3001\u6c7a\u5b9a\u2f4a\u306a\u3069 \u2022 \u5168\u304f\u540c\u3058\u5206\u985e\u5668\u3067\u306f\u6027\u80fd\u306f\u4e0a\u304c\u3089\u306a\u3044(\u591a\u69d8\u6027\u304c\u5fc5\u8981 \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7 N\u500b\u306e\u30c7\u30fc\u30bf\u304b\u3089\u91cd\u8907\u3092\u8a31\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306bN\u56de\u30c7\u30fc\u30bf\u3092\u9078\u3076\u3053\u3068\u3002\u7d71\u8a08\u306e\u5206\u91ce\u3067\u2e9f\u96c6\u56e3\u306e\u7d71\u8a08\u91cf\u306e\u63a8\u5b9a\u306b\u4f7f\u308f\u308c\u3066\u304d\u305f\u2f3f\u6cd5\u3002\u3061\u3087\u3063\u3068\u3060\u3051\u9055\u3046\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u305f\u304f\u3055\u3093\u4f5c\u308c\u308b\u3002 \u300c\u30d0\u30a4\u30a2\u30b9\uff08Bias\uff09\u300d\u3068\u300c\u30d0\u30ea\u30a2\u30f3\u30b9\uff08Variance\uff09\u300d:\u30d0\u30a4\u30a2\u30b9\u306f\u5b9f\u969b\u5024\u3068\u4e88\u6e2c\u5024\u3068\u306e\u8aa4\u5dee\u306e\u5e73\u5747\u306e\u3053\u3068\u3067\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4e88\u6e2c\u5024\u3068\u771f\u306e\u5024\u306e\u8aa4\u5dee\u304c\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u5bfe\u3057\u3066\u30d0\u30ea\u30a2\u30f3\u30b9\u306f\u4e88\u6e2c\u5024\u304c\u3069\u308c\u3060\u3051\u6563\u3089\u3070\u3063\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u5ea6\u5408\u3044\u306e\u3053\u3068\u3067\u3001\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4e88\u6e2c\u5024\u306e\u6563\u3089\u3070\u308a\u304c\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d0\u30a4\u30a2\u30b9\u3068\u30d0\u30ea\u30a2\u30f3\u30b9\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b","title":"\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u5b66\u7fd2"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_4","text":"\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3092\u62bd\u51fa\u3057\u3066\u305d\u308c\u3067\u5f31\u5b66\u7fd2\u6a5f\u3092\u4f5c\u308a\u3001\u6700\u5f8c\u306b\u5408\u308f\u305b\u308b\u306e\u306f\u30d0\u30ae\u30f3\u30b0\u3068\u540c\u69d8\u3002\u9055\u3044\u306f\u524d\u56de\u306e\u7d50\u679c\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3002\u306a\u306e\u3067\u4e26\u5217\u51e6\u7406\u306f\u3067\u304d\u306a\u3044\u3002 \u30a2\u30c0\u30d6\u30fc\u30b9\u30c8:\u524d\u56de\u306e\u7d50\u679c\u3067\u8aa4\u5206\u985e\u3055\u308c\u305f\u5024\u306e\u91cd\u307f\u3092\u5927\u304d\u304f\u3059\u308b\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b\u3002\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u3068\u5358\u306b\u8a00\u3048\u3070\u3053\u308c\u3092\u6307\u3059\u3053\u3068\u304c\u591a\u3044\u3089\u3057\u3044\u3002 \u30de\u30c0\u30d6\u30fc\u30b9\u30c8\u30fb\u30ed\u30b8\u30c3\u30c8\u30d6\u30fc\u30b9\u30c8:\u30a2\u30c0\u30d6\u30fc\u30b9\u30c8\u306e\u640d\u5931\u95a2\u6570\u304c\u9055\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u307f\u305f\u3044\u3002\u300e\u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076\u6a5f\u4f1a\u5b66\u7fd2\u300f\u306b\u51fa\u3066\u3044\u305f\u304c\u4ed6\u3067\u306f\u898b\u305f\u8a18\u61b6\u304c\u306a\u3044\u3002 \u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0:\u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u4f7f\u3063\u305f\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u3053\u3068\u3002\u6b63\u76f4\u306a\u3068\u3053\u308d\u30a2\u30c0\u30d6\u30fc\u30b9\u30c8\u3068\u306e\u9055\u3044\u304c\u3044\u307e\u3044\u3061\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002 GBDT(Gradient Boosting Decision Tree):\u5f31\u5b66\u7fd2\u6a5f\u306b\u6c7a\u5b9a\u6728\u3092\u4f7f\u3063\u305f\u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u3053\u3068\u3002\u304b\u3063\u3053\u3088\u304f\u805e\u3053\u3048\u308b\u3002 XgBoost: \u3053\u308c\u306fGradient Boosting\uff08\u52fe\u914d\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0\uff09\u306e\u9ad8\u901f\u306aC++\u5b9f\u88c5S\uff0e\u5f93\u6765\u4f7f\u308f\u308c\u3066\u305fgbt\u3088\u308a10\u500d\u9ad8\u901f\u3089\u3057\u3044","title":"\u30d6\u30fc\u30b9\u30c6\u30a3\u30f3\u30b0"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_5","text":"https://www.sambaiz.net/article/46/ MessagePack: JSON\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u901f\u304f\u3066\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3002 ProtocolBuffers: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\u8a00\u8a9e (IDL) \u3067\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\u901a\u4fe1\u3084\u6c38\u7d9a\u5316\u3067\u306e\u5229\u7528\u3092\u76ee\u7684\u3068\u3057\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308a\u3001Google\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3002gRPC\u3067\u3082\u4f7f\u308f\u308c\u308b\u3002message type\u3092proto\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3059\u308b(proto3)\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5404\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002pb\u3067Google\u306e\u3042\u3089\u3086\u308b\u30b5\u30fc\u30d3\u30b9\u3084tensorflow\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b FlatBuffers: Google\u306e\u3001\u30b2\u30fc\u30e0\u306a\u3069\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8981\u6c42\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002 \u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u524d\u306bparse\u3084unpack\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306e\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3002proto\u306e\u4ee3\u308f\u308a\u306bschema\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u3002tensorflow lite\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u308f\u308c\u308b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5f62\u5f0f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_6","text":"\u6559\u5e2b\u30a2\u30ea\u5b66\u7fd2(supervised learning):\u5224\u65ad\u306e\u7d50\u679c\u304c\u308f\u304b\u3063\u305f\u72b6\u614b\u3067\u5b9f\u65bd \u6559\u5e2b\u30ca\u30b7\u5b66\u7fd2(unsupervised learning):\u5224\u65ad\u306e\u7d50\u679c\u304c\u308f\u304b\u3089\u306a\u3044\u72b6\u614b\u3067\u5b9f\u65bd\u2026\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3092\u8aad\u307f\u53d6\u308b\u2026\u30de\u30a4\u30cb\u30f3\u30b0\u8981\u7d20\u3002\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0 \u5f37\u5316\u5b66\u7fd2(reinforcement learning):\u30c7\u30fc\u30bf\u304b\u3089\u5224\u65ad\u3092\u3057\u3066\u884c\u52d5\u3059\u308b\u3068\u3001\u305d\u306e\u884c\u52d5\u304c\u8a55\u4fa1\u3055\u308c\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3001\u5224\u65ad\u3092\u6539\u5584\u3057\u3066\u3044\u304f.\u4f8b\u3048\u3070Q\u5b66\u7fd2 \u534a\u6559\u5e2b\u30a2\u30ea\u5b66\u7fd2(semi-supervised learning):\u6559\u5e2b\u30a2\u30ea\u3068\u6559\u5e2b\u30ca\u30b7\u3092\u4f75\u305b\u308b\u3002\u6b63\u7b54\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3068\u3001\u306a\u3044\u30c7\u30fc\u30bf\u306e\u4e21\u65b9\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3092\u884c\u3046\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306f\u3001\u8fd1\u4f3c\u95a2\u6570\u3084\u5206\u985e\u5668\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u304a\u308a\u3001\u30c7\u30fc\u30bf\u53ce\u96c6\u306e\u305f\u3081\u306e\u30b3\u30b9\u30c8\u304c\u4f4e\u304f\u3066\u3059\u3080\u3068\u3044\u3046\u610f\u5916\u306a\u5229\u70b9\u3082\u3042\u308a\u307e\u3059\u3002\u534a\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u306a\u304b\u3067\u3001\u7279\u306b\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u306e\u4e2d\u306e\u30e9\u30d9\u30eb\u304c\u306a\u3044\u3082\u306e\u306b\u95a2\u3057\u3066\u306e\u307f\u3001\u4e88\u6e2c\u3092\u884c\u3046\u30c8\u30e9\u30f3\u30b9\u30c0\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u5b66\u7fd2\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 \u30c8\u30e9\u30f3\u30b9\u30c0\u30af\u30b7\u30e7\u30f3(transduction. transductive inference):\u89b3\u6e2c\u3055\u308c\u305f\u5177\u4f53\u7684\u306a\uff08\u8a13\u7df4\uff09\u4f8b\u304b\u3089\u5177\u4f53\u7684\u304b\u3064\u56fa\u5b9a\u306e\uff08\u30c6\u30b9\u30c8\uff09\u4f8b\u306e\u65b0\u305f\u306a\u51fa\u529b\u3092\u4e88\u6e2c\u3057\u3088\u3046\u3068\u3059\u308b\u3002\u6f14\u7e79(deduction)\u3068\u5e30\u7d0d(induction)\u3068\u3001Transduction\u3002Deduction\u306f\u5165\u529b\u304b\u3089\u30eb\u30fc\u30eb\u3092\u307f\u3064\u3051\u308b\u3053\u3068\u3002 Learning to learn:\u8907\u6570\u306e\u5224\u65ad\u3092\u4e00\u7dd2\u306b\u884c\u3046\u3053\u3068\u3067\u5224\u65ad\u4f5c\u696d\u5168\u4f53\u306e\u6539\u5584\u3092\u76ee\u6307\u3059 \u6df1\u5c64\u5f37\u5316\u5b66\u7fd2: \u81ea\u52d5\u904b\u8ee2\u306a\u3069\u8a66\u884c\u306b\u5bfe\u3057\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u4e0e\u3048(\u5f37\u5316\u5b66\u7fd2)\u308b\u6df1\u5c64\u5b66\u7fd2\u3002 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\uff08Backpropagation): \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 backwards propagation of errors\u306e\u7565\u3002\u30a8\u30e9\u30fc(\u304a\u3088\u3073\u5b66\u7fd2)\u306f\u51fa\u529b\u30ce\u30fc\u30c9\u304b\u3089\u5f8c\u65b9\u306e\u30ce\u30fc\u30c9\u3078\u3068\u4f1d\u64ad\u3059\u308b\u3002\u6280\u8853\u7684\u306b\u8a00\u3048\u3070\u3001\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5909\u66f4\u53ef\u80fd\u306a\u91cd\u307f\u306b\u3064\u3044\u3066\u3001\u8aa4\u5dee\u306e\u50be\u659c\u3092\u8a08\u7b97\u3059\u308b\u3082\u306e\u3067\u3042\u308b[11]\u3002\u3053\u306e\u50be\u659c\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u8aa4\u5dee\u3092\u6700\u5c0f\u306b\u3059\u308b\u5358\u7d14\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b\u78ba\u7387\u7684\u6700\u6025\u964d\u4e0b\u6cd5\u3067\u4f7f\u308f\u308c\u308b\u3002\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u5834\u5408\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5c11\u306a\u304f\u3068\u3082\u4e09\u5c64\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u5165\u529b\u5c64\u3001\u4e2d\u9593\u5c64\u3001\u51fa\u529b\u5c64\uff09\u3002\u307e\u305f\u3001\u591a\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e2d\u9593\u5c64\u304c\u610f\u5473\u306e\u3042\u308b\u95a2\u6570\u3092\u8868\u3059\u306b\u306f\u3001\u975e\u7dda\u5f62\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u7dda\u5f62\u306a\u6d3b\u6027\u5316\u95a2\u6570\u306e\u591a\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u5358\u5c64\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u7b49\u4fa1\u3067\u3042\u308b\u3002\u975e\u7dda\u5f62\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3068\u3057\u3066\u306f\u3001\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570(\u4e2d\u3067\u3082 tanh \u306a\u3069\u306e\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570)\u3001\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\u3001\u30ac\u30a6\u30b9\u95a2\u6570\u306a\u3069\u304c\u4e00\u822c\u7684\u3067\u3042\u3063\u305f\u304c\u3001\u4e2d\u9593\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3068\u3057\u3066\u306f\u73fe\u5728\u306f max(x, 0) \u304c\u6700\u5584\u3067\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u308b \u52fe\u914d\u964d\u4e0b\u6cd5::optimizer \u300c\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u300d\u306e\u4e00\u7a2e\u3002 \u6700\u6025\u964d\u4e0b\u6cd5(Gradient Descent):\u3059\u3079\u3066\u306e\u8aa4\u5dee\u306e\u5408\u8a08\u3092\u53d6\u3063\u3066\u304b\u3089\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0\u3002\u8a08\u7b97\u304c\u9045\u3044 \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff08Stochastic Gradient Descent - SDG\uff09\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b1\u3064\u3092\u53d6\u308a\u51fa\u3057\u3066\u8aa4\u5dee\u3092\u8a08\u7b97\u3001\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0\u3002\u8a08\u7b97\u304c\u65e9\u3044 \u30df\u30cb\u30d0\u30c3\u30c1\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff08Minibatch SGD - MSGD\uff09:\u4e0a\u4e8c\u3064\u306e\u9593\u3092\u53d6\u3063\u305f\u3088\u3046\u306a\u5f62\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u3044\u304f\u3064\u304b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066\u8aa4\u5dee\u3092\u8a08\u7b97\u3001\u30d1\u30e9\u30e1\u30bf\u3092\u66f4\u65b0 \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff1a \u300c\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u305f\u5171\u5f79\u52fe\u914d\u300d\u3002\u5171\u5f79\u52fe\u914d\u6cd5\u306e\u4f7f\u7528\u3092\u6b63\u5f53\u5316\u3059\u308b\u4eee\u5b9a\u306f\u3001\u30d0\u30c3\u30c1\u5b66\u7fd2\u30bf\u30a4\u30d7\u306b\u306e\u307f\u9069\u7528\u3055\u308c\u308b\u305f\u3081\u3001\u3053\u306e\u65b9\u6cd5\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002 \u300c\u52fe\u914d\u964d\u4e0b\u300d\u3002\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 epoch: \u300c\u5b66\u7fd2\u7387\u306e\u6e1b\u8870 (\u30a8\u30dd\u30c3\u30af)\u300d:\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u307e\u305f\u306f\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u52fe\u914d\u964d\u4e0b\u304c\u4f7f\u7528\u3055\u308c\u308b\u5834\u5408\u3001\u521d\u671f\u306e\u5b66\u7fd2\u7387\u3092\u5b66\u7fd2\u7387\u306e\u4e0b\u9650\u307e\u3067\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b66\u7fd2\u30b5\u30f3\u30d7\u30eb\u306e\u30a8\u30dd\u30c3\u30af\u6570 (p) \u307e\u305f\u306f\u30c7\u30fc\u30bf\u30fb\u30d1\u30b9\u6570\u3067\u3059\u3002 \u6d3b\u6027\u5316\u95a2\u6570(activation function)\uff1a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3044\u3066\u3001\u7dda\u5f62\u5909\u63db\u3092\u3057\u305f\u5f8c\u306b\u9069\u7528\u3059\u308b\u975e\u7dda\u5f62\u95a2\u6570\u3082\u3057\u304f\u306f\u6052\u7b49\u95a2\u6570\u306e\u3053\u3068\u3002\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u3001\u7dda\u5f62\u7d50\u5408\u3001\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3001\u30bd\u30d5\u30c8\u30b5\u30a4\u30f3\u3001\u30bd\u30d5\u30c8\u30d7\u30e9\u30b9\u3001ReLU\uff08\u30e9\u30f3\u30d7\u95a2\u6570.max(0, x) \uff09 \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30(Logistic regression)\uff1a\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306b\u5f93\u3046\u5909\u6570\u306e\u7d71\u8a08\u7684\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\u9023\u7d50\u95a2\u6570\u3068\u3057\u3066\u30ed\u30b8\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb (GLM) \u306e\u4e00\u7a2e\u3067\u3082\u3042\u308b\u3002\u30e2\u30c7\u30eb\u306f\u540c\u3058\u304f1958\u5e74\u306b\u767a\u8868\u3055\u308c\u305f\u5358\u7d14\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3068\u7b49\u4fa1\u3067\u3042\u308b\u304c\u3001scikit-learn \u306a\u3069\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c7a\u3081\u308b\u6700\u9069\u5316\u554f\u984c\u3067\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u4f7f\u7528\u3059\u308b\u7269\u3092\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3068\u547c\u3073\u3001\u5ea7\u6a19\u964d\u4e0b\u6cd5\u3084\u6e96\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u7269\u3092\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u547c\u3093\u3067\u3044\u308b\u3002 \u30d0\u30c3\u30c1\u5b66\u7fd2\uff1a\u5b66\u7fd2\u30c7\u30fc\u30bfx\u304cN\u500b\u3042\u308b\u3068\u304d\u306b\u3001N\u500b\u306e\u30c7\u30fc\u30bf\u3092\u5168\u3066\u7528\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u3067\u306e\u640d\u5931l\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u3001\u305d\u308c\u3092\u30c7\u30fc\u30bf\u5168\u4f53\u306e\u640d\u5931L\u3068\u8003\u3048\u3001L(t,x;w)=1N\u2211i=1Nl(ti,xi;w)\u3068\u5b9a\u7fa9\u3057\u3066\u5b66\u7fd2\u306b\u81e8\u3080\u306e\u304c\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u3059\u3002\u4e00\u822c\u7684\u306b\u5b66\u7fd2\u306f\u5b89\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u5165\u308c\u305f\u30c7\u30fc\u30bf\u306f\u4e8b\u5b9f\u4e0a\u8a08\u7b97\u3082\u540c\u6642\u306b\u884c\u3048\u308b\u305f\u3081\u3001\u4ee5\u4e0b2\u3064\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u9ad8\u901f\u3067\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff1a\u4e00\u65b9\u3067\u3001N\u500b\u306e\u30c7\u30fc\u30bfx1,x2,...,xN\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\uff11\u3064xi\u3092\u9078\u3073\u51fa\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\uff11\u3064\u306b\u5bfe\u3059\u308b\u640d\u5931l\u3092\u305d\u306e\u307e\u307eL\u306b\u7528\u3044\u3066L(t,x;w)=l(ti,xi;w)\u3068\u640d\u5931\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u5b66\u7fd2\u306b\u81e8\u3080\u306e\u304c\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u3001\u3042\u308b\u3044\u306f\u300c\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\u901a\u5e38\u3001\u3053\u306e\u5b66\u7fd2\u306f\u3042\u307e\u308a\u5b89\u5b9a\u3057\u307e\u305b\u3093\u3002 \u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\uff1a\u5168\u4f53\u3092\u8003\u616e\u3057\u305f\u30d0\u30c3\u30c1\u5b66\u7fd2\u3068\u3001\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u306e\u9593\u3092\u53d6\u3063\u305f\u306e\u304c\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3067\u3042\u308a\u3001\u3053\u306e\u3068\u304d\u5b66\u7fd2\u30c7\u30fc\u30bfx\u304cN\u500b\u3042\u308b\u3068\u304d\u306b\u3001\u30e9\u30f3\u30c0\u30e0\u306an(?N)\u500b\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3044L(t,x;w)=1n\u2211i=1nl(ti,xi;w)\u3092\u640d\u5931\u95a2\u6570\u3068\u5b9a\u7fa9\u3057\u3001\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002\u5b9f\u969b\u306f\u591a\u304f\u306e\u5834\u9762\u3067\u3053\u306e\u65b9\u6cd5\u304c\u7528\u3044\u3089\u308c\u3066\u304a\u308a\u3001\u300c\u78ba\u7387\u7684\u52fe\u914d\u6cd5\u300d\u3068\u8a00\u3046\u6642\u306b\u306f\u3001\u3082\u306f\u3084\u3053\u3061\u3089\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u5b66\u7fd2\u3092\u6307\u3059\u3053\u3068\u306e\u307b\u3046\u304c\u4eca\u3067\u306f\u591a\u3044\u3067\u3059\u3002 \u30e9\u30d9\u30eb: \u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u308b\u7b54\u3048\u3002","title":"\u5b66\u7fd2\u306e\u7a2e\u985e"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#hw","text":"TPU/Clould TPU\uff1a\u521d\u4ee3TPU\u306f\u63a8\u8ad6\u5c02\u7528\u3002Cloud TPU\u306b\u306a\u3063\u3066\u5b66\u7fd2\u306b\u3082\u5bfe\u5fdc NPU: Haiwai AI\u30d7\u30ed\u30bb\u30c3\u30b5 Neural Engine: Apple A11 Bionic Qualcomm\u306f\u3001GPU\u3067\u306f\u7121\u304fDSP\u4f7f\u7528\uff1f Pixel Visual Core: Google\u304cPixel 2\u306b\u642d\u8f09\u3002HDR\uff0b\u54c1\u8cea\u3002Pixel Visual Core\u306fGoogle\u304c\u8a2d\u8a08\u3057\u305f8\u500b\u306e\u300cImage Processing Unit\uff08IPU\uff09\u300d\u3092\u642d\u8f09\u3059\u308b\u3002\u3053\u306eIPU\u306fMIT\u304c\u958b\u767a\u3057\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u753b\u50cf\u51e6\u7406\u5411\u3051\u8a00\u8a9e\u300cHalide\u300d\u3068Google\u306e\u6a5f\u68b0\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTensorFlow\u300d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u4eca\u5f8c\u306f\u753b\u50cf\u51e6\u7406\u4ee5\u5916\u306e\u6a5f\u80fd\u3067\u3082\u4f7f\u3063\u3066\u3044\u304f\u8a08\u753b\u3002 \u25cf\u30bb\u30f3\u30b5\u30fc ToF(Time of Flight):\u6295\u5c04\u3057\u305f\u30ec\u30fc\u30b6\u30fc\u304c\u5bfe\u8c61\u307e\u3067\u5f80\u5fa9\u3059\u308b\u306e\u306b\u304b\u304b\u308b\u6642\u9593\uff08\u30d1\u30eb\u30b9\u306e\u4f4d\u76f8\u5dee\uff09\u304b\u3089\u8ddd\u96e2\u3092\u8a08\u6e2c RiDAR(Light Detection and Ranging): \u30ec\u30fc\u30b6\u30fc\u5149\u3092\u4f7f\u3063\u305f\u30ec\u30fc\u30c0\u30fc\u3002\u30ec\u30fc\u30b6\u30fc\u3092\u9023\u7d9a\u7684\u306b\u767a\u5c04\u3057\u3001\u305d\u306e\u53cd\u5c04\u70b9\u306e\u4e09\u6b21\u5143\u4f4d\u7f6e\u3092\u9ad8\u5bc6\u5ea6\u306b\u3057\u304b\u3082\u5b89\u4fa1\u306b\u6e2c\u5b9a\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b\u3002Google Car\u3092\u306f\u3058\u3081\u3068\u3059\u308b\u81ea\u52d5\u904b\u8ee2\u8eca\u306b\u4ed8\u3044\u3066\u3044\u308b\u30bb\u30f3\u30b5\u30fc\u306e\u4e2d\u3067\u3001\u3072\u3068\u304d\u308f\u76ee\u3092\u5f15\u304f\u306e\u304c\u3001\u3053\u306eLIDAR\u3067\u3057\u3087\u3046\u3002\u30d1\u30c8\u30ab\u30fc\u306e\u56de\u8ee2\u706f\u306e\u3088\u3046\u306b\u3050\u308b\u3050\u308b\u3068\u5c4b\u6839\u306e\u4e0a\u3067\u56de\u8ee2\u3059\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u76ee\u7acb\u3064\u306e\u3067\u3059\u3002\u3053\u306eLIDAR\u306f\u5468\u56f2360\u5ea6\u306e3D\u7a7a\u9593\u69cb\u9020\u3092\u77ac\u6642\u306b\u8aad\u307f\u53d6\u3063\u3066\u30c7\u30fc\u30bf\u5316\u3059\u308b\u305f\u3081\u306e\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002\u539f\u7406\u306f\u300ctime-of-flight\u300d\u65b9\u5f0f\u3092\u63a1\u7528\u3057\u3066\u3044\u308b2\u4ee3\u76eeKinect\u3068\u540c\u3058\u3067\u3059\u3002\u81ea\u52d5\u904b\u8ee2\u305f\u3081\u306e\u30bb\u30f3\u30b5\u30fc\u3068\u3057\u3066LIDAR\u304c\u512a\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u5468\u56f2\u306e3D\u7a7a\u9593\u3092\u7d20\u65e9\u304f\u6b63\u78ba\u306b\u628a\u63e1\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3060\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u597d\u90fd\u5408\u306a\u3053\u3068\u306b\u3001LIDAR\u306f\u3001\u9053\u8def\u306b\u5f15\u304b\u308c\u3066\u3044\u308b\u767d\u7dda\u306b\u4ee3\u8868\u3055\u308c\u308b\u30ec\u30fc\u30f3\u30de\u30fc\u30ab\u30fc\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u9053\u8def\u306e\u767d\u7dda\u306f\u9ad8\u3044\u53cd\u5c04\u7387\u3092\u6301\u3064\u5857\u6599\u3067\u5857\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\u3001LIDAR\u306f\u3001\u767d\u7dda\u3068\u8def\u9762\u306e\u53cd\u5c04\u7387\u306e\u9055\u3044\u30923D\u30c7\u30fc\u30bf\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3067\u3059\u3002 \u30df\u30ea\u6ce2\u30ec\u30fc\u30c0\u30fc:\u96fb\u6ce2\u3092\u4f7f\u3046\u30df\u30ea\u6ce2\u30ec\u30fc\u30c0\u30fc\u306f\u3001\u5206\u89e3\u80fd\u306fLIDAR\u3088\u308a\u3082\u52a3\u308b\u3082\u306e\u306e\u3001\u5929\u5019\u306b\u95a2\u308f\u3089\u305a\u691c\u77e5\u53ef\u80fd\u3067\u3001\u305d\u306e\u7bc4\u56f2\u3082250m\u3068\u5e83\u3044\u3002 TrueDepth: \u300ciPhone X\u300d\u306e\u524d\u9762\u4e0a\u90e8\u306b\u642d\u8f09\u3055\u308c\u305f\u30d5\u30ed\u30f3\u30c8\u30ab\u30e1\u30e9\u3084\u8d64\u5916\u7dda\u30ab\u30e1\u30e9\u3001\u74b0\u5883\u5149\u30bb\u30f3\u30b5\u30fc\u3001\u8fd1\u63a5\u30bb\u30f3\u30b5\u30fc\u3001\u30c9\u30c3\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30bf\u30fc\u306a\u3069\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30ab\u30e1\u30e9\u30b7\u30b9\u30c6\u30e0\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u76ee\u3092\u958b\u3044\u3066\u753b\u9762\u3092\u898b\u3064\u3081\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3089\u30013\u4e07\u4ee5\u4e0a\u306e\u8d64\u5916\u7dda\u30c9\u30c3\u30c8\u3092\u9854\u306b\u6295\u5f71\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\u3067\u9854\u306e\u6df1\u5ea6\u30de\u30c3\u30d7\u3001\u304a\u3088\u30732D\u306e\u8d64\u5916\u7dda\u753b\u50cf\u3092\u4f5c\u6210\u3002 DMI\uff08Distance Measuring Instrument\uff09:\u8d70\u884c\u8ddd\u96e2\u8a08\uff1a\u30bf\u30a4\u30e4\u306e\u56de\u8ee2\u3092\u6570\u3048\u308b\u3053\u3068\u3067\u3001\u8eca\u304c\u3069\u308c\u3060\u3051\u9032\u3093\u3060\u304b\u3092\u6e2c\u5b9a\u3059\u308b\u30bb\u30f3\u30b5\u30fc\uff08\u8d70\u884c\u8ddd\u96e2\u8a08\uff09\u3067\u3059\u3002 IMU\uff08Inertial Measurement Unit\uff09:\u6163\u6027\u822a\u6cd5\u306e\u305f\u3081\u306e6\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc","title":"HW"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#eda-exploratory-data-analysis","text":"","title":"EDA: \u7814\u7a76\u30d5\u30a7\u30fc\u30ba\u3002\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790\uff08Exploratory Data Analysis\uff09\u306e\u982d\u6587\u5b57"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#vanilla-lstm-lstm","text":"","title":"Vanilla LSTM: \u53e4\u5178\u7684\u306aLSTM"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_7","text":"\u30ea\u30c3\u30b8\u56de\u5e30\u3001Lasso\u56de\u5e30\u3001Elastic Net https://aizine.ai/ridge-lasso-elasticnet/##toc8","title":"\u30b9\u30d1\u30fc\u30b9\u30e2\u30c7\u30ea\u30f3\u30b0\u3001\u6b63\u5247\u5316"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_8","text":"\u6982\u8981\u3001\uff12\u3064\u306e\u6349\u3048\u65b9 https://su-butsu-kikaigakusyuu.hatenablog.com/entry/2018/04/21/122541 \u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3067\u5199\u50cf\u306e\u5185\u7a4d\u8a08\u7b97\u3060\u3051\u3067\u6e08\u3080\uff1d\uff1e\u30ab\u30fc\u30cd\u30eb\u30c8\u30ea\u30c3\u30af https://www.hellocybernetics.tech/entry/2016/08/09/051355","title":"\u30ab\u30fc\u30cd\u30eb\u6cd5"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_9","text":"\u5ea7\u6a19\u964d\u4e0b\u6cd5\u3068\u6700\u6025\u964d\u4e0b\u6cd5 \u30df\u30cb\u30d0\u30c3\u30c1\u3068\u78ba\u7387\u52fe\u914d\u6cd5 => \u5c40\u6240\u89e3\u306b\u56de\u907f\u3059\u308b\u53ef\u80fd\u6027\u3042\u308a","title":"\u52fe\u914d\u6cd5"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#svd","text":"\u7279\u7570\u5024\u5206\u89e3\u3055\u308c\u305f\u3082\u306e\u306e\u3046\u3061\u3001\u4e0a\u4f4d\u306e\u30e9\u30f3\u30af\u3060\u3051\u9078\u3093\u3067\u518d\u69cb\u6210\u3059\u308c\u3070\u4f4e\u30e9\u30f3\u30af\u8fd1\u4f3c\u306b\u306a\u308a\u307e\u3059\u3002 \u4f4e\u30e9\u30f3\u30af\u884c\u5217\u306e\u518d\u69cb\u6210\u3068\u306f\u7570\u306a\u308b\uff1f \u4f4e\u30e9\u30f3\u30af\u884c\u5217\u518d\u69cb\u6210\u3082\u5185\u90e8\u7684\u306b\u306f\u7279\u7570\u5024\u5206\u89e3\u3092\u3057\u3066\u3044\u308b \u672a\u77e5\u306eN1\u00d7N2\u884c\u5217X0\u306b\u5bfe\u3057\u3066\uff0c\u7dda\u5f62\u89b3\u6e2c\u3092M\u56de\u884c\u3046\u3082\u306e\u3068\u3057\uff0c\u89b3\u6e2c\u7d50\u679c\u3092y= (y1, y2, . . . , yM)T,yi=\u27e8Ai, X0\u27e9,i= 1,2, . . . , M\u3068\u3059\u308b\uff0e\u305f\u3060\u3057\uff0c\u27e8X, Y\u27e9=tr(XTY)\u3067\u3042\u308b\uff0e\u89b3\u6e2c\u884c\u5217{A1, A2, . . . , Am}\u306f\u65e2\u77e5\u3067\u3042\u308b\u3082\u306e\u3068\u3057\uff0c\u89b3\u6e2c\u3092\u7dda\u5f62\u4f5c\u7528\u7d20A:RN1\u00d7N27\u2192RM\u3092\u4f7f\u3063\u3066y=AX0\u3068\u8868\u3059\u3053\u3068\u306b\u3059\u308b\uff0e\u672a\u77e5\u306e\u884c\u5217X0\u306e\u968e\u6570rankX0\u304c\u5c0f\u3055\u3044\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u3068\u304d\uff0cy\u3068A\u3068\u304b\u3089X0\u3092\u63a8\u5b9a\u3059\u308b\u306e\u304c\uff0c\u3053\u3053\u3067\u306e\u884c\u5217\u518d\u69cb\u6210\u306e\u554f\u984c\u3067\u3042\u308b\uff0e","title":"\u7279\u7570\u5024\u5206\u89e3SVD\u3068\u4f4e\u30e9\u30f3\u30af\u884c\u5217\u8fd1\u4f3c"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#svd_1","text":"\u7279\u7570\u5024\u5206\u89e3(singular value decomposition: SVD)\u306f\u3001\u6570\u5b66\u7684\u306b\u306fM\u00d7N(M\u884cN\u5217)\u306e\u884c\u5217\u3092\u5206\u89e3\u3059\u308b\u65b9\u6cd5\u306e\u4e00\u3064\u3067\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3067\u306f\u3001\u884c\u5217\u3067\u8868\u73fe\u3055\u308c\u308b\u7279\u5fb4(\u60c5\u5831\u691c\u7d22\u306e\u5206\u91ce\u3067\u306f\u3001\u4f8b\u3048\u3070\u6587\u66f8\u6bce\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u306e\u884c\u5217\u306a\u3069)\u3092\u53ef\u80fd\u306a\u9650\u308a\u640d\u306d\u308b\u3053\u3068\u7121\u304f\u6b21\u5143\u3092\u5727\u7e2e\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3001\u591a\u6b21\u5143\u306e\u7279\u5fb4\u3092\u6271\u3046\u753b\u50cf\u51e6\u7406\u3001\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3001\u691c\u7d22\u3084\u63a8\u85a6\u306b\u5fdc\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u6b21\u5143\u5727\u7e2e\u624b\u6cd5\u3068\u3057\u3066\u306f\u3001\u4e3b\u6210\u5206\u5206\u6790(PCA)\u3084\u975e\u8ca0\u5024\u884c\u5217\u56e0\u5b50\u5206\u89e3(NMF)\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002","title":"SVD\u3068\u306f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#nmf-non-negative-matrix-factorization","text":"https://abicky.net/2010/03/25/101719/ NMF\u3068\u306f\u975e\u8ca0\u5024\u884c\u5217\u30922\u3064\u306e\u975e\u8ca0\u5024\u884c\u5217\u306b\u5206\u89e3\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e \u3053\u3046\u3059\u308b\u3053\u3068\u3067\uff0c\u3082\u3068\u306e\u884c\u5217\u304c\u6301\u3064\u6f5c\u5728\u7684\u8981\u7d20\u3092\u660e\u78ba\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\uff0e https://qiita.com/kusano_t/items/4c0429778613bb4a336d","title":"NMF (non-negative matrix factorization) \u975e\u8ca0\u5024\u884c\u5217\u56e0\u5b50\u5206\u89e3"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#maximum-likelihood-estimation","text":"\u7d71\u8a08\u5b66\u306b\u304a\u3044\u3066\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304b\u3089\u305d\u308c\u304c\u5f93\u3046\u78ba\u7387\u5206\u5e03\u306e\u6bcd\u6570\u3092\u70b9\u63a8\u5b9a\u3059\u308b\u65b9\u6cd5 \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f\u3001\u6700\u5c24\u63a8\u5b9a\u3092\u4f7f\u7528\u3057\u305f\u56de\u5e30 \u30d9\u30a4\u30ba\u63a8\u5b9a\u3067\u30c7\u30fc\u30bf\u6570\u304c\u5341\u5206\u591a\u3044\u306a\u3069\u4e8b\u5f8c\u5206\u5e03\u304c\u4e8b\u524d\u5206\u5e03\u306e\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u6642\u306f\u6700\u5c24\u63a8\u5b9a\u3068\u540c\u3058 \uff1d\uff1e\u6700\u5c0f\u4e8c\u4e57\u6cd5\u306a\u3069\u3067\u63a8\u5b9a\u3055\u308c\u308b\u95a2\u6570\u306e\u5468\u8fba\u306b\u4e00\u5b9a\u306e\u78ba\u7387\u3067\u5206\u5e03\u3059\u308b\u3068\u3057\u3066\u63a8\u5b9a\u3059\u308b\u611f\u3058 \u89e3\u6cd5\u306bEM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308b","title":"\u6700\u5c24\u63a8\u5b9a(\u6cd5) maximum likelihood estimation"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_10","text":"k-means\u306e\u6642\u306f\u3001\u5404\u30c7\u30fc\u30bf\u306f\u3069\u3053\u304b\u306e\u30af\u30e9\u30b9\u30bf\uff11\u3064\u306b\u6240\u5c5e\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u306a\u306e\u3067\u3001r1=(0,1,0)r1=(0,1,0)\u306e\u3088\u3046\u306b0-1\u306e\u6307\u793a\u5909\u6570\u3067\u304d\u3063\u3061\u308a\u3068\u5206\u3051\u3066\u3044\u307e\u3057\u305f\u3002\u6df7\u5408\u30ac\u30a6\u30b9\u5206\u5e03\u3067\u306f\u3001\u5404\u30c7\u30fc\u30bf\u304c\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u306b\u6240\u5c5e\u3059\u308b\u3053\u3068\u306f\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6307\u793a\u5909\u6570\u304c\u78ba\u7387\u5909\u6570\u306b\u5909\u308f\u308a\u3001\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\u3002","title":"\u6df7\u5408\u30ac\u30a6\u30b9\u5206\u5e03"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#iou-iou-intersection-over-unionover-2","text":"https://mathwords.net/iou","title":"IoU: IoU \u306f Intersection(\u9818\u57df\u306e\u5171\u901a\u90e8\u5206) over Union(\u9818\u57df\u306e\u548c\u96c6\u5408)\u306e\u7565\u3067\u3059\u3002over \u306f\u300c\u5272\u308a\u7b97\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u30022\u3064\u306e\u9818\u57df\u304c\u300c\u3069\u308c\u304f\u3089\u3044\u91cd\u306a\u3063\u3066\u3044\u308b\u304b\u300d\u3092\u8868\u3059\u6307\u6a19\u3067\u3059\u3002"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_11","text":"\u5b66\u8853\u7684\u306b\u306f\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3001\u78ba\u7387\u5909\u6570\u304c\u30ce\u30fc\u30c9\u3001\u30ce\u30fc\u30c9\u9593\u306e\u95a2\u4fc2\u304c\u77e2\u7dda\u306b\u5bfe\u5fdc\u3059\u308b\u6709\u5411\u975e\u5faa\u74b0\u30b0\u30e9\u30d5\uff08DAG\uff09\u306b\u3088\u3063\u3066\u8868\u308f\u3057\u305f\u3082\u306e\u3002 \u8907\u6570\u306e\u4e8b\u8c61\u306b\u5bfe\u3059\u308b\u4e8b\u524d\u306e\u78ba\u4fe1\u304c\u65b0\u3057\u3044\u8a3c\u62e0\u306b\u3088\u3063\u3066\u5909\u5316\u3059\u308b\u69d8\u5b50\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u306f\u305f\u3089\u304d\u304c\u30d9\u30a4\u30ba\u7684\u3001\u3059\u306a\u308f\u3061\u300c\u30d9\u30a4\u30b8\u30a2\u30f3\u300d\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u547c\u3070\u308c\u308b\u3086\u3048\u3093 https://www.synergy-marketing.co.jp/blog/introduction-bayesian-network","title":"\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_12","text":"\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30ea\u30f3\u30af\u304b\u3089\u77e2\u5370\u3092\u7121\u304f\u3057\u305f\u3082\u306e\u304c\u30de\u30eb\u30b3\u30d5\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3088\u308a\u8868\u73fe\u529b\u304c\u5f31\u3044\u3082\u306e\u306e\u63a8\u8ad6\u3092\u3059\u308b\u6642\u306e\u8a08\u7b97\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u3001\u97f3\u58f0\u3084\u753b\u50cf\u51e6\u7406\u306e\u5206\u91ce\u3067\u7528\u3044\u3089\u308c\u307e\u3059\u3002\uff09","title":"\u30de\u30eb\u30b3\u30d5\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_13","text":"\u30d9\u30a4\u30ba\u306e\u5b9a\u7406\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u57fa\u3065\u3044\u305f\u5358\u7d14\u306a\u78ba\u7387\u5206\u985e\u5668\u3002\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u306b\u983b\u7e41\u306b\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306b\u306f\u6700\u5c24\u6cd5\u304c\u4f7f\u308f\u308c\u308b\u3002 \u30ca\u30a4\u30fc\u30d6\u306f\u300c\u3070\u304b\u3089\u3057\u3044\u307b\u3069\u5358\u7d14\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u89aa\u304c1\u3064\u3067\u5b50\u306f\u8907\u6570\u3042\u308a\u304a\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u6700\u3082\u5358\u7d14\u306a\u5f62\u306e\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba\u3068\u547c\u3073\u307e\u3059\u3002\u4e00\u6642\u671f\u30b9\u30d1\u30e0\u30d5\u30a3\u30eb\u30bf\u306b\u4f7f\u308f\u308c\u305f\u3053\u3068\u3067\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5358\u7d14\u3068\u306f\u3044\u3048\u99ac\u9e7f\u306b\u3067\u304d\u306a\u3044\u5206\u985e\u6027\u80fd\u3092\u6301\u3064\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3082\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u3044\u3046\u306b\u306f\u5358\u7d14\u3059\u304e\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u591a\u6bb5\u306e\u89aa\u5b50\u95a2\u4fc2\u3084\u3001\u5b50\u540c\u58eb\u306e\u76f8\u4e92\u4f5c\u7528\u307e\u3067\u8003\u616e\u3059\u308b\u3088\u3046\u306a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3067\u3053\u305d\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u672c\u9818\u304c\u767a\u63ee\u3067\u304d\u307e\u3059\u3002","title":"\u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba(\u5358\u7d14\u5206\u985e\u5668)"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_14","text":"\u8449\u3068\u6839\u3092\u5229\u7528\u3057\u305f\u4e88\u6e2c\u30e2\u30c7\u30eb\u3002 \u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u3067\u3088\u304f\u5229\u7528\u3055\u308c\u3001\u8449\u304c\u5206\u985e\u3001\u679d\u304c\u305d\u306e\u5206\u985e\u306b\u81f3\u308b\u307e\u3067\u306e\u7279\u5fb4\u306e\u96c6\u5408\u3002","title":"\u6c7a\u5b9a\u6728"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#k-","text":"\u8ddd\u96e2\u30d9\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u30bf\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4e8b\u524d\u306b\u6c7a\u3081\u3089\u308c\u305f\u6570\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30fc\u30bf\u3092\u5272\u308a\u632f\u308b\u3002 \uff1d\uff1e\u6559\u5e2b\u7121\u3057\u5b66\u7fd2\u3067\u4ee3\u8868\u70b9\u304b\u3089\u306e\u8ddd\u96e2\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3001\u305d\u306e\u7d50\u679c\u306e\u91cd\u5fc3\u306b\u4ee3\u8868\u70b9\u3092\u79fb\u52d5\u3057\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u7e70\u308a\u8fd4\u3059 k\u8fd1\u508d\u6cd5\u306f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2","title":"K-\u5e73\u5747(\u6cd5)"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#svm","text":"Support Vector Machine\u3002\uff12\u5024\u5206\u985e\u5668\u3002 \u5ea7\u6a19\u4e0a\u306b\u30b5\u30f3\u30d7\u30eb\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3001\u6b63\u5024/\u8ca0\u4f8b\u306e\u96c6\u5408\u304b\u3089\u3082\u3063\u3068\u3082\u8ddd\u96e2\u304c\u5927\u304d\u304f\u306a\u308b\u8b58\u5225\u9762","title":"SVM"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#bertbidirectional-encoder-representations-from-transformer","text":"\u30de\u30b9\u30af\u306b\u3088\u308b\u7a74\u57cb\u3081\u554f\u984c\u3067\u53cc\u65b9\u5411\u306e\u5b66\u7fd2\u3092\u5b9f\u73fe\u3057\u305f\u3002Attention\u304c\u5168\u3066\uff1fWORD2VEC\u3068\u6bd4\u3079\u300c\u8a18\u53f7\u7a7a\u9593\u304b\u3089\u4e00\u56de\u308a\u5927\u304d\u3044\u8868\u73fe\u7a7a\u9593\u304b\u3089\u60c5\u5831\u3092\u63b4\u3093\u3060\u3053\u3068\u304cBERT\u304c\u6c4e\u7528\u6027\u3092\u7372\u5f97\u3057\u305f\u80cc\u666f\u300d","title":"BERT(Bidirectional Encoder Representations from Transformer)"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_15","text":"\u63a2\u7d22\u3068\u6d3b\u7528\u3092\u52b9\u7387\u7684\u306b\u884c\u3044\u3001\u4e00\u5b9a\u671f\u9593\u3067\u306e\u5229\u76ca\u3092\u6700\u5927\u5316\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \uff08\u5f37\u5316\u5b66\u7fd2\u306e\u6587\u8108\u3067\u306f\uff09\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u52b9\u7387\u7684\u306a\u5b66\u7fd2\u3092\u884c\u3046\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u5358\u7d14\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u3067\u306f\u5024\u306f2\u5024\uff1d\uff1e\u5f53\u305f\u308a\u304b\u30cf\u30ba\u30ec\u304b\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304b\u5426\u304b\u3001\u8cfc\u5165\u3055\u308c\u305f\u304b\u5426\u304b","title":"\u30d0\u30f3\u30c7\u30a3\u30c3\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_16","text":"\uff1d\uff1e\u30af\u30e9\u30b9\u306b\u504f\u308a\u304c\u7121\u3051\u308c\u3070OK\u3002\u3067\u3082\u30de\u30af\u30ed\u30fb\u30de\u30a4\u30af\u30edF\u5024\u306e\u65b9\u304c\u7121\u96e3\uff1f","title":"\u6b63\u89e3\u7387\u3067\u6b63\u3057\u3044\u5834\u5408\u306f\u3042\u308b\uff1f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_17","text":"\uff1d\uff1e\u30de\u30a4\u30af\u30ed\u5e73\u5747\u306f, \u307e\u305a\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u7121\u8996\u3057\u3066\u5168\u4f53\u306e\u9069\u5408\u7387\u3068\u518d\u73fe\u7387\u3092\u8a08\u7b97\u3057, \u305d\u308c\u3089\u3092\u7528\u3044\u3066F\u5024\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7b97\u51fa\u3055\u308c\u308b. \u30de\u30af\u30ed\u5e73\u5747\u306f\u307e\u305a\u5404\u30ab\u30c6\u30b4\u30ea\u30fc\u306eF\u5024\u3092\u8a08\u7b97\u3057, \u305d\u308c\u3089F\u5024\u306e\u5358\u7d14\u5e73\u5747\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7b97\u51fa\u3055\u308c\u308b. \u30de\u30a4\u30af\u30ed\u5e73\u5747\u306f, \u4e8b\u4f8b\u6570\u306e\u5927\u304d\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53d7\u3051, \u30de\u30af\u30ed\u5e73\u5747\u306f\u4e8b\u4f8b\u6570\u306e\u5c0f\u3055\u3044\u30ab\u30c6\u30b4\u30ea\u30fc\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53d7\u3051\u308b.","title":"\u30de\u30a4\u30af\u30ed\u5e73\u5747\u3068\u30de\u30af\u30ed\u5e73\u5747\u306e\u9055\u3044\uff1f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_18","text":"\u540c\u3058\u8ddd\u96e2\u3092\u9055\u3046\u901f\u5ea6\u3067\u5f80\u5fa9\u3057\u305f\u6642\u306e\u5e73\u5747\u901f\u5ea6\u3002\u30b3\u30b9\u30c8\u3092\u52a0\u5473\u3057\u305f\u52b9\u7387\u306e\u5e73\u5747\uff1f\u300c\u8abf\u548c\u5e73\u5747\u306f\u540c\u3058\u8ab2\u984c\u3092\u7570\u306a\u308b\u52b9\u7387\u3067\u3053\u306a\u3059\u5834\u5408\u306e\u5e73\u5747\u52b9\u7387\u3067\u3042\u308a\uff0c\u9069\u5408\u7387\u3082\u518d\u73fe\u7387\u3082\u9069\u5408\u6587\u66f8\u3092\u5f97\u308b\u305f\u3081\u306e\u52b9\u7387\u300d\u3002\u96fb\u6c17\u62b5\u6297\u306e\u5408\u6210\u62b5\u6297\u306e\u9006\u6570(1/ R) \u3092\u3001\u62b5\u62971\u500b\u3042\u305f\u308a\u5e73\u5747\u5024 (n / R) \u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u8abf\u548c\u5e73\u5747","title":"\u8abf\u548c\u5e73\u5747\uff1a"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#f-eerrorf","text":"http://d.hatena.ne.jp/sleepy_yoshi/20110410/p1","title":"F\u5024\u306e\u7531\u6765\u306f\uff1f E\u5024(error)\u306e\u6b21\u304cF\u3063\u3066\u3060\u3051\uff1f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_19","text":"","title":"\u76f8\u4e57\u5e73\u5747\uff08\u5e7e\u4f55\u5e73\u5747\uff09\uff1a\u30d4\u30bf\u30b4\u30e9\u30b9\u306e\u5e73\u5747\u3002\u4e09\u89d2\u5f62\u306e\u6b8b\u308a\u306e\u4e00\u8fba\u306e\u6c42\u3081\u65b9\u3002\u4e8c\u4e57\u3057\u3066\u8db3\u3057\u3066\u5e73\u65b9\u6839\uff1f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_20","text":"","title":"\u76f8\u52a0\u5e73\u5747\uff08\u7b97\u8853\u5e73\u5747\uff09\uff1a"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/glossary/#_21","text":"\u56de\u5e30\u306a\u3069\u30c7\u30fc\u30bf\u306b\u3088\u308b\u6a5f\u68b0\u5b66\u7fd2\u306f\u5e30\u7d0d\u6cd5\u3002\u7406\u8ad6\u306b\u3088\u308a\u51e6\u7406\u3059\u308b\u5834\u5408\u306f\u6f14\u7e79\u6cd5\u3002 \u671f\u5f85\u5024\uff1a\u5e73\u5747\u306e\u3053\u3068. E()\u3067\u8868\u3055\u308c\u308b\u3002\u3061\u306a\u307f\u306b\u7d71\u8a08\u3067\u306fmean\u304c\u7b97\u8853\u5e73\u5747\u3002avarage\u306f\u4e2d\u592e\u5024\u306a\u3069\u542b\u3081\u305f\u30a2\u30d0\u30a6\u30c8\u306a\u4f7f\u308f\u308c\u65b9\u3092\u3059\u308b\u305f\u3081\u3002 Mean Absolute Error (MAE):\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\u3068\u3082\u8a00\u3044\u307e\u3059\u3002RMSE \u3068 MAE \u306f\u3001\u3068\u3082\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u8aa4\u5dee\u306e\u6307\u6a19\u3067\u3059\u3002RMSE \u306f\u30eb\u30fc\u30c8\u306e\u4e2d\u8eab\u3067\u4e8c\u4e57\u3057\u3066\u3044\u308b\u306e\u3067\u3001MAE \u3088\u308a\u3082\u5916\u308c\u5024\uff08\u5927\u304d\u306a\u30ba\u30ec\uff09\u3092\u3001\u3088\u308a\u5927\u304d\u306a\u8aa4\u5dee\u3068\u3057\u3066\u6271\u3046\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002 Root mean squared error (RMSE):\u6a19\u6e96\u504f\u5dee\u3063\u307d\u3044\u5f0f\u3067\u3059\u3002\u5e73\u5747\u5e73\u65b9\u4e8c\u4e57\u8aa4\u5dee\u3001RMS Error\u3001RMSD\uff08Root Mean Square Deviation\uff09\u306a\u3069\u3068\u3082\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 MSE\uff08Mean Squared Error\uff09:\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u3068\u3082\u8a00\u3044\u307e\u3059\u3002\u5206\u6563\u3063\u307d\u3044\u5f0f\u3067\u3059\u3002 https://mathwords.net/rmsemae MAPE(Mean absolute percentage error):\u5e73\u5747\u7d76\u5bfe\u30d1\u30fc\u30bb\u30f3\u30c8\u8aa4\u5dee\u3001\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\u7387 https://qiita.com/japanesebonobo/items/ad51cbbf36236b023df0 \u30ed\u30b8\u30c3\u30c8\u95a2\u6570\u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u9006\u95a2\u6570 \u30ab\u30aa\u30b9\u7406\u8ad6\uff1a\u30ea\u30a2\u30d7\u30ce\u30d5\u6307\u6570\u3092\u7528\u3044\u3066\u691c\u8a3c\u3057\u305f\u3002\u30ea\u30a2\u30d7\u30ce\u30d5\u6307\u6570\u304c\u6b63\u3067\u3042\u308c\u3070\u3001\u30ab\u30aa\u30b9\u7cfb\u306e\u7279\u5fb4\u3067\u3042\u308b\u521d\u671f\u5024\u92ed\u654f\u6027\u3092\u3082\u3064\u3053\u3068\u306b\u306a\u308a\u3001\u305d\u306e\u30b7\u30e0\u30c6\u30e0\u306b\u304a\u3051\u308b\u4e88\u6e2c\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306b\u306a\u308b\u3068\u3044\u3046\u3002 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u25cf\u7528\u8a9e VAE\uff1a\u5909\u5206\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0 \u5c24\u5ea6(\u3086\u3046\u3069) : \u5c24(\u3082\u3063)\u3082\u3089\u3057\u3055 \u6a5f\u68b0\u5b66\u7fd2(machine learning)\uff1a \u6a5f\u68b0\u5b66\u7fd2\u3068\u306f\u3001\u5927\u91cf\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u6a5f\u68b0\u306b\u8aad\u307f\u8fbc\u307e\u305b\u3001\u5206\u985e\u3084\u5224\u65ad\u3068\u8a00\u3063\u305f\u63a8\u8ad6\u306e\u305f\u3081\u306e\u30eb\u30fc\u30eb\u3092\u6a5f\u68b0\u306b\u4f5c\u3089\u305b\u3088\u3046\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3059\u3002\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u5927\u304d\u304f\u300c\u5b66\u7fd2\u300d\u3068\u300c\u63a8\u8ad6\u300d\u306e\uff12\u3064\u306b\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b66\u7fd2(learning): \u30cb\u30e5\u30fc\u30e9\u30eb\u30fb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6559\u80b2\u8ab2\u7a0b\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0(training)\uff1flearning\u306f\u5e83\u7fa9\u306e\u5b66\u7fd2\u3067training\u306f\u72ed\u7fa9\uff1f \u63a8\u8ad6(inference): \u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58: \u97f3\u58f0\u8a8d\u8b58\u3001\u753b\u50cf\u8a8d\u8b58\u3001\u7a7a\u9593\u8a8d\u8b58\u306a\u3069\u7e8f\u3081\u305f\u8a00\u3044\u65b9\uff1f\u3000\u81ea\u7136\u60c5\u5831\u51e6\u7406\u306e\u3072\u3068\u3064\u3002\u753b\u50cf\u30fb\u97f3\u58f0\u306a\u3069\u306e\u96d1\u591a\u306a\u60c5\u5831\u3092\u542b\u3080\u30c7\u30fc\u30bf\u306e\u4e2d\u304b\u3089\u3001\u4e00\u5b9a\u306e\u898f\u5247\u3084\u610f\u5473\u3092\u6301\u3064\u5bfe\u8c61\u3092\u9078\u5225\u3057\u3066\u53d6\u308a\u51fa\u3059\u51e6\u7406\u3067\u3042\u308b\u3002\u300c\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306f\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306b\u8d77\u6e90\u3092\u6301\u3061\u3001\u6a5f\u68b0\u5b66\u7fd2\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u9818\u57df\u3067\u767a\u9054\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u540c\u3058\u5206\u91ce\u306e\uff12\u3064\u306e\u5074\u9762\u3068\u3082\u307f\u306a\u305b\u308b\u3002\u300d\u300c\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306f\u5de5\u5b66\u3092\u8d77\u6e90\u3068\u3059\u308b\u304c\u3001\u6a5f\u68b0\u5b66\u7fd2\u306f\u8a08\u7b97\u6a5f\u79d1\u5b66\u306e\u5206\u91ce\u304b\u3089\u751f\u3058\u3066\u3044\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u3089\u306e\u7814\u7a76\u6d3b\u52d5\u5185\u5bb9\u306f\u3001\u540c\u3058\u5206\u91ce\u30922\u3064\u306e\u5074\u9762\u304b\u3089\u898b\u305f\u3082\u306e\u3068\u307f\u306a\u305b\u3001\u4e21\u5206\u91ce\u3068\u308210\u5e74\u9593\u306b\u5927\u304d\u304f\u767a\u5c55\u3057\u305f\u3002\u300d Formal Method: \u5f62\u5f0f\u624b\u6cd5\uff08Formal Method\uff09\u6570\u5b66\u7684\u306a\u6982\u5ff5\u3092\u7528\u3044\u3066\u5bfe\u8c61\u3092\u8868\u73fe\u3059\u308b\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u4e3b\u306b\u300c\u96c6\u5408\u300d\u3068\u3001\u96c6\u5408\u3084\u96c6\u5408\u306e\u8981\u7d20\u540c\u58eb\u306e\u300c\u95a2\u4fc2\u300d\u3092\u7528\u3044\u3066\u5bfe\u8c61\u3092\u8868\u73fe\u3059\u308b\u3002\u305d\u3057\u3066\u8907\u6570\u306e\u96c6\u5408\u3084\u95a2\u4fc2\u306b\u5bfe\u3057\u3066\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306b\u3001\u305d\u308c\u3089\u306e\u95a2\u4fc2\u304c\u300c\u6210\u308a\u7acb\u3064\u300d\u3082\u3057\u304f\u306f\u300c\u6210\u308a\u7acb\u305f\u306a\u3044\u300d\u3068\u3044\u3046\u8a00\u660e\u3092\u300c\u8ad6\u7406\u547d\u984c\u300d\u306e\u5f62\u3067\u8868\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u300c\u8ad6\u7406\u300d\u3092\u6570\u5b66\u7684\u306b\u6271\u3046\u5b66\u554f\u5206\u91ce\u306f\u300c\u6570\u7406\u8ad6\u7406\u5b66\u300d\u3068\u547c\u3070\u308c\u3001\u5f62\u5f0f\u624b\u6cd5\u306f\u4e3b\u306b\u305d\u306e\u4e2d\u3067\u7814\u7a76\u3055\u308c\u3066\u304d\u305f\u3002 GEMM(General Matrix Multiply):\u6b63\u65b9\u884c\u5217\u540c\u58eb\u306e\u7a4d\u7b97 \u30c6\u30f3\u30bd\u30eb\uff1a \u30c6\u30f3\u30bd\u30eb\uff08\u82f1: tensor, \u72ec: Tensor\uff09\u3068\u306f\u3001\u7dda\u5f62\u7684\u306a\u91cf\u307e\u305f\u306f\u7dda\u5f62\u7684\u306a\u5e7e\u4f55\u6982\u5ff5\u3092\u4e00\u822c\u5316\u3057\u305f\u3082\u306e\u3067\u3001\u57fa\u5e95\u3092\u9078\u3079\u3070\u3001\u591a\u6b21\u5143\u306e\u914d\u5217\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002 \u3057\u304b\u3057\u3001\u30c6\u30f3\u30bd\u30eb\u81ea\u8eab\u306f\u3001\u7279\u5b9a\u306e\u5ea7\u6a19\u7cfb\u306b\u3088\u3089\u306a\u3044\u3067\u5b9a\u307e\u308b\u5bfe\u8c61\u3067\u3042\u308b\u3002 \u30c6\u30f3\u30bd\u30eb\u7a4d\uff1a\u6570\u5b66\u306b\u304a\u3051\u308b\u30c6\u30f3\u30bd\u30eb\u7a4d\uff08\u30c6\u30f3\u30bd\u30eb\u305b\u304d\u3001\u82f1: tensor product\uff09\u306f\u3001\u7dda\u578b\u4ee3\u6570\u5b66\u3067\u91cd\u7dda\u578b\u6027\u3092\u6271\u3046\u305f\u3081\u306e\u7dda\u578b\u5316\u3092\u62c5\u3046\u6982\u5ff5\u3067\u3001\u65e2\u77e5\u306e\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u30fb\u52a0\u7fa4\u306a\u3069\u69d8\u3005\u306a\u5bfe\u8c61\u304b\u3089\u65b0\u305f\u306a\u5bfe\u8c61\u3092\u4f5c\u308a\u51fa\u3059\u64cd\u4f5c\u306e\u4e00\u3064\u3067\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u3044\u305a\u308c\u306e\u5bfe\u8c61\u306b\u95a2\u3057\u3066\u3082\u3001\u30c6\u30f3\u30bd\u30eb\u7a4d\u306f\u6700\u3082\u81ea\u7531\u306a\u53cc\u7dda\u578b\u4e57\u6cd5\u3067\u3042\u308b\u3002 Define by Run \u3068 Define and Run\uff1a\u3000\u524d\u8005\u306f\u67d4\u8edf\u306a\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u304c\u53ef\u80fd Chainer\u7b49\u3001\u5f8c\u8005\u306f\u982d\u304c\u56fa\u3044TensorFlow\u7b49\u3002 YORO9000: FW\u3067\u306f\u306a\u30449000\u7a2e\u985e\u4ee5\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ab\u30c6\u30b4\u30ea\u3092\u691c\u51fa\u3067\u304d\u308b\u6700\u5148\u7aef\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u691c\u51fa\u30b7\u30b9\u30c6\u30e0 seq2seq(Sequence to Sequence):RNN\u7cfb\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u6587\u306e\u751f\u6210\u30e2\u30c7\u30eb\u3068\u3057\u3066\u3001\u6709\u540d\u306a\u3082\u306e\u306bsequence to sequence\uff08Seq2Seq\uff09\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002Seq2Seq\u3068\u306f\u3001RNN\u3092\u7528\u3044\u305fEncoderDecoder\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308a\u3001\u6a5f\u68b0\u5bfe\u8a71\u3084\u6a5f\u68b0\u7ffb\u8a33\u306a\u3069\u306e\u30e2\u30c7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 word2vec:\u7c73\u30b0\u30fc\u30b0\u30eb\u306e\u7814\u7a76\u8005\u3067\u3042\u308b\u30c8\u30de\u30b9\u30fb\u30df\u30b3\u30ed\u30d5\u6c0f\u3089\u304c\u63d0\u6848\u3057\u305f\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u624b\u6cd5\u3002\u5358\u8a9e\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3057\u3066\u8868\u73fe\u3059\u308b\u3059\u308b\u5b9a\u91cf\u5316\u624b\u6cd5\u3067\u3042\u308b\u3002\u4f8b\u3048\u3070\u65e5\u672c\u4eba\u304c\u65e5\u5e38\u7684\u306b\u4f7f\u3046\u8a9e\u5f59\u6570\u306f\u6570\u4e07\u304b\u3089\u6570\u5341\u4e07\u3068\u3044\u308f\u308c\u308b\u304c\u3001Word2Vec\u3067\u306f\u5404\u5358\u8a9e\u3092200\u6b21\u5143\u304f\u3089\u3044\u306e\u7a7a\u9593\u5185\u306b\u304a\u3051\u308b\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u8868\u73fe\u3059\u308b\u3002\u305d\u306e\u7d50\u679c\u3001\u4eca\u307e\u3067\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u308a\u7cbe\u5ea6\u3092\u5411\u4e0a\u3059\u308b\u306e\u304c\u96e3\u3057\u304b\u3063\u305f\u5358\u8a9e\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3084\u3001\u5358\u8a9e\u9593\u3067\u306e\u52a0\u7b97\u30fb\u6e1b\u7b97\u306a\u3069\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5358\u8a9e\u306e\u300c\u610f\u5473\u300d\u3092\u6349\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002 \u8a18\u53f7\u8ad6\u7406\u5b66\uff1a\u5f62\u614b\u7d20\u89e3\u6790\uff08\u3082\u3063\u3068\u3082\u5c0f\u3055\u306a\u6587\u6cd5\u5358\u4f4d\u306b\u5206\u5272\u3057\u3066\u89e3\u6790\u3059\u308b\u3053\u3068\uff09\u3084\u69cb\u6587\u89e3\u6790\uff08\u4e0e\u3048\u3089\u308c\u305f\u8a00\u8a9e\u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u3001\u6587\u6cd5\u69cb\u9020\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\uff09\u306b\u3088\u3063\u3066\u81ea\u7136\u8a00\u8a9e\u6587\u3092\u89e3\u6790\u3067\u304d\u305f\u3068\u3057\u3066\u3001\u6587\u7ae0\u306b\u3072\u305d\u3080\u8ad6\u7406\u69cb\u9020\u3092\u898b\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\u8a00\u8449\u3067\u8868\u73fe\u3055\u308c\u308b\u6587\u3092\u8ad6\u7406\u8a18\u53f7\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u306e\u8ad6\u7406\u95a2\u4fc2\u306b\u3088\u3063\u3066\u6587\u3092\u6349\u3048\u308b\u3068\u3044\u3046\u5b66\u554f\u3092\u300e\u8a18\u53f7\u8ad6\u7406\u5b66\u300f\u3068\u547c\u3073\u3001\u767a\u7965\u306f\uff11\uff19\u4e16\u7d00\u3068\u3044\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u8ad6\u7406\u5b66\u306e\u4e2d\u3067\u6700\u3082\u57fa\u672c\u3068\u306a\u308b\u306e\u304c\u3001\u547d\u984c\u8ad6\u7406\u3067\u3059\u3002\u547d\u984c\u8ad6\u7406\u3067\u306f\u3001 \u547d\u984c\u3001\u3059\u306a\u308f\u3061\u3001\u4e00\u3064\u4e00\u3064\u306e\u4e8b\u8c61\u3092\u6700\u5c0f\u5358\u4f4d\u3068\u3057\u3066\u6271\u3044\u3001\u305d\u308c\u3089\u3068\u3001 \u8ad6\u7406\u6f14\u7b97\u5b50\uff08\u8ad6\u7406\u7a4d\u3084\u8ad6\u7406\u548c\u306a\u3069\uff09\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u8907\u96d1\u306a\u547d\u984c\u3092\u69cb\u6210\u3057\u3001 \u305d\u308c\u3089\u306e\u59a5\u5f53\u6027\uff08\u771f\u507d\u5024\uff09\u3092\u8a08\u7b97\u3057\u305f\u308a\u3057\u307e\u3059\u3002\u547d\u984c\u8ad6\u7406\u3067\u306f\u3001\u59a5\u5f53\u306a\u63a8\u8ad6\u304c\u5fc5\u305a\u3057\u3082\u5b9a\u5f0f\u5316\u3067\u304d\u307e\u305b\u3093\u3002 \u305d\u3053\u3067\u3001\u547d\u984c\u8ad6\u7406\u306b\u8ff0\u8a9e\u3068\u3044\u3046\u6982\u5ff5\u3092\u53d6\u308a\u5165\u308c\u62e1\u5f35\u3057\u305f\u306e\u304c\u8ff0\u8a9e\u8ad6\u7406 \u3067\u3059\u3002\u8ff0\u8a9e\u8ad6\u7406\u3067\u306f\u3001\u547d\u984c\u3092\u8ff0\u8a9e\u3068\u305d\u308c\u306b\u95a2\u308f\u308b\u30c7\u30fc\u30bf\u3068\u306b\u5206\u89e3\u3057\u3066 \u6271\u3044\u307e\u3059\u3002 \uff1d\uff1eDL\u4ee5\u524d\u306e\u4eba\u5de5\u77e5\u80fd\u6280\u8853\u3002But Formal Methods(\u5f62\u5f0f\u624b\u6cd5)\u306b\u306f\u8fd1\u3044\uff1f \u6f14\u7e79(deduction)\u3068\u5e30\u7d0d(induction):\u6f14\u7e79\u6cd5\u306f\u3001\u300c\u00d7\u00d7\u3060\u304b\u3089\u3001\u25cb\u25cb\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u8ad6\u7406\u3092\u6570\u73e0\u3064\u306a\u304e\u306b\u3057\u3066\u3044\u304d\u3001\u7d50\u8ad6\u3092\u5f15\u304d\u51fa\u3059\u65b9\u6cd5\u3067\u3059\u3002\u5e30\u7d0d\u6cd5\u306f\u3001\u591a\u304f\u306e\u89b3\u5bdf\u4e8b\u9805\uff08\u4e8b\u5b9f\uff09\u304b\u3089\u985e\u4f3c\u70b9\u3092\u307e\u3068\u3081\u4e0a\u3052\u308b\u3053\u3068\u3067\u3001\u7d50\u8ad6\u3092\u5f15\u304d\u51fa\u3059\u3068\u3044\u3046\u8ad6\u6cd5\u3067\u3059\u3002 \u7d71\u8a08\u5b66(statistics) \u25cf\u753b\u50cf\u51e6\u7406\u95a2\u9023 Occlusion:\u906e\u853d. 3\u6b21\u5143\u7a7a\u9593\u3067\u306f\u3001\u4e0a\u4e0b\u30fb\u5de6\u53f3\u306e\u4ed6\u306b\u524d\u5f8c\u95a2\u4fc2\u304c\u3042\u308a\u3001\u624b\u524d\u306b\u3042\u308b\u7269\u4f53\u304c\u80cc\u5f8c\u306b\u3042\u308b\u7269\u4f53\u3092\u96a0\u3057\u3066\u898b\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u72b6\u614b\u304c\u767a\u751f\u3059\u308b\u3002\u3053\u308c\u3092\u30aa\u30af\u30eb\u30fc\u30b8\u30e7\u30f3\u3068\u3044\u3046\u3002 \u3007\u30ed\u30dc\u30c6\u30a3\u30af\u30b9 Robot Operating System (ROS) \u3007\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 PASCAL VOC: \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(\u56db\u89d2\u3044\u67a0)\u4ed8\u304d\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u3000 http://host.robots.ox.ac.uk/pascal/VOC/ COCO - Common Object in Context:\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u60c5\u5831(\u3044\u308f\u3086\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3088\u308a\u3082\u8a73\u3057\u3044\u3001\u753b\u7d20\u30ec\u30d9\u30eb\u3067\u306e\u7269\u4f53\u8a8d\u8b58\u60c5\u5831)\u304c\u4ed8\u52a0\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002 http://cocodataset.org/ CIFAR-10 / CIFAR-100: \u3042\u306eAlexNet\u306eAlex Krizhevsky\u6c0f\u306e\u30b0\u30eb\u30fc\u30d7\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u300210\u30af\u30e9\u30b9\u5206\u985e\u3068100\u30af\u30e9\u30b9\u5206\u985e\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002 http://www.cs.toronto.edu/~kriz/cifar.html ImageNet: 2009\u5e74\u306eCVPR\u306b\u3066\u30d7\u30ea\u30f3\u30b9\u30c8\u30f3\u5927\u5b66\u306e\u30c1\u30fc\u30e0\u304c\u516c\u958b\u3057\u305f\u306e\u304c\u304d\u3063\u304b\u3051\u3067\u767a\u5c55\u3057\u305f\u30011400\u4e07\u679a\u8d85\u306e\u753b\u50cf\u3068\u610f\u5473\u3092\u793a\u3059\u30bf\u30b0\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002100\u4e07\u679a\u307b\u3069\u306f\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u3059\u3002 http://www.image-net.org/ \u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc","title":"\u5e30\u7d0d\u3068\u6f14\u7e79\uff1a"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/","text":"Python\u306e\u4e26\u5217\u51e6\u7406\u306e\u307e\u3068\u3081 \u76ee\u6b21 \u74b0\u5883 \u30b3\u30a2\u3068\u30d7\u30ed\u30bb\u30b9\u3068\u30b9\u30ec\u30c3\u30c9 Numpy \u306e BLAS \u8a08\u7b97\u30b9\u30d4\u30fc\u30c9\u30c6\u30b9\u30c8 \u7d50\u8ad6 \u61f8\u5ff5\u70b9 1. \u74b0\u5883 Python=3.6.10 numpy=1.17.1 2. \u30b3\u30a2\u3068\u30d7\u30ed\u30bb\u30b9\u3068\u30b9\u30ec\u30c3\u30c9 2.1 CPU \u8ad6\u7406\u30b3\u30a2\u6570 CPU \u8ad6\u7406\u30b3\u30a2\u6570 \u3068\u306f\u5b9f\u969b\u306b\u547d\u4ee4\u3092\u884c\u3046\u90e8\u54c1\u306e\u3053\u3068\u3067\u3001CPU \u8ad6\u7406\u30b3\u30a2\u6570\uff1d\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\u547d\u4ee4\u306e\u6570\u3002 \u81ea\u5206\u306e Mac \u306e CPU \u8ad6\u7406\u30b3\u30a2\u304c 4 \u500b\u3057\u304b\u306a\u3044\u3067\u3059\u304c\u3001 multiprocessing.cpu_count() \u3067\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3089 8 \u3067\u3057\u305f\u3002\u305d\u308c\u306f\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0(Hyper-Threading)\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 import multiprocessing multiprocessing . cpu_count () >>> 8 \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0 \u3068\u306f\u3001\u5f93\u6765 CPU \u306e\u30b3\u30a2\u4e00\u3064\u306b\u4e00\u3064\u3057\u304b\u642d\u8f09\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u88c5\u7f6e\u3092\u8907\u6570\u642d\u8f09\u3057\u3066\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u80fd\u529b\u3092\u5411\u4e0a\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u3092\u5099\u3048\u305f CPU \u3067\u306f\u30db\u30b9\u30c8 OS \u304b\u3089\u5b9f\u969b\u642d\u8f09\u3057\u3066\u3044\u308b\u30b3\u30a2\u6570\u3088\u308a\u591a\u304f\u306e\u30b3\u30a2\u3092\u642d\u8f09\u3057\u3066\u3044\u308b\u3088\u3046\u300c\u8ad6\u7406\u7684\u306b\u300d\u898b\u3048\u308b\u3053\u3068\u3068\u306a\u308a\u3001\u5b9f\u30b3\u30a2\u6570\u3088\u308a\u591a\u304f\u306e\u30b9\u30ec\u30c3\u30c9\u3084\u30d7\u30ed\u30bb\u30b9\u3092 OS \u304c\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002 \u53c2\u8003\uff1a \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30fb\u30c6\u30af\u30ce\u30ed\u30b8\u30fc \u305f\u3060\u3057\u3001\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u3063\u3066\u3001\u52b9\u7387\u304c\u500d\u5897\u306b\u306a\u308b\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u5916\u90e8\u306e\u8a18\u4e8b\u306b\u3088\u308a\u307e\u3059\u3068\u3001\u304a\u3088\u305d 1.15 ~ 1.30 \u3050\u3089\u3044\u306b\u306a\u30ea\u307e\u3057\u305f\u3002 \uff08\u53c2\u8003\uff1a \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u308b CPU \u6027\u80fd\u5411\u4e0a\u52b9\u679c\u691c\u8a3c \uff08Linux \u7de8\uff09 \uff09 2.2 \u30d7\u30ed\u30bb\u30b9 \u30d7\u30ed\u30bb\u30b9 \u3068\u306f\u3001\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3053\u3068\u3067\u3059\u30021 \u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f\u30011 \u3064\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\uff08\u30e1\u30e2\u30ea\u9818\u57df\uff09\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u30e1\u30e2\u30ea\u7a7a\u9593\u306f\u30d7\u30ed\u30bb\u30b9\u304b\u3089 OS \u306b\u8981\u6c42\u3059\u308c\u3070\uff08\u7a7a\u304d\u304c\u3042\u308c\u3070\uff09\u5897\u3084\u3057\u3066\u304f\u308c\u307e\u3059\u3002 2.3 \u30b9\u30ec\u30c3\u30c9 \u30b9\u30ec\u30c3\u30c9 \u3068\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u5185\u3067\u547d\u4ee4\u3092\u9010\u6b21\u5b9f\u884c\u3059\u308b\u90e8\u5206\u3067\u3042\u308a\u3001CPU \u8ad6\u7406\u30b3\u30a2\u6570\u3092\u5229\u7528\u3059\u308b\u5358\u4f4d\u306e\u3053\u3068\u3067\u3059\u3002\u524d\u8ff0\u306e\u901a\u308a\u3001SMT\uff08\u540c\u6642\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\uff09\u767b\u5834\u4ee5\u524d\u3067\u306f 1 \u30b9\u30ec\u30c3\u30c9\u306b 1 \u30b3\u30a2\u304c\u57fa\u672c\u3067\u3057\u305f\u3002 3. Numpy \u306e BLAS BLAS \u3068\u306f\u3001Basic Linear Algebra Subprograms \u306e\u7565\u3067\u3059\u3002\u96e3\u3057\u304f\u8a00\u3046\u3068\u3001\u57fa\u672c\u7684\u306a\u7dda\u5f62\u6f14\u7b97\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u7c21\u5358\u306b\u3044\u3048\u3070\u3001\u884c\u5217\u3084\u30d9\u30af\u30c8\u30eb\u306e\u57fa\u672c\u7684\u306a\u8a08\u7b97\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u95a2\u6570\u7fa4\u3067\u3059\u3002 BLAS \u306e\u7a2e\u985e BLAS \u306b\u306f\u69d8\u3005\u306a\u7a2e\u985e\u306e\u3082\u306e\u304c\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u4e00\u90e8\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002 OpenBLAS BLAS \u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5\u3002pip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f numpy \u3067\u306f\u3001OpenBLAS \u304c\u5185\u90e8\u3067\u547c\u3073\u51fa\u3055\u308c\u3066\u6f14\u7b97\u304c\u884c\u308f\u308c\u308b\u3002 \u3055\u307e\u3056\u307e\u306a CPU \u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001intel \u306e Sandy Bridge CPU \u306b\u5bfe\u3057\u3066 Intel MKL \u3068\u540c\u7b49\u306e\u901f\u5ea6\u3092\u51fa\u305b\u308b\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6a5f\u80fd\u3067\u3088\u304f\u77e5\u3089\u308c\u3066\u304a\u308a\u3001\u30b3\u30a2\u306e\u6570\u3068\u9ad8\u901f\u5316\u304c\u826f\u304f\u6bd4\u4f8b\u3059\u308b\u305d\u3046\u3002 Intel MKL ( Intel Math Kernel Library ) Intel \u958b\u767a\u306e BLAS\u3002Intel \u88fd CPU \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304a\u308a\u3001\u4ed6\u793e\u88fd\u306e CPU \u3067\u306f\u4f7f\u3048\u306a\u3044\u3002Xeon \u3084 Core i \u30b7\u30ea\u30fc\u30ba\u3001Atom \u306a\u3069\u306e Intel \u88fd CPU \u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u304c CPU \u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d1\u30bd\u30b3\u30f3\u3067\u306f intel MKL \u3092\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u65b9\u304c\u8a08\u7b97\u304c\u9ad8\u901f\u306b\u306a\u308b\u3002Anaconda \u3084 Miniconda \u3067\u300cconda install\u300d\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f numpy \u306f intel MKL \u304c\u5229\u7528\u3055\u308c\u308b\u3002 ATLAS ( Automatically Tuned Linear Algebra Software ) \u30d5\u30ea\u30fc\u306e BLAS \u306e 1 \u3064\u3002\u540d\u524d\u306e\u901a\u308a\u3001\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3001\u9ad8\u901f\u306a\u6f14\u7b97\u3092\u5b9f\u73fe\u3059\u308b\u3002 \u53c2\u8003\uff1a Numpy \u306b\u4f7f\u308f\u308c\u308b BLAS \u306b\u3088\u3063\u3066\u8a08\u7b97\u901f\u5ea6\u304c\u5909\u308f\u308b\u3089\u3057\u3044\u3010Python\u3011 \u4ee5\u4e0b\u306f Anaconda \u516c\u5f0f\u306b\u3088\u308b\u3082\u306e\u3067\u3059\u3002conda install \u3068 pip install\u3001\u305d\u308c\u305e\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f tensorflow \u3067\u3001\u8907\u6570\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u5927 8 \u500d\u3082\u5dee\u304c\u51fa\u3066\u3044\u307e\u3059\u3002 OpenBLAS( pip install numpy ) Intel MKL( conda install numpy ) \u203b \u81ea\u5206\u306e numpy \u304c\u4f7f\u3063\u3066\u3044\u308b\u7dda\u5f62\u4ee3\u6570\u306e\u6570\u5024\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u78ba\u8a8d\u65b9\u6cd5\uff1a import numpy numpy . __config__ . show () 4. \u8a08\u7b97\u30b9\u30d4\u30fc\u30c9\u30c6\u30b9\u30c8 \uff08\u7d50\u679c\u306e\u4e00\u90e8\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\uff09 \u4e0a\u306e\u30b0\u30e9\u30d5\u306e\u8aac\u660e: \u305d\u308c\u305e\u308c\u306e\u30c6\u30b9\u30c8\u306f\u5168\u90e8 3 \u56de\u305a\u3064 \u300cthread \u6570\u300d\uff1a1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u6570\u3002 \u300ccore \u6570\u300d\uff1a\u4f7f\u3063\u305f\u30b3\u30a2\u306e\u6570\u3002\u30ed\u30fc\u30ab\u30eb Macbook \u306f 8 \u30b3\u30a2\uff08CPU \u8ad6\u7406\u30b3\u30a2\u6570\u306f 4 \u500b\uff09\u3060\u3051\u306a\u306e\u3067\u30018 \u30b3\u30a2\u307e\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002GPU \u30b5\u30fc\u30d0\u306e\u65b9\u306f 40 \u30b3\u30a2\u3042\u308b\u3067\u3059\u304c\u3001\u4ed6\u306e\u65b9\u306e\u4f7f\u7528\u72b6\u6cc1\u3092\u8003\u616e\u3057\u3066\u3001\u6700\u5927 20 \u30b3\u30a2\u307e\u3067\u3057\u304b\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 \u300ctime x cores\u300d\uff1a\u30b3\u30a2\u6570\u3068\u304b\u304b\u308b\u6642\u9593\u306e\u95a2\u4fc2\u3092\u8868\u3059\u30b3\u30e9\u30e0\u3067\u3059\u3002\u7406\u60f3\u7684\u306a\u306e\u306f\u30b3\u30a2\u6570\u306b\u304b\u304b\u308f\u3089\u305a\u3001\u300ctime x cores\u300d\u304c\u5168\u90e8\u540c\u3058\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b3\u30a2\u6570\u3068\u30b9\u30d4\u30fc\u30c9\u304c\u7dda\u5f62\u7684\u306a\u95a2\u4fc2\u304c\u8a00\u3048\u307e\u3059\u3002 \u4f7f\u3063\u305f numpy \u306e\u6570\u5b66\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u300cOpenBLAS\u300d\u3067\u3059\u3002 \u4e0a\u306e\u30b0\u30e9\u30d5\u304b\u3089\u308f\u3089\u308b\u5185\u5bb9\uff1a mac \u306e\u7269\u7406\u30b3\u30a2\u6570\u300c4\u300d\u306b\u9054\u3057\u305f\u3089\u3001\u30b9\u30d4\u30fc\u30c9\u306e\u4e0a\u304c\u308a\u7387\u304c 20~30%\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\uff08\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u304c\u50cd\u3044\u305f\u304b\u3089\u3067\u3059\u3002\uff09 GPU \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30b3\u30a2\u304c 40 \u500b\u3042\u308b\u306e\u3067\u3001\u4e0a\u9650\u306b\u9054\u3059\u307e\u3067\u30b9\u30d4\u30fc\u30c9\u304c\u4e0a\u304c\u308a\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u300ctime x cores\u300d\u306e\u7d50\u679c\u304b\u3089\u898b\u308b\u3068\u3001\u7dda\u5f62\u7684\u306a\u95a2\u4fc2\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u305d\u308c\u306f Numpy \u306e\u5168\u3066\u306e\u95a2\u6570\u304c BLAS \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u90e8\u306e\u95a2\u6570\uff08 dot() \u3001 vdot() \u3001 innerproduct() \u304a\u3088\u3073 numpy.linalg \u30e2\u30b8\u30e5\u30fc\u30eb\u3002\uff09\u3060\u3051\u306a\u306e\u3067\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u304c\u3088\u308a\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u63d0\u4f9b\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u5927\u304d\u304f\u4f9d\u5b58\u3057\u307e\u3059\u3002\uff08\u53c2\u8003\uff1a python / numpy \u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9 blas \uff09 1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u306b\u6307\u5b9a\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u304c\u5897\u3048\u308c\u3070\u5897\u3048\u308b\u307b\u3069\u3001\u5168\u4f53\u7684\u304b\u304b\u308b\u6642\u9593\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\uff08\u3053\u3053\u306e\u8a18\u4e8b\u3082\u540c\u3058\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\uff1a Optimal number of threads per core \uff09 5. \u7d50\u8ad6 1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3067\u306f\u306a\u3044\u3001GPU \u30b5\u30fc\u30d0(idun)\u3092\u4f7f\u3046\u6642\u3001\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u30011 \u30d7\u30ed\u30bb\u30b9=24 \u30b9\u30ec\u30c3\u30c9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4e26\u5217\u51e6\u7406\uff08multiprocessing\uff09\u3067\u5b9f\u884c\u30b9\u30d4\u30fc\u30c9\u3092\u91cd\u8996\u3057\u305f\u3044\u5834\u5408\u3001\u307e\u305a 1 \u30d7\u30ed\u30bb\u30b9=1 \u30b9\u30ec\u30c3\u30c9\u306b\u6307\u5b9a\u3057\u3066\u304b\u3089\u5b9f\u884c\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002 6. \u61f8\u5ff5\u70b9 \u4eca\u56de\u30c6\u30b9\u30c8\u3057\u304b\u306e\u306f\u5927\u6797\u7d44\u306e\u6848\u4ef6\u3060\u3051\u306a\u306e\u3067\u3001\u4ed6\u306e\u30bf\u30b9\u30af\u306b\u304a\u3044\u3066\u3082\u540c\u3058\u7d50\u8ad6\u304c\u8a00\u3048\u308b\u304b\u3069\u3046\u304b\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002 \u4f7f\u3063\u3066\u3044\u308b CPU \u30b3\u30a2\u6570\u3060\u3051\u3058\u3083\u306a\u304f\u3001\u30b3\u30a2\u3054\u3068\u306e\u5229\u7528\u7387\u300c%CPU\u300d\u306b\u3082\u95a2\u4fc2\u3042\u308a\u305d\u3046\u3067\u3059\u3002(2 \u30b3\u30a2\u3067\u5168\u90e8 100%CPU \u5229\u7528\u7387\u3068\u30014 \u30b3\u30a2\u3067 60%CPU \u5229\u7528\u7387\u306e\u5834\u5408\u3001\u30b9\u30d4\u30fc\u30c9\u304c\u5fc5\u305a\u4e0a\u304c\u308b\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3059\u3002) multiprocessing \u4ee5\u5916\u4e26\u5217\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u308b\u624b\u6cd5\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u3082\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u3063\u305f\u5834\u5408\u540c\u3058\u7d50\u8ad6\u304b\u3069\u3046\u304b\u306f\u307e\u3060\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002 \u88dc\u8db3 \u30b9\u30ec\u30c3\u30c9\u6570\u306e\u6307\u5b9a\u65b9\u6cd5\uff1a 1.1 OpenBLAS \u306e\u5834\u5408\uff08\u30c6\u30b9\u30c8\u6e08\uff09 export OMP_NUM_THREADS = 1 1.2 Intel MKL \u306e\u5834\u5408\uff08\u307e\u3060\u672a\u30c6\u30b9\u30c8\uff09 export MKL_NUM_THREADS = 1","title":"Python\u306e\u4e26\u5217\u51e6\u7406\u306e\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#python","text":"","title":"Python\u306e\u4e26\u5217\u51e6\u7406\u306e\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#_1","text":"\u74b0\u5883 \u30b3\u30a2\u3068\u30d7\u30ed\u30bb\u30b9\u3068\u30b9\u30ec\u30c3\u30c9 Numpy \u306e BLAS \u8a08\u7b97\u30b9\u30d4\u30fc\u30c9\u30c6\u30b9\u30c8 \u7d50\u8ad6 \u61f8\u5ff5\u70b9","title":"\u76ee\u6b21"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#1","text":"Python=3.6.10 numpy=1.17.1","title":"1. \u74b0\u5883"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#2","text":"","title":"2. \u30b3\u30a2\u3068\u30d7\u30ed\u30bb\u30b9\u3068\u30b9\u30ec\u30c3\u30c9"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#21-cpu","text":"CPU \u8ad6\u7406\u30b3\u30a2\u6570 \u3068\u306f\u5b9f\u969b\u306b\u547d\u4ee4\u3092\u884c\u3046\u90e8\u54c1\u306e\u3053\u3068\u3067\u3001CPU \u8ad6\u7406\u30b3\u30a2\u6570\uff1d\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\u547d\u4ee4\u306e\u6570\u3002 \u81ea\u5206\u306e Mac \u306e CPU \u8ad6\u7406\u30b3\u30a2\u304c 4 \u500b\u3057\u304b\u306a\u3044\u3067\u3059\u304c\u3001 multiprocessing.cpu_count() \u3067\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3089 8 \u3067\u3057\u305f\u3002\u305d\u308c\u306f\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0(Hyper-Threading)\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 import multiprocessing multiprocessing . cpu_count () >>> 8 \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0 \u3068\u306f\u3001\u5f93\u6765 CPU \u306e\u30b3\u30a2\u4e00\u3064\u306b\u4e00\u3064\u3057\u304b\u642d\u8f09\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u88c5\u7f6e\u3092\u8907\u6570\u642d\u8f09\u3057\u3066\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u80fd\u529b\u3092\u5411\u4e0a\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u3092\u5099\u3048\u305f CPU \u3067\u306f\u30db\u30b9\u30c8 OS \u304b\u3089\u5b9f\u969b\u642d\u8f09\u3057\u3066\u3044\u308b\u30b3\u30a2\u6570\u3088\u308a\u591a\u304f\u306e\u30b3\u30a2\u3092\u642d\u8f09\u3057\u3066\u3044\u308b\u3088\u3046\u300c\u8ad6\u7406\u7684\u306b\u300d\u898b\u3048\u308b\u3053\u3068\u3068\u306a\u308a\u3001\u5b9f\u30b3\u30a2\u6570\u3088\u308a\u591a\u304f\u306e\u30b9\u30ec\u30c3\u30c9\u3084\u30d7\u30ed\u30bb\u30b9\u3092 OS \u304c\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002 \u53c2\u8003\uff1a \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30fb\u30c6\u30af\u30ce\u30ed\u30b8\u30fc \u305f\u3060\u3057\u3001\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u3063\u3066\u3001\u52b9\u7387\u304c\u500d\u5897\u306b\u306a\u308b\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u5916\u90e8\u306e\u8a18\u4e8b\u306b\u3088\u308a\u307e\u3059\u3068\u3001\u304a\u3088\u305d 1.15 ~ 1.30 \u3050\u3089\u3044\u306b\u306a\u30ea\u307e\u3057\u305f\u3002 \uff08\u53c2\u8003\uff1a \u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u308b CPU \u6027\u80fd\u5411\u4e0a\u52b9\u679c\u691c\u8a3c \uff08Linux \u7de8\uff09 \uff09","title":"2.1 CPU \u8ad6\u7406\u30b3\u30a2\u6570"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#22","text":"\u30d7\u30ed\u30bb\u30b9 \u3068\u306f\u3001\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3053\u3068\u3067\u3059\u30021 \u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f\u30011 \u3064\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\uff08\u30e1\u30e2\u30ea\u9818\u57df\uff09\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u30e1\u30e2\u30ea\u7a7a\u9593\u306f\u30d7\u30ed\u30bb\u30b9\u304b\u3089 OS \u306b\u8981\u6c42\u3059\u308c\u3070\uff08\u7a7a\u304d\u304c\u3042\u308c\u3070\uff09\u5897\u3084\u3057\u3066\u304f\u308c\u307e\u3059\u3002","title":"2.2 \u30d7\u30ed\u30bb\u30b9"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#23","text":"\u30b9\u30ec\u30c3\u30c9 \u3068\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u5185\u3067\u547d\u4ee4\u3092\u9010\u6b21\u5b9f\u884c\u3059\u308b\u90e8\u5206\u3067\u3042\u308a\u3001CPU \u8ad6\u7406\u30b3\u30a2\u6570\u3092\u5229\u7528\u3059\u308b\u5358\u4f4d\u306e\u3053\u3068\u3067\u3059\u3002\u524d\u8ff0\u306e\u901a\u308a\u3001SMT\uff08\u540c\u6642\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\uff09\u767b\u5834\u4ee5\u524d\u3067\u306f 1 \u30b9\u30ec\u30c3\u30c9\u306b 1 \u30b3\u30a2\u304c\u57fa\u672c\u3067\u3057\u305f\u3002","title":"2.3 \u30b9\u30ec\u30c3\u30c9"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#3-numpy-blas","text":"BLAS \u3068\u306f\u3001Basic Linear Algebra Subprograms \u306e\u7565\u3067\u3059\u3002\u96e3\u3057\u304f\u8a00\u3046\u3068\u3001\u57fa\u672c\u7684\u306a\u7dda\u5f62\u6f14\u7b97\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u7c21\u5358\u306b\u3044\u3048\u3070\u3001\u884c\u5217\u3084\u30d9\u30af\u30c8\u30eb\u306e\u57fa\u672c\u7684\u306a\u8a08\u7b97\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u95a2\u6570\u7fa4\u3067\u3059\u3002 BLAS \u306e\u7a2e\u985e BLAS \u306b\u306f\u69d8\u3005\u306a\u7a2e\u985e\u306e\u3082\u306e\u304c\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u4e00\u90e8\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002 OpenBLAS BLAS \u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5\u3002pip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f numpy \u3067\u306f\u3001OpenBLAS \u304c\u5185\u90e8\u3067\u547c\u3073\u51fa\u3055\u308c\u3066\u6f14\u7b97\u304c\u884c\u308f\u308c\u308b\u3002 \u3055\u307e\u3056\u307e\u306a CPU \u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001intel \u306e Sandy Bridge CPU \u306b\u5bfe\u3057\u3066 Intel MKL \u3068\u540c\u7b49\u306e\u901f\u5ea6\u3092\u51fa\u305b\u308b\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6a5f\u80fd\u3067\u3088\u304f\u77e5\u3089\u308c\u3066\u304a\u308a\u3001\u30b3\u30a2\u306e\u6570\u3068\u9ad8\u901f\u5316\u304c\u826f\u304f\u6bd4\u4f8b\u3059\u308b\u305d\u3046\u3002 Intel MKL ( Intel Math Kernel Library ) Intel \u958b\u767a\u306e BLAS\u3002Intel \u88fd CPU \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304a\u308a\u3001\u4ed6\u793e\u88fd\u306e CPU \u3067\u306f\u4f7f\u3048\u306a\u3044\u3002Xeon \u3084 Core i \u30b7\u30ea\u30fc\u30ba\u3001Atom \u306a\u3069\u306e Intel \u88fd CPU \u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u304c CPU \u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d1\u30bd\u30b3\u30f3\u3067\u306f intel MKL \u3092\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u65b9\u304c\u8a08\u7b97\u304c\u9ad8\u901f\u306b\u306a\u308b\u3002Anaconda \u3084 Miniconda \u3067\u300cconda install\u300d\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f numpy \u306f intel MKL \u304c\u5229\u7528\u3055\u308c\u308b\u3002 ATLAS ( Automatically Tuned Linear Algebra Software ) \u30d5\u30ea\u30fc\u306e BLAS \u306e 1 \u3064\u3002\u540d\u524d\u306e\u901a\u308a\u3001\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3001\u9ad8\u901f\u306a\u6f14\u7b97\u3092\u5b9f\u73fe\u3059\u308b\u3002 \u53c2\u8003\uff1a Numpy \u306b\u4f7f\u308f\u308c\u308b BLAS \u306b\u3088\u3063\u3066\u8a08\u7b97\u901f\u5ea6\u304c\u5909\u308f\u308b\u3089\u3057\u3044\u3010Python\u3011 \u4ee5\u4e0b\u306f Anaconda \u516c\u5f0f\u306b\u3088\u308b\u3082\u306e\u3067\u3059\u3002conda install \u3068 pip install\u3001\u305d\u308c\u305e\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f tensorflow \u3067\u3001\u8907\u6570\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u5927 8 \u500d\u3082\u5dee\u304c\u51fa\u3066\u3044\u307e\u3059\u3002 OpenBLAS( pip install numpy ) Intel MKL( conda install numpy ) \u203b \u81ea\u5206\u306e numpy \u304c\u4f7f\u3063\u3066\u3044\u308b\u7dda\u5f62\u4ee3\u6570\u306e\u6570\u5024\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u78ba\u8a8d\u65b9\u6cd5\uff1a import numpy numpy . __config__ . show ()","title":"3. Numpy \u306e BLAS"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#4","text":"\uff08\u7d50\u679c\u306e\u4e00\u90e8\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\uff09 \u4e0a\u306e\u30b0\u30e9\u30d5\u306e\u8aac\u660e: \u305d\u308c\u305e\u308c\u306e\u30c6\u30b9\u30c8\u306f\u5168\u90e8 3 \u56de\u305a\u3064 \u300cthread \u6570\u300d\uff1a1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u6570\u3002 \u300ccore \u6570\u300d\uff1a\u4f7f\u3063\u305f\u30b3\u30a2\u306e\u6570\u3002\u30ed\u30fc\u30ab\u30eb Macbook \u306f 8 \u30b3\u30a2\uff08CPU \u8ad6\u7406\u30b3\u30a2\u6570\u306f 4 \u500b\uff09\u3060\u3051\u306a\u306e\u3067\u30018 \u30b3\u30a2\u307e\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002GPU \u30b5\u30fc\u30d0\u306e\u65b9\u306f 40 \u30b3\u30a2\u3042\u308b\u3067\u3059\u304c\u3001\u4ed6\u306e\u65b9\u306e\u4f7f\u7528\u72b6\u6cc1\u3092\u8003\u616e\u3057\u3066\u3001\u6700\u5927 20 \u30b3\u30a2\u307e\u3067\u3057\u304b\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 \u300ctime x cores\u300d\uff1a\u30b3\u30a2\u6570\u3068\u304b\u304b\u308b\u6642\u9593\u306e\u95a2\u4fc2\u3092\u8868\u3059\u30b3\u30e9\u30e0\u3067\u3059\u3002\u7406\u60f3\u7684\u306a\u306e\u306f\u30b3\u30a2\u6570\u306b\u304b\u304b\u308f\u3089\u305a\u3001\u300ctime x cores\u300d\u304c\u5168\u90e8\u540c\u3058\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b3\u30a2\u6570\u3068\u30b9\u30d4\u30fc\u30c9\u304c\u7dda\u5f62\u7684\u306a\u95a2\u4fc2\u304c\u8a00\u3048\u307e\u3059\u3002 \u4f7f\u3063\u305f numpy \u306e\u6570\u5b66\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u300cOpenBLAS\u300d\u3067\u3059\u3002 \u4e0a\u306e\u30b0\u30e9\u30d5\u304b\u3089\u308f\u3089\u308b\u5185\u5bb9\uff1a mac \u306e\u7269\u7406\u30b3\u30a2\u6570\u300c4\u300d\u306b\u9054\u3057\u305f\u3089\u3001\u30b9\u30d4\u30fc\u30c9\u306e\u4e0a\u304c\u308a\u7387\u304c 20~30%\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\uff08\u30cf\u30a4\u30d1\u30fc\u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u304c\u50cd\u3044\u305f\u304b\u3089\u3067\u3059\u3002\uff09 GPU \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30b3\u30a2\u304c 40 \u500b\u3042\u308b\u306e\u3067\u3001\u4e0a\u9650\u306b\u9054\u3059\u307e\u3067\u30b9\u30d4\u30fc\u30c9\u304c\u4e0a\u304c\u308a\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u300ctime x cores\u300d\u306e\u7d50\u679c\u304b\u3089\u898b\u308b\u3068\u3001\u7dda\u5f62\u7684\u306a\u95a2\u4fc2\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u305d\u308c\u306f Numpy \u306e\u5168\u3066\u306e\u95a2\u6570\u304c BLAS \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u90e8\u306e\u95a2\u6570\uff08 dot() \u3001 vdot() \u3001 innerproduct() \u304a\u3088\u3073 numpy.linalg \u30e2\u30b8\u30e5\u30fc\u30eb\u3002\uff09\u3060\u3051\u306a\u306e\u3067\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u304c\u3088\u308a\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u63d0\u4f9b\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u5927\u304d\u304f\u4f9d\u5b58\u3057\u307e\u3059\u3002\uff08\u53c2\u8003\uff1a python / numpy \u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9 blas \uff09 1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u306b\u6307\u5b9a\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u304c\u5897\u3048\u308c\u3070\u5897\u3048\u308b\u307b\u3069\u3001\u5168\u4f53\u7684\u304b\u304b\u308b\u6642\u9593\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\uff08\u3053\u3053\u306e\u8a18\u4e8b\u3082\u540c\u3058\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\uff1a Optimal number of threads per core \uff09","title":"4. \u8a08\u7b97\u30b9\u30d4\u30fc\u30c9\u30c6\u30b9\u30c8"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#5","text":"1 \u30d7\u30ed\u30bb\u30b9\u4e2d\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3067\u306f\u306a\u3044\u3001GPU \u30b5\u30fc\u30d0(idun)\u3092\u4f7f\u3046\u6642\u3001\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u30011 \u30d7\u30ed\u30bb\u30b9=24 \u30b9\u30ec\u30c3\u30c9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4e26\u5217\u51e6\u7406\uff08multiprocessing\uff09\u3067\u5b9f\u884c\u30b9\u30d4\u30fc\u30c9\u3092\u91cd\u8996\u3057\u305f\u3044\u5834\u5408\u3001\u307e\u305a 1 \u30d7\u30ed\u30bb\u30b9=1 \u30b9\u30ec\u30c3\u30c9\u306b\u6307\u5b9a\u3057\u3066\u304b\u3089\u5b9f\u884c\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002","title":"5. \u7d50\u8ad6"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#6","text":"\u4eca\u56de\u30c6\u30b9\u30c8\u3057\u304b\u306e\u306f\u5927\u6797\u7d44\u306e\u6848\u4ef6\u3060\u3051\u306a\u306e\u3067\u3001\u4ed6\u306e\u30bf\u30b9\u30af\u306b\u304a\u3044\u3066\u3082\u540c\u3058\u7d50\u8ad6\u304c\u8a00\u3048\u308b\u304b\u3069\u3046\u304b\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002 \u4f7f\u3063\u3066\u3044\u308b CPU \u30b3\u30a2\u6570\u3060\u3051\u3058\u3083\u306a\u304f\u3001\u30b3\u30a2\u3054\u3068\u306e\u5229\u7528\u7387\u300c%CPU\u300d\u306b\u3082\u95a2\u4fc2\u3042\u308a\u305d\u3046\u3067\u3059\u3002(2 \u30b3\u30a2\u3067\u5168\u90e8 100%CPU \u5229\u7528\u7387\u3068\u30014 \u30b3\u30a2\u3067 60%CPU \u5229\u7528\u7387\u306e\u5834\u5408\u3001\u30b9\u30d4\u30fc\u30c9\u304c\u5fc5\u305a\u4e0a\u304c\u308b\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3059\u3002) multiprocessing \u4ee5\u5916\u4e26\u5217\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u308b\u624b\u6cd5\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u3082\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u3063\u305f\u5834\u5408\u540c\u3058\u7d50\u8ad6\u304b\u3069\u3046\u304b\u306f\u307e\u3060\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u3002","title":"6. \u61f8\u5ff5\u70b9"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/multiprocess_in_python/#_2","text":"\u30b9\u30ec\u30c3\u30c9\u6570\u306e\u6307\u5b9a\u65b9\u6cd5\uff1a 1.1 OpenBLAS \u306e\u5834\u5408\uff08\u30c6\u30b9\u30c8\u6e08\uff09 export OMP_NUM_THREADS = 1 1.2 Intel MKL \u306e\u5834\u5408\uff08\u307e\u3060\u672a\u30c6\u30b9\u30c8\uff09 export MKL_NUM_THREADS = 1","title":"\u88dc\u8db3"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/","text":"Python\u306e\u304a\u52c9\u5f37\u306b\u4f7f\u3048\u308b\u66f8\u7c4d\u306e\u307e\u3068\u3081 \u6a5f\u68b0\u5b66\u7fd2\u3092\u52c9\u5f37\u3057\u305f\u3044\u3051\u3069\u305d\u3082\u305d\u3082Python\u89e6\u3063\u305f\u3053\u3068\u306a\u3044\u4eba Django\u3068\u304bFlask\u3068\u304b\u3067Python\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u4eba \u305d\u3093\u306a\u7247\u65b9\u3080\u3051\u306b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u3057\u3066\u306ePython\u306e\u52c9\u5f37\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002 python\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 AI\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u6c17\u3092\u3064\u3051\u305f\u3044Python\u5b9f\u88c5\u306e\u30ce\u30a6\u30cf\u30a6\u30fb\u30b3\u30c4\u307e\u3068\u3081 \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u81ea\u8d70\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u300d \u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3068\u306f \u4e00\u5e74\u5f8c\u306e\u81ea\u5206\u306b\u3068\u3063\u3066\u3082\u3001\u5206\u304b\u308a\u3084\u3059\u3044\u30fb\u8aad\u307f\u3084\u3059\u3044\u30fb\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002\u4eba\u306e\u30b3\u30fc\u30c9\u3092\u898b\u305f\u308a\u3001\u898b\u3066\u8cb0\u3063\u305f\u308a\u3059\u308b\u306e\u306f\u975e\u5e38\u306b\u8cb4\u91cd\u306a\u7d4c\u9a13\u306b\u306a\u308a\u307e\u3059\u3002 \u95a2\u6570\u3084\u30d5\u30a1\u30a4\u30eb\u306f\u9069\u5ea6\u306a\u884c\u6570\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u591a\u3044\u5834\u5408\u306f\u95a2\u6570\u540d\u3084\u5909\u6570\u540d\u3067\u5206\u304b\u308b\u3088\u3046\u306b\u51fa\u6765\u306a\u3044\u304b\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3067\u4fee\u6b63\u3059\u308b\u5834\u5408\u306f\u30c6\u30b9\u30c8\u306f\u5fc5\u9808\u3067\u3059\u3002 [\u53c2\u8003]\u6bb5\u968e\u3092\u8e0f\u307f\u3064\u3064\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u308b: https://qiita.com/suzuki-hoge/items/220e36eb34b160ada527 \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u30ea\u30fc\u30c0\u30d6\u30eb\u30b3\u30fc\u30c9\u300d \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u306f \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u304d\u30fb\u8a2d\u8a08\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u6700\u521d\u306e\u3046\u3061\u306fprint\u30c7\u30d0\u30c3\u30b0\u306a\u3069\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u6319\u52d5\u3092\u628a\u63e1\u3059\u308b\u306e\u3082\u5927\u4e8b\u3068\u601d\u3044\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u305f\u3081\u306e\u6280\u8853(\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8) \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3068\u306f(\u7121\u7406\u3084\u308a\u4e00\u8a00\u3067\u8a00\u3046\u3068)\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6574\u7406\u306e\u4ed5\u65b9\u3067\u3059\u3002\u76ee\u7684\u3054\u3068\u306e\u5358\u4f4d\u3067\u95a2\u6570\u3084\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u3001\u8a2d\u8a08\u3092\u7406\u89e3\u30fb\u6539\u5584\u3057\u3084\u3059\u304f\u3057\u307e\u3059\u3002python\u3067\u3082\u30af\u30e9\u30b9\u306a\u3069\u8a2d\u8a08\u3059\u308b\u3068\u304d\u306b\u306f\u610f\u8b58\u3057\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002 \u3010\u56f3\u89e3\u3011\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3068\u306f\uff1f: https://26gram.com/what-is-object-oriented \u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3 \u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3068\u306f(\u7121\u7406\u3084\u308a\u4e00\u8a00\u3067\u8a00\u3046\u3068)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5f79\u5272\u3067\u5206\u3051\u308b\u65b9\u6cd5\u3067\u3059\u3002\u904e\u53bb\u306e\u826f\u304b\u3063\u305f\u5206\u3051\u65b9\u3092\u518d\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u3092\u899a\u3048\u308b\u3068\u4f7f\u3063\u3066\u307f\u305f\u304f\u306a\u308b\u75c5\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u6562\u3048\u3066\u4f7f\u308f\u306a\u3044\u3082\u3072\u3068\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u3068\u601d\u3044\u307e\u3059\u3002python\u3067\u3082\u3056\u3063\u3068\u6982\u8981\u306f\u77e5\u3063\u3066\u304a\u3044\u305f\u65b9\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u4e8b\u4f8b\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3: https://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter01.html \u30c6\u30b9\u30c8\u5927\u4e8b \u4ed5\u4e8b\u3067\u66f8\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6642\u306b\u534a\u5206\u4ee5\u4e0a\u304c\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u308b\u307b\u3069\u30c6\u30b9\u30c8\u306f\u5927\u4e8b\u3067\u3059\u3002\u6b63\u3057\u304f\u52d5\u304f\u304b\u306e\u78ba\u8a8d\u304b\u3089\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u6642\u306b\u30c7\u30b0\u30ec(\u30d0\u30b0\u304c\u6df7\u5165)\u3057\u306a\u3044\u304b\u3092\u78ba\u8a8d\u306a\u3069\u3001\u826f\u3044\u30b3\u30fc\u30c9\u306b\u306f\u5e38\u306b\u30c6\u30b9\u30c8\u304c\u4f34\u3044\u307e\u3059\u3002 TDD \u306a\u3093\u3066\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6271\u3044 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3 \u4ed5\u4e8b\u3067\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u6211\u6d41\u3067\u306f\u7121\u304f\u3001\u7686\u3093\u306a\u304c\u898b\u3084\u3059\u3044\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u66f8\u304d\u307e\u3059\u3002 \u57fa\u672c\u3001flake8\u306a\u3069lint\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u958b\u767a\u3057\u307e\u3057\u3087\u3046\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u306fblack\u3082\u63a8\u5968\u306a\u306e\u3067\u8981\u78ba\u8a8d\u3002 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u306b\u3064\u3044\u3066\u306f\u5225\u8a18\u4e8b\u3067\u3057\u3063\u304b\u308a\u89e3\u8aac\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u66f4\u306a\u308b\u52c9\u5f37\u65b9\u6cd5 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4e0a\u7d1a\u8005\u306b\u5411\u3051\u3066 \u304a\u52e7\u3081\u66f8\u7c4d \u300cEffective Python\u300d \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u300d","title":"Python\u306e\u304a\u52c9\u5f37\u306b\u4f7f\u3048\u308b\u66f8\u7c4d\u306e\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#python","text":"\u6a5f\u68b0\u5b66\u7fd2\u3092\u52c9\u5f37\u3057\u305f\u3044\u3051\u3069\u305d\u3082\u305d\u3082Python\u89e6\u3063\u305f\u3053\u3068\u306a\u3044\u4eba Django\u3068\u304bFlask\u3068\u304b\u3067Python\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u4eba \u305d\u3093\u306a\u7247\u65b9\u3080\u3051\u306b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u3057\u3066\u306ePython\u306e\u52c9\u5f37\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002","title":"Python\u306e\u304a\u52c9\u5f37\u306b\u4f7f\u3048\u308b\u66f8\u7c4d\u306e\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#python_1","text":"AI\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u6c17\u3092\u3064\u3051\u305f\u3044Python\u5b9f\u88c5\u306e\u30ce\u30a6\u30cf\u30a6\u30fb\u30b3\u30c4\u307e\u3068\u3081 \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u81ea\u8d70\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u300d","title":"python\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_1","text":"\u4e00\u5e74\u5f8c\u306e\u81ea\u5206\u306b\u3068\u3063\u3066\u3082\u3001\u5206\u304b\u308a\u3084\u3059\u3044\u30fb\u8aad\u307f\u3084\u3059\u3044\u30fb\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002\u4eba\u306e\u30b3\u30fc\u30c9\u3092\u898b\u305f\u308a\u3001\u898b\u3066\u8cb0\u3063\u305f\u308a\u3059\u308b\u306e\u306f\u975e\u5e38\u306b\u8cb4\u91cd\u306a\u7d4c\u9a13\u306b\u306a\u308a\u307e\u3059\u3002 \u95a2\u6570\u3084\u30d5\u30a1\u30a4\u30eb\u306f\u9069\u5ea6\u306a\u884c\u6570\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u591a\u3044\u5834\u5408\u306f\u95a2\u6570\u540d\u3084\u5909\u6570\u540d\u3067\u5206\u304b\u308b\u3088\u3046\u306b\u51fa\u6765\u306a\u3044\u304b\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3067\u4fee\u6b63\u3059\u308b\u5834\u5408\u306f\u30c6\u30b9\u30c8\u306f\u5fc5\u9808\u3067\u3059\u3002 [\u53c2\u8003]\u6bb5\u968e\u3092\u8e0f\u307f\u3064\u3064\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u308b: https://qiita.com/suzuki-hoge/items/220e36eb34b160ada527 \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u30ea\u30fc\u30c0\u30d6\u30eb\u30b3\u30fc\u30c9\u300d","title":"\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3068\u306f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_2","text":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u304d\u30fb\u8a2d\u8a08\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u6700\u521d\u306e\u3046\u3061\u306fprint\u30c7\u30d0\u30c3\u30b0\u306a\u3069\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u6319\u52d5\u3092\u628a\u63e1\u3059\u308b\u306e\u3082\u5927\u4e8b\u3068\u601d\u3044\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u305f\u3081\u306e\u6280\u8853(\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8)","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u306f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_3","text":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3068\u306f(\u7121\u7406\u3084\u308a\u4e00\u8a00\u3067\u8a00\u3046\u3068)\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6574\u7406\u306e\u4ed5\u65b9\u3067\u3059\u3002\u76ee\u7684\u3054\u3068\u306e\u5358\u4f4d\u3067\u95a2\u6570\u3084\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u3001\u8a2d\u8a08\u3092\u7406\u89e3\u30fb\u6539\u5584\u3057\u3084\u3059\u304f\u3057\u307e\u3059\u3002python\u3067\u3082\u30af\u30e9\u30b9\u306a\u3069\u8a2d\u8a08\u3059\u308b\u3068\u304d\u306b\u306f\u610f\u8b58\u3057\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002 \u3010\u56f3\u89e3\u3011\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3068\u306f\uff1f: https://26gram.com/what-is-object-oriented","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_4","text":"\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3068\u306f(\u7121\u7406\u3084\u308a\u4e00\u8a00\u3067\u8a00\u3046\u3068)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5f79\u5272\u3067\u5206\u3051\u308b\u65b9\u6cd5\u3067\u3059\u3002\u904e\u53bb\u306e\u826f\u304b\u3063\u305f\u5206\u3051\u65b9\u3092\u518d\u5229\u7528\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u3092\u899a\u3048\u308b\u3068\u4f7f\u3063\u3066\u307f\u305f\u304f\u306a\u308b\u75c5\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u6562\u3048\u3066\u4f7f\u308f\u306a\u3044\u3082\u3072\u3068\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u3068\u601d\u3044\u307e\u3059\u3002python\u3067\u3082\u3056\u3063\u3068\u6982\u8981\u306f\u77e5\u3063\u3066\u304a\u3044\u305f\u65b9\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u4e8b\u4f8b\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3: https://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter01.html","title":"\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_5","text":"\u4ed5\u4e8b\u3067\u66f8\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6642\u306b\u534a\u5206\u4ee5\u4e0a\u304c\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u308b\u307b\u3069\u30c6\u30b9\u30c8\u306f\u5927\u4e8b\u3067\u3059\u3002\u6b63\u3057\u304f\u52d5\u304f\u304b\u306e\u78ba\u8a8d\u304b\u3089\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u6642\u306b\u30c7\u30b0\u30ec(\u30d0\u30b0\u304c\u6df7\u5165)\u3057\u306a\u3044\u304b\u3092\u78ba\u8a8d\u306a\u3069\u3001\u826f\u3044\u30b3\u30fc\u30c9\u306b\u306f\u5e38\u306b\u30c6\u30b9\u30c8\u304c\u4f34\u3044\u307e\u3059\u3002 TDD \u306a\u3093\u3066\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002","title":"\u30c6\u30b9\u30c8\u5927\u4e8b"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_6","text":"","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6271\u3044"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_7","text":"\u4ed5\u4e8b\u3067\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u6211\u6d41\u3067\u306f\u7121\u304f\u3001\u7686\u3093\u306a\u304c\u898b\u3084\u3059\u3044\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u66f8\u304d\u307e\u3059\u3002 \u57fa\u672c\u3001flake8\u306a\u3069lint\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u958b\u767a\u3057\u307e\u3057\u3087\u3046\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u306fblack\u3082\u63a8\u5968\u306a\u306e\u3067\u8981\u78ba\u8a8d\u3002 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u306b\u3064\u3044\u3066\u306f\u5225\u8a18\u4e8b\u3067\u3057\u3063\u304b\u308a\u89e3\u8aac\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_8","text":"","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u66f4\u306a\u308b\u52c9\u5f37\u65b9\u6cd5"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/python_study/#_9","text":"\u304a\u52e7\u3081\u66f8\u7c4d \u300cEffective Python\u300d \u304a\u52e7\u3081\u66f8\u7c4d \u300c\u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u300d","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4e0a\u7d1a\u8005\u306b\u5411\u3051\u3066"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC/","text":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3059\u308b\u524d\u306b \u8003\u3048\u308b - \u76ee\u7684\u306f\uff1f - \u305d\u306e\u30b3\u30fc\u30c9\u306f\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u8ad6\u7406\u7684\u6839\u62e0\u304c\u3042\u308b\u304b - \u305d\u306e\u884c\u52d5\u3092\u7d30\u5206\u5316\u3057\u3066\u307f\u3066\u3001\u5b9f\u73fe\u53ef\u80fd\u304b - \u826f\u3044\u9762\u306e\u4ed6\u306b\u60aa\u3044\u9762\u306f\u4f55\u304b \u65e9\u3044\u884c\u52d5\u3088\u308a \u30df\u30b9\u306e\u5c11\u306a\u3044 \u884c\u52d5\u3092\u3002 \u8a8d\u8b58\u304c\u66d6\u6627\u306a\u6642\u306f\u7d50\u8ad6\u3092\u51fa\u3059\u524d\u306b\u805e\u304f \u5de5\u6570 \u898b\u7a4d\u3082\u308a\u3092\u3059\u308b\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7684\u306b\u5b9f\u73fe\u53ef\u80fd\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u5de5\u6570\u898b\u7a4d\u3082\u3063\u305f\u3060\u3051\u3067\u4eca\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u5b9f\u73fe\u53ef\u80fd\u304b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u306a\u3044\u3068\u3069\u3053\u304b\u3067\u9813\u632b\u3059\u308b\u3002 \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0 \u306f\u7d76\u5bfe \u30c6\u30b9\u30c8 \u30b9\u30af\u30ea\u30d7\u30c8\u5fc5\u8981\u3002 \u5c11\u3057\u305a\u3064 \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u21c6\u30c6\u30b9\u30c8\u3092\u884c\u3046 \u30b3\u30fc\u30c9\u3092 \u7406\u89e3\u305b\u305a\u66f8\u304d\u63db\u3048 \u308b\u3068\u3001 \u30d0\u30b0 \u306e\u5143\u3068\u306a\u308b \u5b9f\u9a13 \u306fmlflow\u306a\u3069\u3067 \u81ea\u52d5\u7ba1\u7406 \u3057\u30de\u30cb\u30e5\u30a2\u30eb\u64cd\u4f5c\u3092\u6e1b\u3089\u3059\u3068\u7d50\u679c\u7684\u306b\u304c\u4eba\u7684\u30df\u30b9\u304c\u6e1b\u308b \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9060\u9694\u306b\u9032\u3081\u308b\u305f\u3081\u306b \u30c7\u30fc\u30bf \u4f5c\u6210\u3068 \u56f3 \u306e\u4f5c\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5225\u3005\u306b\u4f5c\u308a\u3001\u56f3\u306e\u4f5c\u6210\u306f\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u4f5c\u308b \uff08Excel\u3060\u3068\u624b\u9806\u5fd8\u308c\u308b\uff09 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e \u8aac\u660e \u306f\u3057\u3063\u304b\u308a\u6b8b\u3059\u3002README\u3084wiki\u4f7f\u7528\u3057\u3066\u3001\u5171\u540c\u4f5c\u696d\u3084\u81ea\u5206\u306e\u601d\u3044\u51fa\u3057\u306b\u6d3b\u7528\u3059\u308b \u76f8\u95a2 \u3068 \u56e0\u679c \u306f\u5206\u3051\u3066\u8003\u3048\u308b\u3002\u540c\u3058\u8981\u56e0\u3001\u307e\u305f\u306f\u4ecb\u5728\u5909\u6570\u306b\u3088\u3063\u3066\u52d5\u3044\u3066\u3044\u308b\u4e8b\u8c61\u306f\u76f8\u95a2\u3092\u6301\u3064\uff08\u64ec\u4f3c\u76f8\u95a2\uff09\u304c\u3001\u539f\u56e0\u3068\u7d50\u679c\u306e\u95a2\u4fc2\uff08\u56e0\u679c\uff09\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002","title":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC/#_1","text":"","title":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC/#_2","text":"- \u76ee\u7684\u306f\uff1f - \u305d\u306e\u30b3\u30fc\u30c9\u306f\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u8ad6\u7406\u7684\u6839\u62e0\u304c\u3042\u308b\u304b - \u305d\u306e\u884c\u52d5\u3092\u7d30\u5206\u5316\u3057\u3066\u307f\u3066\u3001\u5b9f\u73fe\u53ef\u80fd\u304b - \u826f\u3044\u9762\u306e\u4ed6\u306b\u60aa\u3044\u9762\u306f\u4f55\u304b","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3059\u308b\u524d\u306b\u8003\u3048\u308b"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC/#_3","text":"\u8a8d\u8b58\u304c\u66d6\u6627\u306a\u6642\u306f\u7d50\u8ad6\u3092\u51fa\u3059\u524d\u306b\u805e\u304f \u5de5\u6570 \u898b\u7a4d\u3082\u308a\u3092\u3059\u308b\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7684\u306b\u5b9f\u73fe\u53ef\u80fd\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002 \u5de5\u6570\u898b\u7a4d\u3082\u3063\u305f\u3060\u3051\u3067\u4eca\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u5b9f\u73fe\u53ef\u80fd\u304b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u306a\u3044\u3068\u3069\u3053\u304b\u3067\u9813\u632b\u3059\u308b\u3002 \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0 \u306f\u7d76\u5bfe \u30c6\u30b9\u30c8 \u30b9\u30af\u30ea\u30d7\u30c8\u5fc5\u8981\u3002 \u5c11\u3057\u305a\u3064 \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u21c6\u30c6\u30b9\u30c8\u3092\u884c\u3046 \u30b3\u30fc\u30c9\u3092 \u7406\u89e3\u305b\u305a\u66f8\u304d\u63db\u3048 \u308b\u3068\u3001 \u30d0\u30b0 \u306e\u5143\u3068\u306a\u308b \u5b9f\u9a13 \u306fmlflow\u306a\u3069\u3067 \u81ea\u52d5\u7ba1\u7406 \u3057\u30de\u30cb\u30e5\u30a2\u30eb\u64cd\u4f5c\u3092\u6e1b\u3089\u3059\u3068\u7d50\u679c\u7684\u306b\u304c\u4eba\u7684\u30df\u30b9\u304c\u6e1b\u308b","title":"\u65e9\u3044\u884c\u52d5\u3088\u308a\u30df\u30b9\u306e\u5c11\u306a\u3044\u884c\u52d5\u3092\u3002"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC/#_4","text":"\u30c7\u30fc\u30bf \u4f5c\u6210\u3068 \u56f3 \u306e\u4f5c\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5225\u3005\u306b\u4f5c\u308a\u3001\u56f3\u306e\u4f5c\u6210\u306f\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u4f5c\u308b \uff08Excel\u3060\u3068\u624b\u9806\u5fd8\u308c\u308b\uff09 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e \u8aac\u660e \u306f\u3057\u3063\u304b\u308a\u6b8b\u3059\u3002README\u3084wiki\u4f7f\u7528\u3057\u3066\u3001\u5171\u540c\u4f5c\u696d\u3084\u81ea\u5206\u306e\u601d\u3044\u51fa\u3057\u306b\u6d3b\u7528\u3059\u308b \u76f8\u95a2 \u3068 \u56e0\u679c \u306f\u5206\u3051\u3066\u8003\u3048\u308b\u3002\u540c\u3058\u8981\u56e0\u3001\u307e\u305f\u306f\u4ecb\u5728\u5909\u6570\u306b\u3088\u3063\u3066\u52d5\u3044\u3066\u3044\u308b\u4e8b\u8c61\u306f\u76f8\u95a2\u3092\u6301\u3064\uff08\u64ec\u4f3c\u76f8\u95a2\uff09\u304c\u3001\u539f\u56e0\u3068\u7d50\u679c\u306e\u95a2\u4fc2\uff08\u56e0\u679c\uff09\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9060\u9694\u306b\u9032\u3081\u308b\u305f\u3081\u306b"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/","text":"\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u307e\u3068\u3081 \u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u8272\u3005\u3042\u308b\u5272\u306b\u4f7f\u3063\u3066\u3044\u308b\u4eba\u304c\u5c11\u306a\u3044\u304b\u3089\u304b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e0d\u8db3\u3057\u304c\u3061\u3067\u3059\u3002 \u4eca\u56de\u306f\u5404\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u77ed\u6240, \u9577\u6240\u306b\u3064\u3044\u3066\u3056\u3063\u304f\u308a\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u3068\u304d\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002 \u305d\u3082\u305d\u3082\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3063\u3066\u4f55\uff1f \u304b\u3063\u3061\u308a\u3068\u3057\u305f\u5b9a\u7fa9\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u3053\u3067\u306f \u5f37\u5316\u5b66\u7fd2\u306eagent\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u4f8b TRPO, A3C, ...\uff09\u304c\u3059\u3050\u4f7f\u3048\u308b\u5f62\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b \u5f37\u5316\u5b66\u7fd2\u3092\u8d70\u3089\u305b\u305f\u3068\u304d\u306b\u3001\u5b66\u7fd2\u306e\u69d8\u5b50\u304c\u304a\u624b\u8efd\u306b\u53ef\u8996\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\uff08\u4f8b\u3000Tensorboard\u5bfe\u5fdc\uff09 \u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30e0\u306e\u74b0\u5883\u3084\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b \u5b66\u7fd2\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u304c\u62bd\u8c61\u5316\u3055\u308c\u305f\u5f62\u3067\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u5b66\u7fd2\u3092\u7d30\u304b\u304f\u5b9f\u88c5\u3057\u306a\u304f\u3066\u3082\u3088\u3044 \u306e\u3069\u308c\u304b\u3092\u6e80\u305f\u3059\u3082\u306e\u3068\u3057\u307e\u3059\u3002 \u77ed\u304f\u307e\u3068\u3081\u308b\u3068 \u30e2\u30c7\u30eb\u3068\u5b66\u7fd2\u306e\u5b9f\u88c5\u3001\u5b66\u7fd2\u3001\u53ef\u8996\u5316\u306e\u3046\u3061\u3069\u308c\u304b\u3092\u697d\u306b\u3057\u3066\u304f\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea \u3060\u3068\u8a00\u3048\u307e\u3059\u3002 \u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\u70b9 \u4fbf\u5229\u306a\u53cd\u9762... \u30d0\u30b0\u306b\u30cf\u30de\u308b\u3068\u623b\u3063\u3066\u3053\u308c\u306a\u3044 \u4f7f\u7528\u8005\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u5c11\u306a\u304f\u306a\u308a\u304c\u3061 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u81ea\u4f53\u306e\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u304c\u3061 \u3068\u3044\u3046\u77ed\u6240\u3082\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070 OpenAI Spinning Up Document \u306b\u3082 RL libraries frequently make choices for abstraction that are good for code reuse between algorithms, but which are unnecessary if you\u2019re only writing a single algorithm or supporting a single use case. \u3068\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u9ad8\u6a5f\u80fd\u3001\u9ad8\u62bd\u8c61\u5ea6\u306b\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5185\u90e8\u306e\u5b9f\u88c5\u306f\u8907\u96d1\u306b\u306a\u3063\u3066\u3086\u304f \u306e\u3067 \u305d\u3082\u305d\u3082\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u5fc5\u8981\u306a\u306e\u304b\uff1f \u3069\u306e\u7a0b\u5ea6\u307e\u3067\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3084\u3063\u3066\u3082\u3089\u3046\u306e\u304b\uff1f \u3068\u3044\u3046\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u3076\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4f7f\u3048\u305d\u3046\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af RL Coach Tensorflow\u3068MXnet\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a4\u30f3\u30c6\u30eb\u8b39\u88fd\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002 \u9577\u6240 \u5b9f\u88c5\u6e08\u307f\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u975e\u5e38\u306b\u591a\u3044 open AI gym\u542b\u3080\u5bfe\u5fdc\u6e08\u307f\u306e\u5b66\u7fd2\u74b0\u5883\u304c\u591a\u3044( https://github.com/NervanaSystems/coach#supported-environments ) preset \u3068\u3044\u3046\u6a5f\u80fd\u306b\u3088\u308a\u3001\u30e2\u30c7\u30eb\u306b\u6e21\u3059\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u307f\u3092\u66f8\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b \u8907\u6570\u306epreset\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u8907\u6570\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u3092\u305b\u305a\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b \u5b66\u7fd2\u4e2d\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u884c\u52d5\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08 https://nervanasystems.github.io/coach/usage.html#rendering-the-environment\uff09 dashboard \u6a5f\u80fd\u306b\u3088\u3063\u3066\u8a73\u7d30\u306a\u5b66\u7fd2\u7d50\u679c\u306e\u53ef\u8996\u5316\u304c\u3067\u304d\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u306e\u3068\u304d\u306f\u3001\u5168\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b66\u7fd2\u7d50\u679c\u3092\u4e00\u3064\u306e\u30b0\u30e9\u30d5\u306b\u307e\u3068\u3081\u3066\u8868\u793a\u3067\u304d\u308b \u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b9f\u9a13\u3092\u8907\u6570\u884c\u3063\u305f\u3068\u304d\u3001\u305d\u308c\u3089\u306e\u5b66\u7fd2\u66f2\u7dda\u306e\u5e73\u5747\u3092\u53d6\u3063\u305f\u30b0\u30e9\u30d5\u3092\u81ea\u52d5\u3067\u8868\u793a\u3067\u304d\u308b \u3000-> \u3053\u308c\u306f\u5b66\u7fd2\u304c\u5b89\u5b9a\u3057\u306b\u304f\u3044\u3068\u304d\u306b\u3001\u30e2\u30c7\u30eb\u306e\u6027\u80fd\u3092\u898b\u308b\u306e\u306b\u5f79\u7acb\u3064 \u77ed\u6240 \u5168\u4f53\u7684\u306b\u5b9f\u88c5\u304c\u8907\u96d1\u306a\u306e\u3067\u3001\u81ea\u5206\u3067\u65b0\u305f\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5206\u6563\u3055\u305b\u308b\u306e\u304c\u5f8c\u8ff0\u306eRLlib\u3088\u308a\u96e3\u3057\u304f\u3001\u3055\u3089\u306bAWS\u306eS3\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u524d\u8ff0\u306e dashboard \u304c\u4f7f\u3044\u306b\u304f\u3044 RLlib \u5168\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5206\u6563\u5316\u306b\u5f37\u3044\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Tensorflow, Pytorch\u3060\u3068\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9f\u88c5\u304c\u5c11\u3057\u697d\u306b\u306a\u308b\u3002 \u9577\u6240 \u500b\u3005\u306e\u30ef\u30fc\u30ab\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u304c\u7d44\u3081\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u306e\u300c\u30ef\u30fc\u30ab\u304c\u5b66\u7fd2 -> \u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u300d\u3068\u3044\u3046\u51e6\u7406\u3092 Trainer \u304c\u3084\u3063\u3066\u304f\u308c\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u672a\u5bfe\u5fdc\u306e\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3082\u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u304c\u53ef\u80fd \u5206\u6563\u5316\u3092\u7528\u3044\u3001\u81ea\u52d5\u3067\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u53ef\u80fd\uff08 tune \u30e9\u30a4\u30d6\u30e9\u30ea\uff09 Population Based Training\u306a\u3069\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306eSOTA\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3082\u4f7f\u3048\u308b \u5b66\u7fd2\u7528\u306e\u74b0\u5883\u306fopen AI gym\u5f62\u5f0f\u3067\u66f8\u3051\u3070\u8ffd\u52a0\u3067\u304d\u308b \u53ef\u8996\u5316\u306ftensorboard\u3092\u4f7f\u3048\u308b \u77ed\u6240 \u5185\u90e8\u306e\u5b9f\u88c5\u304c\u8907\u96d1\u3067\u3001\u81ea\u5206\u3067\u65b0\u305f\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044 \u4f7f\u308f\u308c\u3066\u3044\u308bRay\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u72ec\u7279\u306e\u5206\u6563\u51e6\u7406\u8868\u73fe\u3092\u7fd2\u5f97\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 dopamine Google\u767a\u306e\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u305f\u3060\u3057google\u516c\u5f0f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u3044\uff09 \u9577\u6240 \u5b66\u7fd2\u4e2d\u306e\u8a73\u7d30\u306a\u30ed\u30b0\uff08\u5b66\u7fd2\u66f2\u7dda\u3001\u30ea\u30d7\u30ec\u30a4\u7528\u306e\u30d0\u30c3\u30d5\u30a1\u3001\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u3092gin\u3092\u4f7f\u3063\u3066memory efficient\u306b\u8a18\u9332\u3057\u3066\u304f\u308c\u308b \u30e2\u30c7\u30eb\u306e\u884c\u52d5\u306e\u30ea\u30d7\u30ec\u30a4\u52d5\u753b\u304c\u304b\u3093\u305f\u3093\u306b\u4f5c\u308c\u308b \u77ed\u6240 \u5b9f\u88c5\u6e08\u307f\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\uff14\u3064\u3057\u304b\u306a\u3044\uff08DQN, rainbow, C51, IQN\uff09 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0d\u8db3 \u5bfe\u5fdc\u3057\u3066\u3044\u308b\u74b0\u5883\u304cAtari\u3057\u304b\u306a\u304f\u3001\u74b0\u5883\u306e\u8ffd\u52a0\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u74b0\u5883\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u9aa8\u304c\u6298\u308c\u308b contributer\u304c\uff14\u4eba\u3057\u304b\u304a\u3089\u305a\u3001\u30b3\u30fc\u30c9\u306e\u5927\u534a\u3092\u305d\u306e\u3046\u3061\u306e\u4e00\u4eba\u304c\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u5148\u884c\u304d\u304c\u4e0d\u5b89 \uff08\u8ffd\u8a18: \u6628\u5e7412\u6708\u304b\u3089\u30b3\u30df\u30c3\u30c8\u304c\u306a\u3044\u3067\u3059\u3002\uff09 Stable Baseline tensorflow\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3001openAI baselines\u306e\u30d5\u30a9\u30fc\u30af\u3002 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3046\u3088\u308a\u3082\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u96c6 \u9577\u6240 scikit learn\u306bAPI\u304c\u4f3c\u305b\u3066\u3042\u308b\u305f\u3081\u3001\u4f7f\u3044\u3084\u3059\u3044 \u57fa\u672c\u7684\u306a\u30e2\u30c7\u30eb\u306f\u5b9f\u88c5\u6e08\u307f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u304c\u30b3\u30e1\u30f3\u30c8\u3092\u591a\u7528\u3057\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\u6539\u9020\u3057\u3084\u3059\u3044 \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u5316\u306b\u3082\u5bfe\u5fdc \u77ed\u6240 openAI gym\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u74b0\u5883\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u74b0\u5883\u306f\u81ea\u5206\u3067\u30e9\u30c3\u30d1\u30fc\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u5b9f\u9a13\u306e\u305f\u3081\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u4f7f\u3048\u306a\u3055\u305d\u3046\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Tensorforce \u540d\u524d\u306e\u901a\u308aTensorflow\u306b\u5bfe\u5fdc\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002 \u9577\u6240 \u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u304c\u304d\u3061\u3093\u3068\u306a\u3055\u308c\u3066\u304a\u308a\u3001\u52c9\u5f37\u3057\u305f\u308a\u66f8\u3044\u305f\u308a\u3057\u3084\u3059\u3044 \u77ed\u6240 \u3042\u307e\u308a\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u91cf\u3084\u8a73\u3057\u3055\u304c\u5c11\u3057\u7269\u8db3\u308a\u306a\u3044 Keras-RL \u540d\u524d\u306e\u901a\u308aKeras\u306b\u5bfe\u5fdc\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002 \u9577\u6240 \u305d\u3082\u305d\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3055\u3059\u304e\u3066\u4f55\u304c\u9577\u6240\u306a\u306e\u304b\u3059\u3089\u3088\u304f\u308f\u304b\u3089\u306a\u3044 \u77ed\u6240 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4fe1\u3058\u3089\u308c\u306a\u3044\u304f\u3089\u3044\u5c11\u306a\u3044\u3002\u672c\u5f53\u306b\u5c11\u306a\u3044\u3002\uff08 https://keras-rl.readthedocs.io/en/latest/core\uff09 \u3042\u307e\u308a\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5b9f\u88c5\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u81ea\u5206\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u305d\u306e\u4ed6 A Comparison of Reinforcement Learning Frameworks: Dopamine, RLLib, Keras-RL, Coach, TRFL, Tensorforce, Coach and more OSS\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u6bd4\u8f03 A Primer on Deep Reinforcement Learning Frameworks Part 1","title":"\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_1","text":"\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u8272\u3005\u3042\u308b\u5272\u306b\u4f7f\u3063\u3066\u3044\u308b\u4eba\u304c\u5c11\u306a\u3044\u304b\u3089\u304b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e0d\u8db3\u3057\u304c\u3061\u3067\u3059\u3002 \u4eca\u56de\u306f\u5404\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u77ed\u6240, \u9577\u6240\u306b\u3064\u3044\u3066\u3056\u3063\u304f\u308a\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u3068\u304d\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002","title":"\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u307e\u3068\u3081"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_2","text":"\u304b\u3063\u3061\u308a\u3068\u3057\u305f\u5b9a\u7fa9\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u3053\u3067\u306f \u5f37\u5316\u5b66\u7fd2\u306eagent\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u4f8b TRPO, A3C, ...\uff09\u304c\u3059\u3050\u4f7f\u3048\u308b\u5f62\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b \u5f37\u5316\u5b66\u7fd2\u3092\u8d70\u3089\u305b\u305f\u3068\u304d\u306b\u3001\u5b66\u7fd2\u306e\u69d8\u5b50\u304c\u304a\u624b\u8efd\u306b\u53ef\u8996\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\uff08\u4f8b\u3000Tensorboard\u5bfe\u5fdc\uff09 \u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30e0\u306e\u74b0\u5883\u3084\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b \u5b66\u7fd2\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u304c\u62bd\u8c61\u5316\u3055\u308c\u305f\u5f62\u3067\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u5b66\u7fd2\u3092\u7d30\u304b\u304f\u5b9f\u88c5\u3057\u306a\u304f\u3066\u3082\u3088\u3044 \u306e\u3069\u308c\u304b\u3092\u6e80\u305f\u3059\u3082\u306e\u3068\u3057\u307e\u3059\u3002 \u77ed\u304f\u307e\u3068\u3081\u308b\u3068 \u30e2\u30c7\u30eb\u3068\u5b66\u7fd2\u306e\u5b9f\u88c5\u3001\u5b66\u7fd2\u3001\u53ef\u8996\u5316\u306e\u3046\u3061\u3069\u308c\u304b\u3092\u697d\u306b\u3057\u3066\u304f\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea \u3060\u3068\u8a00\u3048\u307e\u3059\u3002","title":"\u305d\u3082\u305d\u3082\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3063\u3066\u4f55\uff1f"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_3","text":"\u4fbf\u5229\u306a\u53cd\u9762... \u30d0\u30b0\u306b\u30cf\u30de\u308b\u3068\u623b\u3063\u3066\u3053\u308c\u306a\u3044 \u4f7f\u7528\u8005\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u5c11\u306a\u304f\u306a\u308a\u304c\u3061 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u81ea\u4f53\u306e\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u304c\u3061 \u3068\u3044\u3046\u77ed\u6240\u3082\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070 OpenAI Spinning Up Document \u306b\u3082 RL libraries frequently make choices for abstraction that are good for code reuse between algorithms, but which are unnecessary if you\u2019re only writing a single algorithm or supporting a single use case. \u3068\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u9ad8\u6a5f\u80fd\u3001\u9ad8\u62bd\u8c61\u5ea6\u306b\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5185\u90e8\u306e\u5b9f\u88c5\u306f\u8907\u96d1\u306b\u306a\u3063\u3066\u3086\u304f \u306e\u3067 \u305d\u3082\u305d\u3082\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u5fc5\u8981\u306a\u306e\u304b\uff1f \u3069\u306e\u7a0b\u5ea6\u307e\u3067\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3084\u3063\u3066\u3082\u3089\u3046\u306e\u304b\uff1f \u3068\u3044\u3046\u3053\u3068\u3092\u8003\u616e\u3057\u3066\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u3076\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002","title":"\u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\u70b9"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_4","text":"","title":"\u4f7f\u3048\u305d\u3046\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#rl-coach","text":"Tensorflow\u3068MXnet\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a4\u30f3\u30c6\u30eb\u8b39\u88fd\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002","title":"RL Coach"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_5","text":"\u5b9f\u88c5\u6e08\u307f\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u975e\u5e38\u306b\u591a\u3044 open AI gym\u542b\u3080\u5bfe\u5fdc\u6e08\u307f\u306e\u5b66\u7fd2\u74b0\u5883\u304c\u591a\u3044( https://github.com/NervanaSystems/coach#supported-environments ) preset \u3068\u3044\u3046\u6a5f\u80fd\u306b\u3088\u308a\u3001\u30e2\u30c7\u30eb\u306b\u6e21\u3059\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u307f\u3092\u66f8\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b \u8907\u6570\u306epreset\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u8907\u6570\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u3092\u305b\u305a\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b \u5b66\u7fd2\u4e2d\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u884c\u52d5\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff08 https://nervanasystems.github.io/coach/usage.html#rendering-the-environment\uff09 dashboard \u6a5f\u80fd\u306b\u3088\u3063\u3066\u8a73\u7d30\u306a\u5b66\u7fd2\u7d50\u679c\u306e\u53ef\u8996\u5316\u304c\u3067\u304d\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u306e\u3068\u304d\u306f\u3001\u5168\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b66\u7fd2\u7d50\u679c\u3092\u4e00\u3064\u306e\u30b0\u30e9\u30d5\u306b\u307e\u3068\u3081\u3066\u8868\u793a\u3067\u304d\u308b \u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b9f\u9a13\u3092\u8907\u6570\u884c\u3063\u305f\u3068\u304d\u3001\u305d\u308c\u3089\u306e\u5b66\u7fd2\u66f2\u7dda\u306e\u5e73\u5747\u3092\u53d6\u3063\u305f\u30b0\u30e9\u30d5\u3092\u81ea\u52d5\u3067\u8868\u793a\u3067\u304d\u308b \u3000-> \u3053\u308c\u306f\u5b66\u7fd2\u304c\u5b89\u5b9a\u3057\u306b\u304f\u3044\u3068\u304d\u306b\u3001\u30e2\u30c7\u30eb\u306e\u6027\u80fd\u3092\u898b\u308b\u306e\u306b\u5f79\u7acb\u3064","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_6","text":"\u5168\u4f53\u7684\u306b\u5b9f\u88c5\u304c\u8907\u96d1\u306a\u306e\u3067\u3001\u81ea\u5206\u3067\u65b0\u305f\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5206\u6563\u3055\u305b\u308b\u306e\u304c\u5f8c\u8ff0\u306eRLlib\u3088\u308a\u96e3\u3057\u304f\u3001\u3055\u3089\u306bAWS\u306eS3\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u524d\u8ff0\u306e dashboard \u304c\u4f7f\u3044\u306b\u304f\u3044","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#rllib","text":"\u5168\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5206\u6563\u5316\u306b\u5f37\u3044\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Tensorflow, Pytorch\u3060\u3068\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9f\u88c5\u304c\u5c11\u3057\u697d\u306b\u306a\u308b\u3002","title":"RLlib"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_7","text":"\u500b\u3005\u306e\u30ef\u30fc\u30ab\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u304c\u7d44\u3081\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u306e\u300c\u30ef\u30fc\u30ab\u304c\u5b66\u7fd2 -> \u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u300d\u3068\u3044\u3046\u51e6\u7406\u3092 Trainer \u304c\u3084\u3063\u3066\u304f\u308c\u308b \u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u672a\u5bfe\u5fdc\u306e\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3082\u30de\u30eb\u30c1\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5b66\u7fd2\u304c\u53ef\u80fd \u5206\u6563\u5316\u3092\u7528\u3044\u3001\u81ea\u52d5\u3067\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u53ef\u80fd\uff08 tune \u30e9\u30a4\u30d6\u30e9\u30ea\uff09 Population Based Training\u306a\u3069\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306eSOTA\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3082\u4f7f\u3048\u308b \u5b66\u7fd2\u7528\u306e\u74b0\u5883\u306fopen AI gym\u5f62\u5f0f\u3067\u66f8\u3051\u3070\u8ffd\u52a0\u3067\u304d\u308b \u53ef\u8996\u5316\u306ftensorboard\u3092\u4f7f\u3048\u308b","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_8","text":"\u5185\u90e8\u306e\u5b9f\u88c5\u304c\u8907\u96d1\u3067\u3001\u81ea\u5206\u3067\u65b0\u305f\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304c\u96e3\u3057\u3044 \u4f7f\u308f\u308c\u3066\u3044\u308bRay\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u72ec\u7279\u306e\u5206\u6563\u51e6\u7406\u8868\u73fe\u3092\u7fd2\u5f97\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#dopamine","text":"Google\u767a\u306e\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u305f\u3060\u3057google\u516c\u5f0f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u3044\uff09","title":"dopamine"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_9","text":"\u5b66\u7fd2\u4e2d\u306e\u8a73\u7d30\u306a\u30ed\u30b0\uff08\u5b66\u7fd2\u66f2\u7dda\u3001\u30ea\u30d7\u30ec\u30a4\u7528\u306e\u30d0\u30c3\u30d5\u30a1\u3001\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u3092gin\u3092\u4f7f\u3063\u3066memory efficient\u306b\u8a18\u9332\u3057\u3066\u304f\u308c\u308b \u30e2\u30c7\u30eb\u306e\u884c\u52d5\u306e\u30ea\u30d7\u30ec\u30a4\u52d5\u753b\u304c\u304b\u3093\u305f\u3093\u306b\u4f5c\u308c\u308b","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_10","text":"\u5b9f\u88c5\u6e08\u307f\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\uff14\u3064\u3057\u304b\u306a\u3044\uff08DQN, rainbow, C51, IQN\uff09 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0d\u8db3 \u5bfe\u5fdc\u3057\u3066\u3044\u308b\u74b0\u5883\u304cAtari\u3057\u304b\u306a\u304f\u3001\u74b0\u5883\u306e\u8ffd\u52a0\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u74b0\u5883\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u9aa8\u304c\u6298\u308c\u308b contributer\u304c\uff14\u4eba\u3057\u304b\u304a\u3089\u305a\u3001\u30b3\u30fc\u30c9\u306e\u5927\u534a\u3092\u305d\u306e\u3046\u3061\u306e\u4e00\u4eba\u304c\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u5148\u884c\u304d\u304c\u4e0d\u5b89 \uff08\u8ffd\u8a18: \u6628\u5e7412\u6708\u304b\u3089\u30b3\u30df\u30c3\u30c8\u304c\u306a\u3044\u3067\u3059\u3002\uff09","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#stable-baseline","text":"tensorflow\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3001openAI baselines\u306e\u30d5\u30a9\u30fc\u30af\u3002 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3046\u3088\u308a\u3082\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u96c6","title":"Stable Baseline"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_11","text":"scikit learn\u306bAPI\u304c\u4f3c\u305b\u3066\u3042\u308b\u305f\u3081\u3001\u4f7f\u3044\u3084\u3059\u3044 \u57fa\u672c\u7684\u306a\u30e2\u30c7\u30eb\u306f\u5b9f\u88c5\u6e08\u307f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u304c\u30b3\u30e1\u30f3\u30c8\u3092\u591a\u7528\u3057\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\u6539\u9020\u3057\u3084\u3059\u3044 \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u5316\u306b\u3082\u5bfe\u5fdc","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_12","text":"openAI gym\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u74b0\u5883\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u74b0\u5883\u306f\u81ea\u5206\u3067\u30e9\u30c3\u30d1\u30fc\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u5b9f\u9a13\u306e\u305f\u3081\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_13","text":"","title":"\u4f7f\u3048\u306a\u3055\u305d\u3046\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#tensorforce","text":"\u540d\u524d\u306e\u901a\u308aTensorflow\u306b\u5bfe\u5fdc\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002","title":"Tensorforce"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_14","text":"\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u304c\u304d\u3061\u3093\u3068\u306a\u3055\u308c\u3066\u304a\u308a\u3001\u52c9\u5f37\u3057\u305f\u308a\u66f8\u3044\u305f\u308a\u3057\u3084\u3059\u3044","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_15","text":"\u3042\u307e\u308a\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u91cf\u3084\u8a73\u3057\u3055\u304c\u5c11\u3057\u7269\u8db3\u308a\u306a\u3044","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#keras-rl","text":"\u540d\u524d\u306e\u901a\u308aKeras\u306b\u5bfe\u5fdc\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002","title":"Keras-RL"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_16","text":"\u305d\u3082\u305d\u3082\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3055\u3059\u304e\u3066\u4f55\u304c\u9577\u6240\u306a\u306e\u304b\u3059\u3089\u3088\u304f\u308f\u304b\u3089\u306a\u3044","title":"\u9577\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_17","text":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4fe1\u3058\u3089\u308c\u306a\u3044\u304f\u3089\u3044\u5c11\u306a\u3044\u3002\u672c\u5f53\u306b\u5c11\u306a\u3044\u3002\uff08 https://keras-rl.readthedocs.io/en/latest/core\uff09 \u3042\u307e\u308a\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5b9f\u88c5\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u81ea\u5206\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044","title":"\u77ed\u6240"},{"location":"%E3%81%9D%E3%81%AE%E4%BB%96/%E5%BC%B7%E5%8C%96%E5%AD%A6%E7%BF%92%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF/#_18","text":"A Comparison of Reinforcement Learning Frameworks: Dopamine, RLLib, Keras-RL, Coach, TRFL, Tensorforce, Coach and more OSS\u5f37\u5316\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u6bd4\u8f03 A Primer on Deep Reinforcement Learning Frameworks Part 1","title":"\u305d\u306e\u4ed6"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/","text":"Streamlit\u30a2\u30d7\u30ea\u3092Heroku\u3067\u30c6\u30a3\u30d7\u30ed\u30a4\u3059\u308b 1. 3\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210 Procfile main.py \u306e\u90e8\u5206\u306fstreamlit\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8 web: sh setup.sh && streamlit run main.py requirements.txt streamlit --find-links https://download.pytorch.org/whl/torch_stable.html torch==1.7.1+cpu torchvision setup.sh mkdir -p ~/.streamlit echo \"[server] headless = true port = $PORT enableCORS = false \" > ~/.streamlit/config.toml 2. Heroku\u8a2d\u5b9a tips $ heroku plugins:install heroku-accounts $ heroku accounts:add account1 $ heroku accounts:set account2 $ heroku accounts:remove account2 $ heroku accounts 3. Deploy heroku create name git push heroku master # with valid commit","title":"Streamlit\u30a2\u30d7\u30ea\u3092Heroku\u3067\u30c6\u30a3\u30d7\u30ed\u30a4\u3059\u308b"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#streamlitheroku","text":"","title":"Streamlit\u30a2\u30d7\u30ea\u3092Heroku\u3067\u30c6\u30a3\u30d7\u30ed\u30a4\u3059\u308b"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#1-3","text":"","title":"1. 3\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#procfile","text":"main.py \u306e\u90e8\u5206\u306fstreamlit\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8 web: sh setup.sh && streamlit run main.py","title":"Procfile"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#requirementstxt","text":"streamlit --find-links https://download.pytorch.org/whl/torch_stable.html torch==1.7.1+cpu torchvision","title":"requirements.txt"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#setupsh","text":"mkdir -p ~/.streamlit echo \"[server] headless = true port = $PORT enableCORS = false \" > ~/.streamlit/config.toml","title":"setup.sh"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#2-heroku","text":"tips $ heroku plugins:install heroku-accounts $ heroku accounts:add account1 $ heroku accounts:set account2 $ heroku accounts:remove account2 $ heroku accounts","title":"2. Heroku\u8a2d\u5b9a"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/heroku_st/#3-deploy","text":"heroku create name git push heroku master # with valid commit","title":"3. Deploy"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/","text":"PlantUML\u306e\u30b9\u30b9\u30e1 PlantUML\u3068\u306fUML\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u4f5c\u6210\u3067\u304d\u308b\u8a00\u8a9e \u56f3\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308b\u306a\u3089PlantUML\u3092\u4f7f\u304a\u3046\uff01\u3063\u3068\u8a00\u3046\u3050\u3089\u3044\u306b\u56f3\u3092\u66f8\u304f\u306a\u3089\u3053\u308c\u3063\u3068\u3044\u3046\u30c4\u30fc\u30eb Vscode\u7b49\u4e00\u90e8\u74b0\u5883\u3067\u306fMarkDown\u5185\u306b\u666e\u901a\u306b\u66f8\u304f\u3053\u3068\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b \u305f\u307e\u306b\u672a\u5bfe\u5fdc\u306e\u66f8\u304d\u65b9\u304c\u3042\u308a\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u30a8\u30e9\u30fc\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002 \u203b < \u306f\u5927\u4f53\u3046\u307e\u304f\u51fa\u529b\u3055\u308c\u306a\u3044 VS Code\u3092\u958b\u767a\u74b0\u5883\u306b\u3059\u308b\u3068\u3001\u3068\u3066\u3082\u6357\u308b( \u4e0b\u8a18\u53c2\u7167 ) PlantUML\u3067\u3067\u304d\u308b\u3053\u3068 \u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u56f3\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b \u30af\u30e9\u30b9\u56f3 \u30d1\u30c3\u30b1\u30fc\u30b8\u56f3 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u56f3 \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u56f3 \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3 \u30b9\u30c6\u30fc\u30c8\u30c1\u30e3\u30fc\u30c8\u56f3 \u30b7\u30fc\u30b1\u30f3\u30b9\u56f3 \u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u56f3 ER\u56f3 etc... \u30b7\u30fc\u30b1\u30f3\u30b9\u56f3\u3084ER\u56f3\u306a\u3069\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u591a\u3044 \u53c2\u8003 UML\u3068\u306f\uff1f\uff5c\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u306e\u7a2e\u985e\u3084\u7528\u9014\u306b\u3064\u3044\u3066\u89e3\u8aac | PINTO! \u5404\u56f3\u306e\u753b\u50cf\u304c\u3042\u308b\u306e\u3067\u30a4\u30e1\u30fc\u30b8\u304c\u4ed8\u304f\u304b\u898b\u3084\u3059\u3044\u3068\u601d\u3046 \u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8 \u30c6\u30ad\u30b9\u30c8\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081Git\u306a\u3069\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u304c\u3067\u304d\u308b \u56f3\u306e\u914d\u7f6e\u306a\u3069\u3092\u7d30\u304b\u304f\u60a9\u3080\u5fc5\u8981\u304c\u306a\u3044 \u56f3\u3068\u95a2\u4fc2\u306e\u7dda\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3001\u3088\u3057\u306a\u306b\u5f15\u304b\u308c\u308b\u306e\u3067\u3001\u30ba\u30ec\u3066\u5fae\u5999\u306b\u306a\u308b\u60a9\u307f\u304b\u3089\u958b\u653e\u3055\u308c\u308b \u9006\u306b\u8abf\u6574\u3057\u305f\u304f\u3066\u3082\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u70b9\u306f\u3042\u308b\u304c\u3001\u3067\u304d\u306a\u3044\u3082\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u3068\u5272\u308a\u5207\u308c\u308b \u66f8\u304d\u65b9\u3092\u899a\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b GUI\u30c4\u30fc\u30eb\u306a\u3069\u306f\u306a\u3044 \u57fa\u672c\u516c\u5f0f\u306e\u66f8\u304d\u65b9\u3092\u30b3\u30d4\u30da\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u5341\u5206 \u30b5\u30f3\u30d7\u30eb \u3088\u304f\u4f7f\u3046\u56f3\u306e\u30b5\u30f3\u30d7\u30eb ER\u56f3 \u516c\u5f0f\u30b5\u30f3\u30d7\u30eb \u57fa\u672c\u7684\u306b\u62bc\u3055\u3048\u3066\u304a\u3051\u3070\u3044\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u30b3\u30ec \u8ad6\u7406\u540d\u3001\u7269\u7406\u540d\u306e\u66f8\u304d\u65b9\u306f\u500b\u4eba\u5dee\u304c\u3067\u3066\u3057\u307e\u3046\u304c\u3001DB\u304c\u8907\u96d1\u306b\u306a\u3063\u3066\u3082\u7dda\u306e\u5f15\u304d\u65b9\u3092\u8ff7\u3063\u305f\u308a\u305b\u305a\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u4f4d\u7f6e\u306a\u3069\u3082\u6c17\u306b\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u304c\u5f37\u3044 \u30b7\u30fc\u30b1\u30f3\u30b9\u56f3 \u516c\u5f0f\u30b5\u30f3\u30d7\u30eb \u4f8b \u3053\u306e\u56f3\u304b\u3089\u5fc5\u8981\u306a\u3082\u306e\u3092\u629c\u7c8b\u3057\u3066\u629c\u304f\u3068\u591a\u5206\u308f\u304b\u308a\u3084\u3059\u3044 \u5927\u4f53\u4e3b\u8981\u306a\u30b7\u30fc\u30b1\u30f3\u30b9\u56f3\u306e\u30d1\u30fc\u30c4\u306f\u4f7f\u3063\u3066\u308b mkdocs \u3067\u8868\u793a\u3067\u304d\u306a\u3044\u30d0\u30b0\u304c\u3042\u308b\u70ba\u30b3\u30fc\u30c9\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002 @startuml participant \"API\u30b5\u30fc\u30d0\u30fc\" as A box \"Apache Kafka\" #LightBlue participant \"\u63a8\u8ad6Topic\" as B participant \"\u505c\u6b62Topic\" as C end Box participant \"\u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\" as D [-> A: API\u53d7\u4fe1 A ->> B: \u63a8\u8ad6\u306e\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0 activate B hnote over B #LightPink: Waiting... note right: \u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\u304c\u7a7a\u304d\u6b21\u7b2c\u51e6\u7406 B ->> D: \u63a8\u8ad6\u306e\u5b9f\u884c activate D #IndianRed note right \u81ea\u52d5\u7d42\u4e86\u306e\u6761\u4ef6 - \u56de\u6570 - \u6642\u9593\u5236\u9650 - \u51e6\u7406\u306e\u5b8c\u4e86 end note D ->> B: \u30ad\u30e5\u30fc\u306e\u53d7\u53d6\u901a\u77e5 deactivate B D -->> A: \u51e6\u7406\u6bb5\u968e\u3067\u968f\u6642\u30b9\u30c6\u30fc\u30bf\u30b9\u9001\u4fe1 alt \u624b\u52d5\u3067\u7d42\u4e86\u3055\u305b\u308b\u5834\u5408 A ->> C: \u505c\u6b62\u4fe1\u53f7\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0 activate C hnote over C #LightPink: Waiting... C ->> D: \u5225\u30d7\u30ed\u30bb\u30b9\u3067\u53d7\u4fe1 note right \u8907\u6570\u53f0\u306e\u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u5834\u5408\u3001 \u3059\u3079\u3066\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u53d7\u4fe1\u3059\u308b end note D ->> D: \u63a8\u8ad6\u51e6\u7406\u306e\u505c\u6b62 note right \u8a72\u5f53\u306eID\u304c\u51e6\u7406\u4e2d\u306e\u5834\u5408\u306b\u505c\u6b62\u3055\u305b\u308b > \u63a8\u8ad6\u4e2d\u306e\u5225\u30d7\u30ed\u30bb\u30b9\u3078\u901a\u4fe1 \u8a72\u5f53\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044 end note D ->> C: \u30ad\u30e5\u30fc\u306e\u53d7\u53d6\u901a\u77e5 deactivate C end D ->> A: \u7d42\u4e86\u901a\u77e5 deactivate D @enduml Git\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u7f6e\u304d\u65b9 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30eb\u30fc\u30c8\u306b plantuml.pu \u3063\u3068\u3044\u3046\u540d\u524d\u3067\u7f6e\u304f\u306e\u304c\u30d9\u30bf \u4ed6\u306b\u3082\u62e1\u5f35\u5b50\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u304a\u597d\u307f\u306b VS Code\u3067\u66f8\u304f \u57fa\u672c\u30d7\u30e9\u30b0\u30a4\u30f3\u306eREADME\u901a\u308a \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb $ brew cask install java $ brew install graphviz VS Code\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30ea\u30f3\u30af \u4f7f\u3044\u65b9 PlantUML\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u3001 cmd+shift+p \u3067\u30b3\u30de\u30f3\u30c9\u30d1\u30ec\u30c3\u30c8\u3092\u958b\u304d \u30ab\u30fc\u30bd\u30eb\u4f4d\u7f6e\u306e\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3092\u30d7\u30ec\u30d3\u30e5\u30fc \u3092\u9078\u629e \u53f3\u5074\u306b\u5206\u5272\u30a6\u30a4\u30f3\u30c9\u30a6\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u308b \u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u6642\u306b\u3001PATH\u304c\u901a\u3063\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u5834\u5408 \u8a2d\u5b9a\u304b\u3089Plantuml\uff1aJava\u306e\u8a2d\u5b9a\u9805\u76ee\u3092\u63a2\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fJava\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002 \u53c2\u7167\uff1a \u3010VScode\u3011PlantUML\u306e\u30d3\u30e5\u30fc\u304cjava path\u30a8\u30e9\u30fc\u3067\u8868\u793a\u3055\u308c\u306a\u3044","title":"PlantUML\u306e\u30b9\u30b9\u30e1"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#plantuml","text":"PlantUML\u3068\u306fUML\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u4f5c\u6210\u3067\u304d\u308b\u8a00\u8a9e \u56f3\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308b\u306a\u3089PlantUML\u3092\u4f7f\u304a\u3046\uff01\u3063\u3068\u8a00\u3046\u3050\u3089\u3044\u306b\u56f3\u3092\u66f8\u304f\u306a\u3089\u3053\u308c\u3063\u3068\u3044\u3046\u30c4\u30fc\u30eb Vscode\u7b49\u4e00\u90e8\u74b0\u5883\u3067\u306fMarkDown\u5185\u306b\u666e\u901a\u306b\u66f8\u304f\u3053\u3068\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b \u305f\u307e\u306b\u672a\u5bfe\u5fdc\u306e\u66f8\u304d\u65b9\u304c\u3042\u308a\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u30a8\u30e9\u30fc\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002 \u203b < \u306f\u5927\u4f53\u3046\u307e\u304f\u51fa\u529b\u3055\u308c\u306a\u3044 VS Code\u3092\u958b\u767a\u74b0\u5883\u306b\u3059\u308b\u3068\u3001\u3068\u3066\u3082\u6357\u308b( \u4e0b\u8a18\u53c2\u7167 )","title":"PlantUML\u306e\u30b9\u30b9\u30e1"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#plantuml_1","text":"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u56f3\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b \u30af\u30e9\u30b9\u56f3 \u30d1\u30c3\u30b1\u30fc\u30b8\u56f3 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u56f3 \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u56f3 \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3 \u30b9\u30c6\u30fc\u30c8\u30c1\u30e3\u30fc\u30c8\u56f3 \u30b7\u30fc\u30b1\u30f3\u30b9\u56f3 \u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u56f3 ER\u56f3 etc... \u30b7\u30fc\u30b1\u30f3\u30b9\u56f3\u3084ER\u56f3\u306a\u3069\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u591a\u3044 \u53c2\u8003 UML\u3068\u306f\uff1f\uff5c\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u306e\u7a2e\u985e\u3084\u7528\u9014\u306b\u3064\u3044\u3066\u89e3\u8aac | PINTO! \u5404\u56f3\u306e\u753b\u50cf\u304c\u3042\u308b\u306e\u3067\u30a4\u30e1\u30fc\u30b8\u304c\u4ed8\u304f\u304b\u898b\u3084\u3059\u3044\u3068\u601d\u3046","title":"PlantUML\u3067\u3067\u304d\u308b\u3053\u3068"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_1","text":"\u30c6\u30ad\u30b9\u30c8\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081Git\u306a\u3069\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u304c\u3067\u304d\u308b \u56f3\u306e\u914d\u7f6e\u306a\u3069\u3092\u7d30\u304b\u304f\u60a9\u3080\u5fc5\u8981\u304c\u306a\u3044 \u56f3\u3068\u95a2\u4fc2\u306e\u7dda\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3001\u3088\u3057\u306a\u306b\u5f15\u304b\u308c\u308b\u306e\u3067\u3001\u30ba\u30ec\u3066\u5fae\u5999\u306b\u306a\u308b\u60a9\u307f\u304b\u3089\u958b\u653e\u3055\u308c\u308b \u9006\u306b\u8abf\u6574\u3057\u305f\u304f\u3066\u3082\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u70b9\u306f\u3042\u308b\u304c\u3001\u3067\u304d\u306a\u3044\u3082\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u3068\u5272\u308a\u5207\u308c\u308b \u66f8\u304d\u65b9\u3092\u899a\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b GUI\u30c4\u30fc\u30eb\u306a\u3069\u306f\u306a\u3044 \u57fa\u672c\u516c\u5f0f\u306e\u66f8\u304d\u65b9\u3092\u30b3\u30d4\u30da\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u5341\u5206","title":"\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_2","text":"\u3088\u304f\u4f7f\u3046\u56f3\u306e\u30b5\u30f3\u30d7\u30eb","title":"\u30b5\u30f3\u30d7\u30eb"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#er","text":"\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb \u57fa\u672c\u7684\u306b\u62bc\u3055\u3048\u3066\u304a\u3051\u3070\u3044\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u30b3\u30ec \u8ad6\u7406\u540d\u3001\u7269\u7406\u540d\u306e\u66f8\u304d\u65b9\u306f\u500b\u4eba\u5dee\u304c\u3067\u3066\u3057\u307e\u3046\u304c\u3001DB\u304c\u8907\u96d1\u306b\u306a\u3063\u3066\u3082\u7dda\u306e\u5f15\u304d\u65b9\u3092\u8ff7\u3063\u305f\u308a\u305b\u305a\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u4f4d\u7f6e\u306a\u3069\u3082\u6c17\u306b\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u304c\u5f37\u3044","title":"ER\u56f3"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_3","text":"\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb","title":"\u30b7\u30fc\u30b1\u30f3\u30b9\u56f3"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_4","text":"\u3053\u306e\u56f3\u304b\u3089\u5fc5\u8981\u306a\u3082\u306e\u3092\u629c\u7c8b\u3057\u3066\u629c\u304f\u3068\u591a\u5206\u308f\u304b\u308a\u3084\u3059\u3044 \u5927\u4f53\u4e3b\u8981\u306a\u30b7\u30fc\u30b1\u30f3\u30b9\u56f3\u306e\u30d1\u30fc\u30c4\u306f\u4f7f\u3063\u3066\u308b mkdocs \u3067\u8868\u793a\u3067\u304d\u306a\u3044\u30d0\u30b0\u304c\u3042\u308b\u70ba\u30b3\u30fc\u30c9\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002 @startuml participant \"API\u30b5\u30fc\u30d0\u30fc\" as A box \"Apache Kafka\" #LightBlue participant \"\u63a8\u8ad6Topic\" as B participant \"\u505c\u6b62Topic\" as C end Box participant \"\u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\" as D [-> A: API\u53d7\u4fe1 A ->> B: \u63a8\u8ad6\u306e\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0 activate B hnote over B #LightPink: Waiting... note right: \u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\u304c\u7a7a\u304d\u6b21\u7b2c\u51e6\u7406 B ->> D: \u63a8\u8ad6\u306e\u5b9f\u884c activate D #IndianRed note right \u81ea\u52d5\u7d42\u4e86\u306e\u6761\u4ef6 - \u56de\u6570 - \u6642\u9593\u5236\u9650 - \u51e6\u7406\u306e\u5b8c\u4e86 end note D ->> B: \u30ad\u30e5\u30fc\u306e\u53d7\u53d6\u901a\u77e5 deactivate B D -->> A: \u51e6\u7406\u6bb5\u968e\u3067\u968f\u6642\u30b9\u30c6\u30fc\u30bf\u30b9\u9001\u4fe1 alt \u624b\u52d5\u3067\u7d42\u4e86\u3055\u305b\u308b\u5834\u5408 A ->> C: \u505c\u6b62\u4fe1\u53f7\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0 activate C hnote over C #LightPink: Waiting... C ->> D: \u5225\u30d7\u30ed\u30bb\u30b9\u3067\u53d7\u4fe1 note right \u8907\u6570\u53f0\u306e\u63a8\u8ad6\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u5834\u5408\u3001 \u3059\u3079\u3066\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u53d7\u4fe1\u3059\u308b end note D ->> D: \u63a8\u8ad6\u51e6\u7406\u306e\u505c\u6b62 note right \u8a72\u5f53\u306eID\u304c\u51e6\u7406\u4e2d\u306e\u5834\u5408\u306b\u505c\u6b62\u3055\u305b\u308b > \u63a8\u8ad6\u4e2d\u306e\u5225\u30d7\u30ed\u30bb\u30b9\u3078\u901a\u4fe1 \u8a72\u5f53\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044 end note D ->> C: \u30ad\u30e5\u30fc\u306e\u53d7\u53d6\u901a\u77e5 deactivate C end D ->> A: \u7d42\u4e86\u901a\u77e5 deactivate D @enduml","title":"\u4f8b"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#git","text":"\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30eb\u30fc\u30c8\u306b plantuml.pu \u3063\u3068\u3044\u3046\u540d\u524d\u3067\u7f6e\u304f\u306e\u304c\u30d9\u30bf \u4ed6\u306b\u3082\u62e1\u5f35\u5b50\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u304a\u597d\u307f\u306b","title":"Git\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u7f6e\u304d\u65b9"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#vs-code","text":"\u57fa\u672c\u30d7\u30e9\u30b0\u30a4\u30f3\u306eREADME\u901a\u308a","title":"VS Code\u3067\u66f8\u304f"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_5","text":"\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb $ brew cask install java $ brew install graphviz VS Code\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30ea\u30f3\u30af","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#_6","text":"PlantUML\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u3001 cmd+shift+p \u3067\u30b3\u30de\u30f3\u30c9\u30d1\u30ec\u30c3\u30c8\u3092\u958b\u304d \u30ab\u30fc\u30bd\u30eb\u4f4d\u7f6e\u306e\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3092\u30d7\u30ec\u30d3\u30e5\u30fc \u3092\u9078\u629e \u53f3\u5074\u306b\u5206\u5272\u30a6\u30a4\u30f3\u30c9\u30a6\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u308b","title":"\u4f7f\u3044\u65b9"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/plantuml/#path","text":"\u8a2d\u5b9a\u304b\u3089Plantuml\uff1aJava\u306e\u8a2d\u5b9a\u9805\u76ee\u3092\u63a2\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fJava\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002 \u53c2\u7167\uff1a \u3010VScode\u3011PlantUML\u306e\u30d3\u30e5\u30fc\u304cjava path\u30a8\u30e9\u30fc\u3067\u8868\u793a\u3055\u308c\u306a\u3044","title":"\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u6642\u306b\u3001PATH\u304c\u901a\u3063\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u5834\u5408"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/","text":"tmux\u306f\u3048\u3048\u305e \u305d\u3082\u305d\u3082tmux\uff08\u30c6\u30a3\u30fc\u30de\u30c3\u30af\u30b9\uff09\u3068\u306f tmux\u306f\u7aef\u672b\u591a\u91cd\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4e00\u3064\u3002\u4e00\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u4e0a\u3067\u8907\u6570\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u4e26\u884c\u3057\u3066\u4f5c\u696d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3002 \u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3051\u3070SSH\u63a5\u7d9a\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3055\u3089\u306btmux\u3092\u4f7f\u3046\u3068 screen \u306e\u69d8\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5207\u308a\u96e2\u3057\u3092\u884c\u3048\u308b\u306e\u3067\u5b66\u7fd2\u3092\u6b62\u3081\u305a\u306bssh\u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4ed6\u306b\u3082 tensorboard \u3092\u898b\u306a\u304c\u3089\u5225\u306e\u4f5c\u696d\u3092\u3057\u305f\u3044\u6642\u306b\u8907\u6570\u56dessh\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u3064\u304f\u3089\u305a\u306b\u4e00\u3064\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u5206\u5c90\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 tmux\u306e\u69cb\u9020 \u30bb\u30c3\u30b7\u30e7\u30f3\uff1a 1\u3064\u4ee5\u4e0a\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u5168\u4f53 \u30a6\u30a3\u30f3\u30c9\u30a6\uff1a \u30bb\u30c3\u30b7\u30e7\u30f3\u5185\u306b\u958b\u304b\u308c\u3066\u3044\u308b\u30011\u3064\u4ee5\u4e0a\u306e\u30da\u30a4\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u5168\u4f53 \u30da\u30a4\u30f3\uff1a \u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u3067\u5206\u5272\u3055\u308c\u3066\u3044\u308b1\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb \u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8 \u83ab\u5927\u306a\u6570\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u304c\u3046\u307e\u304f\u307e\u3068\u307e\u3063\u305f\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u30c1\u30e9\u30c1\u30e9\u307f\u306a\u304c\u3089\u4f7f\u3044\u307e\u3057\u3087\u3046 \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8 \u30ab\u30b9\u30bf\u30de\u30a4\u30ba ~/.tmux.conf \u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\u306a\u306e\u3067 ~/.tmux.conf \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u306a\u3069\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4ee5\u4e0bQiita\u304b\u3089\u304a\u3059\u3059\u3081\u8a18\u4e8b\u4e8c\u9078 \u300ctmux\u304c\u5feb\u9069\u3001\u304b\u3064 .tmux.conf \u306e\u8a2d\u5b9a\u300d \u300ctmux\u3092\u5fc5\u8981\u6700\u4f4e\u9650\u3067\u5165\u9580\u3057\u3066\u4f7f\u3046\u300d \u4f7f\u3044\u65b9 \u57fa\u672c\u306f \uff1c\u8d77\u52d5\uff1e tmux <\u7d42\u4e86> tmux kill-session \uff1c\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u305f\u307e\u307e\u4e00\u65e6\u96e2\u8131\uff08\u30c7\u30bf\u30c3\u30c1\uff09\uff1e prefix d \uff1c\u5143\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u63a5\u7d9a\uff08\u30a2\u30bf\u30c3\u30c1\uff09\uff1e $ tmux a \u3067\u304ak\u3002 \u3061\u306a\u307f\u306b\u3001\u591a\u6bb5ssh\u3067\u63a5\u7d9a\u3059\u308b\u6642\u306f \u4f5c\u696d\u3059\u308b\u4e00\u3064\u524d\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089tmux\u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044 \u3002 \u81ea\u5206\u306f\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u30fc\u7d4c\u7531\u3067gpu\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u30fc\u304b\u3089tmux\u3067\u5165\u3063\u3066\u3044\u307e\u3059\u3002","title":"tmux\u306f\u3048\u3048\u305e"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#tmux","text":"","title":"tmux\u306f\u3048\u3048\u305e"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#tmux_1","text":"tmux\u306f\u7aef\u672b\u591a\u91cd\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4e00\u3064\u3002\u4e00\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u4e0a\u3067\u8907\u6570\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u4e26\u884c\u3057\u3066\u4f5c\u696d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3002 \u30b5\u30fc\u30d0\u30fc\u5074\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3051\u3070SSH\u63a5\u7d9a\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3055\u3089\u306btmux\u3092\u4f7f\u3046\u3068 screen \u306e\u69d8\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5207\u308a\u96e2\u3057\u3092\u884c\u3048\u308b\u306e\u3067\u5b66\u7fd2\u3092\u6b62\u3081\u305a\u306bssh\u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4ed6\u306b\u3082 tensorboard \u3092\u898b\u306a\u304c\u3089\u5225\u306e\u4f5c\u696d\u3092\u3057\u305f\u3044\u6642\u306b\u8907\u6570\u56dessh\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u3064\u304f\u3089\u305a\u306b\u4e00\u3064\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u5206\u5c90\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u305d\u3082\u305d\u3082tmux\uff08\u30c6\u30a3\u30fc\u30de\u30c3\u30af\u30b9\uff09\u3068\u306f"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#tmux_2","text":"\u30bb\u30c3\u30b7\u30e7\u30f3\uff1a 1\u3064\u4ee5\u4e0a\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u5168\u4f53 \u30a6\u30a3\u30f3\u30c9\u30a6\uff1a \u30bb\u30c3\u30b7\u30e7\u30f3\u5185\u306b\u958b\u304b\u308c\u3066\u3044\u308b\u30011\u3064\u4ee5\u4e0a\u306e\u30da\u30a4\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u5168\u4f53 \u30da\u30a4\u30f3\uff1a \u30a6\u30a3\u30f3\u30c9\u30a6\u5185\u3067\u5206\u5272\u3055\u308c\u3066\u3044\u308b1\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb","title":"tmux\u306e\u69cb\u9020"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#_1","text":"\u83ab\u5927\u306a\u6570\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u304c\u3046\u307e\u304f\u307e\u3068\u307e\u3063\u305f\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u30c1\u30e9\u30c1\u30e9\u307f\u306a\u304c\u3089\u4f7f\u3044\u307e\u3057\u3087\u3046 \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8","title":"\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#_2","text":"~/.tmux.conf \u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\u306a\u306e\u3067 ~/.tmux.conf \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u306a\u3069\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4ee5\u4e0bQiita\u304b\u3089\u304a\u3059\u3059\u3081\u8a18\u4e8b\u4e8c\u9078 \u300ctmux\u304c\u5feb\u9069\u3001\u304b\u3064 .tmux.conf \u306e\u8a2d\u5b9a\u300d \u300ctmux\u3092\u5fc5\u8981\u6700\u4f4e\u9650\u3067\u5165\u9580\u3057\u3066\u4f7f\u3046\u300d","title":"\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"%E3%83%84%E3%83%BC%E3%83%AB/tmux/#_3","text":"\u57fa\u672c\u306f \uff1c\u8d77\u52d5\uff1e tmux <\u7d42\u4e86> tmux kill-session \uff1c\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u305f\u307e\u307e\u4e00\u65e6\u96e2\u8131\uff08\u30c7\u30bf\u30c3\u30c1\uff09\uff1e prefix d \uff1c\u5143\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u63a5\u7d9a\uff08\u30a2\u30bf\u30c3\u30c1\uff09\uff1e $ tmux a \u3067\u304ak\u3002 \u3061\u306a\u307f\u306b\u3001\u591a\u6bb5ssh\u3067\u63a5\u7d9a\u3059\u308b\u6642\u306f \u4f5c\u696d\u3059\u308b\u4e00\u3064\u524d\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089tmux\u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044 \u3002 \u81ea\u5206\u306f\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u30fc\u7d4c\u7531\u3067gpu\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u30fc\u304b\u3089tmux\u3067\u5165\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u4f7f\u3044\u65b9"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/","text":"3D vision Lecture video \u203b\u3053\u306e\u52d5\u753b\u3067\u306f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u307f\u6271\u3046\u3001 \u4e3b\u306a\u30bf\u30b9\u30af\u306f 1. \u7269\u4f53\u306e\u5f62\u3092\u63a8\u8ad6\u3059\u308b\uff08\u6df1\u5ea6\u63a8\u5b9a\uff09 2. \u7269\u4f53\u306e\u30af\u30e9\u30b9\u5206\u985e \u307e\u3068\u3081\uff1a\u6c17\u3092\u3064\u3051\u308b\u3053\u30684\u3064\uff01 \u30c7\u30fc\u30bf\u69cb\u9020 \u4e0b\u8a18\u306b\u307e\u3068\u3081\u308b\u304c\u3069\u3093\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u30673D\u3092\u8868\u3059\u304b\u3067\u5206\u985e\u554f\u984c\u3067\u3082\u624b\u6cd5\u304c\u5168\u304f\u7570\u306a\u308b\u3001\u307f\u3093\u306a\u9055\u3063\u3066\u307f\u3093\u306a\u826f\u3044\u3002 \u8ddd\u96e2\u306e\u5b9a\u7fa9 3D\u30c7\u30fc\u30bf\u3092\u3069\u3046\u3084\u3063\u3066\u6bd4\u3079\u308b\u304b\u3002 Chamfer\u8ddd\u96e2\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3001F1\u30ed\u30b9\u7b49\u3001\u4e0a\u624b\u304f\u9078\u307c\u3046\u3002IoU\u306f\u4f7f\u3063\u3061\u3083\u99c4\u76ee\u3067\u3059\u3002 \u30ab\u30e1\u30e9\u306e\u4ed5\u69d8 \u6b63\u6e96\u5ea7\u6a19 : \u3069\u306e\u5411\u304d\u3067\u64ae\u5f71\u3057\u305f\u304b\u3067\u306f\u306a\u304f\u5bfe\u8c61\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u5ea7\u6a19\u8ef8\u3092\u5b9a\u7fa9\u3059\u308b\uff08\u4f8b\u3048\u3070\u3001\u753b\u50cf\u306e\u4eba\u9593\u306e\u5411\u3044\u3066\u308b\u65b9\u3092+Z\u306a\u3069\uff09\u3002\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u308c\u3070\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u7b49\u306e\u554f\u984c\u304c\u89e3\u6c7a\u3067\u304d\u308b\u304c\u904e\u5b66\u7fd2\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3002 \u8996\u70b9\u5ea7\u6a19 : \u30ab\u30e1\u30e9\u57fa\u6e96\u3067\u5ea7\u6a19\u8ef8\u3092\u6c7a\u3081\u308b\u3001\u30ad\u30cd\u30af\u30c8\u304c\u5411\u3044\u3066\u308b\u65b9\u304c+Z\u3002\u5b9f\u88c5\u304c\u697d\u3002 \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 ShapeNet : \u5408\u6210\u3055\u308c\u305fCAD\u30c7\u30fc\u30bf\u3001\u52d5\u304b\u3057\u3066\u904a\u3079\u308b\u304c\u80cc\u666f\u304c\u306a\u3044\u306e\u3067\u73fe\u5b9f\u7684\u306a\u63a8\u8ad6\u306e\u8a13\u7df4\u306b\u306f\u5411\u304b\u306a\u3044\u3002\u4f55\u6545\u304b\u6905\u5b50\u3068\u8eca\u3068\u98db\u884c\u6a5f\u304c\u591a\u3044\u3002 Pix3D : \u73fe\u5b9f\u306eRGB\u3000\uff0b\u3000D\u306b\u306a\u3063\u3066\u304a\u308a\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8a13\u7df4\u306b\u3082\u4f7f\u3048\u308b\u3002\u30c7\u30fc\u30bf\u6570\u306e\u5c11\u306a\u3055\u3068\u4f4d\u7f6e\u753b\u50cf\u306b\u3064\u304d1\u7269\u4f53\u3057\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u3066\u306a\u3044\u3068\u3044\u3046\u5f31\u70b9\u3082\u3002 3D\u30c7\u30fc\u30bf\u69cb\u9020 3D\u30c7\u30fc\u30bf\u306e\u8868\u3057\u65b9\u306f 1. Depth Map (H x W) \u5404\u30d4\u30af\u30bb\u30eb\u3068\u30ab\u30e1\u30e9\u3068\u306e\u8ddd\u96e2\u306e\u884c\u5217\uff08RGB-D image often called 2.5D\uff09\u3002 \u96a0\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u7121\u529b\u3002 Voxel Grid ( V x V x V) 3\u6b21\u5143\u884c\u5217\u3067\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u306b\u7269\u4f53\u304c\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u793a\u3059\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u7684\u306a\u3082\u306e\u89e3\u50cf\u5ea6\u304c\u9ad8\u3044\u5fc5\u8981\u304c\u3042\u308a\u30e1\u30e2\u30ea\u30fc\u6d88\u8cbb\u3082\u6fc0\u3057\u3044\u305f\u3081 Oct-tree \u3084 Nested Shape Layers \u7b49\u306e\u6539\u826f\u7248\u304c\u3042\u308b Implicit surface (R^3 -> {0, 1}) \u5ea7\u6a19\u3092\u5909\u6570\u3068\u3057\u3066\u3001\u305d\u306e\u5ea7\u6a19\u306b\u7269\u4f53\u304c\u3042\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\u3002\u63a8\u6e2c\u3059\u308b\u6642\u306f\u305d\u306e\u5ea7\u6a19\u306b\u7269\u4f53\u304c\u3042\u308b\u78ba\u7387\u3092\u8fd4\u3059\u8272\u3092\u63a8\u6e2c\u3059\u308b\u3002\u95a2\u6570\u306a\u306e\u3067\u3001\u4e00\u3064\u306e\uff13D\u30c7\u30fc\u30bf\u304b\u3089\u5ea7\u6a19\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u304c\u6b63\u3057\u3044\u304b\u5b66\u7fd2\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u624b\u6cd5\u3067\u5b66\u7fd2\u3067\u304d\u308b PointCloud (P x 3) \u5ea7\u6a19\u306e\u96c6\u5408\u3002 \u30e1\u30e2\u30ea\u30fc\u6d88\u8cbb\u3092\u6291\u3048\u3064\u3064\u7269\u4f53\u306e\u5f62\u3092\u6349\u3048\u308b\u304c\u7269\u4f53\u306e\u8868\u9762\u304c\u30dc\u30b3\u30dc\u30b3\u3057\u3066\u308b\u3068\u3044\u3046\u5f31\u70b9\u304c\u3042\u308b\u3002 \u30b7\u30f3\u30d7\u30eb\u306b\u6271\u3048\u308b\u70ba\u5b66\u7fd2\u6642\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u591a\u3044\u304c\u7269\u4f53\u3092\u8868\u73fe\u3059\u308b\u6642\u306f\u30dc\u30b3\u30dc\u30b3\u3092\u30ec\u30f3\u30c0\u30fc\u3059\u308b\u51e6\u7406\u304c\u5fc5\u8981 Mesh V\u500b\u306e\u70b9\u3092\u4e09\u89d2\u5f62\u3092\u69cb\u6210\u3059\u308b\u3088\u3046\u306b\u3064\u306a\u3044\u3060\u30b0\u30e9\u30d5\u3002 \u70b9\u306e\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u7269\u4f53\u3092\u73fe\u5b9f\u306b\u8fd1\u3044\u5f62\u3067\u8868\u73fe\u3067\u304d\u308b\uff08\u3069\u3093\u3069\u3093\u8868\u9762\u304c\u30b9\u30e0\u30fc\u30ba\u306b\u306a\u308b\uff09\u3002 \u4e09\u89d2\u5f62\u306e\u90e8\u5206\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u8cbc\u3063\u305f\u308a\u3067\u304d\u308b\u3002 \u30bf\u30b9\u30af 1. Predicting Depth Maps RGB + Depth Map \u306e4\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\u3092\u5b66\u7fd2\u3057\u3001RGB\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u307f\u3067Depth Map\u3092\u63a8\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 \u6700\u521d\u306f\u5168\u7d50\u5408CNN\u3092\u4f7f\u3063\u3066\u3044\u305f\u304cRGB\u753b\u50cf\u5185\u306e \u5c0f\u3055\u3044\u7269\u4f53\u304c\u3001\u9060\u8fd1\u6cd5\u3067\u5c0f\u3055\u3044\u306e\u304b\u8fd1\u304f\u306b\u3042\u308b\u304c\u30de\u30b8\u3067\u5c0f\u3055\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044 \u3068\u3044\u3046\u554f\u984c\u304c\u3042\u3063\u305f\u3002\u5bfe\u7b56\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u305f\u306e\u304c \u30b9\u30b1\u30fc\u30eb\u4e0d\u5909\u6027\u3092\u6301\u3064RMS \u3092\u8aa4\u5dee\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u3060\u3063\u305f\u3002 \u3053\u306e\u30ed\u30b9\u3067\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3042\u308b\u7269\u4f53\u306e\u8ddd\u96e2\u3092\u9593\u9055\u3048\u3066\u63a8\u5b9a\u3057\u305f\u3068\u3057\u3066\u3082\u3001 \u305d\u306e\u7269\u4f53\u306e\u7279\u5fb4\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u8aa4\u5dee\u30920\u3068\u3057\u3066\u8a08\u7b97\u3059\u308b \u3002\u6b63\u78ba\u306b\u306f\u3001\u63a8\u6e2c\u3057\u305fdepthmap y \u3068grand truth\u3092 t \u3068\u3057\u3066 y * x = t where t is a scaler \u3092\u6e80\u305f\u3059\u30b9\u30ab\u30e9\u30fc x \u304c\u5b58\u5728\u3059\u308c\u3070\u6b63\u89e3\u3068\u3059\u308b\u3001\u591a\u5206\u753b\u50cf\u5185\u306e\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u304c\u6b63\u3057\u3051\u308c\u3070\u304ak\u7684\u306a\u7406\u8ad6\u3063\u307d\u3044\u3002 1-2. Predicting Surface Normals \u30d4\u30af\u30bb\u30eb\u6bce\u306b\u30ce\u30fc\u30de\u30eb\u30d9\u30af\u30bf\u30fc\u3092\u63a8\u5b9a\u3059\u308b\u30bf\u30b9\u30af\u3002\u7269\u4f53\u306e\u5411\u304d\u3084\u306d\u3058\u308c\u3092\u6b63\u78ba\u306b\u6349\u3048\u308b 2. Classify Voxel Grid \u30dc\u30af\u30bb\u30eb\u30b0\u30ea\u30c3\u30c9\u304c\u3069\u3093\u306a\u7269\u4f53\u306a\u306e\u304b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u3002 \u30dc\u30af\u30bb\u30eb\u306e\u51e6\u7406\u306b\u306f\uff13DCNN\u3092\u4f7f\u3046\u30022D\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30a2\u30d7\u30e9\u30a4\u3059\u308b\u3088\u3046\u306b\u3001\u4e09\u6b21\u5143\u7a7a\u9593\u306b\u9577\u65b9\u5f62\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30a2\u30d7\u30e9\u30a4\u3057\u3066\u3044\u304f\u3002\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u304c\u5897\u3048\u308b\u6bce\u306b\u30dc\u30af\u30bb\u30eb\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u304d\u3001\u6700\u5f8c\u306bFC\u5c64\u3067\u51e6\u7406\u3059\u308b\u3002 2-2. Generating Voxel RGB\u753b\u50cf\u304b\u3089Voxel grid\u3092\u63a8\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 \u5f53\u521d\u306f2DCNN\u3067\u753b\u50cf\u3092\u30d5\u30e9\u30c3\u30c8\u306b\u30573DCNN\u3067\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u3044\u305f\u3002 3D\u306e\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u306f\u8a08\u7b97\u91cf\u304c\u3084\u3070\u304b\u3063\u305f\u70ba\u3001 Voxel TUbe \u3068\u3044\u3046\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30922DCNN\u3067\u4ee3\u66ff\u3059\u308b\u3059\u308b\u624b\u6cd5\u304c\u3067\u304d\u305f\u3002 \u3053\u306e\u624b\u6cd5\u3067\u306fH x W\u306e\u753b\u50cf\u3092\u63a8\u6e2c\u3057\u3066\u304b\u3089\u5404\u30d4\u30af\u30bb\u30eb\u6bce\u306b\u5965\u884c\u304d\u3092\u4f5c\u3063\u3066\u3044\u304f\u3002 \u3053\u3063\u3061\u306e\u65b9\u304c\u65e9\u3044\u304c \u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u306f\u6b63\u3057\u3044\u304c\u7269\u4f53\u5168\u4f53\u304c\u30ba\u30ec\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b (\u7269\u4f53\u306e\u5f62\u306f\u6349\u3048\u308b\u304c\u3001\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u96e2\u308c\u3066\u3044\u308b\u304b\u3092\u9593\u9055\u3048\u308b)\u3002 3. Classify PointCloud Inputs PointCloud\u3067\u306f\u70b9\u306e\u9806\u756a\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u5404\u70b9\u3092MLP\u306b\u5165\u308c\u3066Affine\u3067\u5206\u985e\u3067\u304d\u308b\u3002 MLP\u306e\u51fa\u529b\u3092Maxpool\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u30af\u30e9\u30b9\u6570\u306e\u30d9\u30af\u30bf\u30fc\u306b\u843d\u3068\u3057\u8fbc\u3080\u3002 3-1. Predicting PointCloud Outputs PointCloud\u3092\u4e88\u6e2c\u3059\u308b\u70ba\u306b\u3001\u3075\u305f\u3064\u306ePointCloud\uff08\u51fa\u529b\u3068\u6559\u5e2b\u30c7\u30fc\u30bf\uff09\u3092\u6bd4\u3079\u308b\u30ed\u30b9\u95a2\u6570\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002 Chamfer \u30ed\u30b9\u95a2\u6570\u3068\u3088\u3070\u308c\u3066\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f Y = predicted_point_cloud T = correct_point_cloud sum_A , sum_B = 0 , 0 for each_point in Y : y = the_point_in_Y x = the_closet_neighbour_of_y_in_T sum_A += square_of ( y - x ) # Do the same thing for each point in T # Add it to sum_B Loss = sum_A + sum_B Chamfer\u30ed\u30b9\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8abf\u6574\u3057\u307e\u3057\u3087\u3046\u3002 4. Predicting Meshes RGB\u753b\u50cf\u304b\u3089\u7269\u4f53\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u30bf\u30b9\u30af\u3002 \u7c98\u571f\u307f\u305f\u3044\u306a\u30e1\u30c3\u30b7\u30e5\u3092\u3061\u3087\u3063\u3068\u6574\u5f62\u3059\u308b\u306e\u3092\u7e70\u308a\u8fd4\u3057\u3066\u76ee\u6a19\u306b\u8fd1\u3065\u3051\u308b. \u30e1\u30c3\u30b7\u30e5\u3092\u51e6\u7406\u3059\u308b\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066 \u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f \u304c\u3042\u308b\u3002 \u5404\u70b9\u306b\u5bfe\u3057\u3066\u305d\u3053\u304b\u3089\u751f\u3048\u308b\u5168\u3066\u306e\u30a8\u30c3\u30b8\u306b\u91cd\u307f\u3092\u304b\u3051\u3066\u30a8\u30c3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\uff08\u4f34\u3063\u3066\u70b9\u3082\u52d5\u304f\uff09\u3002\u3053\u308c\u3092\u7e70\u308a\u8fd4\u3059\u3068\u70b9\u304c\u52d5\u3044\u3066\u3044\u304f\u3002\u3053\u308c\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u6570\u3060\u3051\u884c\u3044\u70b9\u3092\u5897\u3084\u3057\u3066\u304f\u3068\u3069\u3093\u3069\u3093\u7cbe\u5f69\u306a\uff13D\u30e2\u30c7\u30eb\u306b\u306a\u308b\u3002 \u51fa\u529b\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u3068\u76ee\u6a19\u5024\u3092\u6bd4\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u65b0\u3057\u3044\u30ed\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 \u5f53\u521d\u306f\u30e1\u30c3\u30b7\u30e5\u306e\u8868\u9762\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u70b9\u3092\u30b5\u30f3\u30d7\u30eb\u3057\u3001Chamfer\u30ed\u30b9\u3092\u8a08\u7b97\u3057\u3066\u3044\u305f\u3002 \u554f\u984c\u3068\u3057\u3066Chamfer\u30ed\u30b9\u304c\u5916\u308c\u5024\u306b\u654f\u611f\u306a\u306e\u3067Chamfer\u30ed\u30b9\u3092\u305d\u306e\u307e\u307e\u8a08\u7b97\u3059\u308b\u3068\u30ed\u30b9\u304c\u30c7\u30ab\u3059\u304e\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u3002\u305d\u3053\u3067\u70b9\u3069\u3046\u3057\u306e\u6bd4\u8f03\u3092F1\u30ed\u30b9\u3067\u8a08\u7b97\u3059\u308b\u624b\u6cd5\u304c\u64ae\u3089\u308c\u3066\u3044\u308b\u3002 \u5f37\u3044\u30e2\u30c7\u30eb Mesh R-CNN \u304c\u304a\u3059\u3059\u3081\u3089\u3057\u3044\u3002\u69cb\u9020\u3068\u3057\u3066\u306fMask R-CNN\u30672D\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3001\u305d\u308c\u3092\u5143\u306b\u5404\u533a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30c3\u30b7\u30e5\u3092Predicting Meshes\u306e\u9805\u306e\u624b\u6cd5\u3067\u4f5c\u3063\u3066\u3044\u304f\u3002 \u5b9f\u306f\u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f\u306b\u3088\u308b\u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\u306f\u3001 \u30e1\u30c3\u30b7\u30e5\u306e\u521d\u671f\u72b6\u614b\u306b\u4f9d\u5b58\u3057\u3084\u3059\u3044 \u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u9632\u3050\u70ba\u306bGenerating Voxel\u306e\u9805\u306b\u66f8\u3044\u305f\u624b\u6cd5\u3067\u30e1\u30c3\u30b7\u30e5\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u3002 [ Bounding_box , Category_label , Instance_segment ] = Mask_RCNN ( single_RGB_image ) initial_mesh = Voxel_prediction ( Bounding_box , Category_label , Instance_segment ) while not good : initial_mesh = Graph_Conv ( initial_mesh ) # \u6b63\u78ba\u306b\u306f\u4e0a\u8a18\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5404\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u6bce\u306b\u884c\u3046\u3002","title":"3D vision"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#3d-vision","text":"Lecture video \u203b\u3053\u306e\u52d5\u753b\u3067\u306f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u307f\u6271\u3046\u3001 \u4e3b\u306a\u30bf\u30b9\u30af\u306f 1. \u7269\u4f53\u306e\u5f62\u3092\u63a8\u8ad6\u3059\u308b\uff08\u6df1\u5ea6\u63a8\u5b9a\uff09 2. \u7269\u4f53\u306e\u30af\u30e9\u30b9\u5206\u985e","title":"3D vision"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#4","text":"\u30c7\u30fc\u30bf\u69cb\u9020 \u4e0b\u8a18\u306b\u307e\u3068\u3081\u308b\u304c\u3069\u3093\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u30673D\u3092\u8868\u3059\u304b\u3067\u5206\u985e\u554f\u984c\u3067\u3082\u624b\u6cd5\u304c\u5168\u304f\u7570\u306a\u308b\u3001\u307f\u3093\u306a\u9055\u3063\u3066\u307f\u3093\u306a\u826f\u3044\u3002 \u8ddd\u96e2\u306e\u5b9a\u7fa9 3D\u30c7\u30fc\u30bf\u3092\u3069\u3046\u3084\u3063\u3066\u6bd4\u3079\u308b\u304b\u3002 Chamfer\u8ddd\u96e2\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3001F1\u30ed\u30b9\u7b49\u3001\u4e0a\u624b\u304f\u9078\u307c\u3046\u3002IoU\u306f\u4f7f\u3063\u3061\u3083\u99c4\u76ee\u3067\u3059\u3002 \u30ab\u30e1\u30e9\u306e\u4ed5\u69d8 \u6b63\u6e96\u5ea7\u6a19 : \u3069\u306e\u5411\u304d\u3067\u64ae\u5f71\u3057\u305f\u304b\u3067\u306f\u306a\u304f\u5bfe\u8c61\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u5ea7\u6a19\u8ef8\u3092\u5b9a\u7fa9\u3059\u308b\uff08\u4f8b\u3048\u3070\u3001\u753b\u50cf\u306e\u4eba\u9593\u306e\u5411\u3044\u3066\u308b\u65b9\u3092+Z\u306a\u3069\uff09\u3002\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u308c\u3070\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u7b49\u306e\u554f\u984c\u304c\u89e3\u6c7a\u3067\u304d\u308b\u304c\u904e\u5b66\u7fd2\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3002 \u8996\u70b9\u5ea7\u6a19 : \u30ab\u30e1\u30e9\u57fa\u6e96\u3067\u5ea7\u6a19\u8ef8\u3092\u6c7a\u3081\u308b\u3001\u30ad\u30cd\u30af\u30c8\u304c\u5411\u3044\u3066\u308b\u65b9\u304c+Z\u3002\u5b9f\u88c5\u304c\u697d\u3002 \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 ShapeNet : \u5408\u6210\u3055\u308c\u305fCAD\u30c7\u30fc\u30bf\u3001\u52d5\u304b\u3057\u3066\u904a\u3079\u308b\u304c\u80cc\u666f\u304c\u306a\u3044\u306e\u3067\u73fe\u5b9f\u7684\u306a\u63a8\u8ad6\u306e\u8a13\u7df4\u306b\u306f\u5411\u304b\u306a\u3044\u3002\u4f55\u6545\u304b\u6905\u5b50\u3068\u8eca\u3068\u98db\u884c\u6a5f\u304c\u591a\u3044\u3002 Pix3D : \u73fe\u5b9f\u306eRGB\u3000\uff0b\u3000D\u306b\u306a\u3063\u3066\u304a\u308a\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8a13\u7df4\u306b\u3082\u4f7f\u3048\u308b\u3002\u30c7\u30fc\u30bf\u6570\u306e\u5c11\u306a\u3055\u3068\u4f4d\u7f6e\u753b\u50cf\u306b\u3064\u304d1\u7269\u4f53\u3057\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u3066\u306a\u3044\u3068\u3044\u3046\u5f31\u70b9\u3082\u3002","title":"\u307e\u3068\u3081\uff1a\u6c17\u3092\u3064\u3051\u308b\u3053\u30684\u3064\uff01"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#3d","text":"3D\u30c7\u30fc\u30bf\u306e\u8868\u3057\u65b9\u306f 1. Depth Map (H x W) \u5404\u30d4\u30af\u30bb\u30eb\u3068\u30ab\u30e1\u30e9\u3068\u306e\u8ddd\u96e2\u306e\u884c\u5217\uff08RGB-D image often called 2.5D\uff09\u3002 \u96a0\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u7121\u529b\u3002 Voxel Grid ( V x V x V) 3\u6b21\u5143\u884c\u5217\u3067\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u306b\u7269\u4f53\u304c\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u793a\u3059\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u7684\u306a\u3082\u306e\u89e3\u50cf\u5ea6\u304c\u9ad8\u3044\u5fc5\u8981\u304c\u3042\u308a\u30e1\u30e2\u30ea\u30fc\u6d88\u8cbb\u3082\u6fc0\u3057\u3044\u305f\u3081 Oct-tree \u3084 Nested Shape Layers \u7b49\u306e\u6539\u826f\u7248\u304c\u3042\u308b Implicit surface (R^3 -> {0, 1}) \u5ea7\u6a19\u3092\u5909\u6570\u3068\u3057\u3066\u3001\u305d\u306e\u5ea7\u6a19\u306b\u7269\u4f53\u304c\u3042\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\u3002\u63a8\u6e2c\u3059\u308b\u6642\u306f\u305d\u306e\u5ea7\u6a19\u306b\u7269\u4f53\u304c\u3042\u308b\u78ba\u7387\u3092\u8fd4\u3059\u8272\u3092\u63a8\u6e2c\u3059\u308b\u3002\u95a2\u6570\u306a\u306e\u3067\u3001\u4e00\u3064\u306e\uff13D\u30c7\u30fc\u30bf\u304b\u3089\u5ea7\u6a19\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u304c\u6b63\u3057\u3044\u304b\u5b66\u7fd2\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u624b\u6cd5\u3067\u5b66\u7fd2\u3067\u304d\u308b PointCloud (P x 3) \u5ea7\u6a19\u306e\u96c6\u5408\u3002 \u30e1\u30e2\u30ea\u30fc\u6d88\u8cbb\u3092\u6291\u3048\u3064\u3064\u7269\u4f53\u306e\u5f62\u3092\u6349\u3048\u308b\u304c\u7269\u4f53\u306e\u8868\u9762\u304c\u30dc\u30b3\u30dc\u30b3\u3057\u3066\u308b\u3068\u3044\u3046\u5f31\u70b9\u304c\u3042\u308b\u3002 \u30b7\u30f3\u30d7\u30eb\u306b\u6271\u3048\u308b\u70ba\u5b66\u7fd2\u6642\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u591a\u3044\u304c\u7269\u4f53\u3092\u8868\u73fe\u3059\u308b\u6642\u306f\u30dc\u30b3\u30dc\u30b3\u3092\u30ec\u30f3\u30c0\u30fc\u3059\u308b\u51e6\u7406\u304c\u5fc5\u8981 Mesh V\u500b\u306e\u70b9\u3092\u4e09\u89d2\u5f62\u3092\u69cb\u6210\u3059\u308b\u3088\u3046\u306b\u3064\u306a\u3044\u3060\u30b0\u30e9\u30d5\u3002 \u70b9\u306e\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u7269\u4f53\u3092\u73fe\u5b9f\u306b\u8fd1\u3044\u5f62\u3067\u8868\u73fe\u3067\u304d\u308b\uff08\u3069\u3093\u3069\u3093\u8868\u9762\u304c\u30b9\u30e0\u30fc\u30ba\u306b\u306a\u308b\uff09\u3002 \u4e09\u89d2\u5f62\u306e\u90e8\u5206\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u8cbc\u3063\u305f\u308a\u3067\u304d\u308b\u3002","title":"3D\u30c7\u30fc\u30bf\u69cb\u9020"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#_1","text":"","title":"\u30bf\u30b9\u30af"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#1-predicting-depth-maps","text":"RGB + Depth Map \u306e4\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\u3092\u5b66\u7fd2\u3057\u3001RGB\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u307f\u3067Depth Map\u3092\u63a8\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 \u6700\u521d\u306f\u5168\u7d50\u5408CNN\u3092\u4f7f\u3063\u3066\u3044\u305f\u304cRGB\u753b\u50cf\u5185\u306e \u5c0f\u3055\u3044\u7269\u4f53\u304c\u3001\u9060\u8fd1\u6cd5\u3067\u5c0f\u3055\u3044\u306e\u304b\u8fd1\u304f\u306b\u3042\u308b\u304c\u30de\u30b8\u3067\u5c0f\u3055\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044 \u3068\u3044\u3046\u554f\u984c\u304c\u3042\u3063\u305f\u3002\u5bfe\u7b56\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u305f\u306e\u304c \u30b9\u30b1\u30fc\u30eb\u4e0d\u5909\u6027\u3092\u6301\u3064RMS \u3092\u8aa4\u5dee\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u3060\u3063\u305f\u3002 \u3053\u306e\u30ed\u30b9\u3067\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3042\u308b\u7269\u4f53\u306e\u8ddd\u96e2\u3092\u9593\u9055\u3048\u3066\u63a8\u5b9a\u3057\u305f\u3068\u3057\u3066\u3082\u3001 \u305d\u306e\u7269\u4f53\u306e\u7279\u5fb4\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u8aa4\u5dee\u30920\u3068\u3057\u3066\u8a08\u7b97\u3059\u308b \u3002\u6b63\u78ba\u306b\u306f\u3001\u63a8\u6e2c\u3057\u305fdepthmap y \u3068grand truth\u3092 t \u3068\u3057\u3066 y * x = t where t is a scaler \u3092\u6e80\u305f\u3059\u30b9\u30ab\u30e9\u30fc x \u304c\u5b58\u5728\u3059\u308c\u3070\u6b63\u89e3\u3068\u3059\u308b\u3001\u591a\u5206\u753b\u50cf\u5185\u306e\u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u304c\u6b63\u3057\u3051\u308c\u3070\u304ak\u7684\u306a\u7406\u8ad6\u3063\u307d\u3044\u3002","title":"1. Predicting Depth Maps"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#1-2-predicting-surface-normals","text":"\u30d4\u30af\u30bb\u30eb\u6bce\u306b\u30ce\u30fc\u30de\u30eb\u30d9\u30af\u30bf\u30fc\u3092\u63a8\u5b9a\u3059\u308b\u30bf\u30b9\u30af\u3002\u7269\u4f53\u306e\u5411\u304d\u3084\u306d\u3058\u308c\u3092\u6b63\u78ba\u306b\u6349\u3048\u308b","title":"1-2. Predicting Surface Normals"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#2-classify-voxel-grid","text":"\u30dc\u30af\u30bb\u30eb\u30b0\u30ea\u30c3\u30c9\u304c\u3069\u3093\u306a\u7269\u4f53\u306a\u306e\u304b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u3002 \u30dc\u30af\u30bb\u30eb\u306e\u51e6\u7406\u306b\u306f\uff13DCNN\u3092\u4f7f\u3046\u30022D\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30a2\u30d7\u30e9\u30a4\u3059\u308b\u3088\u3046\u306b\u3001\u4e09\u6b21\u5143\u7a7a\u9593\u306b\u9577\u65b9\u5f62\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30a2\u30d7\u30e9\u30a4\u3057\u3066\u3044\u304f\u3002\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u304c\u5897\u3048\u308b\u6bce\u306b\u30dc\u30af\u30bb\u30eb\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u304d\u3001\u6700\u5f8c\u306bFC\u5c64\u3067\u51e6\u7406\u3059\u308b\u3002","title":"2. Classify Voxel Grid"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#2-2-generating-voxel","text":"RGB\u753b\u50cf\u304b\u3089Voxel grid\u3092\u63a8\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 \u5f53\u521d\u306f2DCNN\u3067\u753b\u50cf\u3092\u30d5\u30e9\u30c3\u30c8\u306b\u30573DCNN\u3067\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u3044\u305f\u3002 3D\u306e\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u306f\u8a08\u7b97\u91cf\u304c\u3084\u3070\u304b\u3063\u305f\u70ba\u3001 Voxel TUbe \u3068\u3044\u3046\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30922DCNN\u3067\u4ee3\u66ff\u3059\u308b\u3059\u308b\u624b\u6cd5\u304c\u3067\u304d\u305f\u3002 \u3053\u306e\u624b\u6cd5\u3067\u306fH x W\u306e\u753b\u50cf\u3092\u63a8\u6e2c\u3057\u3066\u304b\u3089\u5404\u30d4\u30af\u30bb\u30eb\u6bce\u306b\u5965\u884c\u304d\u3092\u4f5c\u3063\u3066\u3044\u304f\u3002 \u3053\u3063\u3061\u306e\u65b9\u304c\u65e9\u3044\u304c \u76f8\u5bfe\u7684\u306a\u4f4d\u7f6e\u306f\u6b63\u3057\u3044\u304c\u7269\u4f53\u5168\u4f53\u304c\u30ba\u30ec\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b (\u7269\u4f53\u306e\u5f62\u306f\u6349\u3048\u308b\u304c\u3001\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u96e2\u308c\u3066\u3044\u308b\u304b\u3092\u9593\u9055\u3048\u308b)\u3002","title":"2-2. Generating Voxel"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#3-classify-pointcloud-inputs","text":"PointCloud\u3067\u306f\u70b9\u306e\u9806\u756a\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u5404\u70b9\u3092MLP\u306b\u5165\u308c\u3066Affine\u3067\u5206\u985e\u3067\u304d\u308b\u3002 MLP\u306e\u51fa\u529b\u3092Maxpool\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u30af\u30e9\u30b9\u6570\u306e\u30d9\u30af\u30bf\u30fc\u306b\u843d\u3068\u3057\u8fbc\u3080\u3002","title":"3. Classify PointCloud Inputs"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#3-1-predicting-pointcloud-outputs","text":"PointCloud\u3092\u4e88\u6e2c\u3059\u308b\u70ba\u306b\u3001\u3075\u305f\u3064\u306ePointCloud\uff08\u51fa\u529b\u3068\u6559\u5e2b\u30c7\u30fc\u30bf\uff09\u3092\u6bd4\u3079\u308b\u30ed\u30b9\u95a2\u6570\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002 Chamfer \u30ed\u30b9\u95a2\u6570\u3068\u3088\u3070\u308c\u3066\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f Y = predicted_point_cloud T = correct_point_cloud sum_A , sum_B = 0 , 0 for each_point in Y : y = the_point_in_Y x = the_closet_neighbour_of_y_in_T sum_A += square_of ( y - x ) # Do the same thing for each point in T # Add it to sum_B Loss = sum_A + sum_B Chamfer\u30ed\u30b9\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8abf\u6574\u3057\u307e\u3057\u3087\u3046\u3002","title":"3-1. Predicting PointCloud Outputs"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#4-predicting-meshes","text":"RGB\u753b\u50cf\u304b\u3089\u7269\u4f53\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u30bf\u30b9\u30af\u3002 \u7c98\u571f\u307f\u305f\u3044\u306a\u30e1\u30c3\u30b7\u30e5\u3092\u3061\u3087\u3063\u3068\u6574\u5f62\u3059\u308b\u306e\u3092\u7e70\u308a\u8fd4\u3057\u3066\u76ee\u6a19\u306b\u8fd1\u3065\u3051\u308b. \u30e1\u30c3\u30b7\u30e5\u3092\u51e6\u7406\u3059\u308b\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066 \u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f \u304c\u3042\u308b\u3002 \u5404\u70b9\u306b\u5bfe\u3057\u3066\u305d\u3053\u304b\u3089\u751f\u3048\u308b\u5168\u3066\u306e\u30a8\u30c3\u30b8\u306b\u91cd\u307f\u3092\u304b\u3051\u3066\u30a8\u30c3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\uff08\u4f34\u3063\u3066\u70b9\u3082\u52d5\u304f\uff09\u3002\u3053\u308c\u3092\u7e70\u308a\u8fd4\u3059\u3068\u70b9\u304c\u52d5\u3044\u3066\u3044\u304f\u3002\u3053\u308c\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u6570\u3060\u3051\u884c\u3044\u70b9\u3092\u5897\u3084\u3057\u3066\u304f\u3068\u3069\u3093\u3069\u3093\u7cbe\u5f69\u306a\uff13D\u30e2\u30c7\u30eb\u306b\u306a\u308b\u3002 \u51fa\u529b\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u3068\u76ee\u6a19\u5024\u3092\u6bd4\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u65b0\u3057\u3044\u30ed\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 \u5f53\u521d\u306f\u30e1\u30c3\u30b7\u30e5\u306e\u8868\u9762\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u70b9\u3092\u30b5\u30f3\u30d7\u30eb\u3057\u3001Chamfer\u30ed\u30b9\u3092\u8a08\u7b97\u3057\u3066\u3044\u305f\u3002 \u554f\u984c\u3068\u3057\u3066Chamfer\u30ed\u30b9\u304c\u5916\u308c\u5024\u306b\u654f\u611f\u306a\u306e\u3067Chamfer\u30ed\u30b9\u3092\u305d\u306e\u307e\u307e\u8a08\u7b97\u3059\u308b\u3068\u30ed\u30b9\u304c\u30c7\u30ab\u3059\u304e\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u3002\u305d\u3053\u3067\u70b9\u3069\u3046\u3057\u306e\u6bd4\u8f03\u3092F1\u30ed\u30b9\u3067\u8a08\u7b97\u3059\u308b\u624b\u6cd5\u304c\u64ae\u3089\u308c\u3066\u3044\u308b\u3002","title":"4. Predicting Meshes"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/3dvision/#_2","text":"Mesh R-CNN \u304c\u304a\u3059\u3059\u3081\u3089\u3057\u3044\u3002\u69cb\u9020\u3068\u3057\u3066\u306fMask R-CNN\u30672D\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3001\u305d\u308c\u3092\u5143\u306b\u5404\u533a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30c3\u30b7\u30e5\u3092Predicting Meshes\u306e\u9805\u306e\u624b\u6cd5\u3067\u4f5c\u3063\u3066\u3044\u304f\u3002 \u5b9f\u306f\u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f\u306b\u3088\u308b\u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\u306f\u3001 \u30e1\u30c3\u30b7\u30e5\u306e\u521d\u671f\u72b6\u614b\u306b\u4f9d\u5b58\u3057\u3084\u3059\u3044 \u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u9632\u3050\u70ba\u306bGenerating Voxel\u306e\u9805\u306b\u66f8\u3044\u305f\u624b\u6cd5\u3067\u30e1\u30c3\u30b7\u30e5\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u3002 [ Bounding_box , Category_label , Instance_segment ] = Mask_RCNN ( single_RGB_image ) initial_mesh = Voxel_prediction ( Bounding_box , Category_label , Instance_segment ) while not good : initial_mesh = Graph_Conv ( initial_mesh ) # \u6b63\u78ba\u306b\u306f\u4e0a\u8a18\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5404\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u6bce\u306b\u884c\u3046\u3002","title":"\u5f37\u3044\u30e2\u30c7\u30eb"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/","text":"\u3010\u3082\u3046\u3084\u308a\u305f\u304f\u306a\u3044\u3011RNN\u3068LSTM\u306e\u7406\u89e3\u3068NumPy\u306b\u3088\u308b\u5b9f\u88c5 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u7528\u3044\u305f\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u306b\u306f\u3001\u5358\u8a9e\u4e88\u6e2c\u3084\u5929\u6c17\u4e88\u6e2c\u306a\u3069\u69d8\u3005\u306a\u5fdc\u7528\u5148\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u6d41\u308c\u3067\u89e3\u8aac\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 - \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u5909\u6570\u306e\u8868\u73fe\u306e\u4ed5\u65b9 - RNN\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9 - LSTM\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9 - PyTorch\u3092\u4f7f\u3063\u305fLSTM\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9 \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u8868\u73fe\u306e\u4ed5\u65b9 \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u529b\u3059\u308b\u306b\u306f\u3001\u4f55\u304b\u3057\u3089\u306e\u65b9\u6cd5\u3067\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u529b\u3067\u304d\u308b\u5f62\u306b\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001one-hot encoding\u3092\u4f7f\u7528\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u5358\u8a9e\u306b\u5bfe\u3059\u308bone-hot encoding \u5358\u8a9e\u3092one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5358\u8a9e\u306e\u91cf\u304c\u81a8\u5927\u306b\u306a\u308b\u3068one-hot vector\u306e\u5927\u304d\u3055\u3082\u81a8\u5927\u306b\u306a\u308b\u306e\u3067\u3001\u5de5\u592b\u3092\u884c\u3044\u307e\u3059\u3002 \u4f7f\u7528\u983b\u5ea6\u306e\u9ad8\u3044k\u500b\u306e\u5358\u8a9e\u3092\u6b8b\u3057\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306fUNK\u3068\u3057\u3066\u3001one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u751f\u6210 a b a EOS, a a b b a a EOS, a a a a a b b b b b a a a a a EOS \u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002 EOS\u306f\u3001end of a sequence\u306e\u7565\u3067\u3059\u3002 ```Python: import numpy as np np.random.seed(42)#\u4e71\u6570\u3092\u56fa\u5b9a\u3059\u308b def generate_dataset(num_sequences=2**8): \"\"\" \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u751f\u6210\u3059\u308b\u95a2\u6570 num_sequences \u5468\u671f return \u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8 \"\"\" samples = [] for _ in range(num_sequences): num_tokens = np.random.randint(1, 6)#1\u304b\u30896\u307e\u3067\u306e\u6570\u30921\u3064\u751f\u6210 sample = ['a'] * num_tokens + ['b'] * num_tokens + ['a'] * num_tokens + ['EOS'] samples.append(sample) return samples sequences = generate_dataset() ## \u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u8abf\u3079\u308b one-hot encoding\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u307e\u3059\u3002 defaultdict\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u8f9e\u66f8\u306evalue\u306e\u5024\u3092\u4efb\u610f\u306b\u521d\u671f\u5316\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002 ```Python: from collections import defaultdict def sequences_to_dicts(sequences): \"\"\" \u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u683c\u7d0d\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308b \"\"\" flatten = lambda l: [item for sublist in l for item in sublist]#list\u3092\u5168\u90e8\u3064\u306a\u3052\u308b all_words = flatten(sequences) word_count = defaultdict(int)#\u8f9e\u66f8\u306e\u521d\u671f\u5316 for word in flatten(sequences): #\u983b\u5ea6\u3092\u6570\u3048\u308b word_count[word] += 1 word_count = sorted(list(word_count.items()), key=lambda l: -l[1])#word_count\u306ekey\u3068value\u3092value\u306b\u57fa\u3065\u3044\u3066\u964d\u9806\u306b\u30bd\u30fc\u30c8 unique_words = [item[0] for item in word_count]#\u5358\u8a9e\u3092\u3068\u308b unique_words.append('UNK')#UNK\u3092\u8ffd\u52a0 num_sequences, vocab_size = len(sequences), len(unique_words) word_to_idx = defaultdict(lambda: vocab_size-1)#\u521d\u671f\u5024\u306e\u8a2d\u5b9a idx_to_word = defaultdict(lambda: 'UNK') for idx, word in enumerate(unique_words): #enumerate\u3067index\u3068\u8981\u7d20\u3092\u53d6\u5f97 #\u8f9e\u66f8\u306b\u5165\u308c\u308b word_to_idx[word] = idx idx_to_word[idx] = word return word_to_idx, idx_to_word, num_sequences, vocab_size word_to_idx, idx_to_word, num_sequences, vocab_size = sequences_to_dicts(sequences) \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5206\u5272 \u7cfb\u5217\u30c7\u30fc\u30bf\u3092training, validation, test\u306b\u5206\u5272\u3057\u307e\u3059\u3002 \u305d\u308c\u305e\u308c\u300180%, 10%, 10%\u3067\u3059\u3002 \u7cfb\u5217\u30c7\u30fc\u30bfsequences\u306e\u5206\u5272\u306b\u306f\u3001\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002 \u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3046\u3068\u3001 l[start:goal] \u3067l[start]\u304b\u3089l[goal-1]\u306e\u5024\u3092\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002start\u3068goal\u306f\u534a\u958b\u533a\u9593\u306b\u306a\u3063\u3066\u304a\u308a\u3001l[goal]\u306f\u542b\u307e\u308c\u307e\u305b\u3093\u3002 start\u3068goal\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 l[:goal] \u306fl[0]\u304b\u3089l[goal-1]\u307e\u3067\u3001 l[start:] \u306fl[start]\u304b\u3089l[l.size()-1] (\u6700\u5f8c)\u307e\u3067\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002 l[:] \u306f\u5168\u90e8\u62bd\u51fa\u3057\u307e\u3059\u3002 l[-n:] \u306f\u6700\u5f8c\u304b\u3089\u6570\u3048\u3066n\u500b\u306e\u8981\u7d20\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002 l[:-n] \u306fl[0]\u304b\u3089\u62bd\u51fa\u3057\u307e\u3059\u304c\u3001\u6700\u5f8c\u306en\u500b\u306f\u62bd\u51fa\u3057\u307e\u305b\u3093\u3002 PyTorch\u3092\u7528\u3044\u3066\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: from torch.utils import data class Dataset(data.Dataset): def init (self, inputs, targets): self.intputs = inputs self.targets = targets def __len__(self): return len(self.targets) def __getitem__(self, index): X = self.inputs[index] y = self.targets[index] return X, y def create_datasets(sequences, dataset_class, p_train=0.8, p_val=0.1, p_test=0.1): #\u5206\u5272\u3059\u308b\u30b5\u30a4\u30ba\u3092\u5b9a\u7fa9 num_train = int(len(sequences) p_train) num_val = int(len(sequences) p_val) num_test = int(len(sequences)*p_test) #\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5206\u5272 #\u30b9\u30e9\u30a4\u30b9\u3092\u5229\u7528 sequences_train = sequences[:num_train] sequences_val = sequences[num_train:num_train+num_val] sequences_test = sequences[-num_test:] def get_inputs_targets_from_sequences(sequences): inputs, targets = [], [] #\u9577\u3055L\u306esequence\u304b\u3089EOS\u3092\u9664\u3044\u305fL-1 # targets\u306finputs\u306eground truth\u306e\u305f\u3081\u53f3\u306b1\u3064\u305a\u3089\u3059 for sequence in sequences: inputs.append(sequence[:-1]) targets.append(sequence[1:]) return inputs, targets #input\u3068target\u3092\u4f5c\u308b inputs_train, targets_train = get_inputs_targets_from_sequences(sequences_train) inputs_val, targets_val = get_inputs_targets_from_sequences(sequences_val) inputs_test, targets_test = get_inputs_targets_from_sequences(sequences_test) #\u5148\u307b\u3069\u5b9a\u7fa9\u3057\u305fclass\u3092\u7528\u3044\u3066dataset\u3092\u4f5c\u308b training_set = dataset_class(inputs_train, targets_train) validation_set = dataset_class(inputs_val, targets_val) test_set = dataset_class(inputs_test, targets_test) return training_set, validation_set, test_set training_set, validation_set, test_set = create_datasets(sequences, Dataset) ## one-hot vector\u5316 \u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u73fe\u308c\u308b\u5358\u8a9e\u3092\u983b\u5ea6\u306b\u57fa\u3065\u3044\u3066one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002 ```Python: def one_hot_encode(idx, vocab_size): \"\"\" one-hot vector\u5316\u3059\u308b\u3002 \"\"\" one_hot = np.zeros(vocab_size)#vocab_size = 4\u306a\u3089[0, 0, 0, 0] one_hot[idx] = 1.0#idx = 1\u306a\u3089[0, 1, 0, 0] return one_hot def one_hot_encode_sequence(sequence, vocab_size): \"\"\" return 3-D numpy array (num_words, vocab_size, 1) \"\"\" encoding = np.array([one_hot_encode(word_to_idx[word], vocab_size) for word in sequence]) #reshape encoding = encoding.reshape(encoding.shape[0], encoding.shape[1], 1) return encoding RNN\u306e\u5c0e\u5165 Recurrent neural network (RNN)\u306f\u3001\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5206\u6790\u304c\u5f97\u610f\u3067\u3059\u3002RNN\u306f\u3001\u524d\u306e\u72b6\u614b\u3067\u4f7f\u3063\u305f\u8a08\u7b97\u7d50\u679c\u3092\u73fe\u5728\u306e\u72b6\u614b\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6982\u8981\u56f3\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 x\u306f\u5165\u529b\u3067\u3042\u308b\u7cfb\u5217\u30c7\u30fc\u30bf U\u306f\u5165\u529b\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 V\u306f\u30e1\u30e2\u30ea\u30fc\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 W\u306f\u51fa\u529b\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u96a0\u308c\u72b6\u614b\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 h\u306f\u6642\u9593\u3054\u3068\u306e\u96a0\u308c\u72b6\u614b(\u30e1\u30e2\u30ea\u30fc) o\u306f\u51fa\u529b RNN\u306e\u5b9f\u88c5 NumPy\u3092\u4f7f\u3063\u3066\u3001RNN\u306e\u5b9f\u88c5\u3092forward pass, backward pass, optimization, training loop\u306e\u9806\u3067\u3084\u308a\u307e\u3059\u3002 RNN\u306e\u521d\u671f\u5316 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u521d\u671f\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: hidden_size = 50#\u96a0\u308c\u5c64(\u30e1\u30e2\u30ea\u30fc)\u306e\u6b21\u5143 vocab_size = len(word_to_idx) def init_orthogonal(param): \"\"\" \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u76f4\u4ea4\u5316\u3057\u3066\u521d\u671f\u5316 \"\"\" if param.ndim < 2: raise ValueError(\"Only parameters with 2 or more dimensions are supported.\") rows, cols = param.shape new_param = np.random.randn(rows, cols) if rows < cols: new_param = new_param.T q, r = np.linalg.qr(new_param) d = np.diag(r, 0) ph = np.sign(d) q *= ph if rows < cols: q = q.T new_param = q return new_param def init_rnn(hidden_size, vocab_size): \"\"\" RNN\u3092\u521d\u671f\u5316 \"\"\" U = np.zeros((hidden_size, vocab_size)) V = np.zeros((hidden_size, hidden_size)) W = np.zeros((vocab_size, hidden_size)) b_hidden = np.zeros((hidden_size, 1)) b_out = np.zeros((vocab_size, 1)) U = init_orthogonal(U) V = init_orthogonal(V) W = init_orthogonal(W) return U, V, W, b_hidden, b_out ``` \u6d3b\u6027\u5316\u95a2\u6570\u306e\u5b9f\u88c5 sigmoid,tanh, softmax\u306e\u5b9f\u88c5\u3092\u3057\u307e\u3057\u305f\u3002 \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u5bfe\u7b56\u306b\u5165\u529bx\u306b\u5fae\u5c11\u91cf\u3092\u8db3\u3057\u3066\u3044\u307e\u3059\u3002 \u307e\u305f\u3001backward pass\u7528\u306b\u5fae\u5206\u3082\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002 Python: def sigmoid(x, derivative=False): x_safe = x + 1e-12#\u5fae\u5c11\u91cf\u3092\u8db3\u3059 f = 1/(1 + np.exp(-x_safe)) if derivative: return f * (1 -f)#\u5fae\u5206\u3092\u8fd4\u3059 else: return f def tanh(x, derivative=False): x_safe = x + 1e-12 f = (np.exp(x_safe) - np.exp(-x_safe))/(np.exp(x_safe)+np.exp(-x_safe)) if derivative: return 1-f**2 else: return f def softmax(x, derivative=False): x_safe = x + 1e-12 f = np.exp(x_safe)/np.sum(np.exp(x_safe)) if derivative: pass else: return f forward pass\u306e\u5b9f\u88c5 h = tanh(Ux + Vh + b_hidden) o = softmax(Wh + b_out) RNN\u306eforward pass\u306f\u4e0a\u5f0f\u3067\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 ```Python: def forward_pass(inputs, hidden_state, params): U, V, W, b_hidden, b_out = params outputs, hidden_states = [], [] for t in range(len(inputs)): hidden_state = tanh(np.dot(U, inputs[t]) + np.dot(V, hidden_state) + b_hidden) out = softmax(np.dot(W, hidden_state) + b_out) outputs.append(out) hidden_states.append(hidden_state.copy()) return outputs, hidden_states ``` backward pass\u306e\u5b9f\u88c5 forward pass\u3067\u640d\u5931\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5(backpropagation)\u3092\u7528\u3044\u3066\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308bbackward pass\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 \u52fe\u914d\u7206\u767a\u5bfe\u7b56\u7528\u306e\u52fe\u914d\u3092\u30af\u30ea\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002 \u52fe\u914d\u306e\u5927\u304d\u3055\u304c\u4e0a\u9650\u5024\u3092\u8d85\u3048\u305f\u3089\u3001\u4e0a\u9650\u5024\u3067\u6b63\u898f\u5316\u3057\u307e\u3059\u3002 Python: def clip_gradient_norm(grads, max_norm=0.25): \"\"\" \u52fe\u914d\u7206\u767a\u5bfe\u7b56\u3067 \u52fe\u914d\u3092 g = (max_nrom/|g|)*g\u306b\u5909\u63db\u3059\u308b \"\"\" max_norm = float(max_norm) total_norm = 0 for grad in grads: grad_norm = np.sum(np.power(grad, 2)) total_norm += grad_norm total_norm = np.sqrt(total_norm) clip_coef = max_norm / (total_norm + 1e-6) if clip_coef < 1: for grad in grads: grad *= clip_coef return grads backward_pass\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\u640d\u5931\u3092\u6c42\u3081\u3066\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5\u3067\u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fae\u5206\u3057\u305f\u640d\u5931\u306e\u52fe\u914d\u3092\u6c42\u3081\u307e\u3059\u3002 ```Python: def backward_pass(inputs, outputs, hidden_states, targets, params): U, V, W, b_hidden, b_out = params d_U, d_V, d_W = np.zeros_like(U), np.zeros_like(V), np.zeros_like(W) d_b_hidden, d_b_out = np.zeros_like(b_hidden), np.zeros_like(b_out) d_h_next = np.zeros_like(hidden_states[0]) loss = 0 for t in reversed(range(len(outputs))): #cross entropy loss\u3092\u8a08\u7b97 loss += -np.mean(np.log(outputs[t]+1e-12)*targets[t]) #backpropagate into output d_o = outputs[t].copy() d_o[np.argmax(targets[t])] -= -1 #backpropagate into W d_W += np.dot(d_o, hidden_states[t].T) d_b_out += d_o #backpropagate into h d_h = np.dot(W.T, d_o) + d_h_next #backpropagate through non-linearity d_f = tanh(hidden_states[t], derivative=True) * d_h d_b_hidden += d_f #backpropagate into U d_U += np.dot(d_f, inputs[t].T) #backpropagate into V d_V += np.dot(d_f, hidden_states[t-1].T) d_h_next = np.dot(V.T, d_f) grads = d_U, d_V, d_W, d_b_hidden, d_b_out grads = clip_gradient_norm(grads) return loss, grads ### optimization \u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u7528\u3044\u3066\u3001RNN\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5(SGD)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 ```Python: def update_paramaters(params, grads, lr=1e-3): for param, gras in zip(params, grads): #zip\u3067\u8907\u6570\u306e\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u53d6\u5f97 param -= lr * grad return params \u5b66\u7fd2 \u5b9f\u88c5\u3057\u305fRNN\u306e\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: from torch.utils.tensorboard import SummaryWriter writer = SummaryWriter(log_dir=\"./logs\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a num_epochs = 1000 \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5316 params = init_rnn(hidden_size=hidden_size, vocab_size=vocab_size) hidden_state = np.zeros((hidden_size, 1)) for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 hidde_state = np.zeros_like(hidden_state) #forward pass outputs, hidden_states = forward_pass(inputs_one_hot, hidden_state, params) #backward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 loss, _ = backward_pass(inputs_one_hot, outputs, hidden_states, targets_one_hot, params) epoch_validation_loss += loss #training\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 hidde_state = np.zeros_like(hidden_state) #forward pass outputs, hidden_states = forward_pass(inputs_one_hot, hidden_state, params) #backward pass training\u306a\u306e\u3067\u52fe\u914d\u3082\u8a08\u7b97 loss, grads = backward_pass(inputs_one_hot, outputs, hidden_states, targets_one_hot, params) if np.isnan(loss): raise ValueError('Gradients have vanished') #network\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0 params = update_paramaters(params, grads) epoch_training_loss += loss writer.add_scalars(\"Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ![](http://namazu.tokyo/wp-content/uploads/2021/03/dd8661aaa3a8f79f8c27c79cff2db71f-300x200.png) Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u3042\u307e\u308a\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u96a0\u308c\u5c64\u306e\u6b21\u5143\u304c\u5c11\u306a\u3044\u3053\u3068\u3084\u30eb\u30fc\u30d7\u304c\u5c11\u306a\u3044\u3053\u3068\u3084\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5024\u304c\u5408\u3063\u3066\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u3087\u3046\u304b? ### \u30c6\u30b9\u30c8 \u5b66\u7fd2\u3057\u305fRNN\u306e\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\u9069\u5f53\u306b\u6587\u7ae0\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066\u6b21\u306eword\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002 Python\u3067\u306f\u3001`list[-1]`\u3067\u4e00\u756a\u5f8c\u308d\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002 ```Python: def freestyle(params, sentence='', num_generate=10): sentence = sentence.split(' ')#\u7a7a\u767d\u3067\u533a\u5207\u308b sentence_one_hot = one_hot_encode_sequence(sentence, vocab_size) hidden_state = np.zeros((hidden_size, 1)) outputs, hidden_states = forward_pass(sentence_one_hot, hidde_state, params) output_sentence = sentence word = idx_to_word[np.argmax(outputs[-1])] output_sentence.append(word) for i in range(num_generate): output = outputs[-1]#\u4e00\u756a\u5f8c\u308d\u306e\u5024\u3092\u53d6\u5f97 hidden_state = hidden_states[-1] output = output.reshape(1, output.shape[0], output.shape[1]) outputs, hidden_states = forward_pass(output, hidde_state, params) word = idx_to_word[np.argmax(outputs)] output_sentence.append(word) if word == \"EOS\": break return output_sentence test_examples = ['a a b', 'a a a a b', 'a a a a a a b', 'a', 'r n n'] for i, test_example in enumerate(test_examples): print(f'Example {i}:', test_example) print('Predicted sequence:', freestyle(params, sentence=test_example), end='\\n\\n') \u4e0a\u624b\u304f\u5b66\u7fd2\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3082\u4e0a\u624b\u304f\u3044\u3063\u3066\u306a\u3044\u3053\u3068\u304c\u7d50\u679c\u304b\u3089\u308f\u304b\u308a\u307e\u3059\u3002 \u5168\u3066Unknown\u3068\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002 ```Shell:\u30c6\u30b9\u30c8\u7d50\u679c Example 0: a a b Predicted sequence: ['a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 1: a a a a b Predicted sequence: ['a', 'a', 'a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 2: a a a a a a b Predicted sequence: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 3: a Predicted sequence: ['a', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 4: r n n Predicted sequence: ['r', 'n', 'n', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] ## LSTM\u306e\u5c0e\u5165 RNN\u306f\u3001\u30ae\u30e3\u30c3\u30d7\u304c\u5927\u304d\u304f\u306a\u308b\u306b\u3064\u308c\u3066\u60c5\u5831\u3092\u95a2\u9023\u3065\u3051\u3066\u5b66\u7fd2\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u9577\u671f\u4f9d\u5b58\u6027\u3092\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u306e\u304c\u3001Long Short Term Memory(LSTM)\u3067\u3059\u3002LSTM\u306f\u3001RNN\u306e\u6d3e\u751f\u3067\u540c\u3058\u3088\u3046\u306b\u7e70\u308a\u8fd4\u3057\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/93056c52056f15d863e0d4fb0cc89948-300x113.png) ### LSTM\u306e\u4ed5\u7d44\u307f LSTM\u306f\u3001\u5fd8\u5374\u30b2\u30fc\u30c8\u5c64\u3001\u5165\u529b\u30b2\u30fc\u30c8\u5c64\u3001\u51fa\u529b\u30b2\u30fc\u30c8\u5c64\u306e3\u3064\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002 LSTM\u306f\u30bb\u30eb\u3068\u547c\u3070\u308c\u308b\u30e1\u30e2\u30ea\u30fc\u304c\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002C\u304c\u30bb\u30eb\u3001x\u304c\u5165\u529b\u3001h\u304c\u51fa\u529b\u3001W\u304c\u91cd\u307f\u3001b\u304c\u30d0\u30a4\u30a2\u30b9\u3067\u3059\u3002 \u307e\u305a\u3001\u5fd8\u5374\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u30bb\u30eb\u72b6\u614b\u304b\u3089\u6368\u3066\u308b\u60c5\u5831\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u73fe\u5728\u306e\u5165\u529b\u3068\u30011\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b\u3092\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306b\u3044\u308c\u307e\u3059\u30020\u304b\u30891\u306e\u9593\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u30020\u304c\u5b8c\u5168\u306b\u6368\u3066\u308b\u3092\u8868\u3057\u30011\u304c\u5b8c\u5168\u306b\u7dad\u6301\u3092\u8868\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/7188d6629f92af532044727371464615-300x93.png) \u6b21\u306b\u3001\u5165\u529b\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u5165\u529b\u306b\u5bfe\u3057\u3066\u3069\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002tanh\u5c64\u3067\u30bb\u30eb\u72b6\u614b\u306b\u52a0\u3048\u3089\u308c\u308b\u65b0\u305f\u306a\u5019\u88dc\u5024\u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/eaed8d1ee52ddcefbf9ef8b3aadb5fc8-300x93.png) \u30bb\u30eb\u3092\u66f4\u65b0\u3057\u307e\u3059\u30021\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u5fd8\u5374\u6e08\u307f\u306e\u30bb\u30eb\u3068\u66f4\u65b0\u3059\u308b\u5024\u3092\u8db3\u3057\u5408\u308f\u305b\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/196a34321e796c678b1fc2d400977997-300x93.png) \u6700\u5f8c\u306b\u3001\u51fa\u529b\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u30bb\u30eb\u72b6\u614b\u306b\u57fa\u3065\u3044\u3066\u51fa\u529b\u3059\u308b\u3082\u306e\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/dea185317c8a1cbc486670eb6aae4ef5-300x93.png) ## LSTM\u306e\u5b9f\u88c5 NumPy\u3092\u4f7f\u3063\u3066\u3001LSTM\u306e\u5b9f\u88c5\u3092forward pass, backward pass, optimization, training loop\u306e\u9806\u3067\u3084\u308a\u307e\u3059\u3002 ### LSTM\u306e\u521d\u671f\u5316 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u521d\u671f\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: z_size = hidden_size + vocab_size def init_lstm(hidden_size, vocab_size, z_size): \"\"\" LSTM\u306e\u521d\u671f\u5316 \"\"\" W_f = np.random.randn(hidden_size, z_size) b_f = np.zeros((hidden_size, 1)) W_i = np.random.randn(hidden_size, z_size) b_i = np.zeros((hidden_size, 1)) W_g = np.random.randn(hidden_size, z_size) b_g = np.zeros((hidden_size, 1)) W_o = np.random.randn(hidden_size, z_size) b_o = np.zeros((hidden_size, 1)) W_v = np.random.randn(vocab_size, hidden_size) b_v = np.zeros((vocab_size, 1)) W_f = init_orthogonal(W_f) W_i = init_orthogonal(W_i) W_g = init_orthogonal(W_g) W_o = init_orthogonal(W_o) W_v = init_orthogonal(W_v) return W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v forward pass\u306e\u5b9f\u88c5 LSTM\u306e\u4ed5\u7d44\u307f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u901a\u308a\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002 ```Python: def forward(inputs, h_prev, C_prev, p): \"\"\" inputs:\u73fe\u5728\u306e\u5165\u529b h_prev:1\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b C_prev:1\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u30bb\u30eb p:LSTM\u306e\u30d1\u30e9\u30e1\u30fc\u30bf return \u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u72b6\u614b\u3068\u51fa\u529b \"\"\" assert h_prev.shape == (hidden_size, 1) assert C_prev.shape == (hidden_size, 1) W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v = p x_s, z_s, f_s, i_s = [], [], [], [] g_s, C_s, o_s, h_s = [], [], [], [] v_s, output_s = [], [] h_s.append(h_prev) C_s.append(C_prev) for x in inputs: #\u5165\u529b\u30681\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b\u3092\u7d50\u5408 z = np.row_stack((h_prev, x)) z_s.append(z) #\u5fd8\u5374\u30b2\u30fc\u30c8 f = sigmoid(np.dot(W_f, z) + b_f) f_s.append(f) #\u5165\u529b\u30b2\u30fc\u30c8 i = sigmoid(np.dot(W_i, z) + b_i) i_s.append(i) #\u73fe\u5728\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u30bb\u30eb\u306b\u52a0\u3048\u308b\u5019\u88dc g = tanh(np.dot(W_g, z) + b_g) g_s.append(g) #\u30bb\u30eb\u306e\u66f4\u65b0 C_prev = f * C_prev + i * g C_s.append(C_prev) #\u51fa\u529b\u30b2\u30fc\u30c8 o = sigmoid(np.dot(W_o, z) + b_o) o_s.append(o) #\u51fa\u529b\u3059\u308b h_prev = o * tanh(C_prev) h_s.append(h_prev) v = np.dot(W_v, h_prev) + b_v v_s.append(v) output = softmax(v) output_s.append(output) return z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, output_s ``` backward pass\u306e\u5b9f\u88c5 \u640d\u5931\u3092\u6c42\u3081\u3066\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5\u3067\u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fae\u5206\u3057\u305f\u640d\u5931\u306e\u52fe\u914d\u3092\u6c42\u3081\u307e\u3059\u3002 Python: def backward(z, f, i, g, C, o, h, v, outputs, targets, p = params): W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v = p #\u52fe\u914d\u3092\u521d\u671f\u5316 W_f_d = np.zeros_like(W_f) b_f_d = np.zeros_like(b_f) W_i_d = np.zeros_like(W_i) b_i_d = np.zeros_like(b_i) W_g_d = np.zeros_like(W_g) b_g_d = np.zeros_like(b_g) W_o_d = np.zeros_like(W_o) b_o_d = np.zeros_like(b_o) W_v_d = np.zeros_like(W_v) b_v_d = np.zeros_like(b_v) #\u6b21\u306e\u30bb\u30eb\u3068\u96a0\u308c\u72b6\u614b\u3092\u521d\u671f\u5316 dh_next = np.zeros_like(h[0]) dC_next = np.zeros_like(C[0]) loss = 0 for t in reversed(range(len(outputs))): #\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30ed\u30b9\u3092\u8a08\u7b97 loss += -np.mean(np.log(outputs[t]) * targets[t]) #\u524d\u306e\u30bb\u30eb\u3092\u66f4\u65b0 C_prev = C[t-1] dv = np.copy(outputs[t]) dv[np.argmax(targets[t])] -= 1 W_v_d += np.dot(dv, h[t].T) b_v_d += dv dh = np.dot(W_v.T, dv) dh += dh_next do = dh * tanh(C[t]) do = sigmoid(o[t], derivative=True)*do W_o_d += np.dot(do, z[t].T) b_o_d += do dC = np.copy(dC_next) dC += dh * o[t] * tanh(tanh(C[t]), derivative=True) dg = dC * i[t] dg = tanh(g[t], derivative=True) * dg W_g_d += np.dot(dg, z[t].T) b_g_d += dg di = dC * g[t] di = sigmoid(i[t], True) * di W_i_d += np.dot(di, z[t].T) b_i_d += di df = dC * C_prev df = sigmoid(f[t]) * df W_f_d += np.dot(df, z[t].T) b_f_d += df dz = (np.dot(W_f.T, df) + np.dot(W_i.T, di) + np.dot(W_g.T, dg) + np.dot(W_o.T, do)) dh_prev = dz[:hidden_size, :] dC_prev = f[t] * dC grads = W_f_d, W_i_d, W_g_d, W_o_d, W_v_d, b_f_d, b_i_d, b_g_d, b_o_d, b_v_d grads = clip_gradient_norm(grads) return loss, grads \u5b66\u7fd2 \u5b9f\u88c5\u3057\u305fLSTM\u306e\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: writer = SummaryWriter(log_dir=\"./logs/lstm\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a num_epochs = 200#\u30a8\u30dd\u30c3\u30af\u6570 LSTM\u306e\u521d\u671f\u5316 z_size = hidden_size + vocab_size params = init_lstm(hidden_size, vocab_size, z_size) \u96a0\u308c\u5c64\u306e\u521d\u671f\u5316 hidden_state = np.zeros((hidden_size, 1)) for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 h = np.zeros((hidden_size, 1)) c = np.zeros((hidden_size, 1)) #forward pass z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs = forward(inputs_one_hot, h, c, params) #backward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 loss, _ = backward(z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs, targets_one_hot, params) epoch_validation_loss += loss #train\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 h = np.zeros((hidden_size, 1)) c = np.zeros((hidden_size, 1)) #forward pass z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs = forward(inputs_one_hot, h, c, params) #backward pass \u4eca\u306ftraining\u306a\u306e\u3067Loss\u3068\u52fe\u914d\u3092\u8a08\u7b97 loss, grads = backward(z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs, targets_one_hot, params) #LSTM\u306e\u66f4\u65b0 params = update_paramaters(params, grads, lr=1e-1) epoch_training_loss += loss writer.add_scalars(\"LSTM Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ![](http://namazu.tokyo/wp-content/uploads/2021/03/38636fedc882953549a18b2520823905-300x202.png) Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 RNN\u3068\u6bd4\u8f03\u3059\u308b\u3068\u3001\u5b66\u7fd2\u304c\u9032\u3080\u306b\u3064\u308c\u3066Loss\u304c\u3057\u3063\u304b\u308a\u3068\u4e0b\u304c\u3063\u3066\u3044\u308b\u306e\u3067\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 ## PyTorch\u3092\u7528\u3044\u305fLSTM\u306e\u5b9f\u88c5 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066LSTM\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002 ### LSTM\u306e\u5b9a\u7fa9 \u307e\u305a\u3001LSTM\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: import torch import torch.nn as nn import torch.nn.functional as F class MyLSTM(nn.Module): def __init__(self): super(MyLSTM, self).__init__() self.lstm = nn.LSTM(input_size=vocab_size, hidden_size=50, num_layers=1, bidirectional=False) self.l_out = nn.Linear(in_features=50, out_features=vocab_size, bias=False) def forward(self, x): x, (h, c) = self.lstm(x) x = x.view(-1, self.lstm.hidden_size) x = self.l_out(x) return x \u5b66\u7fd2 \u5b66\u7fd2\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\u3092\u66f8\u304d\u307e\u3059\u3002 \u30ed\u30b9\u95a2\u6570\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u3001optimizer\u306fSGD\u3092\u7528\u3044\u307e\u3057\u305f\u3002 numpy\u3092\u7528\u3044\u305f\u3068\u304d\u3068\u540c\u69d8\u3067\u3059\u3002 PyTorch\u3067\u306f\u3001\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u7528\u3044\u308b\u3068\u304d\u3001target\u306fone-hot vector\u306b\u3059\u308b\u306e\u3067\u306f\u306a\u304f1\u3067\u3042\u308b\u7b87\u6240(\u6b63\u89e3\u306e\u7b87\u6240)\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6e21\u3059\u3060\u3051\u3067\u3088\u3044\u3067\u3059\u3002 Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: num_epochs = 200#\u30a8\u30dd\u30c3\u30af\u6570 net = MyLSTM()#LSTM\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210 net = net.double()#\u578b\u3092float\u304b\u3089double\u306b\u5909\u63db criterion = nn.CrossEntropyLoss()#\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u4f7f\u7528 optimizer = torch.optim.SGD(net.parameters(), lr=1e-1)#optimizer\u3092\u8a2d\u5b9a writer = SummaryWriter(log_dir=\"./logs/lstm_pytorch\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 net.eval()#\u30c6\u30b9\u30c8\u30e2\u30fc\u30c9 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_idx = [word_to_idx[word] for word in targets] inputs_one_hot = torch.from_numpy(inputs_one_hot) inputs_one_hot = inputs_one_hot.permute(0, 2, 1) targets_idx = torch.LongTensor(targets_idx) #forward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 outputs = net(inputs_one_hot) loss = criterion(outputs, targets_idx) epoch_validation_loss += loss.item() net.train()#\u8a13\u7df4\u30e2\u30fc\u30c9 #train\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: optimizer.zero_grad()#\u52fe\u914d\u306e\u521d\u671f\u5316 #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_idx = [word_to_idx[word] for word in targets] inputs_one_hot = torch.from_numpy(inputs_one_hot) inputs_one_hot = inputs_one_hot.permute(0, 2, 1) targets_idx = torch.LongTensor(targets_idx) #forward pass outputs = net(inputs_one_hot) #loss\u306e\u8a08\u7b97 loss = criterion(outputs, targets_idx) #backward pass \u4eca\u306ftraining\u306a\u306e\u3067\u52fe\u914d\u3092\u8a08\u7b97 loss.backward() #LSTM\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0 optimizer.step() epoch_training_loss += loss.item() writer.add_scalars(\"LSTM PyTorch Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ``` Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u5148\u307b\u3069\u306enumpy\u3067\u5b9f\u88c5\u3057\u305fLSTM\u3088\u308a\u3001\u30ed\u30b9\u304c\u3057\u3063\u304b\u308a\u3068\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u306d\u3002 \u307e\u3068\u3081 \u4eca\u56de\u306fRNN\u3068LSTM\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001numpy\u306e\u5b9f\u88c5\u3092\u3057\u3066\u8efd\u3044\u5b9f\u9a13\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001PyTorch\u3092\u7528\u3044\u3066LSTM\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3057\u305f\u3002 \u53c2\u8003\u6587\u732e https://masamunetogetoge.com/gradient-vanish https://qiita.com/naoaki0802/items/7a11cded96f3a6165d01 http://kento1109.hatenablog.com/entry/2019/07/06/182247 https://qiita.com/KojiOhki/items/89cd7b69a8a6239d67ca https://qiita.com/t_Signull/items/21b82be280b46f467d1b https://qiita.com/tanuk1647/items/276d2be36f5abb8ea52e","title":"\u3010\u3082\u3046\u3084\u308a\u305f\u304f\u306a\u3044\u3011RNN\u3068LSTM\u306e\u7406\u89e3\u3068NumPy\u306b\u3088\u308b\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#rnnlstmnumpy","text":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u7528\u3044\u305f\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u306b\u306f\u3001\u5358\u8a9e\u4e88\u6e2c\u3084\u5929\u6c17\u4e88\u6e2c\u306a\u3069\u69d8\u3005\u306a\u5fdc\u7528\u5148\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u6d41\u308c\u3067\u89e3\u8aac\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 - \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u5909\u6570\u306e\u8868\u73fe\u306e\u4ed5\u65b9 - RNN\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9 - LSTM\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9 - PyTorch\u3092\u4f7f\u3063\u305fLSTM\u306e\u5b9f\u88c5\u306e\u4ed5\u65b9","title":"\u3010\u3082\u3046\u3084\u308a\u305f\u304f\u306a\u3044\u3011RNN\u3068LSTM\u306e\u7406\u89e3\u3068NumPy\u306b\u3088\u308b\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_1","text":"\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u529b\u3059\u308b\u306b\u306f\u3001\u4f55\u304b\u3057\u3089\u306e\u65b9\u6cd5\u3067\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u529b\u3067\u304d\u308b\u5f62\u306b\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001one-hot encoding\u3092\u4f7f\u7528\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002","title":"\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u8868\u73fe\u306e\u4ed5\u65b9"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#one-hot-encoding","text":"\u5358\u8a9e\u3092one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5358\u8a9e\u306e\u91cf\u304c\u81a8\u5927\u306b\u306a\u308b\u3068one-hot vector\u306e\u5927\u304d\u3055\u3082\u81a8\u5927\u306b\u306a\u308b\u306e\u3067\u3001\u5de5\u592b\u3092\u884c\u3044\u307e\u3059\u3002 \u4f7f\u7528\u983b\u5ea6\u306e\u9ad8\u3044k\u500b\u306e\u5358\u8a9e\u3092\u6b8b\u3057\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306fUNK\u3068\u3057\u3066\u3001one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002","title":"\u5358\u8a9e\u306b\u5bfe\u3059\u308bone-hot encoding"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_2","text":"a b a EOS, a a b b a a EOS, a a a a a b b b b b a a a a a EOS \u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002 EOS\u306f\u3001end of a sequence\u306e\u7565\u3067\u3059\u3002 ```Python: import numpy as np np.random.seed(42)#\u4e71\u6570\u3092\u56fa\u5b9a\u3059\u308b def generate_dataset(num_sequences=2**8): \"\"\" \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u751f\u6210\u3059\u308b\u95a2\u6570 num_sequences \u5468\u671f return \u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8 \"\"\" samples = [] for _ in range(num_sequences): num_tokens = np.random.randint(1, 6)#1\u304b\u30896\u307e\u3067\u306e\u6570\u30921\u3064\u751f\u6210 sample = ['a'] * num_tokens + ['b'] * num_tokens + ['a'] * num_tokens + ['EOS'] samples.append(sample) return samples sequences = generate_dataset() ## \u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u8abf\u3079\u308b one-hot encoding\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u307e\u3059\u3002 defaultdict\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u8f9e\u66f8\u306evalue\u306e\u5024\u3092\u4efb\u610f\u306b\u521d\u671f\u5316\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002 ```Python: from collections import defaultdict def sequences_to_dicts(sequences): \"\"\" \u5358\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u683c\u7d0d\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308b \"\"\" flatten = lambda l: [item for sublist in l for item in sublist]#list\u3092\u5168\u90e8\u3064\u306a\u3052\u308b all_words = flatten(sequences) word_count = defaultdict(int)#\u8f9e\u66f8\u306e\u521d\u671f\u5316 for word in flatten(sequences): #\u983b\u5ea6\u3092\u6570\u3048\u308b word_count[word] += 1 word_count = sorted(list(word_count.items()), key=lambda l: -l[1])#word_count\u306ekey\u3068value\u3092value\u306b\u57fa\u3065\u3044\u3066\u964d\u9806\u306b\u30bd\u30fc\u30c8 unique_words = [item[0] for item in word_count]#\u5358\u8a9e\u3092\u3068\u308b unique_words.append('UNK')#UNK\u3092\u8ffd\u52a0 num_sequences, vocab_size = len(sequences), len(unique_words) word_to_idx = defaultdict(lambda: vocab_size-1)#\u521d\u671f\u5024\u306e\u8a2d\u5b9a idx_to_word = defaultdict(lambda: 'UNK') for idx, word in enumerate(unique_words): #enumerate\u3067index\u3068\u8981\u7d20\u3092\u53d6\u5f97 #\u8f9e\u66f8\u306b\u5165\u308c\u308b word_to_idx[word] = idx idx_to_word[idx] = word return word_to_idx, idx_to_word, num_sequences, vocab_size word_to_idx, idx_to_word, num_sequences, vocab_size = sequences_to_dicts(sequences)","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u751f\u6210"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_3","text":"\u7cfb\u5217\u30c7\u30fc\u30bf\u3092training, validation, test\u306b\u5206\u5272\u3057\u307e\u3059\u3002 \u305d\u308c\u305e\u308c\u300180%, 10%, 10%\u3067\u3059\u3002 \u7cfb\u5217\u30c7\u30fc\u30bfsequences\u306e\u5206\u5272\u306b\u306f\u3001\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002 \u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3046\u3068\u3001 l[start:goal] \u3067l[start]\u304b\u3089l[goal-1]\u306e\u5024\u3092\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002start\u3068goal\u306f\u534a\u958b\u533a\u9593\u306b\u306a\u3063\u3066\u304a\u308a\u3001l[goal]\u306f\u542b\u307e\u308c\u307e\u305b\u3093\u3002 start\u3068goal\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 l[:goal] \u306fl[0]\u304b\u3089l[goal-1]\u307e\u3067\u3001 l[start:] \u306fl[start]\u304b\u3089l[l.size()-1] (\u6700\u5f8c)\u307e\u3067\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002 l[:] \u306f\u5168\u90e8\u62bd\u51fa\u3057\u307e\u3059\u3002 l[-n:] \u306f\u6700\u5f8c\u304b\u3089\u6570\u3048\u3066n\u500b\u306e\u8981\u7d20\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002 l[:-n] \u306fl[0]\u304b\u3089\u62bd\u51fa\u3057\u307e\u3059\u304c\u3001\u6700\u5f8c\u306en\u500b\u306f\u62bd\u51fa\u3057\u307e\u305b\u3093\u3002 PyTorch\u3092\u7528\u3044\u3066\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: from torch.utils import data class Dataset(data.Dataset): def init (self, inputs, targets): self.intputs = inputs self.targets = targets def __len__(self): return len(self.targets) def __getitem__(self, index): X = self.inputs[index] y = self.targets[index] return X, y def create_datasets(sequences, dataset_class, p_train=0.8, p_val=0.1, p_test=0.1): #\u5206\u5272\u3059\u308b\u30b5\u30a4\u30ba\u3092\u5b9a\u7fa9 num_train = int(len(sequences) p_train) num_val = int(len(sequences) p_val) num_test = int(len(sequences)*p_test) #\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u5206\u5272 #\u30b9\u30e9\u30a4\u30b9\u3092\u5229\u7528 sequences_train = sequences[:num_train] sequences_val = sequences[num_train:num_train+num_val] sequences_test = sequences[-num_test:] def get_inputs_targets_from_sequences(sequences): inputs, targets = [], [] #\u9577\u3055L\u306esequence\u304b\u3089EOS\u3092\u9664\u3044\u305fL-1 # targets\u306finputs\u306eground truth\u306e\u305f\u3081\u53f3\u306b1\u3064\u305a\u3089\u3059 for sequence in sequences: inputs.append(sequence[:-1]) targets.append(sequence[1:]) return inputs, targets #input\u3068target\u3092\u4f5c\u308b inputs_train, targets_train = get_inputs_targets_from_sequences(sequences_train) inputs_val, targets_val = get_inputs_targets_from_sequences(sequences_val) inputs_test, targets_test = get_inputs_targets_from_sequences(sequences_test) #\u5148\u307b\u3069\u5b9a\u7fa9\u3057\u305fclass\u3092\u7528\u3044\u3066dataset\u3092\u4f5c\u308b training_set = dataset_class(inputs_train, targets_train) validation_set = dataset_class(inputs_val, targets_val) test_set = dataset_class(inputs_test, targets_test) return training_set, validation_set, test_set training_set, validation_set, test_set = create_datasets(sequences, Dataset) ## one-hot vector\u5316 \u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u73fe\u308c\u308b\u5358\u8a9e\u3092\u983b\u5ea6\u306b\u57fa\u3065\u3044\u3066one-hot vector\u306b\u5909\u63db\u3057\u307e\u3059\u3002 ```Python: def one_hot_encode(idx, vocab_size): \"\"\" one-hot vector\u5316\u3059\u308b\u3002 \"\"\" one_hot = np.zeros(vocab_size)#vocab_size = 4\u306a\u3089[0, 0, 0, 0] one_hot[idx] = 1.0#idx = 1\u306a\u3089[0, 1, 0, 0] return one_hot def one_hot_encode_sequence(sequence, vocab_size): \"\"\" return 3-D numpy array (num_words, vocab_size, 1) \"\"\" encoding = np.array([one_hot_encode(word_to_idx[word], vocab_size) for word in sequence]) #reshape encoding = encoding.reshape(encoding.shape[0], encoding.shape[1], 1) return encoding","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5206\u5272"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#rnn","text":"Recurrent neural network (RNN)\u306f\u3001\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5206\u6790\u304c\u5f97\u610f\u3067\u3059\u3002RNN\u306f\u3001\u524d\u306e\u72b6\u614b\u3067\u4f7f\u3063\u305f\u8a08\u7b97\u7d50\u679c\u3092\u73fe\u5728\u306e\u72b6\u614b\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6982\u8981\u56f3\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 x\u306f\u5165\u529b\u3067\u3042\u308b\u7cfb\u5217\u30c7\u30fc\u30bf U\u306f\u5165\u529b\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 V\u306f\u30e1\u30e2\u30ea\u30fc\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 W\u306f\u51fa\u529b\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u96a0\u308c\u72b6\u614b\u306b\u5bfe\u3059\u308b\u91cd\u307f\u884c\u5217 h\u306f\u6642\u9593\u3054\u3068\u306e\u96a0\u308c\u72b6\u614b(\u30e1\u30e2\u30ea\u30fc) o\u306f\u51fa\u529b","title":"RNN\u306e\u5c0e\u5165"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#rnn_1","text":"NumPy\u3092\u4f7f\u3063\u3066\u3001RNN\u306e\u5b9f\u88c5\u3092forward pass, backward pass, optimization, training loop\u306e\u9806\u3067\u3084\u308a\u307e\u3059\u3002","title":"RNN\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#rnn_2","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u521d\u671f\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: hidden_size = 50#\u96a0\u308c\u5c64(\u30e1\u30e2\u30ea\u30fc)\u306e\u6b21\u5143 vocab_size = len(word_to_idx) def init_orthogonal(param): \"\"\" \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u76f4\u4ea4\u5316\u3057\u3066\u521d\u671f\u5316 \"\"\" if param.ndim < 2: raise ValueError(\"Only parameters with 2 or more dimensions are supported.\") rows, cols = param.shape new_param = np.random.randn(rows, cols) if rows < cols: new_param = new_param.T q, r = np.linalg.qr(new_param) d = np.diag(r, 0) ph = np.sign(d) q *= ph if rows < cols: q = q.T new_param = q return new_param def init_rnn(hidden_size, vocab_size): \"\"\" RNN\u3092\u521d\u671f\u5316 \"\"\" U = np.zeros((hidden_size, vocab_size)) V = np.zeros((hidden_size, hidden_size)) W = np.zeros((vocab_size, hidden_size)) b_hidden = np.zeros((hidden_size, 1)) b_out = np.zeros((vocab_size, 1)) U = init_orthogonal(U) V = init_orthogonal(V) W = init_orthogonal(W) return U, V, W, b_hidden, b_out ```","title":"RNN\u306e\u521d\u671f\u5316"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_4","text":"sigmoid,tanh, softmax\u306e\u5b9f\u88c5\u3092\u3057\u307e\u3057\u305f\u3002 \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u5bfe\u7b56\u306b\u5165\u529bx\u306b\u5fae\u5c11\u91cf\u3092\u8db3\u3057\u3066\u3044\u307e\u3059\u3002 \u307e\u305f\u3001backward pass\u7528\u306b\u5fae\u5206\u3082\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002 Python: def sigmoid(x, derivative=False): x_safe = x + 1e-12#\u5fae\u5c11\u91cf\u3092\u8db3\u3059 f = 1/(1 + np.exp(-x_safe)) if derivative: return f * (1 -f)#\u5fae\u5206\u3092\u8fd4\u3059 else: return f def tanh(x, derivative=False): x_safe = x + 1e-12 f = (np.exp(x_safe) - np.exp(-x_safe))/(np.exp(x_safe)+np.exp(-x_safe)) if derivative: return 1-f**2 else: return f def softmax(x, derivative=False): x_safe = x + 1e-12 f = np.exp(x_safe)/np.sum(np.exp(x_safe)) if derivative: pass else: return f","title":"\u6d3b\u6027\u5316\u95a2\u6570\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#forward-pass","text":"h = tanh(Ux + Vh + b_hidden) o = softmax(Wh + b_out) RNN\u306eforward pass\u306f\u4e0a\u5f0f\u3067\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 ```Python: def forward_pass(inputs, hidden_state, params): U, V, W, b_hidden, b_out = params outputs, hidden_states = [], [] for t in range(len(inputs)): hidden_state = tanh(np.dot(U, inputs[t]) + np.dot(V, hidden_state) + b_hidden) out = softmax(np.dot(W, hidden_state) + b_out) outputs.append(out) hidden_states.append(hidden_state.copy()) return outputs, hidden_states ```","title":"forward pass\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#backward-pass","text":"forward pass\u3067\u640d\u5931\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5(backpropagation)\u3092\u7528\u3044\u3066\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308bbackward pass\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 \u52fe\u914d\u7206\u767a\u5bfe\u7b56\u7528\u306e\u52fe\u914d\u3092\u30af\u30ea\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002 \u52fe\u914d\u306e\u5927\u304d\u3055\u304c\u4e0a\u9650\u5024\u3092\u8d85\u3048\u305f\u3089\u3001\u4e0a\u9650\u5024\u3067\u6b63\u898f\u5316\u3057\u307e\u3059\u3002 Python: def clip_gradient_norm(grads, max_norm=0.25): \"\"\" \u52fe\u914d\u7206\u767a\u5bfe\u7b56\u3067 \u52fe\u914d\u3092 g = (max_nrom/|g|)*g\u306b\u5909\u63db\u3059\u308b \"\"\" max_norm = float(max_norm) total_norm = 0 for grad in grads: grad_norm = np.sum(np.power(grad, 2)) total_norm += grad_norm total_norm = np.sqrt(total_norm) clip_coef = max_norm / (total_norm + 1e-6) if clip_coef < 1: for grad in grads: grad *= clip_coef return grads backward_pass\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\u640d\u5931\u3092\u6c42\u3081\u3066\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5\u3067\u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fae\u5206\u3057\u305f\u640d\u5931\u306e\u52fe\u914d\u3092\u6c42\u3081\u307e\u3059\u3002 ```Python: def backward_pass(inputs, outputs, hidden_states, targets, params): U, V, W, b_hidden, b_out = params d_U, d_V, d_W = np.zeros_like(U), np.zeros_like(V), np.zeros_like(W) d_b_hidden, d_b_out = np.zeros_like(b_hidden), np.zeros_like(b_out) d_h_next = np.zeros_like(hidden_states[0]) loss = 0 for t in reversed(range(len(outputs))): #cross entropy loss\u3092\u8a08\u7b97 loss += -np.mean(np.log(outputs[t]+1e-12)*targets[t]) #backpropagate into output d_o = outputs[t].copy() d_o[np.argmax(targets[t])] -= -1 #backpropagate into W d_W += np.dot(d_o, hidden_states[t].T) d_b_out += d_o #backpropagate into h d_h = np.dot(W.T, d_o) + d_h_next #backpropagate through non-linearity d_f = tanh(hidden_states[t], derivative=True) * d_h d_b_hidden += d_f #backpropagate into U d_U += np.dot(d_f, inputs[t].T) #backpropagate into V d_V += np.dot(d_f, hidden_states[t-1].T) d_h_next = np.dot(V.T, d_f) grads = d_U, d_V, d_W, d_b_hidden, d_b_out grads = clip_gradient_norm(grads) return loss, grads ### optimization \u52fe\u914d\u964d\u4e0b\u6cd5\u3092\u7528\u3044\u3066\u3001RNN\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5(SGD)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 ```Python: def update_paramaters(params, grads, lr=1e-3): for param, gras in zip(params, grads): #zip\u3067\u8907\u6570\u306e\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u53d6\u5f97 param -= lr * grad return params","title":"backward pass\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_5","text":"\u5b9f\u88c5\u3057\u305fRNN\u306e\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: from torch.utils.tensorboard import SummaryWriter writer = SummaryWriter(log_dir=\"./logs\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a num_epochs = 1000","title":"\u5b66\u7fd2"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_6","text":"params = init_rnn(hidden_size=hidden_size, vocab_size=vocab_size) hidden_state = np.zeros((hidden_size, 1)) for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 hidde_state = np.zeros_like(hidden_state) #forward pass outputs, hidden_states = forward_pass(inputs_one_hot, hidden_state, params) #backward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 loss, _ = backward_pass(inputs_one_hot, outputs, hidden_states, targets_one_hot, params) epoch_validation_loss += loss #training\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 hidde_state = np.zeros_like(hidden_state) #forward pass outputs, hidden_states = forward_pass(inputs_one_hot, hidden_state, params) #backward pass training\u306a\u306e\u3067\u52fe\u914d\u3082\u8a08\u7b97 loss, grads = backward_pass(inputs_one_hot, outputs, hidden_states, targets_one_hot, params) if np.isnan(loss): raise ValueError('Gradients have vanished') #network\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0 params = update_paramaters(params, grads) epoch_training_loss += loss writer.add_scalars(\"Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ![](http://namazu.tokyo/wp-content/uploads/2021/03/dd8661aaa3a8f79f8c27c79cff2db71f-300x200.png) Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u3042\u307e\u308a\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u96a0\u308c\u5c64\u306e\u6b21\u5143\u304c\u5c11\u306a\u3044\u3053\u3068\u3084\u30eb\u30fc\u30d7\u304c\u5c11\u306a\u3044\u3053\u3068\u3084\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5024\u304c\u5408\u3063\u3066\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u3087\u3046\u304b? ### \u30c6\u30b9\u30c8 \u5b66\u7fd2\u3057\u305fRNN\u306e\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\u9069\u5f53\u306b\u6587\u7ae0\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066\u6b21\u306eword\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002 Python\u3067\u306f\u3001`list[-1]`\u3067\u4e00\u756a\u5f8c\u308d\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002 ```Python: def freestyle(params, sentence='', num_generate=10): sentence = sentence.split(' ')#\u7a7a\u767d\u3067\u533a\u5207\u308b sentence_one_hot = one_hot_encode_sequence(sentence, vocab_size) hidden_state = np.zeros((hidden_size, 1)) outputs, hidden_states = forward_pass(sentence_one_hot, hidde_state, params) output_sentence = sentence word = idx_to_word[np.argmax(outputs[-1])] output_sentence.append(word) for i in range(num_generate): output = outputs[-1]#\u4e00\u756a\u5f8c\u308d\u306e\u5024\u3092\u53d6\u5f97 hidden_state = hidden_states[-1] output = output.reshape(1, output.shape[0], output.shape[1]) outputs, hidden_states = forward_pass(output, hidde_state, params) word = idx_to_word[np.argmax(outputs)] output_sentence.append(word) if word == \"EOS\": break return output_sentence test_examples = ['a a b', 'a a a a b', 'a a a a a a b', 'a', 'r n n'] for i, test_example in enumerate(test_examples): print(f'Example {i}:', test_example) print('Predicted sequence:', freestyle(params, sentence=test_example), end='\\n\\n') \u4e0a\u624b\u304f\u5b66\u7fd2\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3082\u4e0a\u624b\u304f\u3044\u3063\u3066\u306a\u3044\u3053\u3068\u304c\u7d50\u679c\u304b\u3089\u308f\u304b\u308a\u307e\u3059\u3002 \u5168\u3066Unknown\u3068\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002 ```Shell:\u30c6\u30b9\u30c8\u7d50\u679c Example 0: a a b Predicted sequence: ['a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 1: a a a a b Predicted sequence: ['a', 'a', 'a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 2: a a a a a a b Predicted sequence: ['a', 'a', 'a', 'a', 'a', 'a', 'b', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 3: a Predicted sequence: ['a', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] Example 4: r n n Predicted sequence: ['r', 'n', 'n', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK', 'UNK'] ## LSTM\u306e\u5c0e\u5165 RNN\u306f\u3001\u30ae\u30e3\u30c3\u30d7\u304c\u5927\u304d\u304f\u306a\u308b\u306b\u3064\u308c\u3066\u60c5\u5831\u3092\u95a2\u9023\u3065\u3051\u3066\u5b66\u7fd2\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u9577\u671f\u4f9d\u5b58\u6027\u3092\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u306e\u304c\u3001Long Short Term Memory(LSTM)\u3067\u3059\u3002LSTM\u306f\u3001RNN\u306e\u6d3e\u751f\u3067\u540c\u3058\u3088\u3046\u306b\u7e70\u308a\u8fd4\u3057\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/93056c52056f15d863e0d4fb0cc89948-300x113.png) ### LSTM\u306e\u4ed5\u7d44\u307f LSTM\u306f\u3001\u5fd8\u5374\u30b2\u30fc\u30c8\u5c64\u3001\u5165\u529b\u30b2\u30fc\u30c8\u5c64\u3001\u51fa\u529b\u30b2\u30fc\u30c8\u5c64\u306e3\u3064\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002 LSTM\u306f\u30bb\u30eb\u3068\u547c\u3070\u308c\u308b\u30e1\u30e2\u30ea\u30fc\u304c\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002C\u304c\u30bb\u30eb\u3001x\u304c\u5165\u529b\u3001h\u304c\u51fa\u529b\u3001W\u304c\u91cd\u307f\u3001b\u304c\u30d0\u30a4\u30a2\u30b9\u3067\u3059\u3002 \u307e\u305a\u3001\u5fd8\u5374\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u30bb\u30eb\u72b6\u614b\u304b\u3089\u6368\u3066\u308b\u60c5\u5831\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\u73fe\u5728\u306e\u5165\u529b\u3068\u30011\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b\u3092\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306b\u3044\u308c\u307e\u3059\u30020\u304b\u30891\u306e\u9593\u306e\u6570\u5024\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u30020\u304c\u5b8c\u5168\u306b\u6368\u3066\u308b\u3092\u8868\u3057\u30011\u304c\u5b8c\u5168\u306b\u7dad\u6301\u3092\u8868\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/7188d6629f92af532044727371464615-300x93.png) \u6b21\u306b\u3001\u5165\u529b\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u5165\u529b\u306b\u5bfe\u3057\u3066\u3069\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002tanh\u5c64\u3067\u30bb\u30eb\u72b6\u614b\u306b\u52a0\u3048\u3089\u308c\u308b\u65b0\u305f\u306a\u5019\u88dc\u5024\u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/eaed8d1ee52ddcefbf9ef8b3aadb5fc8-300x93.png) \u30bb\u30eb\u3092\u66f4\u65b0\u3057\u307e\u3059\u30021\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u5fd8\u5374\u6e08\u307f\u306e\u30bb\u30eb\u3068\u66f4\u65b0\u3059\u308b\u5024\u3092\u8db3\u3057\u5408\u308f\u305b\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/196a34321e796c678b1fc2d400977997-300x93.png) \u6700\u5f8c\u306b\u3001\u51fa\u529b\u30b2\u30fc\u30c8\u5c64\u3067\u3001\u30bb\u30eb\u72b6\u614b\u306b\u57fa\u3065\u3044\u3066\u51fa\u529b\u3059\u308b\u3082\u306e\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002 ![](http://namazu.tokyo/wp-content/uploads/2021/03/dea185317c8a1cbc486670eb6aae4ef5-300x93.png) ## LSTM\u306e\u5b9f\u88c5 NumPy\u3092\u4f7f\u3063\u3066\u3001LSTM\u306e\u5b9f\u88c5\u3092forward pass, backward pass, optimization, training loop\u306e\u9806\u3067\u3084\u308a\u307e\u3059\u3002 ### LSTM\u306e\u521d\u671f\u5316 \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u521d\u671f\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: z_size = hidden_size + vocab_size def init_lstm(hidden_size, vocab_size, z_size): \"\"\" LSTM\u306e\u521d\u671f\u5316 \"\"\" W_f = np.random.randn(hidden_size, z_size) b_f = np.zeros((hidden_size, 1)) W_i = np.random.randn(hidden_size, z_size) b_i = np.zeros((hidden_size, 1)) W_g = np.random.randn(hidden_size, z_size) b_g = np.zeros((hidden_size, 1)) W_o = np.random.randn(hidden_size, z_size) b_o = np.zeros((hidden_size, 1)) W_v = np.random.randn(vocab_size, hidden_size) b_v = np.zeros((vocab_size, 1)) W_f = init_orthogonal(W_f) W_i = init_orthogonal(W_i) W_g = init_orthogonal(W_g) W_o = init_orthogonal(W_o) W_v = init_orthogonal(W_v) return W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u521d\u671f\u5316"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#forward-pass_1","text":"LSTM\u306e\u4ed5\u7d44\u307f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u901a\u308a\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002 ```Python: def forward(inputs, h_prev, C_prev, p): \"\"\" inputs:\u73fe\u5728\u306e\u5165\u529b h_prev:1\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b C_prev:1\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u30bb\u30eb p:LSTM\u306e\u30d1\u30e9\u30e1\u30fc\u30bf return \u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u72b6\u614b\u3068\u51fa\u529b \"\"\" assert h_prev.shape == (hidden_size, 1) assert C_prev.shape == (hidden_size, 1) W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v = p x_s, z_s, f_s, i_s = [], [], [], [] g_s, C_s, o_s, h_s = [], [], [], [] v_s, output_s = [], [] h_s.append(h_prev) C_s.append(C_prev) for x in inputs: #\u5165\u529b\u30681\u30b9\u30c6\u30c3\u30d7\u524d\u306e\u51fa\u529b\u3092\u7d50\u5408 z = np.row_stack((h_prev, x)) z_s.append(z) #\u5fd8\u5374\u30b2\u30fc\u30c8 f = sigmoid(np.dot(W_f, z) + b_f) f_s.append(f) #\u5165\u529b\u30b2\u30fc\u30c8 i = sigmoid(np.dot(W_i, z) + b_i) i_s.append(i) #\u73fe\u5728\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u30bb\u30eb\u306b\u52a0\u3048\u308b\u5019\u88dc g = tanh(np.dot(W_g, z) + b_g) g_s.append(g) #\u30bb\u30eb\u306e\u66f4\u65b0 C_prev = f * C_prev + i * g C_s.append(C_prev) #\u51fa\u529b\u30b2\u30fc\u30c8 o = sigmoid(np.dot(W_o, z) + b_o) o_s.append(o) #\u51fa\u529b\u3059\u308b h_prev = o * tanh(C_prev) h_s.append(h_prev) v = np.dot(W_v, h_prev) + b_v v_s.append(v) output = softmax(v) output_s.append(output) return z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, output_s ```","title":"forward pass\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#backward-pass_1","text":"\u640d\u5931\u3092\u6c42\u3081\u3066\u3001\u9006\u8aa4\u5dee\u4f1d\u64ad\u6cd5\u3067\u305d\u308c\u305e\u308c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fae\u5206\u3057\u305f\u640d\u5931\u306e\u52fe\u914d\u3092\u6c42\u3081\u307e\u3059\u3002 Python: def backward(z, f, i, g, C, o, h, v, outputs, targets, p = params): W_f, W_i, W_g, W_o, W_v, b_f, b_i, b_g, b_o, b_v = p #\u52fe\u914d\u3092\u521d\u671f\u5316 W_f_d = np.zeros_like(W_f) b_f_d = np.zeros_like(b_f) W_i_d = np.zeros_like(W_i) b_i_d = np.zeros_like(b_i) W_g_d = np.zeros_like(W_g) b_g_d = np.zeros_like(b_g) W_o_d = np.zeros_like(W_o) b_o_d = np.zeros_like(b_o) W_v_d = np.zeros_like(W_v) b_v_d = np.zeros_like(b_v) #\u6b21\u306e\u30bb\u30eb\u3068\u96a0\u308c\u72b6\u614b\u3092\u521d\u671f\u5316 dh_next = np.zeros_like(h[0]) dC_next = np.zeros_like(C[0]) loss = 0 for t in reversed(range(len(outputs))): #\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30ed\u30b9\u3092\u8a08\u7b97 loss += -np.mean(np.log(outputs[t]) * targets[t]) #\u524d\u306e\u30bb\u30eb\u3092\u66f4\u65b0 C_prev = C[t-1] dv = np.copy(outputs[t]) dv[np.argmax(targets[t])] -= 1 W_v_d += np.dot(dv, h[t].T) b_v_d += dv dh = np.dot(W_v.T, dv) dh += dh_next do = dh * tanh(C[t]) do = sigmoid(o[t], derivative=True)*do W_o_d += np.dot(do, z[t].T) b_o_d += do dC = np.copy(dC_next) dC += dh * o[t] * tanh(tanh(C[t]), derivative=True) dg = dC * i[t] dg = tanh(g[t], derivative=True) * dg W_g_d += np.dot(dg, z[t].T) b_g_d += dg di = dC * g[t] di = sigmoid(i[t], True) * di W_i_d += np.dot(di, z[t].T) b_i_d += di df = dC * C_prev df = sigmoid(f[t]) * df W_f_d += np.dot(df, z[t].T) b_f_d += df dz = (np.dot(W_f.T, df) + np.dot(W_i.T, di) + np.dot(W_g.T, dg) + np.dot(W_o.T, do)) dh_prev = dz[:hidden_size, :] dC_prev = f[t] * dC grads = W_f_d, W_i_d, W_g_d, W_o_d, W_v_d, b_f_d, b_i_d, b_g_d, b_o_d, b_v_d grads = clip_gradient_norm(grads) return loss, grads","title":"backward pass\u306e\u5b9f\u88c5"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_7","text":"\u5b9f\u88c5\u3057\u305fLSTM\u306e\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3059\u3002Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: writer = SummaryWriter(log_dir=\"./logs/lstm\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a num_epochs = 200#\u30a8\u30dd\u30c3\u30af\u6570","title":"\u5b66\u7fd2"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#lstm","text":"z_size = hidden_size + vocab_size params = init_lstm(hidden_size, vocab_size, z_size)","title":"LSTM\u306e\u521d\u671f\u5316"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_8","text":"hidden_state = np.zeros((hidden_size, 1)) for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 h = np.zeros((hidden_size, 1)) c = np.zeros((hidden_size, 1)) #forward pass z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs = forward(inputs_one_hot, h, c, params) #backward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 loss, _ = backward(z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs, targets_one_hot, params) epoch_validation_loss += loss #train\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_one_hot = one_hot_encode_sequence(targets, vocab_size) #\u521d\u671f\u5316 h = np.zeros((hidden_size, 1)) c = np.zeros((hidden_size, 1)) #forward pass z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs = forward(inputs_one_hot, h, c, params) #backward pass \u4eca\u306ftraining\u306a\u306e\u3067Loss\u3068\u52fe\u914d\u3092\u8a08\u7b97 loss, grads = backward(z_s, f_s, i_s, g_s, C_s, o_s, h_s, v_s, outputs, targets_one_hot, params) #LSTM\u306e\u66f4\u65b0 params = update_paramaters(params, grads, lr=1e-1) epoch_training_loss += loss writer.add_scalars(\"LSTM Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ![](http://namazu.tokyo/wp-content/uploads/2021/03/38636fedc882953549a18b2520823905-300x202.png) Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 RNN\u3068\u6bd4\u8f03\u3059\u308b\u3068\u3001\u5b66\u7fd2\u304c\u9032\u3080\u306b\u3064\u308c\u3066Loss\u304c\u3057\u3063\u304b\u308a\u3068\u4e0b\u304c\u3063\u3066\u3044\u308b\u306e\u3067\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 ## PyTorch\u3092\u7528\u3044\u305fLSTM\u306e\u5b9f\u88c5 \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066LSTM\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002 ### LSTM\u306e\u5b9a\u7fa9 \u307e\u305a\u3001LSTM\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 ```Python: import torch import torch.nn as nn import torch.nn.functional as F class MyLSTM(nn.Module): def __init__(self): super(MyLSTM, self).__init__() self.lstm = nn.LSTM(input_size=vocab_size, hidden_size=50, num_layers=1, bidirectional=False) self.l_out = nn.Linear(in_features=50, out_features=vocab_size, bias=False) def forward(self, x): x, (h, c) = self.lstm(x) x = x.view(-1, self.lstm.hidden_size) x = self.l_out(x) return x","title":"\u96a0\u308c\u5c64\u306e\u521d\u671f\u5316"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_9","text":"\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\u3092\u66f8\u304d\u307e\u3059\u3002 \u30ed\u30b9\u95a2\u6570\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u3001optimizer\u306fSGD\u3092\u7528\u3044\u307e\u3057\u305f\u3002 numpy\u3092\u7528\u3044\u305f\u3068\u304d\u3068\u540c\u69d8\u3067\u3059\u3002 PyTorch\u3067\u306f\u3001\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u7528\u3044\u308b\u3068\u304d\u3001target\u306fone-hot vector\u306b\u3059\u308b\u306e\u3067\u306f\u306a\u304f1\u3067\u3042\u308b\u7b87\u6240(\u6b63\u89e3\u306e\u7b87\u6240)\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6e21\u3059\u3060\u3051\u3067\u3088\u3044\u3067\u3059\u3002 Loss\u306e\u30b0\u30e9\u30d5\u306fTensorBoard\u3092\u4f7f\u7528\u3057\u3066\u63cf\u753b\u3057\u307e\u3057\u305f\u3002 ```Python: num_epochs = 200#\u30a8\u30dd\u30c3\u30af\u6570 net = MyLSTM()#LSTM\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210 net = net.double()#\u578b\u3092float\u304b\u3089double\u306b\u5909\u63db criterion = nn.CrossEntropyLoss()#\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u8aa4\u5dee\u3092\u4f7f\u7528 optimizer = torch.optim.SGD(net.parameters(), lr=1e-1)#optimizer\u3092\u8a2d\u5b9a writer = SummaryWriter(log_dir=\"./logs/lstm_pytorch\")#SummaryWriter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 \u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u6307\u5b9a for i in range(num_epochs): epoch_training_loss = 0 epoch_validation_loss = 0 net.eval()#\u30c6\u30b9\u30c8\u30e2\u30fc\u30c9 #validation\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in validation_set: #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_idx = [word_to_idx[word] for word in targets] inputs_one_hot = torch.from_numpy(inputs_one_hot) inputs_one_hot = inputs_one_hot.permute(0, 2, 1) targets_idx = torch.LongTensor(targets_idx) #forward pass \u4eca\u306fvalidation\u306a\u306e\u3067Loss\u306e\u307f\u3092\u8a08\u7b97 outputs = net(inputs_one_hot) loss = criterion(outputs, targets_idx) epoch_validation_loss += loss.item() net.train()#\u8a13\u7df4\u30e2\u30fc\u30c9 #train\u306e\u30eb\u30fc\u30d7 sentence\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u56de\u3059 for inputs, targets in training_set: optimizer.zero_grad()#\u52fe\u914d\u306e\u521d\u671f\u5316 #one-hot vector\u5316 inputs_one_hot = one_hot_encode_sequence(inputs, vocab_size) targets_idx = [word_to_idx[word] for word in targets] inputs_one_hot = torch.from_numpy(inputs_one_hot) inputs_one_hot = inputs_one_hot.permute(0, 2, 1) targets_idx = torch.LongTensor(targets_idx) #forward pass outputs = net(inputs_one_hot) #loss\u306e\u8a08\u7b97 loss = criterion(outputs, targets_idx) #backward pass \u4eca\u306ftraining\u306a\u306e\u3067\u52fe\u914d\u3092\u8a08\u7b97 loss.backward() #LSTM\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0 optimizer.step() epoch_training_loss += loss.item() writer.add_scalars(\"LSTM PyTorch Loss\", {\"val\":epoch_validation_loss/len(validation_set), \"train\":epoch_training_loss/len(training_set)}, i) writer.close() ``` Loss\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\u7dba\u9e97\u306b\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u8d64\u304ctrain, \u9752\u304cval\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u5148\u307b\u3069\u306enumpy\u3067\u5b9f\u88c5\u3057\u305fLSTM\u3088\u308a\u3001\u30ed\u30b9\u304c\u3057\u3063\u304b\u308a\u3068\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u3002\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u306d\u3002","title":"\u5b66\u7fd2"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_10","text":"\u4eca\u56de\u306fRNN\u3068LSTM\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001numpy\u306e\u5b9f\u88c5\u3092\u3057\u3066\u8efd\u3044\u5b9f\u9a13\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001PyTorch\u3092\u7528\u3044\u3066LSTM\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3057\u305f\u3002","title":"\u307e\u3068\u3081"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/lstm/#_11","text":"https://masamunetogetoge.com/gradient-vanish https://qiita.com/naoaki0802/items/7a11cded96f3a6165d01 http://kento1109.hatenablog.com/entry/2019/07/06/182247 https://qiita.com/KojiOhki/items/89cd7b69a8a6239d67ca https://qiita.com/t_Signull/items/21b82be280b46f467d1b https://qiita.com/tanuk1647/items/276d2be36f5abb8ea52e","title":"\u53c2\u8003\u6587\u732e"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/video_task/","text":"\u52d5\u753b\u3092\u4f7f\u3063\u305f\u6df1\u5c64\u5b66\u7fd2 \u30df\u30b7\u30ac\u30f3\u5927\u5b66\u306e\u516c\u958b\u8b1b\u7fa9\u306b\u3068\u3066\u3082\u826f\u3044\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u7ffb\u8a33and\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002 Lecture video \u30bf\u30b9\u30af \u52d5\u753b\u306f\u753b\u50cf\u3092\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3068\u3057\u305f (T x 3 x H x W) \u306e\u30c6\u30f3\u30b5\u30fc\u3067\u6271\u3046\u3002 (3 x T x H x W) \u306e\u6642\u3082\u3042\u308b\u3002 \u753b\u50cf\u7cfb\u306e\u30bf\u30b9\u30af\u306f\u4e3b\u306b Classification (whole image) Semantic Segmentation (Pixelwise Classification) Object Detection (Find bounding box) Instance Segmentation (Predict shape) \u304c\u3042\u308a\u3001\u52d5\u753b\u30c7\u30fc\u30bf\u306f\u3053\u308c\u3092\u9023\u7d9a\u7684\u306b\u884c\u3046\u3002 1. Video Classification \u52d5\u753b\u3092\u30af\u30e9\u30b9\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u3001\u753b\u50cf\u3068\u9055\u3044\u7269\u4f53\u304c\u4f55\u304b\u5f53\u3066\u308b\u4ee5\u5916\u306b\u3082\u4e00\u9023\u306e\u52d5\u304d\u304b\u3089\u4eba\u9593\u306e\u52d5\u4f5c\u3092\u5206\u985e\u3057\u305f\u308a\u3059\u308b\u3002 \u52d5\u753b\u306e\u5168\u822c\u7684\u306a\u554f\u984c\u3068\u3057\u3066 \u30c7\u30fc\u30bf\u304c\u5927\u304d\u3059\u304e\u308b \u3002\u7121\u5727\u7e2e\u3060\u30681\u30a8\u30f3\u30c8\u30ea\u30fc1 byte\u3068\u3057\u3066HD\u52d5\u753b\uff11\u5206\u306710GB\u304f\u3089\u3044\u3002\u306a\u306e\u3067FPS\u3068\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u305f\u52d5\u753b\u306e\u4e00\u90e8\u5206\u3060\u3051\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3002\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1\u306f\u52d5\u753b\u306e\u4e00\u90e8\u3092\u30aa\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u5e73\u5747\u7cbe\u5ea6\u3092\u53d6\u308b\u3053\u3068\u3067\u52d5\u753b\u5168\u4f53\u3078\u306e\u7cbe\u5ea6\u304c\u308f\u304b\u308b\u3002 1-1. Single Frame CNN \u5404\u30d5\u30ec\u30fc\u30e0\u3092\u5225\u3005\u306e\u753b\u50cf\u3068\u3057\u3066\u72ec\u7acb\u3057\u305fCNN\u3067\u5206\u985e\u3059\u308b\u624b\u6cd5\u3002\u9577\u3081\u306e\u52d5\u753b\u3092\u5b66\u7fd2\u3055\u305b\u3066\u6b63\u7b54\u7387\u3092\u30d5\u30ec\u30fc\u30e0\u6570\u3067\u5e73\u5747\u3057\u305f\u7cbe\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u3066\u3044\u304f\u3002\u753b\u50cf\u540c\u58eb\u306e\u95a2\u4fc2\u3092\u8003\u616e\u3057\u306a\u3044\u306e\u3067\u4e00\u898b\u3059\u308b\u3068\u30c0\u30e1\u306a\u30e2\u30c7\u30eb\u3063\u307d\u3044\u304c\u5b9f\u306f\u666e\u901a\u306b\u5b9f\u7528\u30ec\u30d9\u30eb\u3067\u6027\u80fd\u304c\u826f\u3044\u3089\u3057\u3044\u3002\u52d5\u753b\u5206\u985e\u3092\u3059\u308b\u6642\u306f\u3053\u308c\u3092\u30d9\u30fc\u30b9\u306b\u3084\u308b\u3068\u3044\u3044\u3002 img src=../imgs/3.png width=400> ### 1-2. Late Fusion \u4e0a\u306e\u30e2\u30c7\u30eb\u3092MLP\u306b\u63a5\u7d9a\u3057\u305f\u30e2\u30c7\u30eb\u3002\u30d5\u30ec\u30fc\u30e0\u6bce\u306e\u7279\u5fb4\u91cf\u3092\u4e00\u3064\u306b\u7d71\u5408\u3059\u308b\u306e\u3067\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u5b66\u7fd2\u3067\u304d\u3066\u30d5\u30ec\u30fc\u30e0\u540c\u58eb\u306e\u95a2\u4fc2\u3082\u5b66\u7fd2\u3067\u304d\u308b\u304cFC\u5c64\u3067\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3084\u3059\u3044\u3002\u5bfe\u7b56\u3068\u3057\u3066\u7279\u5fb4\u91cf\u306e\u7d71\u5408\u6642\u306b`T, H, W`\u3092Pooling\u3057\u3066`D`\u6b21\u5143\u30c7\u30fc\u30bf\u306b\u843d\u3068\u3057\u8fbc\u3080\u3002\u3053\u308c\u3089\u306e\u624b\u6cd5\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u307e\u305a\u8a66\u3057\u305f\u3044\u30e2\u30c7\u30eb\u3002 \u3057\u304b\u3057\u7279\u5fb4\u91cf\u3092\u7d71\u5408\u3059\u308b\u306e\u304c\u9045\u3044\u306e\u3067\u3001**\u52d5\u753b\u306e\u5c0f\u3055\u3044\u52d5\u304d\u3092\u5b66\u7fd2\u3067\u304d\u306a\u3044**\u3002\u4f8b\u3048\u3070\u3001\u4eba\u304c\u6b69\u3044\u3066\u308b\u304b\u7acb\u3063\u3066\u3044\u308b\u304b\u306f\u8db3\u306e\u5c0f\u3055\u306a\u52d5\u304d\u3067\u5224\u65ad\u3059\u308b\u304c\u3001FC\u5c64\u306b\u6765\u308b\u524d\u306b\u3053\u308c\u3089\u306e\u5c0f\u3055\u3044\u7279\u5fb4\u91cf\u306f\u5931\u308f\u308c\u3084\u3059\u3044\u3002 ### 1-3. Early Fusion \u5148\u306b\u5404\u30d5\u30ec\u30fc\u30e0\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001`(3 x T x H x W)`\u306e\u52d5\u753b\u3092`(3T x H x W)`\u306b\u306a\u308b\u3088\u3046\u306b\u7573\u307f\u8fbc\u307f\uff08\u7279\u5fb4\u91cf\u306e\u7d71\u5408\uff09\u3057\u3066\u304b\u3089\u30013\u6b21\u5143\u30c6\u30f3\u30b5\u30fc\u3068\u3057\u3066\u304b\u30892DCNN\u3067\u5b66\u7fd2\u3059\u308b\u30e2\u30c7\u30eb\u3002\u30d4\u30af\u30bb\u30eb\u306e\u7d30\u304b\u3044\u5909\u5316\u3082\uff12DCNN\u304c\u5b66\u7fd2\u3067\u304d\u308b\u304c\u3001\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u4e00\u56de\u306e\u7573\u307f\u8fbc\u307f\u3067\u51e6\u7406\u3059\u308b\u306e\u3067\u305d\u3053\u3089\u8fba\u306e\u7279\u5fb4\u91cf\u306f\u4e0a\u624b\u304f\u8868\u73fe\u3055\u308c\u306a\u3044\u3002 ### 1-3. Slow Fusion Early Fusion\u3067\u306f\u7e26\u6a2a\u3067\u306e\u7573\u307f\u8fbc\u307f\u3057\u304b\u884c\u308f\u306a\u305a\u6642\u7cfb\u5217\u306e\u60c5\u5831\u306f\u5931\u308f\u308c\u3066\u3044\u305f\u304c\u3001\u7e26\u6a2a\u306b\u52a0\u3048\u6642\u9593\u8ef8\u3082\u52a0\u3048\u305f3\u6b21\u5143\u3067\u7573\u307f\u8fbc\u307f\u3092\u884c\u3044\u3001\u6642\u9593\u3068\u7a7a\u9593\u306e\u7279\u5fb4\u3092\u5f90\u3005\u306b\u7d71\u5408\u3057\u3066\u3044\u304f\u624b\u6cd5\u3002 ### 1-4.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 * **Sport-1M**: YouTube\u306e100\u4e07\u679a\u306e\u52d5\u753b\u306b487\u306e\u30b9\u30dd\u30fc\u30c4\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b --- ## \u5404\u624b\u6cd5\u306e\u6bd4\u8f03 * Single Frame \u30b7\u30f3\u30d7\u30eb\u3060\u304c\u7d71\u5408\u7cfb\u306b\u52a3\u3089\u306a\u3044\u6027\u80fd\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3092\u6700\u521d\u306b\u8a66\u305d\u3046\u3002 * Early \u7e26\u6a2a\u3067\u7573\u307f\u8fbc\u3080\u70ba\u753b\u50cf\u3068\u3057\u3066\u306e\u5b66\u7fd2\u306f\u5f37\u3044\u304c\u3001**Time shift invavriant**\u3058\u3083\u306a\u3044\u3068\u3044\u3046\u5f31\u70b9\u3082\u3042\u308b\u3002 \u3053\u308c\u306f\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u5965\u884c\u304d\u304c\u305d\u306e\u30d4\u30af\u30bb\u30eb\u306e\u6642\u9593\u306b\u3088\u308b\u5909\u5316\u3092\u5b66\u7fd2\u3057\u3061\u3083\u3046\u306e\u304c\u539f\u56e0\u3067\u3001\u4f8b\u3048\u3070\u6700\u521d\u306e\u65b9\u3067\u4eba\u304c\u7acb\u3061\u4e0a\u304c\u308b\u52d5\u753b\u3092\u5b66\u7fd2\u3057\u305f\u3068\u3057\u3066\u3001\u305d\u306e\u52d5\u753b\u3092\u6570\u30d5\u30ec\u30fc\u30e0\u305a\u3089\u3057\u305f\u5834\u5408\u30d5\u30a3\u30eb\u30bf\u30fc\u3082\u5965\u306b\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u5206\u30ba\u30ec\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 * Slow \u7e26\u6a2a\u3068\u6642\u9593\u8ef8\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u52d5\u304b\u3059\u306e\u3067time shift-invariant\u306b\u306a\u308b\u3002\u5165\u529b`(Cin x T x H x W)`\u3092`(Cin x Cout x 3 x 3 x 3)`\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u51e6\u7406\u3059\u308c\u3070(\u4e09\u3064\u306e\uff13\u306fTHW\u7528)\u540c\u3058\u5f62\u3067\u51fa\u529b\u3059\u308b\u306e\u3067\u51fa\u529b\u3082\u898b\u3048\u308b\u5316\u3067\u304d\u308b\u30023DCNN\u306f\u7d76\u8cdb\u9032\u5316\u4e2d\u306a\u6a21\u69d8\u3002Conv2D\u3092Conv3D\u306b\u3057\u305fVGG**C3D**\u304c\u9ad8\u6027\u80fd\u3060\u304c\u8a08\u7b97\u91cf\u306f\u975e\u5e38\u306b\u591a\u3044\u30023D-ResNet\u3067\u4e00\u6c17\u306b\u30c7\u30a3\u30fc\u30d7\u306b\u3002 ## 2. \u884c\u52d5\u8a8d\u8b58 \u4eba\u306e\u52d5\u304d\u304b\u3089\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u4e88\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 ### 2-1. Optical Flow \u5404\u30d5\u30ec\u30fc\u30e0\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u8ffd\u52a0\u3067\u9023\u7d9a\u3057\u305f2\u30d5\u30ec\u30fc\u30e0\u9593\u306e\u7269\u4f53\u306e\u52d5\u304d\u306e\u898b\u3048\u65b9\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5b66\u7fd2\u3059\u308b\uff08\u30d4\u30af\u30bb\u30eb\u306e\u52d5\u304d\u3068\u8a00\u3046\u3079\u304d\u304b\uff09\u3002\u524d\u8005\u3092Spatial stream, \u5f8c\u8005\u3092Temporal stream\u3068\u3044\u3046\u5225\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u5b66\u7fd2\u3057\u30af\u30e9\u30b9\u30b9\u30b3\u30a2\u3092\u5e73\u5747\u3067\u7d71\u5408\u3059\u308b\u3002 \u5c64\u304c\u6df1\u3044\u30e2\u30c7\u30eb\u304c\u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306b\u5bfe\u5fdc\u3057\u305f\u3089\u3084\u3070\u3044\u3089\u3057\u3044\u3002","title":"\u52d5\u753b\u3092\u4f7f\u3063\u305f\u6df1\u5c64\u5b66\u7fd2"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/video_task/#_1","text":"\u30df\u30b7\u30ac\u30f3\u5927\u5b66\u306e\u516c\u958b\u8b1b\u7fa9\u306b\u3068\u3066\u3082\u826f\u3044\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u7ffb\u8a33and\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002 Lecture video","title":"\u52d5\u753b\u3092\u4f7f\u3063\u305f\u6df1\u5c64\u5b66\u7fd2"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/video_task/#_2","text":"\u52d5\u753b\u306f\u753b\u50cf\u3092\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3068\u3057\u305f (T x 3 x H x W) \u306e\u30c6\u30f3\u30b5\u30fc\u3067\u6271\u3046\u3002 (3 x T x H x W) \u306e\u6642\u3082\u3042\u308b\u3002 \u753b\u50cf\u7cfb\u306e\u30bf\u30b9\u30af\u306f\u4e3b\u306b Classification (whole image) Semantic Segmentation (Pixelwise Classification) Object Detection (Find bounding box) Instance Segmentation (Predict shape) \u304c\u3042\u308a\u3001\u52d5\u753b\u30c7\u30fc\u30bf\u306f\u3053\u308c\u3092\u9023\u7d9a\u7684\u306b\u884c\u3046\u3002","title":"\u30bf\u30b9\u30af"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/video_task/#1-video-classification","text":"\u52d5\u753b\u3092\u30af\u30e9\u30b9\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\u3001\u753b\u50cf\u3068\u9055\u3044\u7269\u4f53\u304c\u4f55\u304b\u5f53\u3066\u308b\u4ee5\u5916\u306b\u3082\u4e00\u9023\u306e\u52d5\u304d\u304b\u3089\u4eba\u9593\u306e\u52d5\u4f5c\u3092\u5206\u985e\u3057\u305f\u308a\u3059\u308b\u3002 \u52d5\u753b\u306e\u5168\u822c\u7684\u306a\u554f\u984c\u3068\u3057\u3066 \u30c7\u30fc\u30bf\u304c\u5927\u304d\u3059\u304e\u308b \u3002\u7121\u5727\u7e2e\u3060\u30681\u30a8\u30f3\u30c8\u30ea\u30fc1 byte\u3068\u3057\u3066HD\u52d5\u753b\uff11\u5206\u306710GB\u304f\u3089\u3044\u3002\u306a\u306e\u3067FPS\u3068\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u305f\u52d5\u753b\u306e\u4e00\u90e8\u5206\u3060\u3051\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3002\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1\u306f\u52d5\u753b\u306e\u4e00\u90e8\u3092\u30aa\u30fc\u30d0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u5e73\u5747\u7cbe\u5ea6\u3092\u53d6\u308b\u3053\u3068\u3067\u52d5\u753b\u5168\u4f53\u3078\u306e\u7cbe\u5ea6\u304c\u308f\u304b\u308b\u3002","title":"1. Video Classification"},{"location":"%E6%B7%B1%E5%B1%A4%E5%AD%A6%E7%BF%92/video_task/#1-1-single-frame-cnn","text":"\u5404\u30d5\u30ec\u30fc\u30e0\u3092\u5225\u3005\u306e\u753b\u50cf\u3068\u3057\u3066\u72ec\u7acb\u3057\u305fCNN\u3067\u5206\u985e\u3059\u308b\u624b\u6cd5\u3002\u9577\u3081\u306e\u52d5\u753b\u3092\u5b66\u7fd2\u3055\u305b\u3066\u6b63\u7b54\u7387\u3092\u30d5\u30ec\u30fc\u30e0\u6570\u3067\u5e73\u5747\u3057\u305f\u7cbe\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u3066\u3044\u304f\u3002\u753b\u50cf\u540c\u58eb\u306e\u95a2\u4fc2\u3092\u8003\u616e\u3057\u306a\u3044\u306e\u3067\u4e00\u898b\u3059\u308b\u3068\u30c0\u30e1\u306a\u30e2\u30c7\u30eb\u3063\u307d\u3044\u304c\u5b9f\u306f\u666e\u901a\u306b\u5b9f\u7528\u30ec\u30d9\u30eb\u3067\u6027\u80fd\u304c\u826f\u3044\u3089\u3057\u3044\u3002\u52d5\u753b\u5206\u985e\u3092\u3059\u308b\u6642\u306f\u3053\u308c\u3092\u30d9\u30fc\u30b9\u306b\u3084\u308b\u3068\u3044\u3044\u3002 img src=../imgs/3.png width=400> ### 1-2. Late Fusion \u4e0a\u306e\u30e2\u30c7\u30eb\u3092MLP\u306b\u63a5\u7d9a\u3057\u305f\u30e2\u30c7\u30eb\u3002\u30d5\u30ec\u30fc\u30e0\u6bce\u306e\u7279\u5fb4\u91cf\u3092\u4e00\u3064\u306b\u7d71\u5408\u3059\u308b\u306e\u3067\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u5b66\u7fd2\u3067\u304d\u3066\u30d5\u30ec\u30fc\u30e0\u540c\u58eb\u306e\u95a2\u4fc2\u3082\u5b66\u7fd2\u3067\u304d\u308b\u304cFC\u5c64\u3067\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3084\u3059\u3044\u3002\u5bfe\u7b56\u3068\u3057\u3066\u7279\u5fb4\u91cf\u306e\u7d71\u5408\u6642\u306b`T, H, W`\u3092Pooling\u3057\u3066`D`\u6b21\u5143\u30c7\u30fc\u30bf\u306b\u843d\u3068\u3057\u8fbc\u3080\u3002\u3053\u308c\u3089\u306e\u624b\u6cd5\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u307e\u305a\u8a66\u3057\u305f\u3044\u30e2\u30c7\u30eb\u3002 \u3057\u304b\u3057\u7279\u5fb4\u91cf\u3092\u7d71\u5408\u3059\u308b\u306e\u304c\u9045\u3044\u306e\u3067\u3001**\u52d5\u753b\u306e\u5c0f\u3055\u3044\u52d5\u304d\u3092\u5b66\u7fd2\u3067\u304d\u306a\u3044**\u3002\u4f8b\u3048\u3070\u3001\u4eba\u304c\u6b69\u3044\u3066\u308b\u304b\u7acb\u3063\u3066\u3044\u308b\u304b\u306f\u8db3\u306e\u5c0f\u3055\u306a\u52d5\u304d\u3067\u5224\u65ad\u3059\u308b\u304c\u3001FC\u5c64\u306b\u6765\u308b\u524d\u306b\u3053\u308c\u3089\u306e\u5c0f\u3055\u3044\u7279\u5fb4\u91cf\u306f\u5931\u308f\u308c\u3084\u3059\u3044\u3002 ### 1-3. Early Fusion \u5148\u306b\u5404\u30d5\u30ec\u30fc\u30e0\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001`(3 x T x H x W)`\u306e\u52d5\u753b\u3092`(3T x H x W)`\u306b\u306a\u308b\u3088\u3046\u306b\u7573\u307f\u8fbc\u307f\uff08\u7279\u5fb4\u91cf\u306e\u7d71\u5408\uff09\u3057\u3066\u304b\u3089\u30013\u6b21\u5143\u30c6\u30f3\u30b5\u30fc\u3068\u3057\u3066\u304b\u30892DCNN\u3067\u5b66\u7fd2\u3059\u308b\u30e2\u30c7\u30eb\u3002\u30d4\u30af\u30bb\u30eb\u306e\u7d30\u304b\u3044\u5909\u5316\u3082\uff12DCNN\u304c\u5b66\u7fd2\u3067\u304d\u308b\u304c\u3001\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u4e00\u56de\u306e\u7573\u307f\u8fbc\u307f\u3067\u51e6\u7406\u3059\u308b\u306e\u3067\u305d\u3053\u3089\u8fba\u306e\u7279\u5fb4\u91cf\u306f\u4e0a\u624b\u304f\u8868\u73fe\u3055\u308c\u306a\u3044\u3002 ### 1-3. Slow Fusion Early Fusion\u3067\u306f\u7e26\u6a2a\u3067\u306e\u7573\u307f\u8fbc\u307f\u3057\u304b\u884c\u308f\u306a\u305a\u6642\u7cfb\u5217\u306e\u60c5\u5831\u306f\u5931\u308f\u308c\u3066\u3044\u305f\u304c\u3001\u7e26\u6a2a\u306b\u52a0\u3048\u6642\u9593\u8ef8\u3082\u52a0\u3048\u305f3\u6b21\u5143\u3067\u7573\u307f\u8fbc\u307f\u3092\u884c\u3044\u3001\u6642\u9593\u3068\u7a7a\u9593\u306e\u7279\u5fb4\u3092\u5f90\u3005\u306b\u7d71\u5408\u3057\u3066\u3044\u304f\u624b\u6cd5\u3002 ### 1-4.\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 * **Sport-1M**: YouTube\u306e100\u4e07\u679a\u306e\u52d5\u753b\u306b487\u306e\u30b9\u30dd\u30fc\u30c4\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b --- ## \u5404\u624b\u6cd5\u306e\u6bd4\u8f03 * Single Frame \u30b7\u30f3\u30d7\u30eb\u3060\u304c\u7d71\u5408\u7cfb\u306b\u52a3\u3089\u306a\u3044\u6027\u80fd\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3092\u6700\u521d\u306b\u8a66\u305d\u3046\u3002 * Early \u7e26\u6a2a\u3067\u7573\u307f\u8fbc\u3080\u70ba\u753b\u50cf\u3068\u3057\u3066\u306e\u5b66\u7fd2\u306f\u5f37\u3044\u304c\u3001**Time shift invavriant**\u3058\u3083\u306a\u3044\u3068\u3044\u3046\u5f31\u70b9\u3082\u3042\u308b\u3002 \u3053\u308c\u306f\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u5965\u884c\u304d\u304c\u305d\u306e\u30d4\u30af\u30bb\u30eb\u306e\u6642\u9593\u306b\u3088\u308b\u5909\u5316\u3092\u5b66\u7fd2\u3057\u3061\u3083\u3046\u306e\u304c\u539f\u56e0\u3067\u3001\u4f8b\u3048\u3070\u6700\u521d\u306e\u65b9\u3067\u4eba\u304c\u7acb\u3061\u4e0a\u304c\u308b\u52d5\u753b\u3092\u5b66\u7fd2\u3057\u305f\u3068\u3057\u3066\u3001\u305d\u306e\u52d5\u753b\u3092\u6570\u30d5\u30ec\u30fc\u30e0\u305a\u3089\u3057\u305f\u5834\u5408\u30d5\u30a3\u30eb\u30bf\u30fc\u3082\u5965\u306b\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u5206\u30ba\u30ec\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 * Slow \u7e26\u6a2a\u3068\u6642\u9593\u8ef8\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u52d5\u304b\u3059\u306e\u3067time shift-invariant\u306b\u306a\u308b\u3002\u5165\u529b`(Cin x T x H x W)`\u3092`(Cin x Cout x 3 x 3 x 3)`\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u51e6\u7406\u3059\u308c\u3070(\u4e09\u3064\u306e\uff13\u306fTHW\u7528)\u540c\u3058\u5f62\u3067\u51fa\u529b\u3059\u308b\u306e\u3067\u51fa\u529b\u3082\u898b\u3048\u308b\u5316\u3067\u304d\u308b\u30023DCNN\u306f\u7d76\u8cdb\u9032\u5316\u4e2d\u306a\u6a21\u69d8\u3002Conv2D\u3092Conv3D\u306b\u3057\u305fVGG**C3D**\u304c\u9ad8\u6027\u80fd\u3060\u304c\u8a08\u7b97\u91cf\u306f\u975e\u5e38\u306b\u591a\u3044\u30023D-ResNet\u3067\u4e00\u6c17\u306b\u30c7\u30a3\u30fc\u30d7\u306b\u3002 ## 2. \u884c\u52d5\u8a8d\u8b58 \u4eba\u306e\u52d5\u304d\u304b\u3089\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u4e88\u6e2c\u3059\u308b\u30bf\u30b9\u30af\u3002 ### 2-1. Optical Flow \u5404\u30d5\u30ec\u30fc\u30e0\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u8ffd\u52a0\u3067\u9023\u7d9a\u3057\u305f2\u30d5\u30ec\u30fc\u30e0\u9593\u306e\u7269\u4f53\u306e\u52d5\u304d\u306e\u898b\u3048\u65b9\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5b66\u7fd2\u3059\u308b\uff08\u30d4\u30af\u30bb\u30eb\u306e\u52d5\u304d\u3068\u8a00\u3046\u3079\u304d\u304b\uff09\u3002\u524d\u8005\u3092Spatial stream, \u5f8c\u8005\u3092Temporal stream\u3068\u3044\u3046\u5225\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u5b66\u7fd2\u3057\u30af\u30e9\u30b9\u30b9\u30b3\u30a2\u3092\u5e73\u5747\u3067\u7d71\u5408\u3059\u308b\u3002 \u5c64\u304c\u6df1\u3044\u30e2\u30c7\u30eb\u304c\u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306b\u5bfe\u5fdc\u3057\u305f\u3089\u3084\u3070\u3044\u3089\u3057\u3044\u3002","title":"1-1. Single Frame CNN"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1\u6307\u6a19 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u6027\u80fd\u8a55\u4fa1\u306b\u95a2\u3059\u308b\u7814\u7a76\u306e\u307e\u3068\u3067\u3059\u3002 \u5206\u985e\u30fb\u4f7f\u3044\u5206\u3051 \u56de\u5e30\u7cbe\u5ea6 \u30e6\u30fc\u30b6\u30fc\u8a55\u4fa1\u306e\u4e88\u6e2c\u306b\u7528\u3044\u3089\u308c\u308b 1~5\u3084\u30011~10\u306e\u8a55\u4fa1\u306e\u4e88\u6e2c \u5206\u985e\u554f\u984c\u3068\u3057\u3066\u3082\u89e3\u3051\u308b\u304c\u5e8f\u5217\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u56de\u5e30\u554f\u984c\u3068\u3057\u3066\u89e3\u3051\u308b \u9023\u7d9a\u5024\u3067\u4e88\u6e2c\u3057\u305f\u65b9\u304c\u3001\u305d\u306e\u5f8c\u306e\u30bd\u30fc\u30c8\u306a\u3069\u306b\u4f7f\u3044\u3084\u3059\u3044 \u5206\u985e\u7cbe\u5ea6\uff08\u4e8c\u5024\u5206\u985e\u304c\u4e3b\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u30fb\u8cfc\u8cb7\u30fb\u95b2\u89a7\u306e\u6709\u7121\u306e\u4e88\u6e2c\u306b\u7528\u3044\u3089\u308c\u308b 0\u304b1\u304b\u3001\u597d\u304d\u304b\u5acc\u3044\u304b\u3001\u3084\u3063\u305f\u304b\u3084\u3089\u306a\u3044\u304b\u306e\u4e88\u6e2c \u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027 \u63a8\u85a6\u3057\u305f\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u30ea\u30b9\u30c8\u306e\u5e8f\u5217\u6027\u306f\u8003\u616e\u3055\u308c\u308b\u304c\u3001\u4f4d\u7f6e\u304c\u8003\u616e\u3055\u308c\u306a\u3044\u53e4\u3044\u6307\u6a19 {2,1,3,4,5}\u3068\u63a8\u85a6\u3057\u305f\u3082\u306e\u3068\u3001{1,2,3,5,4}\u3068\u63a8\u85a6\u3057\u305f\u3082\u306e\u3092\u8a55\u4fa1\u3057\u305f\u5834\u5408\u3092\u8003\u3048\u308b \u30ea\u30b9\u30c8\u3067\u306e\u63a8\u85a6\u306f\u3001\u9806\u4f4d\u304c\u5c0f\u3055\u3044\u3082\u306e\u304c\u76f8\u5bfe\u7684\u306b\u5927\u304d\u304f\u8a55\u4fa1\u3055\u308c\u308b\u3079\u304d\u3060\u304c\u3001\u3053\u3053\u3067\u7d39\u4ecb\u3059\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u533a\u5225\u304c\u3064\u3051\u3089\u308c\u306a\u3044 \u4e00\u3064\u5f8c\u3067\u7d39\u4ecb\u3059\u308b\u3001\u300e\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027\u300f\u3067\u306f\u533a\u5225\u3067\u304d\u308b\uff08\u524d\u8005\u304c\u60aa\u304f\u3001\u5f8c\u8005\u304c\u826f\u304f\u51fa\u308b\uff09 \u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027 \u63a8\u85a6\u3057\u305f\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u30ea\u30b9\u30c8\u306e\u5e8f\u5217\u6027\u30fb\u4f4d\u7f6e\u304c\u8003\u616e\u3055\u308c\u308b\u65b0\u3057\u3044\u6307\u6a19 \u30ea\u30b9\u30c8\u306e\u5e8f\u76e4\u306e\u5e8f\u5217\u306e\u9593\u9055\u3044\u306b\u5bfe\u3057\u3001\u5927\u304d\u306a\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4e0e\u3048\u308b \u305d\u306e\u4ed6 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u3084\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u8a55\u4fa1\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u308b\u65b0\u3057\u3044\u8a55\u4fa1\u6307\u6a19 \u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u30ab\u30d0\u30fc\u7387 \u65b0\u3057\u3044\u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u3084\u3001\u63a8\u85a6\u3059\u308b\u304c\u8cb7\u308f\u308c\u306a\u3044\u3082\u306e\u306b\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4e0e\u3048\u308b\u306a\u3069 \u8a55\u4fa1\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u306e\u5165\u624b\u304c\u96e3\u3057\u3044\u306e\u304c\u8ab2\u984c \u56de\u5e30\u7cbe\u5ea6 \u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u6b63\u78ba\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4e88\u6e2c\u3059\u308b\u80fd\u529b\u3092\u6301\u3063\u3066\u3044\u308b\u304b \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u5024\u3068\u3001\u4e88\u6e2c\u3057\u305f\u8a55\u4fa1\u5024\u306e\u5dee \u8a55\u4fa1\u95b2\u89a7\u30bf\u30b9\u30af\uff08\u8a55\u4fa1\u9806\u306a\u3069\uff09\u3067\u306f\u3001\u8a55\u4fa1\u5024\u305d\u306e\u3082\u306e\u3092\u5229\u7528\u8005\u306f\u898b\u308b \u305d\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u8a55\u4fa1\u5024\u306e\u4e88\u6e2c\u7cbe\u5ea6\u306e\u30ba\u30ec\u3092\u91cd\u8996\u3059\u3079\u304d MAE\uff08\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\uff09 \\[ MAE = \\frac{1}{N}\\sum^{N}_{i=1}|\\hat{r_{i}}-r_{i}| \\] MSE\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\uff09 \\[ MSE = \\frac{1}{N}\\sum^{N}_{i=1}(\\hat{r_{i}}-r_{i})^{2} \\] MAE@{k}, RMSE@{k} \u5b9f\u969b\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u306e\u306f\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u5024\u304c\u9ad8\u3044\u4e0a\u4f4d\u6570\u500b \u4e0a\u4f4d\u6570\u30a2\u30a4\u30c6\u30e0\uff08TopK\uff09\u3092\u5bfe\u8c61\u306bMAE, RMSE\u3092\u7b97\u51fa\u3057\u3001\u8a55\u4fa1\u3059\u308b \\[ MAE@k = \\frac{1}{K}\\sum^{K}_{i=1}MAE_{i} \\] \u5206\u985e\u7cbe\u5ea6\uff082\u5024\u5206\u985e\u304c\u4e3b\uff09 \u30af\u30ea\u30c3\u30af\u30fb\u8cfc\u5165\u306e\u6709\u7121\u306a\u3069\u306e\uff12\u5024\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u6b63\u89e3\u7387\uff08Acc\uff09 \u5229\u7528\u8005\u306e\u95a2\u5fc3\u304c\u3001\u4e88\u6e2c\u7d50\u679c\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u4e00\u81f4\u3057\u305f\u5272\u5408 \u8a55\u4fa1\u5024\u306a\u3089\u3070\u3001\u9ad8\u8a55\u4fa1\u304b\u4f4e\u8a55\u4fa1\u304b\u306a\u3069 \u9069\u5408\u7387\uff08Precision\uff09\u3068\u518d\u73fe\u7387\uff08Recall\uff09\u3001F\u5c3a\u5ea6\u3001ROC \\[ Rrecision = \\frac{\u63a8\u85a6\u306b\u542b\u307e\u308c\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570}{\u63a8\u85a6\u306b\u542b\u307e\u308c\u308b\u5168\u30a2\u30a4\u30c6\u30e0\u306e\u6570} \\] \\[ Recall = \\frac{\u691c\u7d22\u7d50\u679c\u306b\u542b\u307e\u308c\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570}{\u5168\u3066\u306e\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570} \\] \u9069\u5408\u30a2\u30a4\u30c6\u30e0\u3092\u4e00\u3064\u898b\u3064\u3051\u308c\u3070\u826f\u3044\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u767a\u898b\u30bf\u30b9\u30af\u3067\u306f\u3001\u9069\u5408\u7387 \u63a8\u85a6\u8aa4\u308a\u306e\u5c11\u306a\u3055 \u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u4e0a\u4f4dn\u4ef6\u306e\u5185\u3001\u5b9f\u969b\u306b\u76ee\u7684\u3092\u679c\u305f\u3057\u305f\u3082\u306e\u306e\u5272\u5408 \u5168\u3066\u306e\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u3092\u898b\u3064\u3051\u305f\u3044\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u5217\u6319\u30bf\u30b9\u30af\u3067\u306f\u3001\u518d\u73fe\u7387\u3092\u91cd\u8996\u3059\u308b \u63a8\u85a6\u6f0f\u308c\u306e\u5c11\u306a\u3055 \u76ee\u7684\u3092\u679c\u305f\u3057\u305f\u3082\u306e\u306e\u3046\u3061\u3001\u63a8\u85a6\u3067\u4e0a\u4f4dn\u4ef6\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5272\u5408 \u7dcf\u5408\u7684\u306a\u5224\u65ad\u3092\u3057\u305f\u3044\u5834\u5408\u306fE-measure\u3084F-measure\u3084ROC \\[ F = \\frac{1}{\\frac{\\alpha}{Precision}+\\frac{1-\\alpha}{Recall}} \\] alpha = 0.5\u306e\u6642\u306fF1\u5024 n-points Interpolated Precision N\u70b9\u306eRecall\u306e\u5e73\u5747\u3092\u53d6\u308b \u901a\u5e38\u3001N=11(recall 0.0, 0.1, 0.2, ..., 0.9, 1.0) \\[ nAIP = \\frac{1}{N}\\sum_{i}InterPrecision_{i} \\] ROC AUC \\[ AUC(f) = \\frac{\\sum_{t_{0}\\in D^{0}}\\sum_{t_{1}\\in D^{1}}1|f(t_{0})<f(t_{1})|}{|D^{0}||D^{1}|} \\] where 1|f(t_{0})<f(t_{1})|\u306f\u3001\u3082\u3057f(t0) < f(t1)\u306a\u3089\u30701\u3001\u305d\u308c\u4ee5\u5916\u306a\u3089\u30700\u3092\u53d6\u308b D0\u3068\u306f\u8ca0\u4f8b\u306e\u30b5\u30f3\u30d7\u30eb\u96c6\u5408 D1\u3068\u306f\u7cbe\u970a\u306e\u30b5\u30f3\u30d7\u30eb\u96c6\u5408 Hit-rate \u5bfe\u8c61\u3068\u306a\u308b\u5358\u9805\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u6307\u6a19\uff082\u5024\u30c7\u30fc\u30bf\u5411\u3051\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304b\u3089\u30010\u3067\u306a\u3044\u9805\u76ee\u3092\u691c\u7d22 \u30a2\u30a4\u30c6\u30e0\u304c\u63a8\u85a6\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u308b\u304b\u78ba\u304b\u3081\u308b Hit-rate\u3092\u8a08\u7b97\u3059\u308b \\[ hit-rate = \\frac{num_{hits}}{n} \\] num_{hits}: \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u6570 n:\u5168\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0\u6570 \u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027\u306e\u6307\u6a19 \u6bd4\u8f03\u7684\u53e4\u3044\u30e9\u30f3\u30ad\u30f3\u30b0\u6307\u6a19 \u5e8f\u5217\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u30e9\u30f3\u30af\u306e\u4f4d\u7f6e\u305d\u306e\u3082\u306e\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u591a\u3044 \u9806\u4f4d\u76f8\u95a2\uff08rank correlation\uff09 \u30b9\u30d4\u30a2\u30de\u30f3\u9806\u4f4d\u76f8\u95a2\uff08Spearman's rank\uff09 \\[ r_{Spearman}= 1 - \\frac{6}{n(n^{2}-1)}\\sum^{n}_{i=1}(x_{i}-y{i})^{2} \\] x_i: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0i\u306e\u9806\u4f4d y_i: \u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0i\u306e\u9806\u4f4d \u4fc2\u6570\u306e6/{n*(n^2-1)}\u306e\u51fa\u3057\u65b9\u306b\u3064\u3044\u3066\u306f\u3001\u4e8c\u5909\u91cf\u6b63\u898f\u5206\u5e03\u3092\u3044\u3058\u308c\u3070\u51fa\u3066\u304f\u308b\uff1f \u6b63\u3057\u304f\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u3066\u3044\u308c\u3070\uff11 \u6570\u5024\u306e\u5927\u5c0f\u306f\u95a2\u4fc2\u306a\u3057 \u30b1\u30f3\u30c9\u30fc\u30eb\u30e9\u30f3\u30af\uff08Kendall's rank\uff09 \u4e8c\u3064\u306e\u9805\u76ee\u9593\u306e\u5927\u304d\u3055\u306e\u95a2\u4fc2\u306b\u3064\u3044\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u4e00\u81f4\u3092\u78ba\u8a8d\u3059\u308b \u5168\u3066\u306e\u30da\u30a2\u304cn*(n-1)/2\u500b \u3082\u3057\u3001\u300c\u30e6\u30fc\u30b6\u30fcS\u306eA\u306e\u8a55\u4fa1\uff1c\u30e6\u30fc\u30b6\u30fcS\u306eB\u306e\u8a55\u4fa1\u300d\u304b\u3064\u300c\u30e6\u30fc\u30b6\u30fcT\u306eA\u306e\u8a55\u4fa1\uff1c\u30e6\u30fc\u30b6\u30fcT\u306eB\u306e\u8a55\u4fa1\u300d\u306a\u3089\u3070P+=1 \u3082\u3057\u3001\u300c\u30e6\u30fc\u30b6\u30fcS\u306eA\u306e\u8a55\u4fa1\uff1e\u30e6\u30fc\u30b6\u30fcS\u306eB\u306e\u8a55\u4fa1\u300d\u304b\u3064\u300c\u30e6\u30fc\u30b6\u30fcT\u306eA\u306e\u8a55\u4fa1\uff1e\u30e6\u30fc\u30b6\u30fcT\u306eB\u306e\u8a55\u4fa1\u300d\u306a\u3089\u3070P+=1 \u305d\u308c\u4ee5\u5916\u306f\u3001Q+=1\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u8a08\u7b97\u3059\u308b \\[ \\tau = \\frac{P-Q}{\\frac{1}{2}n(n-1)}=\\frac{2P}{\\frac{1}{2}n(n-1)}-1 \\] NDMP\uff08Normalized distance-based performance measure\uff09 C-\uff1a\u77db\u76fe\u3057\u305f\u9078\u597d\u95a2\u4fc2\u306e\u6570 \u30e6\u30fc\u30b6\u30fc\u306f\u30a2\u30a4\u30c6\u30e0A\u306e\u8a55\u4fa1\uff1e\u30a2\u30a4\u30c6\u30e0B\u306e\u8a55\u4fa1\u306b\u5bfe\u3057\u3001\u63a8\u85a6\u304c\u30a2\u30a4\u30c6\u30e0B\u306e\u8a55\u4fa1\uff1e\u30a2\u30a4\u30c6\u30e0A\u306e\u8a55\u4fa1\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u6570 \u4e0b\u306e\u8868\u306eD-E Cu\uff1a\u63a8\u85a6\u3068\u30e6\u30fc\u30b6\u30fc\u3067\u540c\u4e00\u306e\u9078\u597d\u95a2\u4fc2\u306e\u6570 \u4e0b\u306e\u8868\u306eB-C\u306a\u3069 Ci\uff1a\u63a8\u85a6\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u9593\u306e\u30a2\u30a4\u30c6\u30e0\u30da\u30a2\u306e\u512a\u5148\u95a2\u4fc2\u6570\u306e\u5408\u8a08 \\[ NDMP = \\frac{2C^{-}+C^{u}}{2C^{i}} \\] Rank Recommend User 1 A A 2 B B 3 C C 4 D E 5 E D \\[ \u4e0a\u306e\u8868\u306eNDMP = \\frac{2*1+9}{2*10}=\\frac{11}{20}=0.55 \\] \u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u63a8\u85a6\u306e\u8a55\u4fa1\u6307\u6a19 \u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u4e26\u3073\u65b9\u306e\u826f\u3055\u3092\u8a55\u4fa1\u3059\u308b \u6700\u3082\u95a2\u9023\u3059\u308bN\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u6b63\u3057\u3044\u9806\u756a\u3067\u4e88\u6e2c\u3057\u3066\u3044\u308b\u304b \u9069\u5408\u30a2\u30a4\u30c6\u30e0\u767a\u898b\u3092\u76ee\u7684\u3068\u3059\u308b\u5834\u5408\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u610f\u601d\u6c7a\u5b9a\u652f\u63f4\u306e\u5074\u9762\u304c\u8981\u6c42\u3055\u308c\u308b \u3053\u3046\u3057\u305f\u5834\u5408\u306f\u3001\u8a55\u4fa1\u5024\u306e\u5927\u5c0f\u3088\u308a\u3082\u8a55\u4fa1\u306e\u4ee3\u511f\u3092\u91cd\u8996\u3059\u3079\u304d \u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u306e\u5b8c\u5168\u306a\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u53d6\u5f97\u3059\u306e\u306f\u96e3\u3057\u3044 \u5927\u4f53\u3053\u3053\u3067\u554f\u984c\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u5e8f\u5217\u306b\u5bfe\u3059\u308b\u91cd\u307f AP\uff08\u5e73\u5747\u9069\u5408\u7387\uff09 \u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u63a8\u85a6\u306b\u304a\u3044\u3066\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u898b\u3064\u304b\u308b\u305f\u3073\u306b\u305d\u306e\u4f4d\u7f6e\u3067\u306e\u9069\u5408\u7387\u3092\u6c42\u3081\u3001\u305d\u306e\u7b97\u8853\u5e73\u5747\u3092\u53d6\u3063\u305f\u5024 \\[ AP = \\frac{1}{R}\\sum^{n}_{r=1}Prec(r)I(r) \\] \u3053\u3053\u3067\u3001Prec\u00ae\u306f\u9069\u5408\u7387Precision\u3001I\u00ae\u306fr\u4f4d\u304c\u9069\u5408\u6587\u66f8\u306e\u5834\u54081\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f0\u3092\u53d6\u308b\u95a2\u6570 \u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u5358\u7d14\u306b\u9069\u5408\u3057\u305f\u304b\u5426\u304b\u306e\u4e8c\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u306b\u306a\u308b \u5b9f\u969b\u306e\u63a8\u85a6\u306e\u8a55\u4fa1\u3067\u306f\u3001\u90e8\u5206\u9069\u5408\u30fb\u591a\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u6307\u6a19\u3092\u7528\u3044\u308b MAP\uff08Mean Average Precision\uff09 MAP@{k}\u306a\u3089\u3070\u3001\u4e0a\u4f4dK\u500b\u306eAP\u306e\u5e73\u5747\u3092\u53d6\u308b \\[ MAP = \\frac{1}{N}\\sum^{N}_{i=1}AP_{i} \\] MRR \u6700\u521d\u306b\u73fe\u308c\u305f\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u9806\u4f4d\u306e\u9006\u6570\u306e\u5e73\u5747\u3092\u3068\u3063\u305f\u3082\u306e \u5168\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u63a8\u85a6\u30ea\u30b9\u30c8\u3092\u4f5c\u6210 \u30e6\u30fc\u30b6\u30fc\u304c\u55dc\u597d\u3059\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e0a\u4f4d\u4f55\u756a\u76ee\u3067\u73fe\u308c\u305f\u304b\u8abf\u3079\u308b \u3053\u306e\u9806\u4f4d\u306e\u9006\u6570\u3092\u53d6\u308b\uff08\u30ea\u30b9\u30c8\u306b\u6b63\u89e3\u304c\u542b\u307e\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u9006\u3092\u3068\u3089\u305a\u306b0\u3068\u306a\u308b\uff09 \u5168\u30e6\u30fc\u30b6\u30fc\u3067\u5e73\u5747\u3092\u53d6\u308b \\[ MRR = \\frac{1}{N}\\sum^{N}_{i=1}\\frac{1}{i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u9069\u5408\u9806\u4f4d} \\] \u30e9\u30f3\u30ad\u30f3\u30b0\u4e0b\u4f4d\u3067\u306e\u9806\u4f4d\u306e\u5dee\u306f\u3042\u307e\u308a\u6307\u6a19\u306b\u5f71\u97ff\u3057\u306a\u3044 CG\uff08\u6e1b\u640d\u3057\u306a\u3044\u7d2f\u7a4d\u5229\u5f97\uff09 DCG\u306e\u539f\u578b \u6b63\u89e3\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u5229\u5f97\uff08\u30b9\u30b3\u30a2\uff09\u3092\u8db3\u3057\u5408\u308f\u305b\u3066\u3044\u304f \\[ CG = \\sum^{n}_{r=1}g(r) \\] nDCG\uff08\u591a\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u6307\u6a19\uff09 \u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570\u3092\u52a0\u7b97\u3057\u3066\u3044\u304f\u969b\u306b\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e0b\u4f4d\u306b\u6765\u308b\u307b\u3069\u6e1b\u70b9\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4e0a\u4f4d\u307b\u3069\u5927\u304d\u304f\u3001\u4e0b\u4f4d\u307b\u3069\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306a\u4fc2\u6570\u3092\u304b\u3051\u305f\u4e0a\u3067\u5408\u8a08\u3059\u308b \u3053\u306e\u969b\u306e\u4fc2\u6570\u3092\u6e1b\u640d\u5229\u5f97discounted gain\u3068\u3044\u3046 \u9069\u5408\u5ea6\u306b\u5fdc\u3058\u305f\u4fa1\u5024\u3092\u5229\u5f97gain\u3068\u3057\u3066\u8003\u3048\u3001\u30e9\u30f3\u30af\u304c\u4e0b\u4f4d\u306b\u306a\u308b\u307b\u3069\u305d\u306e\u4fa1\u5024\u3092\u4e0b\u3052\u308b\u6e1b\u640d\u5229\u5f97discounted gain\u3092\u5c0e\u5165\u3057\u3001\u305d\u306e\u7d2f\u7a4d\u8a71\u3092\u6b63\u898f\u5316\u3057\u305f\u5024 DCG\uff08\u6e1b\u640d\u7d2f\u8a08\u5229\u5f97\uff09\u306f\u4e0b\u8a18 g\u00ae\u306fr\u4f4d\u306b\u304a\u3051\u308b\u5229\u5f97 \u30e6\u30fc\u30b6\u30fc\u306e\u5b9f\u969b\u306e\u8a55\u4fa1\u5024\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b 1\u4f4d\u306a\u3089\uff15\u70b9\u30012\u4f4d\u306a\u3089\uff14\u70b9\u30013\u4f4d\u306a\u3089\uff13\u70b9\u30014\u4f4d\u306a\u3089\uff12\u70b9\u3001\u2026\u2026\u3068\u9069\u5f53\u306b\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3063\u3066\u3082\u8a08\u7b97\u3067\u304d\u308b \\[ DCG = \\sum^{n}_{r=1}\\frac{g(r)}{log_{2}(r+1)} \\] IDCG\u306f\u7406\u60f3\u7684\u63a8\u85a6\u306b\u304a\u3051\u308b\u6e1b\u640d\u5229\u5f97\u306e\u63a8\u85a6\u8a71 \u6b63\u898f\u5316\u3055\u308c\u305fnDCG\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b \\[ nDCG = \\frac{DCG}{IDCG} \\] ARHR (Average reciprocal hit rank) \uff12\u5024\u30c7\u30fc\u30bf \\[ ARHR = \\frac{1}{n}\\sum_{i \\in Z_{l}}\\frac{1}{pos(i)} \\] Z_{l}: \u30e6\u30fc\u30b6\u30fc\u306e\u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u30bc\u30ed\u3067\u306a\u3044\u9805\u76ee pos: \u30a2\u30a4\u30c6\u30e0\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f4d\u7f6e Half-life Utility Metric \u30a2\u30a4\u30c6\u30e0\u306e\u5e8f\u5217\u306b\u3088\u308b\u91cd\u8981\u5ea6\u3092\u534a\u6e1b\u671f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u534a\u6e1b\u3055\u305b\u3066\u3044\u304f \\[ R_{u} = \\sum_{j}\\frac{max(r_{u,j}-default, 0)}{2^{(j-1)/(\\alpha -1)}} \\] r_{u, j}: \u30e9\u30f3\u30afj\u6642\u70b9\u3067\u306e\u3001\u30e6\u30fc\u30b6\u30fcu\u306e\u5b9f\u969b\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1 default: \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a55\u4fa1\u5024\uff08\u901a\u5e38\u306f\u8a55\u4fa1\u5024\u306e\u5e73\u5747\uff09 alpha: \u534a\u6e1b\u671f\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf RBP (Rank biased precision) \u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u7d44\u307f\u8fbc\u3080\uff1f \\[ RBP = (1-p)\\sum^{n}_{i=1}g_{i}p^{i-1} \\] gi: \u30e9\u30f3\u30afi\u306e\u9805\u76ee\u306e\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u597d\u307f\u3068\u306e\u95a2\u9023\u6027\u306e\u5ea6\u5408\u3044 p: \u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30ea\u30b9\u30c8\u3092\u898b\u3066\u3044\u308b\u9593\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u6301\u7d9a\u6027\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u901a\u5e38\u306f\u30af\u30ea\u30c3\u30af\u30ed\u30b0\u306a\u3069\u304b\u3089\u63a8\u5b9a\uff09 ERR (Expected reciprocal rank) Cascade user model \u4e0a\u4f4d\u306b\u5b58\u5728\u3059\u308b\u9805\u76ee\u306e\u95a2\u9023\u6027\u306b\u8003\u616e\u3059\u308b\u30e2\u30c7\u30eb \u30e6\u30fc\u30b6\u30fc\u306f\u901a\u5e38\u3001\u6e80\u8db3\u3059\u308c\u3070\u305d\u3053\u3067\u691c\u7d22\u3092\u7d42\u4e86\u3059\u308b \u3053\u306e\u5834\u5408\u3001\u691c\u7d22\u3092\u7d42\u4e86\u3057\u305f\u6642\u306b\u4e0b\u306b\u3042\u308b\u3082\u306e\u306f\u5168\u3066\u30af\u30ea\u30c3\u30af\u3055\u308c\u306a\u3044 \u30ab\u30b9\u30b1\u30fc\u30c9\u30e2\u30c7\u30eb\u306e\u4e00\u3064 r\u306e\u4f4d\u7f6e\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u63a8\u85a6\u3057\u305f\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u95b2\u89a7\u3092\u6b62\u3081\u308b\u78ba\u7387\u306e\u5408\u8a08\u3092\u53d6\u308b \u3053\u306e\u78ba\u7387\u306f\u3001\u4e0a\u4f4d\u306e\u9806\u4f4d\u306b\u5f71\u97ff\u3055\u308c\u308b \\[ ERR = \\sum^{n}_{r=1}\\zeta(r)P(user~stops~at~position~r) \\\\ \\zeta(r) = \\frac{1}{r} ~~~or~~~ \\zeta(r) = \\frac{1}{log_{2}(r+1)} \\] \u3082\u3057\u304f\u306f $$ ERR = \\sum^{n} {r=1}\\zeta\u00ae\\prod^{r-1} (1-R_{i})R_{r} \\ R_{i} = \\frac{2^{g}-1}{2^{g_{max}}} $$ g: \u30e6\u30fc\u30b6\u30fc\u306e\u597d\u307f\u3068\u306e\u95a2\u9023\u6027\u306e\u6295\u7403 gmax: \u30b9\u30b1\u30fc\u30eb\u3067\u6700\u5927\u7b49\u7d1a\uff08\uff11\u301c\uff15\u306e\u8a55\u4fa1\u304c\u3042\u308b\u6642\u306e\uff15\uff09 Q-measure, GAP(Graded Average Precision) \u5e73\u5747\u9069\u5408\u7387\u3092\u62e1\u5f35\u3057\u305f\u3082\u306e \u7cbe\u5ea6\u9762\u4ee5\u5916\u3067\u306e\u3001\u65b0\u3057\u3044\u8a55\u4fa1\u6307\u6a19 \u63a2\u7d22\u601d\u8003\u3067\u306f\u306a\u3044\u304c\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5f79\u7acb\u3064\u6307\u6a19 \u30ab\u30d0\u30ec\u30c3\u30b8\u3001\u5b66\u7fd2\u7387\u3001\u4fe1\u983c\u7387\u3001\u4fe1\u983c\u6027\u3001 \u63a2\u7d22\u601d\u8003\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5f79\u7acb\u3064\u6307\u6a19 \u63a8\u85a6\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u65b0\u3057\u3044\u3082\u306e\u304b\u6e2c\u5b9a\u3059\u308b \u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9 \u30ce\u30d9\u30eb\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9 \u30c0\u30a4\u30d0\u30fc\u30b7\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9 \u63a2\u7d22\u601d\u8003\u3067\u306f\u306a\u3044\u304c\u6709\u7528\u306a\u6307\u6a19 \u30ab\u30d0\u30ec\u30c3\u30b8\u30fb\u88ab\u8986\u7387\uff08coverage\uff09 \u63a8\u85a6\u5185\u5bb9\u304c\u3069\u306e\u7a0b\u5ea6\u306e\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u3092\u30ab\u30d0\u30fc\u3067\u304d\u3066\u3044\u308b\u304b\u8a55\u4fa1\u3059\u308b \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u8a55\u4fa1\u304c\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306b\u3064\u3044\u3066\u306f\u3001\u4e88\u6e2c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044 \u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u7279\u5fb4\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 \u4e88\u6e2c\u7cbe\u5ea6\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304c\u5b58\u5728\u3059\u308b \u725b\u4e73\u3084\u5375\u306a\u3069\u306e\u307b\u3068\u3093\u3069\u306e\u9867\u5ba2\u304c\u8cfc\u5165\u3059\u308b\u3082\u306e\u3092\u63a8\u85a6\u3059\u308c\u3070\u4e88\u6e2c\u7cbe\u5ea6\u306f\u9ad8\u304f\u306a\u308b\u304c\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u306f\u4f4e\u304f\u306a\u308b \u30ab\u30bf\u30ed\u30b0\u30ab\u30d0\u30ec\u30c3\u30b8 \u5229\u7528\u53ef\u80fd\u306a\u5168\u30a2\u30a4\u30c6\u30e0\u306e\u3046\u3061\u3001\uff11\u56de\u306e\u63a8\u85a6\u3067\u3069\u308c\u304f\u3089\u3044\u591a\u304f\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3067\u304d\u305f\u304b \u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u5e45\u5e83\u3055\u3092\u793a\u3059 \\[ Catalogue Coverage = \\frac{|S_{r}|}{|S_{a}|}\\\\where~S_{a}:\u30a2\u30a4\u30c6\u30e0\u5168\u3066\\\\S_{r}:\u63a8\u85a6\u3067\u304d\u308b\u30a2\u30a4\u30c6\u30e0 \\] \u63a8\u85a6\u306e\u7bc4\u56f2\u3092\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u307f\u306b\u7d5e\u3063\u305f\u9069\u5408\u30ab\u30bf\u30ed\u30b0\u30ab\u30d0\u30ec\u30c3\u30b8 \\[ Weighted Catalogue Coverage = \\frac{|S_{r}\\cap S_{s}|}{|S_{a}|} \\] \u30e6\u30fc\u30b6\u30fc\u30ab\u30d0\u30ec\u30c3\u30b8 \u5168\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306e\u3046\u3061\u3001\u76f4\u8fd1\uff11\u56de\u306e\u63a8\u85a6\u306e\u3046\u3061\u3001\u3069\u308c\u307b\u3069\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u63a8\u85a6\u3067\u304d\u305f\u304b\u3092\u793a\u3059 \\[ PredictionCoverage = \\frac{|S_{p}|}{|S_{u}|}\\\\where~S_{p}:\u5c11\u306a\u304f\u3068\u3082\uff11\u3064\u306e\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308a\u63a8\u85a6\u3067\u304d\u305f\u30e6\u30fc\u30b6\u30fc\\\\S_{u}:\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc \\] \u5b66\u7fd2\u7387 \u30e6\u30fc\u30b6\u30fc\u306e\u55dc\u597d\u304c\u5909\u5316\u3057\u305f\u5f8c\u3001\u3069\u308c\u307b\u3069\u65e9\u304f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u9069\u5207\u306a\u63a8\u85a6\u3092\u63d0\u4f9b\u3067\u304d\u308b\u304b \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c\u306b\u95a2\u9023\u3059\u308b \u30b7\u30b9\u30c6\u30e0\u304c\u7d20\u65e9\u304f\u9069\u5207\u306a\u63a8\u85a6\u3092\u884c\u3048\u306a\u3044\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u6e80\u8db3\u5ea6\u306f\u6e1b\u5c11\u3059\u308b \u55dc\u597d\u304c\u5909\u308f\u3063\u305f\u3042\u3068\u306e\u6642\u9593 \u30e6\u30fc\u30b6\u30fc\u304c\u63a8\u85a6\u53d7\u3051\u3066\u59cb\u3081\u3066\u304b\u3089\u3001\u7cbe\u5ea6\u3092\u76e3\u8996\u3057\u7d9a\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b \u78ba\u4fe1\u5ea6 \u63a8\u85a6\u306b\u3069\u308c\u307b\u3069\u306e\u78ba\u4fe1\u3092\u6301\u3063\u3066\u3044\u308b\u304b \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u3069\u308c\u307b\u3069\u306e\u6570\u306e\u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u8a08\u7b97\u3059\u308b \u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u6642\u306e\u30c7\u30fc\u30bf\u306e\u30ab\u30d0\u30fc\u7387 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u6642\u306b\u4e88\u6e2c\u3067\u7528\u3044\u308bK-NN\u306e\u985e\u4f3c\u6027\u3092\u8a08\u7b97\u3059\u308b \u985e\u4f3c\u6027\u304c\u4f4e\u3044\u6642\u3001K-NN\u306e\u8ddd\u96e2\u304c\u9060\u304f\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u76e3\u8996\u3059\u308b\uff1f \u4fe1\u983c\u6027 \u30e6\u30fc\u30b6\u30fc\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u4fe1\u983c \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u55dc\u597d\u3068\u95a2\u5fc3\u3092\u4e88\u6e2c\u3059\u308b\u80fd\u529b\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u30e6\u30fc\u30b6\u30fc\u304c\u3088\u304f\u77e5\u3063\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3057\u306a\u3044\u3068\u3001\uff08\u4fe1\u983c\u3092\uff1f\uff09\u5f97\u308b\u306e\u304c\u56f0\u96e3 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4fe1\u983c\u3067\u304d\u306a\u3051\u308c\u3070\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u308f\u306a\u304f\u306a\u308b \u63a8\u85a6\u7d50\u679c\u304c\u826f\u3051\u308c\u3070\u4fe1\u983c\u304c\u5897\u3059 \u30e6\u30fc\u30b6\u30fc\u306b\u30aa\u30f3\u30e9\u30a4\u30f3\u8a55\u4fa1\u3067\u76f4\u63a5\u5c0b\u306d\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u4f7f\u7528\u983b\u5ea6\u3067\u63a8\u5b9a\u3059\u308b \u63a2\u7d22\u601d\u8003\u306e\u6307\u6a19 \u4f3c\u305f\u5546\u54c1\u3070\u304b\u308a\u63a8\u85a6\u3057\u3066\u3044\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u63a8\u85a6\u306b\u98fd\u304d\u308b \u65e2\u77e5\u306e\u5546\u54c1\u3092\u63a8\u85a6\u3055\u308c\u3066\u3082\u3001\u610f\u601d\u6c7a\u5b9a\u306e\u624b\u52a9\u3051\u306b\u306f\u306a\u3089\u306a\u3044 \u8a55\u4fa1\u5bfe\u8c61\uff1a\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30c8\u3001\u30a2\u30a4\u30c6\u30e0\u30bb\u30c3\u30c8\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u30da\u30a2\u306a\u3069 \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\uff1a\u8a55\u4fa1\u884c\u5217\uff08\u30e6\u30fc\u30b6\u30fc\uff0a\u30a2\u30a4\u30c6\u30e0\uff09\u3001\u30aa\u30f3\u3068\u30ed\u30b8\u30fc\uff08\u30a2\u30a4\u30c6\u30e0\u30ab\u30c6\u30b4\u30ea\uff09\u3001\u4ed6\u306e\u65b0\u898f\u6027\u30fb\u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u6ce8\u610f\u70b9 \u76ee\u65b0\u3057\u3055\u3060\u3051\u3092\u63a8\u5968\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u6e80\u8db3\u5ea6\u306f\u4f4e\u4e0b\u3059\u308b \u30e6\u30fc\u30b6\u30fc\u306f\u4e00\u822c\u7684\u306b\u3001\u65e2\u77e5\u306e\u3082\u306e\u3092\u597d\u3080 \u7dcf\u5408\u7684\u306b\u8a55\u4fa1\u3059\u308b\u3068\u3001\u65b0\u898f\u6027\u306f\u5229\u7528\u8005\u306e\u6e80\u8db3\u5ea6\u3092\u4e0b\u3052\u308b \u65ac\u65b0\u306a\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u969b\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u7d4c\u9a13\u3092\u8003\u616e\u3059\u308b \u4e8b\u524d\u306b\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u65b0\u5947\u6027\u3092\u8aac\u660e\u3059\u308b \u304a\u3059\u3059\u3081\u306e\u65b0\u5947\u9805\u76ee\u3092\u305d\u308c\u305e\u308c\u8aac\u660e\u3059\u308b \u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff08Serendipity\uff09 \u63a8\u85a6\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u9a5a\u304d\u3092\u4e0e\u3048\u308b\u304b\u5426\u304b \uff08\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30a4\u30c6\u30e0\u3092\u81ea\u8eab\u3067\u306f\u691c\u7d22\u3067\u304d\u306a\u3044\uff09 \u7279\u5b9a\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3089\u308c\u305f\u6642\u306e\u9a5a\u304d \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u5229\u7528\u3057\u3066\u8a08\u7b97\u3059\u308b\uff1f \u4e88\u60f3\u5916\u3055 \\[ EXEXP = \\frac{1}{|L_{i}|}\\sum^{|L_i|}_{i=1}max(P(s_i)-prim(s_i),0)\u30fbrel(s_i) \\\\where ~ s_i:i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0 \\\\L_i: \u8a55\u4fa1\u6e08\u307f\u306e\u63a8\u85a6\u30ea\u30b9\u30c8 \\\\rel(s_i):\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0s_i\u306b\u305f\u3044\u3059\u308b\u8a55\u4fa1 \\\\P(s_i): \u30bf\u30fc\u30b2\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u3067\u4e88\u6e2c\u3055\u308c\u305f\u8a55\u4fa1 \\\\prim(s_i): \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u30b7\u30b9\u30c6\u30e0\u3067\u4e88\u6e2c\u3055\u308c\u305f\u8a55\u4fa1 \\] \\[ UNEXP = RS / PM \\\\SRDP = \\frac{|UNEXP \\cap USEFUL|}{N} \\\\where ~ RS: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\PM: Primitive\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\UNEXP: \u4e88\u60f3\u5916\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\USEFUL: \u6709\u7528\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\] \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30da\u30fc\u30b9\u306e\u591a\u69d8\u6027 \u3042\u308b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u7fa4\u306f\u3001\u4ed6\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3082\u63a8\u85a6\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b \\[ div_{a,v} = -\\sum_{i \\in L_{a,u \\cap R_{u}}}p_{u,i}logp_{u,i} \\\\p_{u,i} = \\frac{\\sum_{a \\in A}\\delta(a,u,i)}{|A|} \\\\where ~ A: \u63a8\u85a6\u3057\u305f\u96c6\u5408 \\\\a: Target\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1 \\\\L_{a,u}: \u30e6\u30fc\u30b6\u30fcu\u306e\u305f\u3081\u306b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0a\u306b\u3088\u308a\u63d0\u4f9b\u3055\u308c\u305f\u63a8\u85a6\u30ea\u30b9\u30c8 \\\\R_u: \u30e6\u30fc\u30b6\u30fcu\u306b\u95a2\u9023\u3059\u308b\u30a2\u30a4\u30c6\u30e0 \\\\\\delta :1 if i \\in L_{a,u}\\cap R_u~and~0~otherwise \\] \u30ce\u30d9\u30eb\u30c6\u30a3\uff08Novelty\uff09 \u63a8\u85a6\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u672a\u77e5\u3067\u3042\u308b\u304b\u5426\u304b Discovery ratio, Presicion of novelty, Item novelty, Temporal novelty, Novelty based on HLU, Long tail metric, Generalized novelty model, Unexpectedness, Entropy-based diversity, Unserendipity, HLU of serendipity \u6e2c\u308a\u65b9 \u7279\u5b9a\u30a2\u30a4\u30c6\u30e0\u3068\u306e\u4ed8\u304d\u5408\u3044\u65b9\u3092\u805e\u304f \u30a2\u30a4\u30c6\u30e0\u9593\u306e\u4e00\u822c\u7684\u306a\u4eba\u6c17\u5ea6\u3084\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b \u30e6\u30fc\u30b6\u30fcX\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u884c\u5217\u306b\u304a\u3044\u3066\u30010\u304b1\u304b\uff08\u77e5\u3063\u3066\u3044\u308b\u304b\u77e5\u3089\u306a\u3044\u304b\uff09\u306b\u306a\u308b \u767a\u898b\u7387 \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u3001\u3069\u308c\u3060\u3051\u30e6\u30fc\u30b6\u30fc\u304c\u77e5\u3089\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u304c\u3042\u308b\u304b \\[ Discovery = \\frac{|D_{i} \\cap L_{i}|}{|L_{i}|} \\\\where~D_{i}:\u30e6\u30fc\u30b6\u30fci\u304c\u77e5\u3089\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\\\L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u5bfe\u3059\u308b\u63a8\u85a6\u30ea\u30b9\u30c8 \\] \u30ce\u30d9\u30eb\u30c6\u30a3\u306e\u7cbe\u5ea6 \\[ Precision(novelty) = \\frac{|C_{i} \\cap L_{i}|}{|L_{i}|} \\\\Recall(novelty) = \\frac{|C_{i} \\cap L_{i}|}{|C_{i}|} \\\\where~C_{i}:\u30e6\u30fc\u30b6\u30fci\u304c\u77e5\u3089\u306a\u3044\u304b\u3064\u3001\u597d\u3080\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\\\L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u5bfe\u3059\u308b\u63a8\u85a6\u30ea\u30b9\u30c8 \\] \u30a2\u30a4\u30c6\u30e0\u30ce\u30d9\u30eb\u30c6\u30a3 \u304a\u3059\u3059\u3081\u30a2\u30a4\u30c6\u30e0\u306e\u65b0\u898f\u6027\u3092\u6e2c\u308b \u30ea\u30b9\u30c8\u5185\u306e\u591a\u69d8\u6027\u3092\u5229\u7528\u3059\u308b \\[ Nov_{item}(i) = N(Div(L)-Div(L-(i))) \\\\= \\frac{1}{N-1}\\sum_{j \\in L}d(i,j) \\\\where ~ |L| = N \\\\d(i,j):\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u8ddd\u96e2\u3092\u6e2c\u308b\u95a2\u6570 \\\\Div(): \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u591a\u69d8\u6027\u3092\u6e2c\u308b\u95a2\u6570\\\\ \\] \u30c6\u30f3\u30dd\u30e9\u30ea\u30fc\u30ce\u30d9\u30eb\u30c6\u30a3 \u904e\u53bb\u306e\u63a8\u85a6\u30ea\u30b9\u30c8\u3068\u306f\u7570\u306a\u308b\u63a8\u85a6\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u6e2c\u5b9a\u3059\u308b \\[ Nov_{tmp}(L_{i}) = \\frac{|\\{ x \\in L_{i}|x \\not= S_{past}\\}}{|L_{i}|} \\\\where~S{past} = \\bigcup^{i-1}_{j=1}L_{i} \\] \u534a\u6e1b\u671f\u30d9\u30fc\u30b9\u306e\u30ce\u30d9\u30eb\u30c6\u30a3 \u3042\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u3001\u901a\u5e38\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u304b\u3089\u306e\u30b2\u30a4\u30f3\u3092\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5143\u306b\u6e1b\u5c11\u3055\u305b\u3066\u3044\u304f \u63a8\u85a6\u3057\u3066\u3044\u308b\u304c\u8cb7\u308f\u308c\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306f\u3001\u8a55\u4fa1\u3092\u5272\u308a\u5f15\u3044\u3066\u3044\u304f \u534a\u6e1b\u671f\u8a55\u4fa1\u95a2\u6570 \\[ R_{u} = \\sum_{j}\\frac{max(r_{u,j}-default, 0)}{2^{(j-1)/(\\alpha-1)}} \\\\where~r_{u,j}\uff1a\u30e6\u30fc\u30b6u\u304cj\u3068\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0 \\\\default:\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a55\u4fa1\u5024\uff08\u901a\u5e38\u306f\u5e73\u5747\u5024\uff09\\\\\\alpha : \u534a\u6e1b\u671f\u30d1\u30e9\u30e1\u30fc\u30bf \\] NHLU \\[ f(i) = log_{2}(\\frac{n}{n_{i}}) \\\\NHLU_{u} = \\sum^{N}_{i}f(i)\\frac{max(r_{u,i}-default, 0)}{2^{(i-1)/(\\alpha-1)}} \\\\where~n:\u30e6\u30fc\u30b6\u30fc\u6570 \\\\n_{i}: \u30a2\u30a4\u30c6\u30e0i\u3092\u9078\u3093\u3060\u30e6\u30fc\u30b6\u30fc\u6570 \\] \u30ed\u30f3\u30b0\u30c6\u30fc\u30eb\u306b\u57fa\u3065\u304f\u30ce\u30d9\u30eb\u30c6\u30a3 \u9805\u76ee\u3092\u4eba\u6c17\u306b\u5408\u308f\u305b\u3066\uff13\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\uff08HEAD, MID, TAIL\uff09\u306b\u5408\u308f\u305b\u308b \u4e0a\u4f4dN\u500b\u306e\u63a8\u85a6\u304b\u3089\u3001\u30a2\u30a4\u30c6\u30e0a_i\u3068a_j\u3092\u62bd\u51fa\u3059\u308b \u65ac\u65b0\u306a\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u80fd\u529b\u3092\u3001\u4ee5\u4e0b\u306e\u8a55\u4fa1\u30de\u30c8\u30ea\u30af\u30b9\u3067\u8a55\u4fa1\u3059\u308b ai\u2192aj HEAD MID TAIL HEAD 45% 55% 0% MID 5% 70% 25% TAIL 0% 15% 85% \u3082\u3057\u3001HEAD\u2192HEAD\u304c\u5927\u304d\u3051\u308c\u3070\u3001\u30ce\u30d9\u30eb\u30c6\u30a3\u306f\u4f4e\u3044 \u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u304c\u5165\u308c\u66ff\u308f\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u6a19\uff1f \u591a\u69d8\u6027\uff08Diversity\uff09 \u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3067\u304d\u308b\u304b\u3069\u3046\u304b Aggregate diversity, Inter-user diversity, List personalization metric, Gini codfficient, Temporal diversity, Intra-list similarity, Subtopic retrieval, MMR, alpha-nDCG Aggregate diversity \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u81ea\u4f53\u306e\u591a\u69d8\u6027 \u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\u3092\u96c6\u8a08\u3059\u308b \u3053\u306e\u5024\u304c\u9ad8\u3044\u3053\u3068\u306f\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u5229\u7528\u8005\u306b\u7570\u306a\u308b\u9805\u76ee\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3059 \\[ Aggdiv = |\\bigcup_{n \\in U}L_{u}|\\\\ where~U:\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\\\\ ~L_{u}: \u30e6\u30fc\u30b6\u30fcu\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\] \u5206\u6bcd\u306b\u5168\u30a2\u30a4\u30c6\u30e0\u96c6\u5408\u3092\u3068\u308b\u3053\u3068\u3067\u3001\u5168\u4f53\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u3046\u3061\u3069\u308c\u3060\u3051\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3067\u304d\u305f\u304b\u3092\u6e2c\u3063\u3066\u3044\u308b\u7814\u7a76\u3082\u5b58\u5728 \u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\u2192\u30b5\u30d6\u30ab\u30c6\u30b4\u30ea\u30fb\u30b5\u30d6\u30c8\u30d4\u30c3\u30af\u306a\u3069\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30ab\u30c6\u30b4\u30ea\u30fb\u30c8\u30d4\u30c3\u30af\u306e\u591a\u69d8\u6027\u3092\u56f3\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff08Subtopic retrieval metric\uff09 Inter-user diversity \u30e6\u30fc\u30b6\u30fc\u9593\u306e\u591a\u69d8\u6027 \u30e6\u30fc\u30b6\u30fc\u9593\u3067\u7570\u306a\u308b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u63d0\u4f9b\u3059\u308b\u4ed5\u7d44\u307f \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u308c\u307b\u3069\u30e6\u30fc\u30b6\u30fc\u500b\u4eba\u500b\u4eba\u306b\u5408\u308f\u305b\u3089\u308c\u3066\u3044\u308b\u304b(IUD) \\[ d_{u,v} = 1 - \\frac{|L_{u} \\cap L_{v}|}{N}\\\\IUD = \\frac{1}{N_{U}}\\sum_{u,v \\in U}d_{u,v}\\\\where ~ U~(and~V?): \u30e6\u30fc\u30b6\u30fc\u96c6\u5408\\\\ N =|L_{u}|=|L_{v}|,\\\\ N_{U}: U\u306e\u4e2d\u306e\uff12\u3064\u306e\u30da\u30a2\u6570\\\\ L_{u}:\u30e6\u30fc\u30b6\u30fcu\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8 \\] List personalization metric \u30ea\u30b9\u30c8\u304c\u500b\u4eba\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u304b \\[ p_{b} = \\frac{U_{b}}{U} \\\\I_{b} = log_{2}(\\frac{|U|}{U_{b}}) \\\\Per(L_{i}) = \\frac{\\sum_{b_{j} \\in L_{i}}log\\frac{|U|}{|U_{b}|}}{|L_{i}|} \\\\where ~ p_{b}: \u30a2\u30a4\u30c6\u30e0b\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u308a\u9078\u629e\u3055\u308c\u308b\u78ba\u7387\\\\I_{b}: \u30a2\u30a4\u30c6\u30e0b\u306e\u81ea\u5df1\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\\\\Per(L_{i}): \u30a2\u30a4\u30c6\u30e0\u306e\u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044\\\\U_{b}: \u30a2\u30a4\u30c6\u30e0b\u3092\u305b\u305f\u3093k\u3059\u3044\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u6570 \\] Gini\u4fc2\u6570 \u6240\u5f97\u306e\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9\u3055\u306e\u6307\u6a19\u306a\u3069\u306b\u4f7f\u308f\u308c\u308b \u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u983b\u5ea6\u304c\u3069\u308c\u3060\u3051\u504f\u3063\u3066\u3044\u308b\u304b x\u8ef8\uff1a\u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u5408\u8a08\u983b\u5ea6\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u3089\u308c\u305fx%\u306e\u5272\u5408 y\u8ef8\uff1a\u30ea\u30b9\u30c8\u5185\u306e\u9805\u76ee\u306ex%\u306e\u5408\u8a08\u983b\u5ea6 \\[ G = \\frac{B}{A+B} \\\\where: A:\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u6642\u300145\uff05\u306e\u7dda\u3068\u66f2\u7dda\u306e\u9593\u306e\u9762\u7a4d \\\\B:\u305d\u308c\u4ee5\u5916\u306e\u9762\u7a4d\uff08\u66f2\u7dda\u306e\u4e0b\u306e\u9762\u7a4d\uff09 \\] \u6642\u9593\u7684\u591a\u69d8\u6027 \u6642\u523b\u304c\u9055\u3046\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u51fa\u529b\u3059\u308b\u9805\u76ee\u304c\u7570\u306a\u308b\u5834\u5408\u306e\u6e2c\u5b9a \\[ div_{tmp}(L_{1},L_{2},N) = \\frac{|(x \\in L_{2}|x! \\ in L_{1})|}{N} \\\\where~ N=|L_{1}|=|L_{2}| \\] \u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u591a\u69d8\u6027 \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u5185\u5bb9\u306b\u5fdc\u3058\u305f\u591a\u69d8\u6027 \uff12\u3064\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u3067\u8a08\u7b97\u3055\u308c\u308b \u901a\u5e38\u3001\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u307e\u305f\u306f\u30ab\u30c6\u30b4\u30ea\u304c\u4f7f\u308f\u308c\u308b \\[ Diversity = \\sum_{l \\in L_{i},m \\in L_{i}}\\frac{1}{similarity(l,m)} \\\\where~L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8 \\] \\[ ILS(L_{i}) = \\frac{\\sum_{b_{k} \\in L_{i}} \\sum_{b_{e} \\in L_{i},b_{k} \\not= b_{e}} similarity(b_{k},b_{e})}{{}_{|L_{i}|}C_{2}} \\] MMR\uff08Maximal marginal relevance\uff09 \u672c\u6765\u306f\u691c\u7d22\u7d50\u679c\u306b\u6587\u66f8\u3092\u9078\u629e\u3059\u308b\u305f\u3081\u306e\u9805\u76ee\u9078\u629e\u6cd5 \u3053\u306e\u8003\u3048\u65b9\u3092\u3001\u63a8\u85a6\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u5229\u7528\u3059\u308b \\[ MMR_{List} = \\sum_{d_{i} \\in L}(\\alpha rel(d_{i})-(1-\\alpha )max_{d_{i}\\in L^{j-1}}sim(d_{i},d_{j})) \\\\where ~ L: \u63a8\u85a6\u30ea\u30b9\u30c8 \\\\d_{i}: \u30ea\u30b9\u30c8\u5185\u306e\u30a2\u30a4\u30c6\u30e0 \\\\rel: \u305d\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3080\u304b\u5426\u304b \\\\L^{i-1}:J\u756a\u76ee\u307e\u3067\u306e\u63a8\u85a6\u30ea\u30b9\u30c8 \\] \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1\u6307\u6a19\u306e\u6ce8\u610f\u70b9\u306a\u3069 AP\u3084nDCG\u306b\u3088\u308a\u3001\u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u63a8\u85a6\u3092\u8a55\u4fa1\u3067\u304d\u308b \u30b7\u30b9\u30c6\u30e0\u3092\u8a55\u4fa1\u3059\u308b\u5834\u5408\u3001\u8907\u6570\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u5e73\u5747\u7684\u306a\u826f\u3055\u3092\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b MAP \u30e6\u30fc\u30b6\u30fc\u96c6\u5408N\u306b\u5bfe\u3057\u3001AP\u3092\u7b97\u8853\u5e73\u5747\u3057\u305f\u5024 \\[ MAP = \\frac{1}{N}\\sum^{N}_{i=1}AP_{i} \\] \u3067\u304d\u308b\u3060\u3051\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3042\u308b\u7a0b\u5ea6\u9069\u5408\u3059\u308b\u63a8\u85a6\u3092\u63d0\u793a\u3057\u305f\u3044\u5834\u5408\u3001MAP\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206 GMAP\uff08\u5e7e\u4f55\u5e73\u5747\u3092\u7528\u3044\u305fMAP\uff09 \\[ GMAP = \\sqrt[n]{\\prod_{n}AP_{n}} \\] \u4fbf\u5b9c\u4e0a\u5909\u5f62\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u5f62\u306b\u306a\u308b \u305f\u3060\u3057\u3001\u03b5\u306f\u975e\u5e38\u306b\u5c0f\u3055\u3044\u5024\uff0810^(-5)\u7a0b\u5ea6\uff09 $$ GMAP = exp(\\frac{1}{N}\\sum^{N} {i=1}ln(AP +\\epsilon))-\\epsilon $$ \u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u3078\u306e\u63a8\u85a6\u3067\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e00\u3064\u3082\u306a\u3044\u5834\u5408\u3001GMAP\u306fMAP\u3088\u308a\u4f4e\u304f\u8a55\u4fa1\u3059\u308b \u4e0a\u4f4d10\u4f4d\u307e\u3067\u306e\u3088\u3046\u306b\u6e2c\u5b9a\u9577\u304c\u77ed\u3044\u5834\u5408\u3001MAP\u3084GMAP\u306e\u5024\u306f\u4e0d\u5b89\u5b9a\u306a\u3082\u306e\u306b\u306a\u308a\u3084\u3059\u3044 infAP\uff08inferred Average Precision\uff09 \u4e0d\u5b8c\u5168\u6027\u306a\u30c6\u30b9\u30c8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u771f\u306e\u5e73\u5747\u9069\u5408\u7387\u3092\u63a8\u5b9a\u3059\u308b \u65bd\u7b56\u306b\u5bfe\u3059\u308b\u8a55\u4fa1\u6307\u6a19 \u30a2\u30a4\u30c6\u30e0\u306e\u7279\u5b9a\u9805\u76ee\u5206\u5e03 \u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3044\u30ab\u30c6\u30b4\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306a\u3069\u306f\u3001\u63d0\u4f9b\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u7279\u5b9a\u9805\u76ee\u306b\u95a2\u3059\u308b\u5206\u5e03\u3092\u57fa\u306b\u8a55\u4fa1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b NG\u30a2\u30a4\u30c6\u30e0\u306e\u51fa\u73fe\u983b\u5ea6 \u57fa\u672c\u7684\u306b\u306f0\u3092\u76ee\u6307\u3059 \u76ee\u7684\u306e\u30a2\u30a4\u30c6\u30e0\u30fb\u30ab\u30c6\u30b4\u30ea\u7b49\u3078\u306e\u9077\u79fb\u7387 \u30e6\u30fc\u30b6\u30fc\u306e\u9077\u79fb\u5148\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u3044\u5834\u5408\u306b\u8a08\u6e2c \u30a2\u30a4\u30c6\u30e0\u3054\u3068\u306ePV\u6570\u306e\u30b8\u30cb\u4fc2\u6570 \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u30d3\u30e5\u30fc\u304c\u504f\u3089\u306a\u3044\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3092\u5c0e\u5165\u3057\u305f\u969b\u306b\u3001\u504f\u308a\u304c\u662f\u6b63\u3055\u308c\u308b\u304b\u8a08\u6e2c interleaving \u65b0\u3057\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u53e4\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4ea4\u4e92\u306b\u51fa\u3057\u3001\u3069\u3061\u3089\u304c\u826f\u3044\u53cd\u5fdc\u304b\u8a55\u4fa1\u3059\u308b https://www.wantedly.com/companies/wantedly/post_articles/155593 AB\u30c6\u30b9\u30c8\u3088\u308a10\u500d\u4ee5\u4e0a\u65e9\u304f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6709\u610f\u5dee\u3092\u8a55\u4fa1\u3067\u304d\u308b \u5f71\u97ff\u304c\u5c0f\u3055\u3044\u5834\u5408\u306f\u3001\u4f7f\u3048\u308b 2017\u5e74\u3067\u306e\u4f01\u696d\u306e\u72b6\u6cc1\uff08RecSys 2017 Conference\uff09 - \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5b66\u4f1a\u3067\u30012017\u5e74\u73fe\u5728\u3067\u306e\u4f01\u696d\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u6307\u6a19\u306f\u3001\u591a\u3044\u9806\u306b\u4ee5\u4e0b\u306e\u901a\u308a 1. MRR\uff08\u5e8f\u5217\u3092\u8003\u616e\u3057\u305f\u63a8\u85a6\u30ea\u30b9\u30c8\u6307\u6a19\u30fb\u91cd\u307f\u306f\u5e8f\u5217\u306e\u9006\u6bd4\uff09 2. AUC\uff08\u5206\u985e\u554f\u984c\uff09 3. Precision\uff08\u9069\u5408\u30a2\u30a4\u30c6\u30e01\u3064\u767a\u898b\uff09 4. nDCG\uff08\u5e8f\u5217\u3092\u8003\u616e\u3057\u305f\u63a8\u85a6\u30ea\u30b9\u30c8\u6307\u6a19\u30fb\u91cd\u307f\u3092\u8abf\u6574\u53ef\u80fd\uff09 5. Recall\uff08\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u5168\u5217\u6319\uff09 \u8ad6\u6587\u3067\u306f\u63a2\u7d22\u91cd\u8996\u306e\u8a55\u4fa1\u6307\u6a19\u306a\u3069\u306f\u63d0\u6848\u3055\u308c\u3066\u306f\u3044\u308b\u304c\u3001\u5b9f\u74b0\u5883\u3067\u306f\u7b54\u3048\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3057\u306b\u304f\u304f\u3001\u73fe\u5834\u3067\u306f\u307e\u3060\u3042\u307e\u308a\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3002 MRR\u3084nDCG\u306f\u3001\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u624b\u6cd5\u3060\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002 \u53c2\u8003\u6587\u732e \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\uff1ahttp://www.kamishima.net/archive/recsysdoc.pdf \u8a55\u4fa1\u6307\u6a19\u306b\u3064\u3044\u3066\uff1ahttps://techblog.nhn-techorus.com/archives/4778 \u691c\u7d22\u30fb\u63a8\u85a6\u306e\u8a55\u4fa1\u65b9\u6cd5\u3084\u8a55\u4fa1\u6307\u6a19\uff1ahttps://qiita.com/rilmayer/items/4c2c40640c0892e13257 \u8a55\u4fa1\u6307\u6a19\u306e\u5206\u985e\uff1ahttps://blog.brainpad.co.jp/entry/2017/08/25/140000 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u30aa\u30d5\u30e9\u30a4\u30f3\u8a55\u4fa1\uff1ahttp://soc-research.org/wp-content/uploads/2014/11/OfflineTest4RS.pdf","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_1","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u6027\u80fd\u8a55\u4fa1\u306b\u95a2\u3059\u308b\u7814\u7a76\u306e\u307e\u3068\u3067\u3059\u3002","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_2","text":"","title":"\u5206\u985e\u30fb\u4f7f\u3044\u5206\u3051"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_3","text":"\u30e6\u30fc\u30b6\u30fc\u8a55\u4fa1\u306e\u4e88\u6e2c\u306b\u7528\u3044\u3089\u308c\u308b 1~5\u3084\u30011~10\u306e\u8a55\u4fa1\u306e\u4e88\u6e2c \u5206\u985e\u554f\u984c\u3068\u3057\u3066\u3082\u89e3\u3051\u308b\u304c\u5e8f\u5217\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u56de\u5e30\u554f\u984c\u3068\u3057\u3066\u89e3\u3051\u308b \u9023\u7d9a\u5024\u3067\u4e88\u6e2c\u3057\u305f\u65b9\u304c\u3001\u305d\u306e\u5f8c\u306e\u30bd\u30fc\u30c8\u306a\u3069\u306b\u4f7f\u3044\u3084\u3059\u3044","title":"\u56de\u5e30\u7cbe\u5ea6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_4","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u30fb\u8cfc\u8cb7\u30fb\u95b2\u89a7\u306e\u6709\u7121\u306e\u4e88\u6e2c\u306b\u7528\u3044\u3089\u308c\u308b 0\u304b1\u304b\u3001\u597d\u304d\u304b\u5acc\u3044\u304b\u3001\u3084\u3063\u305f\u304b\u3084\u3089\u306a\u3044\u304b\u306e\u4e88\u6e2c","title":"\u5206\u985e\u7cbe\u5ea6\uff08\u4e8c\u5024\u5206\u985e\u304c\u4e3b\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_5","text":"\u63a8\u85a6\u3057\u305f\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u30ea\u30b9\u30c8\u306e\u5e8f\u5217\u6027\u306f\u8003\u616e\u3055\u308c\u308b\u304c\u3001\u4f4d\u7f6e\u304c\u8003\u616e\u3055\u308c\u306a\u3044\u53e4\u3044\u6307\u6a19 {2,1,3,4,5}\u3068\u63a8\u85a6\u3057\u305f\u3082\u306e\u3068\u3001{1,2,3,5,4}\u3068\u63a8\u85a6\u3057\u305f\u3082\u306e\u3092\u8a55\u4fa1\u3057\u305f\u5834\u5408\u3092\u8003\u3048\u308b \u30ea\u30b9\u30c8\u3067\u306e\u63a8\u85a6\u306f\u3001\u9806\u4f4d\u304c\u5c0f\u3055\u3044\u3082\u306e\u304c\u76f8\u5bfe\u7684\u306b\u5927\u304d\u304f\u8a55\u4fa1\u3055\u308c\u308b\u3079\u304d\u3060\u304c\u3001\u3053\u3053\u3067\u7d39\u4ecb\u3059\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u533a\u5225\u304c\u3064\u3051\u3089\u308c\u306a\u3044 \u4e00\u3064\u5f8c\u3067\u7d39\u4ecb\u3059\u308b\u3001\u300e\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027\u300f\u3067\u306f\u533a\u5225\u3067\u304d\u308b\uff08\u524d\u8005\u304c\u60aa\u304f\u3001\u5f8c\u8005\u304c\u826f\u304f\u51fa\u308b\uff09","title":"\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_6","text":"\u63a8\u85a6\u3057\u305f\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u30ea\u30b9\u30c8\u306e\u5e8f\u5217\u6027\u30fb\u4f4d\u7f6e\u304c\u8003\u616e\u3055\u308c\u308b\u65b0\u3057\u3044\u6307\u6a19 \u30ea\u30b9\u30c8\u306e\u5e8f\u76e4\u306e\u5e8f\u5217\u306e\u9593\u9055\u3044\u306b\u5bfe\u3057\u3001\u5927\u304d\u306a\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4e0e\u3048\u308b","title":"\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_7","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u3084\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u8a55\u4fa1\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u308b\u65b0\u3057\u3044\u8a55\u4fa1\u6307\u6a19 \u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u30ab\u30d0\u30fc\u7387 \u65b0\u3057\u3044\u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u3084\u3001\u63a8\u85a6\u3059\u308b\u304c\u8cb7\u308f\u308c\u306a\u3044\u3082\u306e\u306b\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4e0e\u3048\u308b\u306a\u3069 \u8a55\u4fa1\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u306e\u5165\u624b\u304c\u96e3\u3057\u3044\u306e\u304c\u8ab2\u984c","title":"\u305d\u306e\u4ed6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_8","text":"\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b \u6b63\u78ba\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4e88\u6e2c\u3059\u308b\u80fd\u529b\u3092\u6301\u3063\u3066\u3044\u308b\u304b \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u5024\u3068\u3001\u4e88\u6e2c\u3057\u305f\u8a55\u4fa1\u5024\u306e\u5dee \u8a55\u4fa1\u95b2\u89a7\u30bf\u30b9\u30af\uff08\u8a55\u4fa1\u9806\u306a\u3069\uff09\u3067\u306f\u3001\u8a55\u4fa1\u5024\u305d\u306e\u3082\u306e\u3092\u5229\u7528\u8005\u306f\u898b\u308b \u305d\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u8a55\u4fa1\u5024\u306e\u4e88\u6e2c\u7cbe\u5ea6\u306e\u30ba\u30ec\u3092\u91cd\u8996\u3059\u3079\u304d","title":"\u56de\u5e30\u7cbe\u5ea6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#mae","text":"\\[ MAE = \\frac{1}{N}\\sum^{N}_{i=1}|\\hat{r_{i}}-r_{i}| \\]","title":"MAE\uff08\u5e73\u5747\u7d76\u5bfe\u8aa4\u5dee\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#mse","text":"\\[ MSE = \\frac{1}{N}\\sum^{N}_{i=1}(\\hat{r_{i}}-r_{i})^{2} \\]","title":"MSE\uff08\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#maek-rmsek","text":"\u5b9f\u969b\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u306e\u306f\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u5024\u304c\u9ad8\u3044\u4e0a\u4f4d\u6570\u500b \u4e0a\u4f4d\u6570\u30a2\u30a4\u30c6\u30e0\uff08TopK\uff09\u3092\u5bfe\u8c61\u306bMAE, RMSE\u3092\u7b97\u51fa\u3057\u3001\u8a55\u4fa1\u3059\u308b \\[ MAE@k = \\frac{1}{K}\\sum^{K}_{i=1}MAE_{i} \\]","title":"MAE@{k}, RMSE@{k}"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#2","text":"\u30af\u30ea\u30c3\u30af\u30fb\u8cfc\u5165\u306e\u6709\u7121\u306a\u3069\u306e\uff12\u5024\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b","title":"\u5206\u985e\u7cbe\u5ea6\uff082\u5024\u5206\u985e\u304c\u4e3b\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#acc","text":"\u5229\u7528\u8005\u306e\u95a2\u5fc3\u304c\u3001\u4e88\u6e2c\u7d50\u679c\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u4e00\u81f4\u3057\u305f\u5272\u5408 \u8a55\u4fa1\u5024\u306a\u3089\u3070\u3001\u9ad8\u8a55\u4fa1\u304b\u4f4e\u8a55\u4fa1\u304b\u306a\u3069","title":"\u6b63\u89e3\u7387\uff08Acc\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#precisionrecallfroc","text":"\\[ Rrecision = \\frac{\u63a8\u85a6\u306b\u542b\u307e\u308c\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570}{\u63a8\u85a6\u306b\u542b\u307e\u308c\u308b\u5168\u30a2\u30a4\u30c6\u30e0\u306e\u6570} \\] \\[ Recall = \\frac{\u691c\u7d22\u7d50\u679c\u306b\u542b\u307e\u308c\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570}{\u5168\u3066\u306e\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570} \\] \u9069\u5408\u30a2\u30a4\u30c6\u30e0\u3092\u4e00\u3064\u898b\u3064\u3051\u308c\u3070\u826f\u3044\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u767a\u898b\u30bf\u30b9\u30af\u3067\u306f\u3001\u9069\u5408\u7387 \u63a8\u85a6\u8aa4\u308a\u306e\u5c11\u306a\u3055 \u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u4e0a\u4f4dn\u4ef6\u306e\u5185\u3001\u5b9f\u969b\u306b\u76ee\u7684\u3092\u679c\u305f\u3057\u305f\u3082\u306e\u306e\u5272\u5408 \u5168\u3066\u306e\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u3092\u898b\u3064\u3051\u305f\u3044\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u5217\u6319\u30bf\u30b9\u30af\u3067\u306f\u3001\u518d\u73fe\u7387\u3092\u91cd\u8996\u3059\u308b \u63a8\u85a6\u6f0f\u308c\u306e\u5c11\u306a\u3055 \u76ee\u7684\u3092\u679c\u305f\u3057\u305f\u3082\u306e\u306e\u3046\u3061\u3001\u63a8\u85a6\u3067\u4e0a\u4f4dn\u4ef6\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5272\u5408 \u7dcf\u5408\u7684\u306a\u5224\u65ad\u3092\u3057\u305f\u3044\u5834\u5408\u306fE-measure\u3084F-measure\u3084ROC \\[ F = \\frac{1}{\\frac{\\alpha}{Precision}+\\frac{1-\\alpha}{Recall}} \\] alpha = 0.5\u306e\u6642\u306fF1\u5024","title":"\u9069\u5408\u7387\uff08Precision\uff09\u3068\u518d\u73fe\u7387\uff08Recall\uff09\u3001F\u5c3a\u5ea6\u3001ROC"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#n-points-interpolated-precision","text":"N\u70b9\u306eRecall\u306e\u5e73\u5747\u3092\u53d6\u308b \u901a\u5e38\u3001N=11(recall 0.0, 0.1, 0.2, ..., 0.9, 1.0) \\[ nAIP = \\frac{1}{N}\\sum_{i}InterPrecision_{i} \\]","title":"n-points Interpolated Precision"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#roc-auc","text":"\\[ AUC(f) = \\frac{\\sum_{t_{0}\\in D^{0}}\\sum_{t_{1}\\in D^{1}}1|f(t_{0})<f(t_{1})|}{|D^{0}||D^{1}|} \\] where 1|f(t_{0})<f(t_{1})|\u306f\u3001\u3082\u3057f(t0) < f(t1)\u306a\u3089\u30701\u3001\u305d\u308c\u4ee5\u5916\u306a\u3089\u30700\u3092\u53d6\u308b D0\u3068\u306f\u8ca0\u4f8b\u306e\u30b5\u30f3\u30d7\u30eb\u96c6\u5408 D1\u3068\u306f\u7cbe\u970a\u306e\u30b5\u30f3\u30d7\u30eb\u96c6\u5408","title":"ROC AUC"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#hit-rate","text":"\u5bfe\u8c61\u3068\u306a\u308b\u5358\u9805\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u6307\u6a19\uff082\u5024\u30c7\u30fc\u30bf\u5411\u3051\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304b\u3089\u30010\u3067\u306a\u3044\u9805\u76ee\u3092\u691c\u7d22 \u30a2\u30a4\u30c6\u30e0\u304c\u63a8\u85a6\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u308b\u304b\u78ba\u304b\u3081\u308b Hit-rate\u3092\u8a08\u7b97\u3059\u308b \\[ hit-rate = \\frac{num_{hits}}{n} \\] num_{hits}: \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u6570 n:\u5168\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0\u6570","title":"Hit-rate"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_9","text":"\u6bd4\u8f03\u7684\u53e4\u3044\u30e9\u30f3\u30ad\u30f3\u30b0\u6307\u6a19 \u5e8f\u5217\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u30e9\u30f3\u30af\u306e\u4f4d\u7f6e\u305d\u306e\u3082\u306e\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u591a\u3044","title":"\u30ea\u30b9\u30c8\u306e\u95a2\u9023\u6027\u306e\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#rank-correlation","text":"","title":"\u9806\u4f4d\u76f8\u95a2\uff08rank correlation\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#spearmans-rank","text":"\\[ r_{Spearman}= 1 - \\frac{6}{n(n^{2}-1)}\\sum^{n}_{i=1}(x_{i}-y{i})^{2} \\] x_i: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0i\u306e\u9806\u4f4d y_i: \u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0i\u306e\u9806\u4f4d \u4fc2\u6570\u306e6/{n*(n^2-1)}\u306e\u51fa\u3057\u65b9\u306b\u3064\u3044\u3066\u306f\u3001\u4e8c\u5909\u91cf\u6b63\u898f\u5206\u5e03\u3092\u3044\u3058\u308c\u3070\u51fa\u3066\u304f\u308b\uff1f \u6b63\u3057\u304f\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u3066\u3044\u308c\u3070\uff11 \u6570\u5024\u306e\u5927\u5c0f\u306f\u95a2\u4fc2\u306a\u3057","title":"\u30b9\u30d4\u30a2\u30de\u30f3\u9806\u4f4d\u76f8\u95a2\uff08Spearman's rank\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#kendalls-rank","text":"\u4e8c\u3064\u306e\u9805\u76ee\u9593\u306e\u5927\u304d\u3055\u306e\u95a2\u4fc2\u306b\u3064\u3044\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u4e00\u81f4\u3092\u78ba\u8a8d\u3059\u308b \u5168\u3066\u306e\u30da\u30a2\u304cn*(n-1)/2\u500b \u3082\u3057\u3001\u300c\u30e6\u30fc\u30b6\u30fcS\u306eA\u306e\u8a55\u4fa1\uff1c\u30e6\u30fc\u30b6\u30fcS\u306eB\u306e\u8a55\u4fa1\u300d\u304b\u3064\u300c\u30e6\u30fc\u30b6\u30fcT\u306eA\u306e\u8a55\u4fa1\uff1c\u30e6\u30fc\u30b6\u30fcT\u306eB\u306e\u8a55\u4fa1\u300d\u306a\u3089\u3070P+=1 \u3082\u3057\u3001\u300c\u30e6\u30fc\u30b6\u30fcS\u306eA\u306e\u8a55\u4fa1\uff1e\u30e6\u30fc\u30b6\u30fcS\u306eB\u306e\u8a55\u4fa1\u300d\u304b\u3064\u300c\u30e6\u30fc\u30b6\u30fcT\u306eA\u306e\u8a55\u4fa1\uff1e\u30e6\u30fc\u30b6\u30fcT\u306eB\u306e\u8a55\u4fa1\u300d\u306a\u3089\u3070P+=1 \u305d\u308c\u4ee5\u5916\u306f\u3001Q+=1\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u3092\u8a08\u7b97\u3059\u308b \\[ \\tau = \\frac{P-Q}{\\frac{1}{2}n(n-1)}=\\frac{2P}{\\frac{1}{2}n(n-1)}-1 \\]","title":"\u30b1\u30f3\u30c9\u30fc\u30eb\u30e9\u30f3\u30af\uff08Kendall's rank\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#ndmpnormalized-distance-based-performance-measure","text":"C-\uff1a\u77db\u76fe\u3057\u305f\u9078\u597d\u95a2\u4fc2\u306e\u6570 \u30e6\u30fc\u30b6\u30fc\u306f\u30a2\u30a4\u30c6\u30e0A\u306e\u8a55\u4fa1\uff1e\u30a2\u30a4\u30c6\u30e0B\u306e\u8a55\u4fa1\u306b\u5bfe\u3057\u3001\u63a8\u85a6\u304c\u30a2\u30a4\u30c6\u30e0B\u306e\u8a55\u4fa1\uff1e\u30a2\u30a4\u30c6\u30e0A\u306e\u8a55\u4fa1\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u6570 \u4e0b\u306e\u8868\u306eD-E Cu\uff1a\u63a8\u85a6\u3068\u30e6\u30fc\u30b6\u30fc\u3067\u540c\u4e00\u306e\u9078\u597d\u95a2\u4fc2\u306e\u6570 \u4e0b\u306e\u8868\u306eB-C\u306a\u3069 Ci\uff1a\u63a8\u85a6\u3068\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u9593\u306e\u30a2\u30a4\u30c6\u30e0\u30da\u30a2\u306e\u512a\u5148\u95a2\u4fc2\u6570\u306e\u5408\u8a08 \\[ NDMP = \\frac{2C^{-}+C^{u}}{2C^{i}} \\] Rank Recommend User 1 A A 2 B B 3 C C 4 D E 5 E D \\[ \u4e0a\u306e\u8868\u306eNDMP = \\frac{2*1+9}{2*10}=\\frac{11}{20}=0.55 \\]","title":"NDMP\uff08Normalized distance-based performance measure\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_10","text":"\u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u4e26\u3073\u65b9\u306e\u826f\u3055\u3092\u8a55\u4fa1\u3059\u308b \u6700\u3082\u95a2\u9023\u3059\u308bN\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u6b63\u3057\u3044\u9806\u756a\u3067\u4e88\u6e2c\u3057\u3066\u3044\u308b\u304b \u9069\u5408\u30a2\u30a4\u30c6\u30e0\u767a\u898b\u3092\u76ee\u7684\u3068\u3059\u308b\u5834\u5408\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u306f\u610f\u601d\u6c7a\u5b9a\u652f\u63f4\u306e\u5074\u9762\u304c\u8981\u6c42\u3055\u308c\u308b \u3053\u3046\u3057\u305f\u5834\u5408\u306f\u3001\u8a55\u4fa1\u5024\u306e\u5927\u5c0f\u3088\u308a\u3082\u8a55\u4fa1\u306e\u4ee3\u511f\u3092\u91cd\u8996\u3059\u3079\u304d \u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u306e\u5b8c\u5168\u306a\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u53d6\u5f97\u3059\u306e\u306f\u96e3\u3057\u3044 \u5927\u4f53\u3053\u3053\u3067\u554f\u984c\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u5e8f\u5217\u306b\u5bfe\u3059\u308b\u91cd\u307f","title":"\u30e9\u30f3\u30af\u4ed8\u3051\u3055\u308c\u305f\u63a8\u85a6\u306e\u8a55\u4fa1\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#ap","text":"\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u63a8\u85a6\u306b\u304a\u3044\u3066\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u898b\u3064\u304b\u308b\u305f\u3073\u306b\u305d\u306e\u4f4d\u7f6e\u3067\u306e\u9069\u5408\u7387\u3092\u6c42\u3081\u3001\u305d\u306e\u7b97\u8853\u5e73\u5747\u3092\u53d6\u3063\u305f\u5024 \\[ AP = \\frac{1}{R}\\sum^{n}_{r=1}Prec(r)I(r) \\] \u3053\u3053\u3067\u3001Prec\u00ae\u306f\u9069\u5408\u7387Precision\u3001I\u00ae\u306fr\u4f4d\u304c\u9069\u5408\u6587\u66f8\u306e\u5834\u54081\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f0\u3092\u53d6\u308b\u95a2\u6570 \u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u5358\u7d14\u306b\u9069\u5408\u3057\u305f\u304b\u5426\u304b\u306e\u4e8c\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u306b\u306a\u308b \u5b9f\u969b\u306e\u63a8\u85a6\u306e\u8a55\u4fa1\u3067\u306f\u3001\u90e8\u5206\u9069\u5408\u30fb\u591a\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u6307\u6a19\u3092\u7528\u3044\u308b","title":"AP\uff08\u5e73\u5747\u9069\u5408\u7387\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#mapmean-average-precision","text":"MAP@{k}\u306a\u3089\u3070\u3001\u4e0a\u4f4dK\u500b\u306eAP\u306e\u5e73\u5747\u3092\u53d6\u308b \\[ MAP = \\frac{1}{N}\\sum^{N}_{i=1}AP_{i} \\]","title":"MAP\uff08Mean Average Precision\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#mrr","text":"\u6700\u521d\u306b\u73fe\u308c\u305f\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u9806\u4f4d\u306e\u9006\u6570\u306e\u5e73\u5747\u3092\u3068\u3063\u305f\u3082\u306e \u5168\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u63a8\u85a6\u30ea\u30b9\u30c8\u3092\u4f5c\u6210 \u30e6\u30fc\u30b6\u30fc\u304c\u55dc\u597d\u3059\u308b\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e0a\u4f4d\u4f55\u756a\u76ee\u3067\u73fe\u308c\u305f\u304b\u8abf\u3079\u308b \u3053\u306e\u9806\u4f4d\u306e\u9006\u6570\u3092\u53d6\u308b\uff08\u30ea\u30b9\u30c8\u306b\u6b63\u89e3\u304c\u542b\u307e\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u9006\u3092\u3068\u3089\u305a\u306b0\u3068\u306a\u308b\uff09 \u5168\u30e6\u30fc\u30b6\u30fc\u3067\u5e73\u5747\u3092\u53d6\u308b \\[ MRR = \\frac{1}{N}\\sum^{N}_{i=1}\\frac{1}{i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u9069\u5408\u9806\u4f4d} \\] \u30e9\u30f3\u30ad\u30f3\u30b0\u4e0b\u4f4d\u3067\u306e\u9806\u4f4d\u306e\u5dee\u306f\u3042\u307e\u308a\u6307\u6a19\u306b\u5f71\u97ff\u3057\u306a\u3044","title":"MRR"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#cg","text":"DCG\u306e\u539f\u578b \u6b63\u89e3\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u5229\u5f97\uff08\u30b9\u30b3\u30a2\uff09\u3092\u8db3\u3057\u5408\u308f\u305b\u3066\u3044\u304f \\[ CG = \\sum^{n}_{r=1}g(r) \\]","title":"CG\uff08\u6e1b\u640d\u3057\u306a\u3044\u7d2f\u7a4d\u5229\u5f97\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#ndcg","text":"\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u6570\u3092\u52a0\u7b97\u3057\u3066\u3044\u304f\u969b\u306b\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e0b\u4f4d\u306b\u6765\u308b\u307b\u3069\u6e1b\u70b9\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4e0a\u4f4d\u307b\u3069\u5927\u304d\u304f\u3001\u4e0b\u4f4d\u307b\u3069\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306a\u4fc2\u6570\u3092\u304b\u3051\u305f\u4e0a\u3067\u5408\u8a08\u3059\u308b \u3053\u306e\u969b\u306e\u4fc2\u6570\u3092\u6e1b\u640d\u5229\u5f97discounted gain\u3068\u3044\u3046 \u9069\u5408\u5ea6\u306b\u5fdc\u3058\u305f\u4fa1\u5024\u3092\u5229\u5f97gain\u3068\u3057\u3066\u8003\u3048\u3001\u30e9\u30f3\u30af\u304c\u4e0b\u4f4d\u306b\u306a\u308b\u307b\u3069\u305d\u306e\u4fa1\u5024\u3092\u4e0b\u3052\u308b\u6e1b\u640d\u5229\u5f97discounted gain\u3092\u5c0e\u5165\u3057\u3001\u305d\u306e\u7d2f\u7a4d\u8a71\u3092\u6b63\u898f\u5316\u3057\u305f\u5024 DCG\uff08\u6e1b\u640d\u7d2f\u8a08\u5229\u5f97\uff09\u306f\u4e0b\u8a18 g\u00ae\u306fr\u4f4d\u306b\u304a\u3051\u308b\u5229\u5f97 \u30e6\u30fc\u30b6\u30fc\u306e\u5b9f\u969b\u306e\u8a55\u4fa1\u5024\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b 1\u4f4d\u306a\u3089\uff15\u70b9\u30012\u4f4d\u306a\u3089\uff14\u70b9\u30013\u4f4d\u306a\u3089\uff13\u70b9\u30014\u4f4d\u306a\u3089\uff12\u70b9\u3001\u2026\u2026\u3068\u9069\u5f53\u306b\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3063\u3066\u3082\u8a08\u7b97\u3067\u304d\u308b \\[ DCG = \\sum^{n}_{r=1}\\frac{g(r)}{log_{2}(r+1)} \\] IDCG\u306f\u7406\u60f3\u7684\u63a8\u85a6\u306b\u304a\u3051\u308b\u6e1b\u640d\u5229\u5f97\u306e\u63a8\u85a6\u8a71 \u6b63\u898f\u5316\u3055\u308c\u305fnDCG\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b \\[ nDCG = \\frac{DCG}{IDCG} \\]","title":"nDCG\uff08\u591a\u5024\u9069\u5408\u6027\u306b\u57fa\u3065\u304f\u8a55\u4fa1\u6307\u6a19\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#arhr-average-reciprocal-hit-rank","text":"\uff12\u5024\u30c7\u30fc\u30bf \\[ ARHR = \\frac{1}{n}\\sum_{i \\in Z_{l}}\\frac{1}{pos(i)} \\] Z_{l}: \u30e6\u30fc\u30b6\u30fc\u306e\u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u30bc\u30ed\u3067\u306a\u3044\u9805\u76ee pos: \u30a2\u30a4\u30c6\u30e0\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f4d\u7f6e","title":"ARHR (Average reciprocal hit rank)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#half-life-utility-metric","text":"\u30a2\u30a4\u30c6\u30e0\u306e\u5e8f\u5217\u306b\u3088\u308b\u91cd\u8981\u5ea6\u3092\u534a\u6e1b\u671f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u534a\u6e1b\u3055\u305b\u3066\u3044\u304f \\[ R_{u} = \\sum_{j}\\frac{max(r_{u,j}-default, 0)}{2^{(j-1)/(\\alpha -1)}} \\] r_{u, j}: \u30e9\u30f3\u30afj\u6642\u70b9\u3067\u306e\u3001\u30e6\u30fc\u30b6\u30fcu\u306e\u5b9f\u969b\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1 default: \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a55\u4fa1\u5024\uff08\u901a\u5e38\u306f\u8a55\u4fa1\u5024\u306e\u5e73\u5747\uff09 alpha: \u534a\u6e1b\u671f\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf","title":"Half-life Utility Metric"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#rbp-rank-biased-precision","text":"\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u7d44\u307f\u8fbc\u3080\uff1f \\[ RBP = (1-p)\\sum^{n}_{i=1}g_{i}p^{i-1} \\] gi: \u30e9\u30f3\u30afi\u306e\u9805\u76ee\u306e\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u597d\u307f\u3068\u306e\u95a2\u9023\u6027\u306e\u5ea6\u5408\u3044 p: \u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u30ea\u30b9\u30c8\u3092\u898b\u3066\u3044\u308b\u9593\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u6301\u7d9a\u6027\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u901a\u5e38\u306f\u30af\u30ea\u30c3\u30af\u30ed\u30b0\u306a\u3069\u304b\u3089\u63a8\u5b9a\uff09","title":"RBP (Rank biased precision)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#err-expected-reciprocal-rank","text":"Cascade user model \u4e0a\u4f4d\u306b\u5b58\u5728\u3059\u308b\u9805\u76ee\u306e\u95a2\u9023\u6027\u306b\u8003\u616e\u3059\u308b\u30e2\u30c7\u30eb \u30e6\u30fc\u30b6\u30fc\u306f\u901a\u5e38\u3001\u6e80\u8db3\u3059\u308c\u3070\u305d\u3053\u3067\u691c\u7d22\u3092\u7d42\u4e86\u3059\u308b \u3053\u306e\u5834\u5408\u3001\u691c\u7d22\u3092\u7d42\u4e86\u3057\u305f\u6642\u306b\u4e0b\u306b\u3042\u308b\u3082\u306e\u306f\u5168\u3066\u30af\u30ea\u30c3\u30af\u3055\u308c\u306a\u3044 \u30ab\u30b9\u30b1\u30fc\u30c9\u30e2\u30c7\u30eb\u306e\u4e00\u3064 r\u306e\u4f4d\u7f6e\u3067\u30e6\u30fc\u30b6\u30fc\u304c\u63a8\u85a6\u3057\u305f\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u95b2\u89a7\u3092\u6b62\u3081\u308b\u78ba\u7387\u306e\u5408\u8a08\u3092\u53d6\u308b \u3053\u306e\u78ba\u7387\u306f\u3001\u4e0a\u4f4d\u306e\u9806\u4f4d\u306b\u5f71\u97ff\u3055\u308c\u308b \\[ ERR = \\sum^{n}_{r=1}\\zeta(r)P(user~stops~at~position~r) \\\\ \\zeta(r) = \\frac{1}{r} ~~~or~~~ \\zeta(r) = \\frac{1}{log_{2}(r+1)} \\] \u3082\u3057\u304f\u306f $$ ERR = \\sum^{n} {r=1}\\zeta\u00ae\\prod^{r-1} (1-R_{i})R_{r} \\ R_{i} = \\frac{2^{g}-1}{2^{g_{max}}} $$ g: \u30e6\u30fc\u30b6\u30fc\u306e\u597d\u307f\u3068\u306e\u95a2\u9023\u6027\u306e\u6295\u7403 gmax: \u30b9\u30b1\u30fc\u30eb\u3067\u6700\u5927\u7b49\u7d1a\uff08\uff11\u301c\uff15\u306e\u8a55\u4fa1\u304c\u3042\u308b\u6642\u306e\uff15\uff09","title":"ERR (Expected reciprocal rank)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#q-measure-gapgraded-average-precision","text":"\u5e73\u5747\u9069\u5408\u7387\u3092\u62e1\u5f35\u3057\u305f\u3082\u306e","title":"Q-measure, GAP(Graded Average Precision)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_11","text":"\u63a2\u7d22\u601d\u8003\u3067\u306f\u306a\u3044\u304c\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5f79\u7acb\u3064\u6307\u6a19 \u30ab\u30d0\u30ec\u30c3\u30b8\u3001\u5b66\u7fd2\u7387\u3001\u4fe1\u983c\u7387\u3001\u4fe1\u983c\u6027\u3001 \u63a2\u7d22\u601d\u8003\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5f79\u7acb\u3064\u6307\u6a19 \u63a8\u85a6\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u65b0\u3057\u3044\u3082\u306e\u304b\u6e2c\u5b9a\u3059\u308b \u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9 \u30ce\u30d9\u30eb\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9 \u30c0\u30a4\u30d0\u30fc\u30b7\u30c6\u30a3\u30e1\u30c8\u30ea\u30af\u30b9","title":"\u7cbe\u5ea6\u9762\u4ee5\u5916\u3067\u306e\u3001\u65b0\u3057\u3044\u8a55\u4fa1\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_12","text":"","title":"\u63a2\u7d22\u601d\u8003\u3067\u306f\u306a\u3044\u304c\u6709\u7528\u306a\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#coverage","text":"\u63a8\u85a6\u5185\u5bb9\u304c\u3069\u306e\u7a0b\u5ea6\u306e\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u3092\u30ab\u30d0\u30fc\u3067\u304d\u3066\u3044\u308b\u304b\u8a55\u4fa1\u3059\u308b \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u8a55\u4fa1\u304c\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306b\u3064\u3044\u3066\u306f\u3001\u4e88\u6e2c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044 \u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u7279\u5fb4\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044 \u4e88\u6e2c\u7cbe\u5ea6\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u304c\u5b58\u5728\u3059\u308b \u725b\u4e73\u3084\u5375\u306a\u3069\u306e\u307b\u3068\u3093\u3069\u306e\u9867\u5ba2\u304c\u8cfc\u5165\u3059\u308b\u3082\u306e\u3092\u63a8\u85a6\u3059\u308c\u3070\u4e88\u6e2c\u7cbe\u5ea6\u306f\u9ad8\u304f\u306a\u308b\u304c\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u306f\u4f4e\u304f\u306a\u308b","title":"\u30ab\u30d0\u30ec\u30c3\u30b8\u30fb\u88ab\u8986\u7387\uff08coverage\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_13","text":"\u5229\u7528\u53ef\u80fd\u306a\u5168\u30a2\u30a4\u30c6\u30e0\u306e\u3046\u3061\u3001\uff11\u56de\u306e\u63a8\u85a6\u3067\u3069\u308c\u304f\u3089\u3044\u591a\u304f\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3067\u304d\u305f\u304b \u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u5e45\u5e83\u3055\u3092\u793a\u3059 \\[ Catalogue Coverage = \\frac{|S_{r}|}{|S_{a}|}\\\\where~S_{a}:\u30a2\u30a4\u30c6\u30e0\u5168\u3066\\\\S_{r}:\u63a8\u85a6\u3067\u304d\u308b\u30a2\u30a4\u30c6\u30e0 \\] \u63a8\u85a6\u306e\u7bc4\u56f2\u3092\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u306e\u307f\u306b\u7d5e\u3063\u305f\u9069\u5408\u30ab\u30bf\u30ed\u30b0\u30ab\u30d0\u30ec\u30c3\u30b8 \\[ Weighted Catalogue Coverage = \\frac{|S_{r}\\cap S_{s}|}{|S_{a}|} \\]","title":"\u30ab\u30bf\u30ed\u30b0\u30ab\u30d0\u30ec\u30c3\u30b8"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_14","text":"\u5168\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306e\u3046\u3061\u3001\u76f4\u8fd1\uff11\u56de\u306e\u63a8\u85a6\u306e\u3046\u3061\u3001\u3069\u308c\u307b\u3069\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u63a8\u85a6\u3067\u304d\u305f\u304b\u3092\u793a\u3059 \\[ PredictionCoverage = \\frac{|S_{p}|}{|S_{u}|}\\\\where~S_{p}:\u5c11\u306a\u304f\u3068\u3082\uff11\u3064\u306e\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308a\u63a8\u85a6\u3067\u304d\u305f\u30e6\u30fc\u30b6\u30fc\\\\S_{u}:\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc \\]","title":"\u30e6\u30fc\u30b6\u30fc\u30ab\u30d0\u30ec\u30c3\u30b8"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_15","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u55dc\u597d\u304c\u5909\u5316\u3057\u305f\u5f8c\u3001\u3069\u308c\u307b\u3069\u65e9\u304f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u9069\u5207\u306a\u63a8\u85a6\u3092\u63d0\u4f9b\u3067\u304d\u308b\u304b \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c\u306b\u95a2\u9023\u3059\u308b \u30b7\u30b9\u30c6\u30e0\u304c\u7d20\u65e9\u304f\u9069\u5207\u306a\u63a8\u85a6\u3092\u884c\u3048\u306a\u3044\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u6e80\u8db3\u5ea6\u306f\u6e1b\u5c11\u3059\u308b \u55dc\u597d\u304c\u5909\u308f\u3063\u305f\u3042\u3068\u306e\u6642\u9593 \u30e6\u30fc\u30b6\u30fc\u304c\u63a8\u85a6\u53d7\u3051\u3066\u59cb\u3081\u3066\u304b\u3089\u3001\u7cbe\u5ea6\u3092\u76e3\u8996\u3057\u7d9a\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b","title":"\u5b66\u7fd2\u7387"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_16","text":"\u63a8\u85a6\u306b\u3069\u308c\u307b\u3069\u306e\u78ba\u4fe1\u3092\u6301\u3063\u3066\u3044\u308b\u304b \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u3069\u308c\u307b\u3069\u306e\u6570\u306e\u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u8a08\u7b97\u3059\u308b \u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u6642\u306e\u30c7\u30fc\u30bf\u306e\u30ab\u30d0\u30fc\u7387 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u6642\u306b\u4e88\u6e2c\u3067\u7528\u3044\u308bK-NN\u306e\u985e\u4f3c\u6027\u3092\u8a08\u7b97\u3059\u308b \u985e\u4f3c\u6027\u304c\u4f4e\u3044\u6642\u3001K-NN\u306e\u8ddd\u96e2\u304c\u9060\u304f\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u76e3\u8996\u3059\u308b\uff1f","title":"\u78ba\u4fe1\u5ea6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_17","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u4fe1\u983c \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u55dc\u597d\u3068\u95a2\u5fc3\u3092\u4e88\u6e2c\u3059\u308b\u80fd\u529b\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u30e6\u30fc\u30b6\u30fc\u304c\u3088\u304f\u77e5\u3063\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3057\u306a\u3044\u3068\u3001\uff08\u4fe1\u983c\u3092\uff1f\uff09\u5f97\u308b\u306e\u304c\u56f0\u96e3 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4fe1\u983c\u3067\u304d\u306a\u3051\u308c\u3070\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u308f\u306a\u304f\u306a\u308b \u63a8\u85a6\u7d50\u679c\u304c\u826f\u3051\u308c\u3070\u4fe1\u983c\u304c\u5897\u3059 \u30e6\u30fc\u30b6\u30fc\u306b\u30aa\u30f3\u30e9\u30a4\u30f3\u8a55\u4fa1\u3067\u76f4\u63a5\u5c0b\u306d\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u4f7f\u7528\u983b\u5ea6\u3067\u63a8\u5b9a\u3059\u308b","title":"\u4fe1\u983c\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_18","text":"\u4f3c\u305f\u5546\u54c1\u3070\u304b\u308a\u63a8\u85a6\u3057\u3066\u3044\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u63a8\u85a6\u306b\u98fd\u304d\u308b \u65e2\u77e5\u306e\u5546\u54c1\u3092\u63a8\u85a6\u3055\u308c\u3066\u3082\u3001\u610f\u601d\u6c7a\u5b9a\u306e\u624b\u52a9\u3051\u306b\u306f\u306a\u3089\u306a\u3044 \u8a55\u4fa1\u5bfe\u8c61\uff1a\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30c8\u3001\u30a2\u30a4\u30c6\u30e0\u30bb\u30c3\u30c8\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u30da\u30a2\u306a\u3069 \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\uff1a\u8a55\u4fa1\u884c\u5217\uff08\u30e6\u30fc\u30b6\u30fc\uff0a\u30a2\u30a4\u30c6\u30e0\uff09\u3001\u30aa\u30f3\u3068\u30ed\u30b8\u30fc\uff08\u30a2\u30a4\u30c6\u30e0\u30ab\u30c6\u30b4\u30ea\uff09\u3001\u4ed6\u306e\u65b0\u898f\u6027\u30fb\u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","title":"\u63a2\u7d22\u601d\u8003\u306e\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_19","text":"\u76ee\u65b0\u3057\u3055\u3060\u3051\u3092\u63a8\u5968\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u6e80\u8db3\u5ea6\u306f\u4f4e\u4e0b\u3059\u308b \u30e6\u30fc\u30b6\u30fc\u306f\u4e00\u822c\u7684\u306b\u3001\u65e2\u77e5\u306e\u3082\u306e\u3092\u597d\u3080 \u7dcf\u5408\u7684\u306b\u8a55\u4fa1\u3059\u308b\u3068\u3001\u65b0\u898f\u6027\u306f\u5229\u7528\u8005\u306e\u6e80\u8db3\u5ea6\u3092\u4e0b\u3052\u308b \u65ac\u65b0\u306a\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u969b\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u7d4c\u9a13\u3092\u8003\u616e\u3059\u308b \u4e8b\u524d\u306b\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u65b0\u5947\u6027\u3092\u8aac\u660e\u3059\u308b \u304a\u3059\u3059\u3081\u306e\u65b0\u5947\u9805\u76ee\u3092\u305d\u308c\u305e\u308c\u8aac\u660e\u3059\u308b","title":"\u6ce8\u610f\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#serendipity","text":"\u63a8\u85a6\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u9a5a\u304d\u3092\u4e0e\u3048\u308b\u304b\u5426\u304b \uff08\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30a4\u30c6\u30e0\u3092\u81ea\u8eab\u3067\u306f\u691c\u7d22\u3067\u304d\u306a\u3044\uff09 \u7279\u5b9a\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3089\u308c\u305f\u6642\u306e\u9a5a\u304d \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u5229\u7528\u3057\u3066\u8a08\u7b97\u3059\u308b\uff1f","title":"\u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff08Serendipity\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_20","text":"\\[ EXEXP = \\frac{1}{|L_{i}|}\\sum^{|L_i|}_{i=1}max(P(s_i)-prim(s_i),0)\u30fbrel(s_i) \\\\where ~ s_i:i\u756a\u76ee\u306e\u30a2\u30a4\u30c6\u30e0 \\\\L_i: \u8a55\u4fa1\u6e08\u307f\u306e\u63a8\u85a6\u30ea\u30b9\u30c8 \\\\rel(s_i):\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0s_i\u306b\u305f\u3044\u3059\u308b\u8a55\u4fa1 \\\\P(s_i): \u30bf\u30fc\u30b2\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u3067\u4e88\u6e2c\u3055\u308c\u305f\u8a55\u4fa1 \\\\prim(s_i): \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u30b7\u30b9\u30c6\u30e0\u3067\u4e88\u6e2c\u3055\u308c\u305f\u8a55\u4fa1 \\] \\[ UNEXP = RS / PM \\\\SRDP = \\frac{|UNEXP \\cap USEFUL|}{N} \\\\where ~ RS: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\PM: Primitive\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\UNEXP: \u4e88\u60f3\u5916\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\\\USEFUL: \u6709\u7528\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\]","title":"\u4e88\u60f3\u5916\u3055"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_21","text":"\u3042\u308b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u7fa4\u306f\u3001\u4ed6\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3082\u63a8\u85a6\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b \\[ div_{a,v} = -\\sum_{i \\in L_{a,u \\cap R_{u}}}p_{u,i}logp_{u,i} \\\\p_{u,i} = \\frac{\\sum_{a \\in A}\\delta(a,u,i)}{|A|} \\\\where ~ A: \u63a8\u85a6\u3057\u305f\u96c6\u5408 \\\\a: Target\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1 \\\\L_{a,u}: \u30e6\u30fc\u30b6\u30fcu\u306e\u305f\u3081\u306b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0a\u306b\u3088\u308a\u63d0\u4f9b\u3055\u308c\u305f\u63a8\u85a6\u30ea\u30b9\u30c8 \\\\R_u: \u30e6\u30fc\u30b6\u30fcu\u306b\u95a2\u9023\u3059\u308b\u30a2\u30a4\u30c6\u30e0 \\\\\\delta :1 if i \\in L_{a,u}\\cap R_u~and~0~otherwise \\]","title":"\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30da\u30fc\u30b9\u306e\u591a\u69d8\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#novelty","text":"\u63a8\u85a6\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u672a\u77e5\u3067\u3042\u308b\u304b\u5426\u304b Discovery ratio, Presicion of novelty, Item novelty, Temporal novelty, Novelty based on HLU, Long tail metric, Generalized novelty model, Unexpectedness, Entropy-based diversity, Unserendipity, HLU of serendipity","title":"\u30ce\u30d9\u30eb\u30c6\u30a3\uff08Novelty\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_22","text":"\u7279\u5b9a\u30a2\u30a4\u30c6\u30e0\u3068\u306e\u4ed8\u304d\u5408\u3044\u65b9\u3092\u805e\u304f \u30a2\u30a4\u30c6\u30e0\u9593\u306e\u4e00\u822c\u7684\u306a\u4eba\u6c17\u5ea6\u3084\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b \u30e6\u30fc\u30b6\u30fcX\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u884c\u5217\u306b\u304a\u3044\u3066\u30010\u304b1\u304b\uff08\u77e5\u3063\u3066\u3044\u308b\u304b\u77e5\u3089\u306a\u3044\u304b\uff09\u306b\u306a\u308b","title":"\u6e2c\u308a\u65b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_23","text":"\u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u3001\u3069\u308c\u3060\u3051\u30e6\u30fc\u30b6\u30fc\u304c\u77e5\u3089\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u304c\u3042\u308b\u304b \\[ Discovery = \\frac{|D_{i} \\cap L_{i}|}{|L_{i}|} \\\\where~D_{i}:\u30e6\u30fc\u30b6\u30fci\u304c\u77e5\u3089\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\\\L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u5bfe\u3059\u308b\u63a8\u85a6\u30ea\u30b9\u30c8 \\]","title":"\u767a\u898b\u7387"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_24","text":"\\[ Precision(novelty) = \\frac{|C_{i} \\cap L_{i}|}{|L_{i}|} \\\\Recall(novelty) = \\frac{|C_{i} \\cap L_{i}|}{|C_{i}|} \\\\where~C_{i}:\u30e6\u30fc\u30b6\u30fci\u304c\u77e5\u3089\u306a\u3044\u304b\u3064\u3001\u597d\u3080\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\\\L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u5bfe\u3059\u308b\u63a8\u85a6\u30ea\u30b9\u30c8 \\]","title":"\u30ce\u30d9\u30eb\u30c6\u30a3\u306e\u7cbe\u5ea6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_25","text":"\u304a\u3059\u3059\u3081\u30a2\u30a4\u30c6\u30e0\u306e\u65b0\u898f\u6027\u3092\u6e2c\u308b \u30ea\u30b9\u30c8\u5185\u306e\u591a\u69d8\u6027\u3092\u5229\u7528\u3059\u308b \\[ Nov_{item}(i) = N(Div(L)-Div(L-(i))) \\\\= \\frac{1}{N-1}\\sum_{j \\in L}d(i,j) \\\\where ~ |L| = N \\\\d(i,j):\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u8ddd\u96e2\u3092\u6e2c\u308b\u95a2\u6570 \\\\Div(): \u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u591a\u69d8\u6027\u3092\u6e2c\u308b\u95a2\u6570\\\\ \\]","title":"\u30a2\u30a4\u30c6\u30e0\u30ce\u30d9\u30eb\u30c6\u30a3"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_26","text":"\u904e\u53bb\u306e\u63a8\u85a6\u30ea\u30b9\u30c8\u3068\u306f\u7570\u306a\u308b\u63a8\u85a6\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u6e2c\u5b9a\u3059\u308b \\[ Nov_{tmp}(L_{i}) = \\frac{|\\{ x \\in L_{i}|x \\not= S_{past}\\}}{|L_{i}|} \\\\where~S{past} = \\bigcup^{i-1}_{j=1}L_{i} \\]","title":"\u30c6\u30f3\u30dd\u30e9\u30ea\u30fc\u30ce\u30d9\u30eb\u30c6\u30a3"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_27","text":"\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u3001\u901a\u5e38\u306e\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u304b\u3089\u306e\u30b2\u30a4\u30f3\u3092\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5143\u306b\u6e1b\u5c11\u3055\u305b\u3066\u3044\u304f \u63a8\u85a6\u3057\u3066\u3044\u308b\u304c\u8cb7\u308f\u308c\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306f\u3001\u8a55\u4fa1\u3092\u5272\u308a\u5f15\u3044\u3066\u3044\u304f \u534a\u6e1b\u671f\u8a55\u4fa1\u95a2\u6570 \\[ R_{u} = \\sum_{j}\\frac{max(r_{u,j}-default, 0)}{2^{(j-1)/(\\alpha-1)}} \\\\where~r_{u,j}\uff1a\u30e6\u30fc\u30b6u\u304cj\u3068\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0 \\\\default:\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a55\u4fa1\u5024\uff08\u901a\u5e38\u306f\u5e73\u5747\u5024\uff09\\\\\\alpha : \u534a\u6e1b\u671f\u30d1\u30e9\u30e1\u30fc\u30bf \\] NHLU \\[ f(i) = log_{2}(\\frac{n}{n_{i}}) \\\\NHLU_{u} = \\sum^{N}_{i}f(i)\\frac{max(r_{u,i}-default, 0)}{2^{(i-1)/(\\alpha-1)}} \\\\where~n:\u30e6\u30fc\u30b6\u30fc\u6570 \\\\n_{i}: \u30a2\u30a4\u30c6\u30e0i\u3092\u9078\u3093\u3060\u30e6\u30fc\u30b6\u30fc\u6570 \\]","title":"\u534a\u6e1b\u671f\u30d9\u30fc\u30b9\u306e\u30ce\u30d9\u30eb\u30c6\u30a3"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_28","text":"\u9805\u76ee\u3092\u4eba\u6c17\u306b\u5408\u308f\u305b\u3066\uff13\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\uff08HEAD, MID, TAIL\uff09\u306b\u5408\u308f\u305b\u308b \u4e0a\u4f4dN\u500b\u306e\u63a8\u85a6\u304b\u3089\u3001\u30a2\u30a4\u30c6\u30e0a_i\u3068a_j\u3092\u62bd\u51fa\u3059\u308b \u65ac\u65b0\u306a\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u80fd\u529b\u3092\u3001\u4ee5\u4e0b\u306e\u8a55\u4fa1\u30de\u30c8\u30ea\u30af\u30b9\u3067\u8a55\u4fa1\u3059\u308b ai\u2192aj HEAD MID TAIL HEAD 45% 55% 0% MID 5% 70% 25% TAIL 0% 15% 85% \u3082\u3057\u3001HEAD\u2192HEAD\u304c\u5927\u304d\u3051\u308c\u3070\u3001\u30ce\u30d9\u30eb\u30c6\u30a3\u306f\u4f4e\u3044 \u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u304c\u5165\u308c\u66ff\u308f\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u6307\u6a19\uff1f","title":"\u30ed\u30f3\u30b0\u30c6\u30fc\u30eb\u306b\u57fa\u3065\u304f\u30ce\u30d9\u30eb\u30c6\u30a3"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#diversity","text":"\u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3067\u304d\u308b\u304b\u3069\u3046\u304b Aggregate diversity, Inter-user diversity, List personalization metric, Gini codfficient, Temporal diversity, Intra-list similarity, Subtopic retrieval, MMR, alpha-nDCG","title":"\u591a\u69d8\u6027\uff08Diversity\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#aggregate-diversity","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u81ea\u4f53\u306e\u591a\u69d8\u6027 \u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\u3092\u96c6\u8a08\u3059\u308b \u3053\u306e\u5024\u304c\u9ad8\u3044\u3053\u3068\u306f\u3001\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u5229\u7528\u8005\u306b\u7570\u306a\u308b\u9805\u76ee\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3059 \\[ Aggdiv = |\\bigcup_{n \\in U}L_{u}|\\\\ where~U:\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\\\\ ~L_{u}: \u30e6\u30fc\u30b6\u30fcu\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8 \\] \u5206\u6bcd\u306b\u5168\u30a2\u30a4\u30c6\u30e0\u96c6\u5408\u3092\u3068\u308b\u3053\u3068\u3067\u3001\u5168\u4f53\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u3046\u3061\u3069\u308c\u3060\u3051\u30e6\u30fc\u30b6\u30fc\u306b\u63a8\u85a6\u3067\u304d\u305f\u304b\u3092\u6e2c\u3063\u3066\u3044\u308b\u7814\u7a76\u3082\u5b58\u5728 \u30a2\u30a4\u30c6\u30e0\u306e\u7a2e\u985e\u2192\u30b5\u30d6\u30ab\u30c6\u30b4\u30ea\u30fb\u30b5\u30d6\u30c8\u30d4\u30c3\u30af\u306a\u3069\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30ab\u30c6\u30b4\u30ea\u30fb\u30c8\u30d4\u30c3\u30af\u306e\u591a\u69d8\u6027\u3092\u56f3\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff08Subtopic retrieval metric\uff09","title":"Aggregate diversity"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#inter-user-diversity","text":"\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u591a\u69d8\u6027 \u30e6\u30fc\u30b6\u30fc\u9593\u3067\u7570\u306a\u308b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u63d0\u4f9b\u3059\u308b\u4ed5\u7d44\u307f \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u308c\u307b\u3069\u30e6\u30fc\u30b6\u30fc\u500b\u4eba\u500b\u4eba\u306b\u5408\u308f\u305b\u3089\u308c\u3066\u3044\u308b\u304b(IUD) \\[ d_{u,v} = 1 - \\frac{|L_{u} \\cap L_{v}|}{N}\\\\IUD = \\frac{1}{N_{U}}\\sum_{u,v \\in U}d_{u,v}\\\\where ~ U~(and~V?): \u30e6\u30fc\u30b6\u30fc\u96c6\u5408\\\\ N =|L_{u}|=|L_{v}|,\\\\ N_{U}: U\u306e\u4e2d\u306e\uff12\u3064\u306e\u30da\u30a2\u6570\\\\ L_{u}:\u30e6\u30fc\u30b6\u30fcu\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8 \\]","title":"Inter-user diversity"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#list-personalization-metric","text":"\u30ea\u30b9\u30c8\u304c\u500b\u4eba\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u304b \\[ p_{b} = \\frac{U_{b}}{U} \\\\I_{b} = log_{2}(\\frac{|U|}{U_{b}}) \\\\Per(L_{i}) = \\frac{\\sum_{b_{j} \\in L_{i}}log\\frac{|U|}{|U_{b}|}}{|L_{i}|} \\\\where ~ p_{b}: \u30a2\u30a4\u30c6\u30e0b\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u308a\u9078\u629e\u3055\u308c\u308b\u78ba\u7387\\\\I_{b}: \u30a2\u30a4\u30c6\u30e0b\u306e\u81ea\u5df1\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\\\\Per(L_{i}): \u30a2\u30a4\u30c6\u30e0\u306e\u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044\\\\U_{b}: \u30a2\u30a4\u30c6\u30e0b\u3092\u305b\u305f\u3093k\u3059\u3044\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u6570 \\]","title":"List personalization metric"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#gini","text":"\u6240\u5f97\u306e\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9\u3055\u306e\u6307\u6a19\u306a\u3069\u306b\u4f7f\u308f\u308c\u308b \u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u983b\u5ea6\u304c\u3069\u308c\u3060\u3051\u504f\u3063\u3066\u3044\u308b\u304b x\u8ef8\uff1a\u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u5408\u8a08\u983b\u5ea6\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u3089\u308c\u305fx%\u306e\u5272\u5408 y\u8ef8\uff1a\u30ea\u30b9\u30c8\u5185\u306e\u9805\u76ee\u306ex%\u306e\u5408\u8a08\u983b\u5ea6 \\[ G = \\frac{B}{A+B} \\\\where: A:\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u6642\u300145\uff05\u306e\u7dda\u3068\u66f2\u7dda\u306e\u9593\u306e\u9762\u7a4d \\\\B:\u305d\u308c\u4ee5\u5916\u306e\u9762\u7a4d\uff08\u66f2\u7dda\u306e\u4e0b\u306e\u9762\u7a4d\uff09 \\]","title":"Gini\u4fc2\u6570"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_29","text":"\u6642\u523b\u304c\u9055\u3046\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u51fa\u529b\u3059\u308b\u9805\u76ee\u304c\u7570\u306a\u308b\u5834\u5408\u306e\u6e2c\u5b9a \\[ div_{tmp}(L_{1},L_{2},N) = \\frac{|(x \\in L_{2}|x! \\ in L_{1})|}{N} \\\\where~ N=|L_{1}|=|L_{2}| \\]","title":"\u6642\u9593\u7684\u591a\u69d8\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_30","text":"\u63a8\u85a6\u30ea\u30b9\u30c8\u306e\u5185\u5bb9\u306b\u5fdc\u3058\u305f\u591a\u69d8\u6027 \uff12\u3064\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u3067\u8a08\u7b97\u3055\u308c\u308b \u901a\u5e38\u3001\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u307e\u305f\u306f\u30ab\u30c6\u30b4\u30ea\u304c\u4f7f\u308f\u308c\u308b \\[ Diversity = \\sum_{l \\in L_{i},m \\in L_{i}}\\frac{1}{similarity(l,m)} \\\\where~L_{i}:\u30e6\u30fc\u30b6\u30fci\u306b\u63a8\u85a6\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8 \\] \\[ ILS(L_{i}) = \\frac{\\sum_{b_{k} \\in L_{i}} \\sum_{b_{e} \\in L_{i},b_{k} \\not= b_{e}} similarity(b_{k},b_{e})}{{}_{|L_{i}|}C_{2}} \\]","title":"\u63a8\u85a6\u30ea\u30b9\u30c8\u5185\u306e\u591a\u69d8\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#mmrmaximal-marginal-relevance","text":"\u672c\u6765\u306f\u691c\u7d22\u7d50\u679c\u306b\u6587\u66f8\u3092\u9078\u629e\u3059\u308b\u305f\u3081\u306e\u9805\u76ee\u9078\u629e\u6cd5 \u3053\u306e\u8003\u3048\u65b9\u3092\u3001\u63a8\u85a6\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u5229\u7528\u3059\u308b \\[ MMR_{List} = \\sum_{d_{i} \\in L}(\\alpha rel(d_{i})-(1-\\alpha )max_{d_{i}\\in L^{j-1}}sim(d_{i},d_{j})) \\\\where ~ L: \u63a8\u85a6\u30ea\u30b9\u30c8 \\\\d_{i}: \u30ea\u30b9\u30c8\u5185\u306e\u30a2\u30a4\u30c6\u30e0 \\\\rel: \u305d\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3080\u304b\u5426\u304b \\\\L^{i-1}:J\u756a\u76ee\u307e\u3067\u306e\u63a8\u85a6\u30ea\u30b9\u30c8 \\]","title":"MMR\uff08Maximal marginal relevance\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_31","text":"AP\u3084nDCG\u306b\u3088\u308a\u3001\u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u30e9\u30f3\u30af\u4ed8\u3055\u308c\u305f\u63a8\u85a6\u3092\u8a55\u4fa1\u3067\u304d\u308b \u30b7\u30b9\u30c6\u30e0\u3092\u8a55\u4fa1\u3059\u308b\u5834\u5408\u3001\u8907\u6570\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u5e73\u5747\u7684\u306a\u826f\u3055\u3092\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u8a55\u4fa1\u6307\u6a19\u306e\u6ce8\u610f\u70b9\u306a\u3069"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#map","text":"\u30e6\u30fc\u30b6\u30fc\u96c6\u5408N\u306b\u5bfe\u3057\u3001AP\u3092\u7b97\u8853\u5e73\u5747\u3057\u305f\u5024 \\[ MAP = \\frac{1}{N}\\sum^{N}_{i=1}AP_{i} \\] \u3067\u304d\u308b\u3060\u3051\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3042\u308b\u7a0b\u5ea6\u9069\u5408\u3059\u308b\u63a8\u85a6\u3092\u63d0\u793a\u3057\u305f\u3044\u5834\u5408\u3001MAP\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206","title":"MAP"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#gmapmap","text":"\\[ GMAP = \\sqrt[n]{\\prod_{n}AP_{n}} \\] \u4fbf\u5b9c\u4e0a\u5909\u5f62\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u5f62\u306b\u306a\u308b \u305f\u3060\u3057\u3001\u03b5\u306f\u975e\u5e38\u306b\u5c0f\u3055\u3044\u5024\uff0810^(-5)\u7a0b\u5ea6\uff09 $$ GMAP = exp(\\frac{1}{N}\\sum^{N} {i=1}ln(AP +\\epsilon))-\\epsilon $$ \u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u3078\u306e\u63a8\u85a6\u3067\u3001\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u304c\u4e00\u3064\u3082\u306a\u3044\u5834\u5408\u3001GMAP\u306fMAP\u3088\u308a\u4f4e\u304f\u8a55\u4fa1\u3059\u308b \u4e0a\u4f4d10\u4f4d\u307e\u3067\u306e\u3088\u3046\u306b\u6e2c\u5b9a\u9577\u304c\u77ed\u3044\u5834\u5408\u3001MAP\u3084GMAP\u306e\u5024\u306f\u4e0d\u5b89\u5b9a\u306a\u3082\u306e\u306b\u306a\u308a\u3084\u3059\u3044","title":"GMAP\uff08\u5e7e\u4f55\u5e73\u5747\u3092\u7528\u3044\u305fMAP\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#infapinferred-average-precision","text":"\u4e0d\u5b8c\u5168\u6027\u306a\u30c6\u30b9\u30c8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u771f\u306e\u5e73\u5747\u9069\u5408\u7387\u3092\u63a8\u5b9a\u3059\u308b","title":"infAP\uff08inferred Average Precision\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_32","text":"\u30a2\u30a4\u30c6\u30e0\u306e\u7279\u5b9a\u9805\u76ee\u5206\u5e03 \u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3044\u30ab\u30c6\u30b4\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306a\u3069\u306f\u3001\u63d0\u4f9b\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u7279\u5b9a\u9805\u76ee\u306b\u95a2\u3059\u308b\u5206\u5e03\u3092\u57fa\u306b\u8a55\u4fa1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b NG\u30a2\u30a4\u30c6\u30e0\u306e\u51fa\u73fe\u983b\u5ea6 \u57fa\u672c\u7684\u306b\u306f0\u3092\u76ee\u6307\u3059 \u76ee\u7684\u306e\u30a2\u30a4\u30c6\u30e0\u30fb\u30ab\u30c6\u30b4\u30ea\u7b49\u3078\u306e\u9077\u79fb\u7387 \u30e6\u30fc\u30b6\u30fc\u306e\u9077\u79fb\u5148\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u3044\u5834\u5408\u306b\u8a08\u6e2c \u30a2\u30a4\u30c6\u30e0\u3054\u3068\u306ePV\u6570\u306e\u30b8\u30cb\u4fc2\u6570 \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308b\u30a2\u30a4\u30c6\u30e0\u30d3\u30e5\u30fc\u304c\u504f\u3089\u306a\u3044\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3092\u5c0e\u5165\u3057\u305f\u969b\u306b\u3001\u504f\u308a\u304c\u662f\u6b63\u3055\u308c\u308b\u304b\u8a08\u6e2c","title":"\u65bd\u7b56\u306b\u5bfe\u3059\u308b\u8a55\u4fa1\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#interleaving","text":"\u65b0\u3057\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u53e4\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4ea4\u4e92\u306b\u51fa\u3057\u3001\u3069\u3061\u3089\u304c\u826f\u3044\u53cd\u5fdc\u304b\u8a55\u4fa1\u3059\u308b https://www.wantedly.com/companies/wantedly/post_articles/155593 AB\u30c6\u30b9\u30c8\u3088\u308a10\u500d\u4ee5\u4e0a\u65e9\u304f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6709\u610f\u5dee\u3092\u8a55\u4fa1\u3067\u304d\u308b \u5f71\u97ff\u304c\u5c0f\u3055\u3044\u5834\u5408\u306f\u3001\u4f7f\u3048\u308b","title":"interleaving"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#2017recsys-2017-conference","text":"- \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5b66\u4f1a\u3067\u30012017\u5e74\u73fe\u5728\u3067\u306e\u4f01\u696d\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u6307\u6a19\u306f\u3001\u591a\u3044\u9806\u306b\u4ee5\u4e0b\u306e\u901a\u308a 1. MRR\uff08\u5e8f\u5217\u3092\u8003\u616e\u3057\u305f\u63a8\u85a6\u30ea\u30b9\u30c8\u6307\u6a19\u30fb\u91cd\u307f\u306f\u5e8f\u5217\u306e\u9006\u6bd4\uff09 2. AUC\uff08\u5206\u985e\u554f\u984c\uff09 3. Precision\uff08\u9069\u5408\u30a2\u30a4\u30c6\u30e01\u3064\u767a\u898b\uff09 4. nDCG\uff08\u5e8f\u5217\u3092\u8003\u616e\u3057\u305f\u63a8\u85a6\u30ea\u30b9\u30c8\u6307\u6a19\u30fb\u91cd\u307f\u3092\u8abf\u6574\u53ef\u80fd\uff09 5. Recall\uff08\u9069\u5408\u30a2\u30a4\u30c6\u30e0\u5168\u5217\u6319\uff09 \u8ad6\u6587\u3067\u306f\u63a2\u7d22\u91cd\u8996\u306e\u8a55\u4fa1\u6307\u6a19\u306a\u3069\u306f\u63d0\u6848\u3055\u308c\u3066\u306f\u3044\u308b\u304c\u3001\u5b9f\u74b0\u5883\u3067\u306f\u7b54\u3048\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3057\u306b\u304f\u304f\u3001\u73fe\u5834\u3067\u306f\u307e\u3060\u3042\u307e\u308a\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3002 MRR\u3084nDCG\u306f\u3001\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u624b\u6cd5\u3060\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002","title":"2017\u5e74\u3067\u306e\u4f01\u696d\u306e\u72b6\u6cc1\uff08RecSys 2017 Conference\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/eval_rec/#_33","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\uff1ahttp://www.kamishima.net/archive/recsysdoc.pdf \u8a55\u4fa1\u6307\u6a19\u306b\u3064\u3044\u3066\uff1ahttps://techblog.nhn-techorus.com/archives/4778 \u691c\u7d22\u30fb\u63a8\u85a6\u306e\u8a55\u4fa1\u65b9\u6cd5\u3084\u8a55\u4fa1\u6307\u6a19\uff1ahttps://qiita.com/rilmayer/items/4c2c40640c0892e13257 \u8a55\u4fa1\u6307\u6a19\u306e\u5206\u985e\uff1ahttps://blog.brainpad.co.jp/entry/2017/08/25/140000 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u30aa\u30d5\u30e9\u30a4\u30f3\u8a55\u4fa1\uff1ahttp://soc-research.org/wp-content/uploads/2014/11/OfflineTest4RS.pdf","title":"\u53c2\u8003\u6587\u732e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/","text":"\u63a8\u85a6\u30e2\u30c7\u30eb \u63a8\u85a6\u30e2\u30c7\u30eb\u3001\u6240\u8b02\u30ea\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30e2\u30c7\u30eb\u306e\u6700\u8fd1\u306e\u540c\u884c\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002 \u69d8\u3005\u306a\u8a18\u8ff0\u304c\u3042\u308a\u3001\u66f8\u304d\u624b\u306b\u3088\u308a\u5358\u8a9e\u304c\u6307\u3059\u7bc4\u56f2\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b \u3008w, x\u3009\u3068\u306fw,x\u306e\u5185\u7a4d\u3092\u8868\u3059 \u5206\u985e \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306f\u5927\u304d\u304f\u5206\u3051\u30663\u7a2e\u985e \u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\uff1a\u63a8\u8ad6\u6642\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3057\u306a\u3044 \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\uff1a\u5b66\u7fd2\u30fb\u63a8\u8ad6\u6642\u5171\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3059\u308b \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\uff1a\u5b66\u7fd2\u6642\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3059\u308b\u304c\u3001\u63a8\u8ad6\u6642\u306b\u306f\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3057\u306a\u3044 \u30eb\u30fc\u30eb\u30d9\u30fc\u30b9 \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9 \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9 \u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044 \u4f4e\u3044 \u9ad8\u3044 \u30e2\u30c7\u30eb\u306b\u3088\u308b \u65b9\u6cd5 \u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u63a8\u85a6\u3059\u308b \u63a8\u85a6\u306e\u5ea6\u306b\u3001\u5168\u4f53\u7684\u306a\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u304b\u3089\u8a08\u7b97\u3059\u308b \u63a8\u85a6\u306e\u5ea6\u306b\u3001\u30e2\u30c7\u30eb\u306b\u5bfe\u8c61\u8005\u306e\u60c5\u5831\u3092\u3044\u308c\u8a08\u7b97\u3059\u308b \u624b\u6cd5 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30af\u30e9\u30b9\u30bf\u30e2\u30c7\u30eb\u3001\u95a2\u6570\u7cfb\u3001\u30d9\u30a4\u30ba \u305d\u306e\u4ed6\u306e\u5206\u985e \u500b\u4eba\u5316\u306a\u3057\uff1a\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u540c\u3058\u63a8\u85a6\u3092\u884c\u3046 \u4e00\u6642\u7684\u500b\u4eba\u5316\uff1a\u305d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\uff08\u4e00\u6642\u7684\u306a\u30c7\u30fc\u30bf\uff09\u306e\u307f\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046 \u6c38\u7d9a\u7684\u500b\u4eba\u5316\uff1a\u9577\u671f\u7684\u306a\u30c7\u30fc\u30bf\uff08\u5c65\u6b74\u306a\u3069\uff09\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046 \u66f4\u65b0\u3057\u306a\u3044\u500b\u4eba\u5316\uff1a\u30e6\u30fc\u30b6\u30fc\u304c\u767b\u9332\u3057\u305f\u57fa\u672c\u7684\u306b\u306f\u66f4\u65b0\u3055\u308c\u306a\u3044\u60c5\u5831\u3084\u3001\u305d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u306e\u307f\u6709\u52b9\u306a\u30c7\u30fc\u30bf\u306a\u3069\u3092\u7528\u3044\u3066\u63a8\u8ad6\u3059\u308b - \u500b\u4eba\u5316\u306a\u3057 \u4e00\u6642\u7684\u500b\u4eba\u5316 \u6c38\u7d9a\u7684\u500b\u4eba\u5316 \u66f4\u65b0\u3057\u306a\u3044\u500b\u4eba\u5316 \u30a2\u30a4\u30c6\u30e0 \u30b9\u30da\u30c3\u30af\u30e9\u30f3\u30ad\u30f3\u30b0\uff08\u4fa1\u683c\u9806\uff09 \u30ab\u30b4\u5185\u306e\u985e\u4f3c\u5546\u54c1\u30fb\u4ee3\u66ff\u6750\u88dc\u5b8c\u6b8b \u5c65\u6b74\u304b\u3089\u306e\u985e\u4f3c\u50be\u5411\u5546\u54c1 \u76f8\u4e92\u7684\u3067\u306a\u3044\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u30fb\u8ca9\u58f2\u54e1\u306e\u304a\u3059\u3059\u3081\uff1f \u4eba \u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0 \u3088\u304f\u4e00\u7dd2\u306b\u8cb7\u308f\u308c\u308b\u3082\u306e \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\uff08\u8a55\u4fa1\u30fb\u884c\u52d5\u304b\u3089\u306e\u985e\u4f3c\u50be\u5411\u5546\u54c1\uff09 \u30a2\u30f3\u30b1\u30fc\u30c8\u306a\u3069 \u77e5\u8b58 \u5e97\u30fb\u6642\u671f\u3054\u3068\u306e\u304a\u3059\u3059\u3081 \u4f1a\u8a08\u6642\u306e\u304a\u3059\u3059\u3081 \u3042\u307e\u308a\u306a\u3057\u30fb\u500b\u4eba\u306b\u5bfe\u3059\u308b\u5c02\u9580\u5bb6\u306e\u304a\u3059\u3059\u3081 \u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u30fb\u8ca9\u58f2\u54e1\u306e\u304a\u3059\u3059\u3081 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u3092\u4f7f\u3044\u3001\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306b\u985e\u4f3c\u3057\u305f\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046\u624b\u6cd5 \u5229\u70b9 \u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u304c\u4e0d\u8981 \u7570\u306a\u308b\u30b8\u30e3\u30f3\u30eb\u9593\u3067\u63a8\u85a6\u53ef\u80fd\uff08\u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff09 \u6b20\u70b9 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u30b5\u30fc\u30d3\u30b9\u521d\u671f\u3001\u8cfc\u5165\uff08\u884c\u52d5\uff09\u56de\u6570\u304c\u5c11\u306a\u3044\u5229\u7528\u8005\u3084\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u30ab\u30d0\u30ec\u30c3\u30b8\uff08\u88ab\u8986\u7387\uff09\u304c\u4f4e\u304f\u306a\u308b \u63a8\u85a6\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u591a\u304f\u8cb7\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u306b\u306a\u308a\u3084\u3059\u3044 \u8cb7\u308f\u308c\u3066\u3044\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u306f\u308f\u304b\u3089\u306a\u3044 \u624b\u9806 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u3092\u84c4\u7a4d\u3059\u308b \u84c4\u7a4d\u3067\u304d\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u3084\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u7528\u3044\u308b \u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u304b\u3089\u3001\u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3059 \u3069\u306e\u3088\u3046\u306b\u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u304b\u3092\u7b97\u51fa\u3059\u308b\u304b\u306f\u3001\u985e\u4f3c\u6027\u6307\u6a19\u306e\u30b5\u30fc\u30d9\u30a4\u3092\u53c2\u7167 \u30e6\u30fc\u30b6\u30fc\u304c\u591a\u3044\u5834\u5408\u3001\u3042\u3089\u304b\u3058\u3081\u30e6\u30fc\u30b6\u30fc\u3092\u884c\u52d5\u5c65\u6b74\u306a\u3069\u306b\u3088\u308a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u3001\u8a08\u7b97\u8cc7\u6e90\u3092\u7bc0\u7d04\u3067\u304d\u308b \u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3093\u3067\u304a\u308a\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u8a55\u4fa1\u304c\u9ad8\u3044\u3068\u601d\u308f\u308c\u308b\u3082\u306e\u3092\u63a8\u85a6\u3059\u308b \u3053\u3053\u3067\u306f\u3001k-NN\u306a\u3069\u3092\u7528\u3044\u308b \u554f\u984c \u30c7\u30fc\u30bf\u306e\u30b9\u30d1\u30fc\u30b9\u6027 \u30a2\u30a4\u30c6\u30e0\u304c\u975e\u5e38\u306b\u591a\u3044\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u5927\u534a\u306e\u5546\u54c1\u3092\u8cb7\u308f\u306a\u3044 \u305d\u306e\u305f\u3081\u3001\u5b9f\u969b\u306f\u985e\u4f3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3067\u3042\u3063\u3066\u3082\u3001\u5168\u304f\u540c\u3058\u30a2\u30a4\u30c6\u30e0\u3092\u3068\u3082\u306b\u8a55\u4fa1\u3057\u306a\u3044\u3068\u985e\u4f3c\u3067\u3042\u308b\u3068\u5224\u5225\u3067\u304d\u306a\u3044\uff08\u540c\u985e\u63a8\u79fb\u554f\u984c\uff09 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u7279\u7570\u5024\u5206\u89e3\uff08SVD\uff09\u306b\u3088\u308b\u6b21\u5143\u524a\u6e1b \u884c\u5217\u5206\u89e3\u306b\u3088\u308b\u6b21\u5143\u524a\u6e1b\uff08\u30e2\u30c7\u30eb.\u95a2\u6570\u7cfb.\u56de\u5e30\u306e\u6b04\u53c2\u7167\uff09 \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u88dc\u5b8c \u30e6\u30fc\u30b6\u30fc\u306e\u5c65\u6b74\u3092\u7528\u3044\u306a\u3044\u3001\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u30fb\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3067\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97 \u4e88\u6e2c\u30e2\u30c7\u30eb\u69cb\u7bc9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u306e\u88dc\u5b8c \u672a\u8a55\u4fa1\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3092\u4e88\u6e2c\u3057\u3066\u57cb\u3081\u308b \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3 \u30a2\u30a4\u30c6\u30e0\u6570\u3084\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u975e\u5e38\u306b\u901f\u3044\u30b9\u30d4\u30fc\u30c9\u3067\u5897\u5927\u3057\u305f\u5834\u5408\u3001\u8a08\u7b97\u91cf\u304c\u5927\u304d\u304f\u306a\u308b \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 CF\u3092\u4f7f\u3046\u524d\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u30fb\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3067\u985e\u4f3c\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3001\u8a08\u7b97\u5bfe\u8c61\u3092\u7d5e\u308a\u8fbc\u3080\uff08\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u3088\u3046\u306a\u3082\u306e\uff09 \u7070\u8272\u306e\u7f8a \u8907\u6570\u30d1\u30bf\u30fc\u30f3\u306e\u8da3\u5411\u3068\u4e00\u81f4\u3059\u308b\u3001\u3042\u308b\u3044\u306f\u3069\u308c\u3068\u3082\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u306b\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u6069\u6075\u306b\u3042\u305a\u304b\u308c\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u7fa4\u306e\u3053\u3068 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u884c\u52d5\u30d1\u30bf\u30fc\u30f3\u4ee5\u5916\u3067\u306e\u5dee\u5225\u5316 \u30b7\u30ea\u30f3\u30b0\u30a2\u30bf\u30c3\u30af \u8a55\u4fa1\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b\u653b\u6483\u3092\u6307\u3059\uff08\u30b5\u30af\u30e9\u30ec\u30d3\u30e5\u30fc\u306a\u3069\uff09 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u7528\u3044\u308b \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3088\u308a\u5f71\u97ff\u3092\u53d7\u3051\u306b\u304f\u3044 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\uff0bCF\u306e\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u7528\u3044\u308b \u5206\u985e \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u304b\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u304b\u3001\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u304b\u306b\u5206\u985e\u3067\u304d\u308b \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u306eCF \u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u76f8\u95a2\u95a2\u4fc2\u306b\u3088\u308a\u3001\u985e\u4f3c\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u8a55\u4fa1\u3092\u3082\u3068\u306b\u63a8\u85a6\u3092\u884c\u3046 \u4ee3\u8868\u7684\u306a\u624b\u6cd5 \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u5143\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u985e\u4f3c\u6027\u3092\u89e3\u6790\u3057\u3001\u8a55\u4fa1\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u5143\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u985e\u4f3c\u6027\u3092\u89e3\u6790\u3057\u3001\u95a2\u9023\u6027\u306e\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b \u9577\u6240 \u5b9f\u88c5\u304c\u5bb9\u6613 \u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\u304c\u5bb9\u6613 \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u8003\u616e\u304c\u4e0d\u8981 \u3068\u3082\u306b\u8a55\u4fa1\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u4e0d\u8981 \u77ed\u6240 \u4eba\u306e\u8a55\u4fa1\u3078\u306e\u4f9d\u5b58 \u8a55\u4fa1\u3092\u6a19\u6e96\u5316\u3059\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b \u758e\u306a\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u60aa\u5316 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8 \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3 \u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u3092\u4e8b\u524d\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308c\u3070\u3001\u3042\u308b\u7a0b\u5ea6\u306f\u6539\u5584\u53ef\u80fd \u305f\u3060\u3057\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u983b\u5ea6\u3067\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u306eCF \u7d71\u8a08\u7684\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u306e\u8cfc\u8cb7\u884c\u52d5\u3092\u30e2\u30c7\u30eb\u5316\u3057\u3001\u30e2\u30c7\u30eb\u3092\u3082\u3068\u306b\u63a8\u85a6\u3092\u884c\u3046 \u4ee3\u8868\u7684\u306a\u624b\u6cd5 \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30afCF \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0CF \u6f5c\u5728\u610f\u5473CF \u7d20\u56e0\u5b50\u5206\u6790 \u6b21\u5143\u524a\u6e1b\u3092\u7528\u3044\u305fCF \u9577\u6240 \u758e\u306a\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd \u4e88\u6e2c\u6027\u80fd\u5411\u4e0a \u76f4\u611f\u7684\u306a\u8aac\u660e \u77ed\u6240 \u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u304c\u8907\u96d1 \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\uff08\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u3088\u308a\u306f\u901f\u3044\uff09 \u591c\u9593\u3084\u3001\u6708\u30fb\u9031\u3054\u3068\u306b\u66f4\u65b0\u3059\u308c\u3070\u826f\u3044 \u9069\u5fdc\u6027 \u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u306e\u5909\u5316\u306b\u5f31\u3044 \u30e2\u30c7\u30eb\u3092\u66f4\u65b0\u3057\u306a\u3044\u3068\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u6b21\u5143\u524a\u6e1b\u306b\u3088\u308b\u6709\u76ca\u306a\u60c5\u5831\u306e\u640d\u5931 \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u306aCF \uff08CF\u3067\u306f\u306a\u3044\uff09\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u3068\u3001CF\u306e\u53cc\u65b9\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046 \u4ee3\u8868\u7684\u306a\u624b\u6cd5 \u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9CF \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\uff0b\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u306eCF \u9577\u6240 \u5358\u4f53\u3067\u306e\u554f\u984c\u3092\u514b\u670d\u53ef\u80fd \u4e88\u6e2c\u6027\u80fd\u5411\u4e0a \u30b9\u30d1\u30fc\u30b9\u6027\u3001\u7070\u8272\u306e\u7f8a\u306b\u5bfe\u5fdc \u77ed\u6240 \u69cb\u7bc9\u304c\u8907\u96d1 \u5834\u5408\u306b\u3088\u308a\u5916\u90e8\u30c7\u30fc\u30bf\uff08\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\u4ee5\u5916\u306e\u60c5\u5831\uff09\u304c\u5fc5\u8981 \u4f7f\u3046\u30c7\u30fc\u30bf \u660e\u793a\u7684\u306a\u30c7\u30fc\u30bf \u30e6\u30fc\u30b6\u30fc\u306b\u660e\u793a\u7684\u306b\u8a55\u4fa1\u3055\u305b\u308b Good/Bad, n\u6bb5\u968e\u8a55\u4fa1 \u30c7\u30fc\u30bf\u91cf\u306f\u5c11\u306a\u3044\u304c\u3001\u6b63\u78ba\u3067\u3001\u672a\u8a55\u4fa1\u3068\u4e0d\u652f\u6301\u306e\u533a\u5225\u306f\u660e\u78ba \u6697\u9ed9\u7684\u30c7\u30fc\u30bf \u95b2\u89a7\u30c7\u30fc\u30bf\u3001\u8cfc\u8cb7\u30c7\u30fc\u30bf\u306a\u3069\u306e\u81ea\u52d5\u7684\u306b\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831 \u30c7\u30fc\u30bf\u91cf\u306f\u591a\u3044\u304c\u3001\u4e0d\u6b63\u78ba\u3067\u3001\u672a\u8a55\u4fa1\u3068\u4e0d\u652f\u6301\u306e\u533a\u5225\u306f\u660e\u78ba\u3067\u306a\u3044 \u30c6\u30af\u30cb\u30c3\u30af SVD \u5b9a\u7fa9\u306a\u3069 \u4efb\u610f\u306em x n\u306e\u5b9f\u6570\u884c\u5217A\uff08rank=k\uff09\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u5143m x m\u306e\u76f4\u884c\u884c\u5217U, \u6b21\u5143n x n\u306e\u76f4\u884c\u884c\u5217V, \u975e\u5bfe\u89d2\u6210\u5206\u304c0\u3067\u3001\u5bfe\u89d2\u6210\u5206\u304c0\u3088\u308a\u5927\u304d\u3044\uff08\u3082\u3057\u5217\u304ck\u4ee5\u4e0b\u306a\u3089\uff09\u304b0\u3068\u7b49\u3057\u3044\uff08\u3082\u3057\u5217\u304ck\u3088\u308a\u5927\u304d\u3044\u306a\u3089\uff09\u884c\u5217S\u304c\u5b58\u5728\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u89e3\u3067\u304d\u308b \u4e0b\u306e\u884c\u5217\u3068\u306e\u5dee\uff08\u884c\u5217U\u3060\u3068\u3001r\u884c\u301cm\u884c\u306e\u90e8\u5206\uff09\u306e\u90e8\u5206\u306e\u6210\u5206\u306f\u5168\u30660 \u3053\u306e\u3068\u304d\u3001A\u306e\u7279\u7570\u5024\u5206\u89e3\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b \\[ A = U \\Gamma V^T \\\\ A:m*n, ~U:m*r,~ \\Gamma:r*r,~ V^T:r*n \\] U, V\u306f\u76f4\u884c\u884c\u5217\u3001\\Gamma\u306f\u5bfe\u89d2\u884c\u5217\u3067\u3001\\Gamma\u306e\u5bfe\u89d2\u6210\u5206\u306e\u884c\u5217\u304cA\u306e\u7279\u7570\u5024\uff08\uff1e0\uff09 \u5bfe\u89d2\u6210\u5206\u306e\u5927\u304d\u3055\u304c\u4e00\u5b9a\u5024\u4ee5\u4e0b\u306e\\Gamma\u3092\u5207\u308a\u6368\u3066\u308b\u3053\u3068\u3067\u3001\u6b21\u5143\u3092\u524a\u6e1b\u3059\u308b \u6027\u8cea \u4ee5\u4e0b\u306e\u884c\u5217Aj*\u306f\u3001A\u306e\u30e9\u30f3\u30afj\u306e\u6700\u5c0f\u4e8c\u4e57\u8fd1\u4f3c \\[ A_{j*} = \\sum^j_{i=1}\\lambda_ju_iv_i \\] A\u306b\u5bfe\u3057\u3066\\Gamma\u306f\u4e00\u4f4d\u306b\u5b9a\u307e\u308b\u304c\u3001U,V\u306f\u4e00\u610f\u306b\u5b9a\u307e\u308b\u3068\u306f\u9650\u3089\u306a\u3044 SVD ++ \u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u3068\u3057\u3066\u306eMF\u3092\u6b63\u5247\u304c\u3042\u308bSVD\u3068\u307f\u306a\u3057\u3001\u305d\u308c\u306e\u9032\u5316\u7cfb\u3068\u3044\u3046\u4f4d\u7f6e\u4ed8\u3051 \u2192\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9.Factorization Machines.SVD++\u53c2\u7167 \u4ed6\u306e\u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u3068\u306e\u6bd4\u8f03 NMF \u4fc2\u6570\u304c0\u4ee5\u4e0a\u3067\u3042\u308b\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308b\u624b\u6cd5 \u5206\u89e3\u5f8c\u306e\u4fc2\u6570\u304c\u758e\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u9069\u3057\u3066\u3044\u306a\u3044 PCA 0\u4ee5\u4e0b\u3092\u3068\u308b\u5834\u5408\u304c\u3042\u308b \u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u95b2\u89a7\u3084\u8a55\u4fa1\u3001\u884c\u52d5\u306a\u3069\u306f\u975e\u8ca0\u3067\u3042\u308a\u30010\u4ee5\u4e0b\u306b\u306b\u306a\u308b\u3053\u3068\u306f\u306a\u3044 LDA \u30c7\u30fc\u30bf\u304c\u591a\u5909\u91cf\u6b63\u898f\u5206\u5e03\u3067\u306a\u3044\u306e\u3067\u524d\u63d0\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044 ICA \u8a55\u4fa1\u30fb\u884c\u52d5\u5c65\u6b74\u306f\u76f8\u4e92\u306b\u7d71\u8a08\u7684\u306b\u72ec\u7acb\u3067\u306a\u3044\u306e\u3067\u4eee\u5b9a\u304c\u6e80\u305f\u3055\u308c\u306a\u3044 \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u2192\u63a8\u85a6\u306e\u6d41\u308c \u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3059\u308b \u4f55\u3092\u6301\u3063\u3066\u985e\u4f3c\u3057\u3066\u3044\u308b\u3068\u3059\u308b\u304b\u5b9a\u7fa9 \u5b9a\u7fa9\u306b\u5408\u308f\u305b\u3001\u30c7\u30fc\u30bf\u3092\u7528\u610f \u5b9a\u7fa9\u306b\u5408\u308f\u305b\u3001\u7b97\u51fa\u624b\u6cd5\u3092\u7b97\u51fa\u3057\u5b9f\u88c5 \u5b9f\u969b\u306b\u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3092\u7b97\u51fa \u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3067\u91cd\u307f\u3092\u3064\u3051\u3066\u63a8\u85a6 \u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3067\u91cd\u307f\u4ed8\u3051\uff08\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u306e\u5f71\u97ff\u5ea6\u3092\u5927\u304d\u304f\u3059\u308b\uff09 \u6b63\u898f\u5316\u3059\u308b \u9069\u5207\u306b\u30bd\u30fc\u30c8\u3057\u3066\u3001\u30b9\u30b3\u30a2\u304c\u9ad8\u3044\u9806\u306b\u7d50\u679c\u3092\u8868\u793a \u4f8b \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9 --- \u30a2\u30a4\u30c6\u30e01 \u30a2\u30a4\u30c6\u30e02 \u30a2\u30a4\u30c6\u30e03 \u30a2\u30a4\u30c6\u30e04 \u30a2\u30a4\u30c6\u30e05 \u30a2\u30a4\u30c6\u30e06 \u30a2\u30a4\u30c6\u30e07 \u30a2\u30a4\u30c6\u30e08 \u985e\u4f3c\u5ea6 \u30e6\u30fc\u30b6\u30fcA 1 0 x 1 0 x 1 0 1.0 \u30e6\u30fc\u30b6\u30fcB 0 0 1 1 1 0 0 1 0.5 \u30e6\u30fc\u30b6\u30fcC 0 0 1 0 1 0 0 x 0.25 \u30e6\u30fc\u30b6\u30fcD 0 1 0 x 1 0 1 0 0.0 \u63a8\u85a6\u3055\u308c\u308b\u4eba 1 0 x 1 0 x x x - \u8a55\u4fa1(n=1) - - x - - x 1 0 ref A n=2 - - 1 - - 0 0.5 0.5 ref A&B \u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u985e\u4f3c\u5ea6\u306f\u4e00\u81f4\u7387\uff08\u540c\u3058\u5024\u306e\u5272\u5408\uff09\u3092\u4f7f\u3063\u305f \u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u8a55\u4fa1\u306f{0,1}\uff08\u8cfc\u8cb7\u3057\u305f\u304b\u5426\u304b\u3001\u597d\u304d\u304b\u5426\u304b\uff09 K-NN(n=1)\u306a\u3089\u3070\u3001\u4e00\u756a\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fcA\u306e\u8a55\u4fa1\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e07\u3092\u63a8\u85a6\u3059\u308b K-NN(n=2)\u306a\u3089\u3070\u3001\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fcA\u3068B\u306e\u8a55\u4fa1\u306e\u5e73\u5747\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e03\u3092\u63a8\u85a6\u3059\u308b \u5171\u901a\u306e\u6539\u5584\u70b9 \u30e6\u30fc\u30b6\u30fc\u9593\u306e\u985e\u4f3c\u5ea6\u306e\u8a08\u7b97\u3001\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u8a08\u7b97\u306b\u6539\u5584\u70b9\u304c\u591a\u3044 \u985e\u4f3c\u5ea6\u306b\u95b2\u89a7\u3057\u305f\u304b\u5426\u304b\u306a\u3069\u3092\u542b\u3081\u308b \u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u8a08\u7b97\u6642\u306b\u985e\u4f3c\u5ea6\u306b\u3088\u308b\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3046 \u8a55\u4fa1\u8005\u306e\u591a\u3055\u306b\u3088\u308a\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3046\u3000\u306a\u3069 \u307e\u305f\u3001\u758e\u306a\u30c7\u30fc\u30bf\u3092\u6271\u3046\u5834\u5408\u3001\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046 PCA\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u6b20\u640d\u5024\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u6295\u7968\u5024\uff08\u4e0b\u53c2\u7167\uff09\u3084EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4fdd\u7ba1\u3059\u308b \u8a55\u4fa1\u5024\u3078\u306e\u4f9d\u5b58\u3092\u4f4e\u3081\u305f\u3044\u5834\u5408\u306f\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u5316\u3057\u305f\u5f8c\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u306b\u5bfe\u3059\u308b\u985e\u4f3c\u6307\u6a19\u306a\u3069\u3092\u7528\u3044\u308b \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u72ec\u81ea\u306e\u6539\u5584\u70b9 \u4e00\u4eba\u5f53\u305f\u308a\u306e\u5171\u901a\u306e\u8a55\u4fa1\u8005\u304c\u5c11\u306a\u3044\u5834\u5408\u3001\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u672a\u8a55\u4fa1\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3092\u3001\u5168\u5229\u7528\u306e\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3067\u57cb\u3081\u308b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u6295\u7968\u5024\uff09 \u6700\u4f4e\u3001\u6700\u9ad8\u306a\u3069\u306e\u4e21\u7aef\u306b\u8fd1\u3044\u8a55\u4fa1\u5024\u3092\u3088\u308a\u91cd\u8996\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9 \u30a2\u30a4\u30c6\u30e01 \u30a2\u30a4\u30c6\u30e02 \u30a2\u30a4\u30c6\u30e03 \u30a2\u30a4\u30c6\u30e04 \u30a2\u30a4\u30c6\u30e05 \u30a2\u30a4\u30c6\u30e06 \u30a2\u30a4\u30c6\u30e07 \u30a2\u30a4\u30c6\u30e08 \u30e6\u30fc\u30b6\u30fcA 1 0 x 1 0 x 1 0 \u30e6\u30fc\u30b6\u30fcB 0 0 1 1 1 0 0 1 \u30e6\u30fc\u30b6\u30fcC 0 0 1 0 1 0 0 x \u30e6\u30fc\u30b6\u30fcD 0 1 0 x 1 0 1 0 \u63a8\u85a6\u3055\u308c\u308b\u4eba 1 0 x 1 0 x x x \u30a2\u30a4\u30c6\u30e01\u306e\u985e\u4f3c\u5ea6 - - 0.33 - - 1.00 0.75 0.33 \u30a2\u30a4\u30c6\u30e04\u306e\u985e\u4f3c\u5ea6 - - 0.5 - - 0.5 0.67 0.5 \u9ad8\u8a55\u4fa1\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6 - - 0.42 - - 0.75 0.71 0.42 \u7c21\u7565\u5316\u306e\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3068\u540c\u3058\u8a08\u7b97\u65b9\u6cd5\u3092\u7528\u3044\u305f \u6539\u5584\u624b\u6cd5\u3082\u30e6\u30fc\u30b6\u30fc\u30d9\u30b9\u3068\u540c\u69d8 \u63a8\u85a6\u3057\u305f\u3044\u30e6\u30fc\u30b6\u30fc\u304c\u9ad8\u8a55\u4fa1\u3092\u3057\u305f\u30a2\u30a4\u30c6\u30e0{1,4}\u3092\u4f7f\u3044\u3001\u672a\u8a55\u4fa1\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97 \u985e\u4f3c\u5ea6\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e06\u3092\u63a8\u85a6\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u72ec\u81ea\u306e\u6539\u5584\u70b9 \u5171\u8d77\u6027\u3084\u3001\u95b2\u89a7\u30fb\u8cb7\u3044\u7269\u30fb\u76f4\u8fd1\u306e\u5229\u7528\u5c65\u6b74\u3068\u985e\u4f3c\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u6642\u7684\u500b\u4eba\u5316\u306e\u63a8\u85a6\u3092\u884c\u3048\u308b \u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fdd\u8b77\u306b\u304a\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3088\u308a\u512a\u4f4d \u554f\u984c \u6620\u753b\u30fb\u30b3\u30f3\u30b5\u30fc\u30c8\u306e\u3088\u3046\u306b\u3001\u63a8\u85a6\u5bfe\u8c61\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u983b\u7e41\u306b\u5165\u308c\u66ff\u308f\u308b\u72b6\u6cc1\u3067\u306f\u3001\u983b\u7e41\u306a\u8fd1\u508d\u306e\u66f4\u65b0\u304c\u5fc5\u8981\u306b\u306a\u308b \u5b9f\u9a13\u7684\u306b\u7279\u5b9a\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u504f\u308b\u50be\u5411\u304c\u5f37\u3044\uff08\u7406\u8ad6\u7684\u6839\u62e0\u306f\u306a\u3044\u304c\uff09 \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3068\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5dee\u5225\u5316 \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9 \u30e1\u30e2\u30ea\u306b\u53ce\u307e\u308b\u30b5\u30a4\u30ba\u3067\u5909\u66f4\u304c\u983b\u7e41\u306b\u884c\u308f\u308c\u308b \u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306e\u8da3\u5411\u304c\u72ec\u81ea\u306e\u5024\u3092\u6301\u3063\u3066\u3044\u308b \u301c\u3092\u63a8\u85a6\u3059\u308b\u30b5\u30a4\u30c8 \u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff08\u4e88\u60f3\u5916\u306e\u3082\u306e\u3092\u898b\u3064\u3051\u308b\u3053\u3068\uff09\u304c\u9ad8\u3044 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9 \u5de8\u5927\u306a\u30c7\u30fc\u30bf\u304c\u5bfe\u8c61 \u30a2\u30a4\u30c6\u30e0\u304c\u591a\u3044\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3092\u51fa\u3057\u306b\u304f\u3044 \u540c\u3058\u30a2\u30a4\u30c6\u30e0\u3092\u8cb7\u3046\u4eba\u304c\u5c11\u306a\u304b\u3063\u305f\u308a\u3001\u884c\u5217\u304c\u758e\u306b\u306a\u3063\u305f\u308a\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u306f\u4e8b\u524d\u306b\u8a08\u7b97\u53ef\u80fd\u306a\u306e\u3067\u3001\u904b\u7528\u74b0\u5883\u3067\u306e\u63a8\u85a6\u304c\u697d \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u306f\u5909\u5316\u3057\u3065\u3089\u3044\u306e\u3067\u518d\u8a08\u7b97\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080 \u8aac\u660e\u3057\u3084\u3059\u3044 Factorization Machines 2010\u5e74\u306bICDM\u3067\u51fa\u3055\u308c\u305f\u6c4e\u7528\u7684\u306a\u30e2\u30c7\u30eb \u7279\u5fb4\u91cf\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u3046\u307e\u304f\u8a08\u7b97\u3059\u308b \u5e74\u9f62\u3092\u8868\u3059\u7279\u5fb4\u91cf\u3068\u3001\u6027\u5225\u3092\u8868\u3059\u7279\u5fb4\u91cf\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u5e74\u9f62\uff0b\u6027\u5225\u306eAND\u6761\u4ef6\u306e\u7279\u5fb4\u91cf\u3092\u3001\u5e74\u9f62\u3068\u6027\u5225\u306e\u4ea4\u4e92\u4f5c\u7528\u3067\u8868\u73fe\u3059\u308b \u4ea4\u4e92\u4f5c\u7528\u306e\u91cd\u307f\u3092\u5404\u7279\u5fb4\u306b\u5bfe\u5fdc\u3059\u308b\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u3067\u5b66\u7fd2\u3059\u308b \u3088\u308a\u9ad8\u6b21\u306aFM\u3082\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u304c\u30012018\u5e74\u6642\u70b9\u3067\u306f\u30013\u6b21\u304f\u3089\u3044\u307e\u3067\u3057\u304b\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u3066\u3044\u304b\u306a\u3044 CF\u3068\u306f\u8003\u3048\u65b9\u304c\u3084\u3084\u7570\u306a\u308b user A user B user C - Item a Item b 1 0 0 1 0 1 0 0 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 0 1 \u3053\u306e\u3088\u3046\u306b\u30011\u8a55\u4fa1\u30921\u884c\u3067\u793a\u3057\u3001\u53d6\u308a\u51fa\u3059\u306e\u306f\u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u76f8\u4e92\u4f5c\u7528\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb \u76f8\u4e92\u4f5c\u7528\u3092\u6642\u9593\u3084\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306a\u3069\u81ea\u7531\u306b\u5165\u308c\u3089\u308c\u308b \u4f8b\u3048\u3070Age\u3092\u5165\u308c\u308c\u3070\u3001UserxItemxAge\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u3067\u6271\u3048\u308b \u4e88\u6e2c\u5f0f 2\u6b21\u306eFM \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i+\\sum^n_{i=1}\\sum^n_{j=i+1}\u3008v_i,v_j\u3009x_ix_j \\\\ where~ w_0 \\in \\mathbb{R},~ w \\in \\mathbb{R}^n,~ V \\in \\mathbb{R}^{n\\times k} \\\\ <v_i,v_j> := \\sum^k_{f=1}v_{i,f} v_{j,f} \\] V\u5185\u306e\u884cv_i\u306f\u3001k\u500b\u306e\u56e0\u5b50\u3092\u6301\u3064i\u756a\u76ee\u306e\u5909\u6570 k in N+0\u306f\u56e0\u5b50\u5206\u89e3\u306e\u6b21\u5143\u6027\u3092\u5b9a\u7fa9\u3059\u308b\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf \u53c2\u7167\uff1a\u901a\u5e38\u306e\u4ea4\u4e92\u4f5c\u7528\u304c\u3042\u308b2\u6b21\u307e\u3067\u306e\u7dda\u5f62\u30e2\u30c7\u30eb \u305d\u306e\u307e\u307e\u63a8\u85a6\u306e\u30c7\u30fc\u30bf\u306b\u6301\u3063\u3066\u3044\u304f\u3068\u3001 \\(x_ix_j\\) \u304c\u758e\u3067\u3042\u308b\u305f\u3081 \\(w_{i,j}\\) \u90e8\u5206\u304c\u5b66\u7fd2\u3057\u306b\u304f\u3044 \u3088\u3063\u3066\u3001\u305d\u3053\u306e\u90e8\u5206\u3092\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3068\u3057\u3066\u5b66\u7fd2\u3059\u308b \u3064\u3044\u3067\u306b\u3001\u5b66\u7fd2\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6e1b\u3089\u305b\u308b \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i+\\sum^n_{i}\\sum^n_{j=i+1}w_{i,j}x_ix_j \\] 2way FM\u306f\u3001\u5909\u6570\u9593\u306e\u5909\u6570\u5358\u4e00\uff0b\u30da\u30a2\u30ef\u30a4\u30ba\u76f8\u4e92\u4f5c\u7528\u3092\u6349\u3048\u308b w0\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30d0\u30a4\u30a2\u30b9 wi\u306f\u3001i\u756a\u76ee\u306e\u5909\u6570\u306e\u5f37\u3055\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b w^i,j := \u306fi\u756a\u76ee\u3068j\u756a\u76ee\u306e\u5909\u6570\u9593\u306e\u76f8\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u76f8\u4e92\u4f5c\u7528\u3054\u3068\u306b\u30d1\u30e9\u30e1\u30fc\u30bfw_i,j\u3092\u4f7f\u7528\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001FM\u30e2\u30c7\u30eb\u306f\u56e0\u6570\u5206\u89e3\uff08Factorize\uff09\u3059\u308b\u3053\u3068\u3067\u76f8\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u758e\u306a\u30d9\u30af\u30c8\u30eb\u3067\u306f\u3001\u3053\u308c\u304c\u91cd\u8981 \u4e88\u6e2c \u56de\u5e30 y^(x)\u3092\u76f4\u63a5\u4e88\u6e2c\u5bfe\u8c61\u3068\u3057\u3066\u4f7f\u7528\u3057\u3001MSE\u306a\u3069\u3067\u5b66\u7fd2\u3055\u305b\u308b 2\u5024\u5206\u985e y^(x)\u3092\u30e9\u30d9\u30eb\u3068\u3057\u3066\u3001\u30ed\u30b8\u30c3\u30c8\u56de\u5e30\u3084\u30d2\u30f3\u30b8\u30ed\u30b9\u3067\u5b66\u7fd2\u3055\u305b\u308b \u30e9\u30f3\u30ad\u30f3\u30b0 \u30d9\u30af\u30c8\u30ebx\u3092 \\(y^{(x)}\\) \u3067\u9806\u4f4d\u4ed8\u3051\u3057\u3001 \\(x(a), x(b) \\in D\\) \u306e\u30da\u30a2\u306b\u5bfe\u3057\u3066\u30da\u30a2\u30ef\u30a4\u30ba\u5206\u985e\u640d\u5931\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3059\u308b \u6700\u9069\u5316\u624b\u6cd5 SGD, ALS, MCMC\u306a\u3069 MSE, \u30ed\u30b8\u30c3\u30c8\u640d\u5931\u3001\u30d2\u30f3\u30b8\u30ed\u30b9\u306a\u3069\u69d8\u3005\u306a\u640d\u5931\u3092\u5b66\u7fd2\u3067\u304d\u308b L2\u6b63\u5247\u5316\u3067\u904e\u5b66\u7fd2\u3092\u9632\u3050 Early stopping\u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u826f\u3044\uff1f \u52fe\u914d\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u308b\uff08\uff11\u6b21\u306e\u5834\u5408\uff1f\uff09 $$ \\begin{equation} \\frac{d}{d\\theta}\\hat y(x)= \\Biggl{ \\begin{array}{1} 1, ~if~\\theta~is~w_0\\ x_i, ~if~\\theta~is~w_i\\ x_i\\sum^n_{i=1}v_{i,f}x_j- v_{i,f}x^2_i,~if~\\theta~is~v_{i,f} \\end{array} \\end{equation} $$ \u6570\u5f0f\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u305f\u3081\u3001\u30d1\u30fc\u30b7\u30e3\u30ebd\u3092\u305f\u3060\u306ed\u3068\u3057\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002 SVD++ \u5143\u306eMF\uff08SVD\uff09 \\[ \\hat r_{ui} = \\mu + b_{user}(u)+b_{item}(i)+U_uI_i \\\\ where ~ \\hat r_{ui}:\u8a55\u4fa1\u306e\u4e88\u6e2c ~,~ b_{user}:\u500b\u4eba\u306e\u5f71\u97ff\uff08\u30d0\u30a4\u30a2\u30b9\uff09 \\\\ ~I:\u5546\u54c1\u306e\u5c5e\u6027(I \\in R^{k\\times m}) ~,~ \\mu:\u5168\u4f53\u5e73\u5747 \\\\ ~b_{item}:\u5546\u54c1\u306e\u5f71\u97ff\uff08\u30d0\u30a4\u30a2\u30b9\uff09 ~,~ U:\u5546\u54c1\u306e\u5c5e\u6027\uff08U \\in R^{u \\times k} \\] \\[ loss = \\min_{b,U,I}\\sum_{u,i\\in R}(r_{ui}-\\hat r_{ui})^2 + \\lambda(|b_{user}|^2+|b_{item}|^2+|U^T_u|^2+|I_i|^2) \\] SVD++ \\[ \\hat r_{ui} = \\mu + b_{user}(u)+b_{item}(i)+(U_u+|R(u)|^{-0.5}\\sum_{j \\in R(u)}y_j)I_i \\\\ where ~ R(u):\u30e6\u30fc\u30b6\u30fcu\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u96c6\u5408 \\\\ y:\u5546\u54c1\u3078\u306e\u3042\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u52b9\u679c(y\\in R^{k \\times m})(\u30a2\u30af\u30b7\u30e7\u30f3\uff1a\u5546\u54c1\u3092\u8a55\u4fa1\u3057\u305f\u3001\u95b2\u89a7\u3057\u305f\u7b49) \\] \\[ loss = min_{b,U,I}\\sum_{(u,i)\\in R}(r_{ui}-\\hat r_{ui})^2+\\lambda_1(|b_{user}|^2+|b_{item}|^2)+ \\\\\\lambda_2(|U^T_u|^2+|I_i|^2+|y_j|^2) \\] Field-aware FM; FFM \u5143\u8ad6\u6587\uff1ahttps://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf \u3053\u306e\u30e2\u30c7\u30eb\u3067\u512a\u52dd\u3057\u305f\u30b3\u30f3\u30da\uff08\u8ad6\u6587\u306e\u7b46\u8005\u304c\u4f7f\u7528\uff09 https://www.kaggle.com/c/criteo-display-ad-challenge https://www.kaggle.com/c/avazu-ctr-prediction ### \u4e88\u6e2c\u5f0f FM\u306e\u767a\u5c55\u578b FM\u3067\u306f\u5404\u7279\u5fb4\u91cf\u306b\u3064\u304d\u4e00\u3064\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3057\u305f FFM\u3067\u306f\u3001Field\uff08\u5143\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u985e\uff09\u306e\u5358\u4f4d\u306b\u5206\u3051\u3001\u5404\u7279\u5fb4\u91cf\u306b\u3064\u304dField\u5206\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3059\u308b\u3088\u3046\u306b\u6539\u5584\u3057\u305f FM\u306f\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092one-hot encoding\u3057\u3066\u7279\u5fb4\u91cf\u3068\u3059\u308b\u306e\u304c\u524d\u63d0\u3060\u3063\u305f\u305f\u3081\u3001\u7570\u306a\u308b\u5c5e\u6027\u60c5\u5831\u304c\u4e00\u5f8b\u3067{0,1}\u306e\u5024\u306b\u3055\u308c\u3066\u3057\u307e\u3063\u305f \u5404\u7279\u5fb4\u91cf\u306f\u3001\u5143\u304c\u3069\u306e\u3088\u3046\u306a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u5c5e\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u304c\u629c\u3051\u843d\u3061\u3066\u3057\u307e\u3063\u3066\u3044\u308b FFM\u306b\u3088\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306b\u7279\u6709\u306e\u8981\u56e0\u3067\u3042\u308b\u76f8\u4e92\u4f5c\u7528\u3092\u8868\u73fe\u3067\u304d\u308b \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i + \\sum^n_{i=1}\\sum^n_{j=i+1}<v_{i,f(j)},v_{j,f(i)}>x_ix_j \\\\ where ~ f(j)):j\u304c\u5c5e\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9 \\] \u5b66\u7fd2\u65b9\u6cd5 FM\u3068\u540c\u3058 \u305f\u3060\u3057\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5897\u5927\u3057\u305f\u5206\u3001\u904e\u5b66\u7fd2\u3057\u3084\u3059\u3044\u306e\u3067\u3001Early stopping\u3092\u7528\u3044\u308b Deep\u306aFM https://data.gunosy.io/entry/deep-factorization-machines-2018#f-95055ec5 \u30d9\u30af\u30c8\u30eb\u3054\u3068\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u7528\u3044\u308b\u3068\u826f\u3044 \u9ad8\u6b21\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u660e\u793a\u7684\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u5fc5\u8981 \u901a\u5e38\u306eDNN\u3068\u306f\u9055\u3046\u6027\u8cea\u3092\u6301\u3064 \uff08\u901a\u5e38\u306eDNN\u3068\u306f\u5225\u306e\u6027\u8cea\u3092\u6301\u3063\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5fc5\u8981\uff09 Factorization-machine supported Neural Network (FNN) ECIR2016 \u666e\u901a\u306eMLP \u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u306a\u5165\u529b\u30c7\u30fc\u30bf\u3092\u3001\u5404\u5909\u6570\u3054\u3068\u306bOne-Hot\u2192Embedding\u3057\u3066Dense\u306aNetwork\u306b\u5165\u308c\u308b \u30ec\u30a4\u30e4\u30fc\u306e\u91cd\u307f\u306e\u521d\u671f\u5316\u306bFM\u306e\u91cd\u307f\u3084\u30d9\u30af\u30c8\u30eb\u3092\u4f7f\u3046 Deep Crossing Network (DCN) KDD2016 FNN\u306eMLP\u90e8\u5206\u3092ResNet\u306e\u3088\u3046\u306askip-connection\u306b\u3057\u3066\u3001\u6b8b\u5dee\u3092\u4e88\u6e2c \u5185\u90e8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5b9f\u9a13\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u5f15\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u5f8c\u767a\u306e\u7814\u7a76\u3060\u3068FNN\u3088\u308a\u7cbe\u5ea6\u304c\u9ad8\u3044 Wide & Deep (arXiv:1606.07792) 2016 \u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u306a\u5024\u3092Embed\u3057\u3066\u4f7f\u3046\u306e\u306f\u3001FNN\u3084DCN\u3068\u540c\u3058 \u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u51fa\u529b\u5c64\u3067\u304f\u3063\u3064\u3051\u308b FNN\u3084DCN\u3088\u308a\u7cbe\u5ea6\u304c\u826f\u3044\u4e0a\u3001Tensorflow\u306bAPI\u304c\u3042\u308b Product-based Neural Network (PNN) ICDM2017 CategoricalEmbedding\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u540c\u58eb\u306e\u660e\u793a\u7684\u306a\u76f8\u4e92\u4f5c\u7528\u304c\u6271\u3044\u306b\u304f\u3044 \u30e2\u30c7\u30eb\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u4ea4\u4e92\u4f5c\u7528\u9805\u3092\u7d44\u307f\u8fbc\u3080 \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u540c\u58eb\u306e\u4ea4\u4e92\u4f5c\u7528\u9805\u306e\u5c64\u3092\u4f5c\u308b Embedding\u3092\u7a4d\u307f\u4e0a\u3052\u305fFNN\u3088\u308a\u3001PNN\u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u826f\u3044 \uff08Wide&Deep\u3088\u308a\u306f\u5f31\u3044\uff1f\uff09 DeepFM IJCAI2017 Wide&Deep\u306e\u767a\u5c55\u7cfb\uff1f \u30b9\u30d1\u30fc\u30b9\u306a\u7279\u5fb4\u91cf\u3092Embedding\u5c64\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\uff1aFactorization Machine\u306b\u5165\u308c\u308b \u5206\u5c90\uff12\uff1aDense\u306aNetwork\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\u3001\u5206\u5c90\uff12\u3092\u7d50\u5408\u3057\u3066\u51fa\u529b FM&Deep\uff08FM\u3078\u306e\u5165\u529b\u3092Embed\u3057\u306a\u3044\u7248\uff09\u3088\u308a\u7cbe\u5ea6\u304c\u826f\u3044 Deep & Cross Network (CrossNet) ADKDD2017 \u9023\u7d9a\u5024\u306f\u305d\u306e\u307e\u307e\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306fEmbed\u3057\u3066\u7279\u5fb4\u306b\u3059\u308b \u4ee5\u4e0b\u306e\u5206\u5c90\u3092\u884c\u3046 \u5206\u5c90\uff11\uff1a\u4ea4\u4e92\u4f5c\u7528\u9805\u3092\u8003\u616e\u3057\u305f\u3088\u3046\u306aCross Network\u306b\u5165\u308c\u308b \u5206\u5c90\uff12\uff1aDense\u306aNetwork\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\u3001\uff12\u3092\u7d50\u5408\u3057\u3001FC\u5f8c\u3001Sigmoid\u3067\u51fa\u529b xDeepFM KDD2018 Compressed Interaction Network(CIN)\u3068\u3044\u3046\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u30d9\u30af\u30c8\u30eb\u5358\u4f4d\u3067\u660e\u793a\u7684\u306b\u9ad8\u6b21\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3059\u308b \u5206\u5c90\u3059\u308b Linear\u5c64 Embedding 1-2\u306eEmbedding\u304b\u3089\u5206\u5c90\u3059\u308b CIN Plain DNN 1-1, 2-1, 2-2\u3092\u7d50\u5408\u3057\u51fa\u529b FFM\u306e\u767a\u5c55\u7cfb https://qiita.com/guglilac/items/6c8971d27c143e2567a4 FM\u306e\u767a\u5c55\u7cfb\u3088\u308a\u3001FFM\u3092\u5143\u306b\u767a\u5c55\u3057\u3066\u3044\u308b\u305f\u3081\u6bd4\u8f03\u7684\u65b0\u3057\u3044 \u5c11\u3057\u7406\u89e3\u304c\u6d45\u3081 Field-aware Probabilistic Embedding Neural Network(FPENN) RecSys2018 \u904e\u5b66\u7fd2\u3092\u9632\u3050\uff0bNN\u306e\u5c0e\u5165 Field\u5206\u306eEmbedding\u3092\u5b66\u7fd2\u3059\u308b\u306e\u306f\u540c\u69d8 \u305f\u3060\u3057\u3001Embedding\u304c\u5f93\u3046\u78ba\u7387\u5bc6\u5ea6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a8\u5b9a\u3059\u308b \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u6642\u306b\u542b\u307e\u308c\u308b\u30ce\u30a4\u30ba\u306b\u9811\u5065\u306b\u5b66\u7fd2\u3067\u304d\u308b Deep\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u578b\u306a\u3069\u306fDeepFM\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u308b\uff08\uff1f\uff09 Field-weighted Factorization Machine(FwFM) WWW2018 Field\u306e\u7d44\u307f\u6bce\u306b\u3001\u4e88\u6e2c\u306b\u5bfe\u3059\u308b\u91cd\u8981\u5ea6\u306f\u5909\u308f\u3063\u3066\u304f\u308b \u306a\u306e\u3067\u3001Field\u306e\u7d44\u6bce\u306e\u91cd\u8981\u5ea6\u3082\u5b9a\u5f0f\u5316\u3059\u308b Interaction-aware Factorization Machines (IFM) AAAI 2019 Attention + FM feature level\u3068field level\u306eattention\u3092\u8003\u616e\u3059\u308b attention\u306b\u3064\u3044\u3066\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u30e2\u30c7\u30eb\u3068\u4e0b\u306e\u30e2\u30c7\u30eb\u306f\u3042\u307e\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044 Field Attention Deep Field-aware Factorization Machine (FAT-DeepFFM) ICDM 2019 Attention + FFM Embedding\u5165\u308c\u308b\u6bb5\u968e\u3067Attention\u3092\u8003\u616e\u3059\u308b \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9 \u30af\u30e9\u30b9\u30bf\u30e2\u30c7\u30eb \u624b\u6cd5 \u55dc\u597d\u30d1\u30bf\u30fc\u30f3\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u5229\u7528\u8005\u306e\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210 \u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u306a\u3069\u3092\u7528\u3044\u308b \u5229\u7528\u8005\u306b\u5bfe\u3057\u3001\u6700\u3082\u4f3c\u3066\u3044\u308b\u30af\u30e9\u30b9\u30bf\u3092\u63a2\u3059 \u30af\u30e9\u30b9\u30bf\u5185\u3067\u6700\u3082\u5e73\u5747\u8a55\u4fa1\u5024\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u9806\u306b\u63a8\u85a6\u3059\u308b \u6027\u8cea \u30af\u30e9\u30b9\u30bf\u6570\u306b\u3088\u3063\u3066\u3001\u63a8\u85a6\u306e\u6027\u8cea\u304c\u5927\u304d\u304f\u7570\u306a\u308b \u76ee\u7684\u306b\u5408\u308f\u305b\u3066\u30af\u30e9\u30b9\u30bf\u6570\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u63a8\u85a6\u306e\u7a2e\u985e\u306f\u30af\u30e9\u30b9\u30bf\u6570\u306b\u5236\u9650\u3055\u308c\u308b \u30af\u30e9\u30b9\u30bf\u6570\u304c\u5c0f\u3055\u3044\u3068\u3001\u5927\u307e\u304b\u3067\u3042\u307e\u308a\u500b\u4eba\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u63a8\u85a6\u304c\u884c\u308f\u308c\u308b \u4e00\u65b9\u3001\u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c\u306b\u306f\u5f37\u304f\u306a\u308b \u30af\u30e9\u30b9\u30bf\u6570\u304c\u591a\u3044\u3068\u3001\u5b89\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u30bf\u3092\u6c42\u3081\u308b\u306e\u304c\u96e3\u3057\u3044 \u4e00\u65b9\u3001\u63a8\u85a6\u306e\u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044\u306f\u9ad8\u307e\u308b \u7070\u8272\u306e\u7f8a\u554f\u984c\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u5229\u7528\u8005\u3092\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u30bf\u306b\u5206\u3051\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u8907\u6570\u30af\u30e9\u30b9\u30bf\u306b\u8de8\u304c\u308b\u3088\u3046\u306a\u63a8\u85a6\u306f\u3067\u304d\u306a\u3044 \u5b9f\u88c5\u304c\u5bb9\u6613\u3067\u3001\u5b9f\u884c\u901f\u5ea6\u3082\u901f\u3044 \u95a2\u6570\u7cfb \u5229\u7528\u8005\u304c\u597d\u304d\u306a\u307b\u3069\u5927\u304d\u306a\u5024\u3092\u53d6\u308b\u52b9\u7528\u95a2\u6570\u3084\u3001\u8a55\u4fa1\u5024\u3092\u4e88\u6e2c\u3059\u308b\u95a2\u6570\u3092\u7528\u3044\u308b\u30e2\u30c7\u30eb\u5168\u822c \u56de\u5e30\u3001\u5206\u985e\u3001\u30e9\u30f3\u30af\u56de\u5e30\u306a\u3069\u306b\u5e30\u7740\u3059\u308b \u56de\u5e30 \u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 \u8a55\u4fa1\u5024\u884c\u5217R\uff08\u6b20\u640d\u306a\u3057\uff09\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u89e3\u3059\u308b U\u306fk x n, V\u306fk x m\u6b21\u5143\u3067\u3042\u308b\uff08k<<m, n\uff09 \\[ R^* \\approx U^T V \\] U\u306ex\u5217\u306f\u5229\u7528\u8005x\u306e\u7279\u5fb4\u3092\u3001V\u306ey\u5217\u306f\u30a2\u30a4\u30c6\u30e0y\u306e\u7279\u5fb4\u3092\u8868\u3059 \u3088\u3063\u3066\u3001\u5229\u7528\u8005x\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\u5024\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b \\[ r^*_{xy} \\approx u^T_x v_y \\] \u3053\u308c\u306f\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u3001u_x=1/|v|, v_y=\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u3068\u307f\u306a\u3057\u305f\u5834\u5408\u3001\u985e\u4f3c\u3057\u305f\u30e2\u30c7\u30eb\u3068\u307f\u306a\u305b\u308b \u5b66\u7fd2\u65b9\u6cd5 R\u3068R*\u3068\u306e\u671f\u5f85\u7684\u306a\u640d\u5931\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u3001U\u3068V\u3092\u5206\u89e3\u3057\u3066\u5b66\u7fd2\u3059\u308b \u884c\u5217\u5206\u89e3\u306e\u624b\u6cd5\u3092\u7528\u3044\u308b R-R*\u306e\u6b8b\u5dee\u304c\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u3068\u4eee\u5b9a\u3057\u3001\u89b3\u6e2c\u3055\u308c\u305f\u8a55\u4fa1\u5024\u306e\u751f\u6210\u78ba\u7387\u304c\u9ad8\u304f\u306a\u308b\u3088\u3046\u306bU\u3068V\u3092\u8a08\u7b97\u3059\u308b\uff08\u56e0\u5b50\u5206\u6790\uff09 \u76ee\u7684\u95a2\u6570\u3092\u6700\u5c0f\u5316\u3059\u308b \u03bb\u306f\u904e\u5b66\u7fd2\u9632\u6b62\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf SGD\u3084ALS\uff08\u4ed6\u306e\u5024\u3092\u56fa\u5b9a\u3057\u3001\u9010\u6b21\u7684\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\uff09\u3067\u5b66\u7fd2\u3059\u308b \\[ loss = min_{p^*,q^*} \\sum_{(u,i) \\in k}(r_{ui}-q^T_ip_u)^2+\\lambda (||q_i||^2+||p_u||^2) \\] \u6b20\u640d\u5024\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u304c\u8003\u3048\u3089\u308c\u308b \u6f5c\u5728\u5909\u6570\u3068\u307f\u306a\u3057\u3066EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u3066\u89e3\u304f \u6b20\u640d\u5024\u304c\u306a\u3044\u30c7\u30fc\u30bf\u306e\u307f\u3067\u8a08\u7b97\u3059\u308b \u5e73\u5747\u5024\u306a\u3069\u3067\u88dc\u5b8c\u3059\u308b \u6b20\u640d\u5024\u306f\u7121\u8996\u3057\u3066\u640d\u5931\u3092\u8a08\u7b97\u3059\u308b \u305d\u306e\u4ed6 \u5358\u7d14\u306a\u306e\u3067\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fdd\u8b77\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084\u3001\u975e\u7dda\u5f62\u56de\u5e30\u3092\u5c0e\u5165\u3057\u305f\u4e88\u6e2c\u7cbe\u5ea6\u5411\u4e0a\u306a\u3069\u306e\u62e1\u5f35\u304c\u53ef\u80fd \u5168\u4f53\u30921\u3064\u306e\u7dda\u5f62\u30e2\u30c7\u30eb\u3067\u8868\u3059\u3068\u3001\u5927\u307e\u304b\u3059\u304e\u3066\u4e88\u6e2c\u7cbe\u5ea6\u304c\u4f4e\u304f\u306a\u308b\u5834\u5408\u304c\u3042\u308b \u55dc\u597d\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u5229\u7528\u8005\u9593\u3067\u3001\u5c40\u6240\u7684\u306b\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308bHorting\u6cd5\u306a\u3069\u3067\u5bfe\u5fdc\u53ef\u80fd \u30af\u30e9\u30b9\u5206\u985e \u8a55\u4fa1\u5024\u306e\u5927\u5c0f\u95a2\u4fc2\u3092\u7121\u8996\u3057\u3001\u30af\u30e9\u30b9\u3068\u898b\u306a\u3059 \u5927\u5c0f\u95a2\u4fc2\u3092\u8003\u616e\u3059\u308b\u5de5\u592b\u3082\u70ba\u305b\u308b \u7279\u5fb4\u91cf\u306b\u306f\u3001\u5bfe\u8c61\u30a2\u30a4\u30c6\u30e0\u306e\u4ed6\u306e\u5229\u7528\u8005\u306b\u3088\u308b\u8a55\u4fa1\u5024\u3084\u3001\u5bfe\u8c61\u8005\u306e\u4ed6\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u8a55\u4fa1\u5024\u304c\u5229\u7528\u3067\u304d\u308b \u9010\u6b21\u578b\u4e8c\u9805\u95a2\u4fc2\u5b66\u7fd2\u6cd5 \u5404\u30af\u30e9\u30b9\u3054\u3068\u306b\u3001\u5bfe\u8c61\u306e\u5206\u985e\u3055\u308c\u3084\u3059\u3055\u3092\u8868\u3059\u95a2\u6570\u3092\u7372\u5f97 \u95a2\u6570\u306e\u5024\u304c\u6700\u5927\u3068\u306a\u308b\u30af\u30e9\u30b9\u306b\u5bfe\u8c61\u3092\u5206\u985e \\[ \\hat r_{xy} = argmax_{r \\in R}\\bigl( \\sum_{i s.t.r_{iy}=r}u_{xi}+\\sum_{j s.t.r_{xj}=r}w_{yj} \\bigr) \\\\ where~u_{xi}:\u30a2\u30a4\u30c6\u30e0y\u306b\u3064\u3044\u3066\u306e\u8a55\u4fa1\u304c\u540c\u3058r\u3067\u3042\u308b\u5229\u7528\u8005i\u306b\u3064\u3044\u3066\u306e\u5229\u7528\u8005\u9593\u306e\u91cd\u307f \\\\ w_{yj}:\u5229\u7528\u8005x\u304c\u540c\u3058r\u3068\u8a55\u4fa1\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0j\u306b\u3064\u3044\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u91cd\u307f \\] u, w\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u306e\u67a0\u7d44\u307f\u3067\u6c42\u3081\u308b \u5b66\u7fd2\u7387\u3092\u53ce\u675f\u3055\u305b\u306a\u3044SGD\uff08Momentum\uff09\u306a\u3069 \u6700\u521d\u306bu, w\u3092\u521d\u671f\u5316\u3059\u308b r\u304c\u89b3\u6e2c\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u5229\u7528\u8005x\u4ee5\u5916\u3067\u30a2\u30a4\u30c6\u30e0y\u3092\u8a55\u4fa1\u6e08\u307f\u306e\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fci\u306b\u3064\u3044\u3066\u3001 \u8a55\u4fa1\u304c\u540c\u3058\u306a\u3089v\u3092\u5897\u3084\u3057\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u6e1b\u3089\u3059 \u307e\u305f\u3001\u5229\u7528\u8005x\u304c\u8a55\u4fa1\u3057\u3066\u3044\u308by\u4ee5\u5916\u306e\u30a2\u30a4\u30c6\u30e0\u5168\u3066\u306b\u3064\u3044\u3066\u3001 \u8a55\u4fa1\u304c\u540c\u3058\u306a\u3089\u91cd\u307fw\u3092\u5897\u3084\u3057\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u6e1b\u3089\u3059 \u305d\u306e\u4ed6 \u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u306a\u306e\u3067\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u3060\u304c\u30a2\u30a4\u30c6\u30e0\u3084\u5229\u7528\u8005\u306e\u8ffd\u52a0\u306b\u5bfe\u5fdc\u3067\u304d\u308b \u30a2\u30a4\u30c6\u30e0\u3084\u5229\u7528\u8005\u306e\u524a\u9664\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u30e9\u30f3\u30ad\u30f3\u30b0 RankBoost\u3067\u63a8\u85a6\u3059\u308b\u7814\u7a76\u304c\u3042\u308b k-NN \u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u304c\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u3067\u306f\u306a\u3044\uff1f CF\u306e\u6587\u8108\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b K\u500b\u306e\u8fd1\u3044\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u304b\u3089\u3001\u63a8\u85a6\u3092\u884c\u3046 \u8fd1\u3044\u30e6\u30fc\u30b6\u30fc\u307b\u3069\u91cd\u307f\u4ed8\u3051\u3057\u3066\u548c\u3092\u53d6\u308b\u5834\u5408\u3082\u3042\u308b \u30eb\u30fc\u30eb\u30d9\u30fc\u30b9 \u30e2\u30c7\u30eb\u3068\u3044\u3048\u3070\u30e2\u30c7\u30eb\u3060\u304c\u3001\u30a8\u30ad\u30b9\u30d1\u30fc\u30c8\u30e2\u30c7\u30eb\u3092\u6307\u3059\uff1f \u30d9\u30a4\u30ba\u5206\u985e\u5668\uff08\u78ba\u7387\u30e2\u30c7\u30eb\uff09 \u5c65\u6b74\u6761\u4ef6\u578b \u5bfe\u8c61\u8005\u306e\u904e\u53bb\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306e\u3001\u5bfe\u8c61\u8005\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\u5024\u306e\u6761\u4ef6\u4ed8\u304d\u671f\u5f85\u5024 \u78ba\u7387\u5206\u5e03\u306f\u672a\u77e5\u306a\u306e\u3067\u3001\u63a8\u5b9a\u3057\u305f\u95a2\u6570\u3092\u5229\u7528\u3059\u308b \u5f0f\u4e2d\u3067\u306f\u4ed6\u306e\u6a19\u672c\u5229\u7528\u8005\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u306f\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u78ba\u7387\u5206\u5e03\u306e\u63a8\u5b9a\u904e\u7a0b\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u3001\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u63a8\u85a6\u3068\u8a00\u3048\u308b \\[ \\hat r_{ay} = E \\bigl[ r_{ay} ~s.t.~ j \\in Y_a\\bigr] \\\\ = \\sum_{r \\in R}Pr \\bigl[ r_{ay}=r|r_{aj} ~s.t.~j \\in Y_a \\bigr] \\\\ where ~ r_{ay}: \u8a55\u4fa1\u8005a\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\\\\ Y_a: \u5229\u7528\u8005a\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\] R = {0, 1}\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001\u6761\u4ef6\u3064\u304d\u78ba\u7387\u5206\u5e03\u306b\u306a\u308b \u8a13\u7df4\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3060\u304c\u3001\u6697\u9ed9\u7684\u8a55\u4fa1\u3067\u306fr_ay=0\u3068\u306a\u308b\u30ce\u30a4\u30ba\u304c\u591a\u304f\u306a\u308a\u3001\u4e0d\u5229\u306b\u306a\u308b \u307e\u305f\u3001\u3053\u306e\u5f62\u3067\u306f\u500b\u3005\u306e\u5229\u7528\u8005\u306b\u3064\u3044\u3066\u30e2\u30c7\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u73fe\u5b9f\u7684\u3067\u306a\u3044 \\[ \\hat r_{ay} = Pr \\bigl[ r_{ay}=1 | s_{aj} ~s.t.~ j \\in Y_a \\bigr] \\] \u5b9f\u969b\u306b\u306f\u3001\u5229\u7528\u8005\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5168\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u8a55\u4fa1\u306e\u540c\u6642\u5206\u5e03\u3092\u6c42\u3081\u308b \\[ Pr \\bigl[ r_{.y}~s.t.~ y \\in Y \\bigr] \\\\ where ~ r_{.y}:\u5168\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0y\u306b\u5bfe\u3059\u308b\u8a55\u4fa1 \\] \u6700\u521d\u306e\u5f0f\u306e\u6761\u4ef6\u4ed8\u304d\u5206\u5e03\u306f\u30d9\u30a4\u30ba\u5247\u3068\u4e0d\u8981\u306a\u5909\u6570\u306e\u5468\u8fba\u304b\u3067\u6d88\u53bb\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u3059\u308b \u305f\u3060\u3057\u3001|Y| = m\u3067\u3001R^\u00ae = R1xR2xR3x...xRm\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306fm\u306b\u5bfe\u3057\u3066\u6307\u6570\u95a2\u6570\u7684\u306b\u5897\u52a0\u3059\u308b \u305d\u3053\u3067\u3001\u5909\u6570r.y\u306e\u9593\u306b\u90e8\u5206\u7684\u306a\u6761\u4ef6\u4ed8\u304d\u72ec\u7acb\u6027\u3092\u4eee\u5b9a\u3057\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e1b\u3089\u3059 \u6761\u4ef6\u4ed8\u304d\u72ec\u7acb\u6027\u3092\u5c0e\u5165\u3057\u305f\u78ba\u7acb\u30e2\u30c7\u30eb\u306f\u3001\u4f9d\u5b58\u95a2\u4fc2\u3092\u30b0\u30e9\u30d5\u3067\u793a\u3059\u305f\u3081\u3001\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u3068\u3044\u3046 \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u305d\u306e\u4e00\u3064 \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u904e\u53bb\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u30c7\u30fc\u30bf\u304b\u3089\u3001\u4e88\u3081\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b \u5b9f\u74b0\u5883\u3067\u3001\u4e8b\u8c61\u767a\u751f\u3057\u305f\u969b\u306b\u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u6c7a\u5b9a\u3059\u308b \u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3092\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4e0e\u3048\u63a8\u8ad6\u3001\u95b2\u89a7\u78ba\u7387\u3092\u7b97\u51fa \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u7814\u7a76\u3042\u308a \u3053\u306e\u5834\u5408\u3001\u5404\u30bb\u30b0\u30e1\u30f3\u30c8\u306b\u6240\u5c5e\u3059\u308b\u78ba\u7387\u304c\u5f97\u3089\u308c\u308b \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u3067\u3082\u3001\u5404\u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u304b\u3089\u306e\u8ddd\u96e2\u306a\u3069\u304c\u5f97\u3089\u308c\u308b\u306f\u305a \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u5168\u3066\u306e\u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u306a\u3044 Maximum Weighted Spanning Tree (MWST) Algorithm \u5927\u898f\u6a21\u30c7\u30fc\u30bf\u306b\u9069\u3057\u3001\u4e88\u6e2c\u52b9\u679c\u304c\u826f\u3044\u3068\u3055\u308c\u308b\u8a08\u7b97\u91cf\u304c\u30ce\u30fc\u30c9\u6570\u306b\u5bfe\u3057O(n^2) \u6761\u4ef6\u4ed8\u304d\u78ba\u7acb\u304c\u4e00\u756a\u5927\u304d\u304f\u306a\u308bSpanning Tree\u3092\u69cb\u7bc9\u3059\u308b \u5225\u9805\uff08\u4e0b\uff09\u3067\u6271\u3046 Pearl's Passage Passing Algorithm \u9ad8\u901f\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5168\u30ce\u30fc\u30c9\u306e\u5468\u8fba\u81ea\u5df1\u78ba\u7387\u3092\u6c42\u3081\u308b\u624b\u6cd5 \u30e6\u30fc\u30b6\u30fc\u30a2\u30a4\u30c6\u30e0\u30d9\u30a4\u30b8\u30a2\u30f3 \u30e6\u30fc\u30b6\u30fc\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3068\u3001\u4ed6\u30a2\u30a4\u30c6\u30e0\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b \u4ed6\u30a2\u30a4\u30c6\u30e0\u3092\u9078\u3076\u78ba\u7387\u3092\u7b97\u51fa\u3059\u308b \u30e6\u30fc\u30b6\u30fc\u30e6\u30fc\u30b6\u30fc\u30d9\u30a4\u30b8\u30a2\u30f3 \u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3080\u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03 \u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u597d\u307f\u306e\u8fd1\u3055\u3092\u7b97\u51fa \u30a2\u30a4\u30c6\u30e0\u30a2\u30a4\u30c6\u30e0\u30d9\u30a4\u30b8\u30a2\u30f3 \u30a2\u30a4\u30c6\u30e0\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03 \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u8fd1\u3055\u3092\u7b97\u51fa \u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba \u5171\u8d77\u578b \u3042\u308b\u5229\u7528\u8005\u304c\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u8a55\u4fa1\u3057\u305f\u3053\u3068\u3092\u3001\u305d\u306e\u5229\u7528\u8005\u304cx\u3067\u3042\u308b\u3068\u3044\u3046\u4e8b\u8c61\u3068\u3001\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u304cy\u3067\u3042\u308b\u3068\u3044\u3046\u4e8b\u8c61\u304c\u5171\u8d77\u3057\u3066\u3044\u308b\u3068\u6349\u3048\u308b \u3053\u306e\u5171\u8d77\u78ba\u7387\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u78ba\u7387\u7684\u6f5c\u5728\u610f\u5473\u89e3\u6790\uff08pLSA\uff09\u3092\u5229\u7528\u3059\u308b \u975e\u5e38\u306b\u67d4\u8edf\u3067\u3001\u8a55\u4fa1\u306e\u63fa\u3089\u304e\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u60c5\u5831\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u60c5\u5831\u3001\u500b\u4eba\u5c5e\u6027\u60c5\u5831\u306a\u3069\u306e\u8981\u56e0\u3092\u5c0e\u5165\u3059\u308b\u3068\u3044\u3063\u305f\u62e1\u5f35\u304c\u53ef\u80fd \u65b0\u898f\u306e\u5229\u7528\u8005\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001\u30d9\u30a4\u30ba\u306e\u67a0\u7d44\u307f\u306b\u62e1\u5f35\u3059\u308b\u3068\u6f5c\u5728\u7684\u30c7\u30a3\u30ea\u30af\u30ec\u914d\u5206\u6cd5\uff08Latent Dirichelt allocation; LDA\uff09\u3068\u306a\u308b \u8a73\u7d30\u306fhttp://www.kamishima.net/archive/recsysdoc.pdf\u3000P70 MWST algorithm \u5404\u5909\u6570\u9593\u306e\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u57fa\u6e96\u3068\u3057\u3066\u6728\u3092\u69cb\u7bc9\u3059\u308b\u624b\u6cd5 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u306a\u308b \u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3088\u308a\u3001Nx(N-1)/2\u500b\u306e\u679d\u306b\u3064\u3044\u3066\u3001\u5168\u3066\u306e\u679d\u306e\u76f8\u4e92\u60c5\u5831\u91cfI(xi; xj)\u3092\u6c42\u3081\u308b \u6700\u3082\u5927\u304d\u306a\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u793a\u3059\u679d\u3092\u53d6\u308a\u51fa\u3057\u3001\u6728\u3092\u69cb\u7bc9\u3059\u308b\u679d\u3068\u3059\u308b \u6b21\u306b\u5927\u304d\u306a\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u793a\u3059\u679d\u3092\u6728\u306b\u52a0\u3048\u308b \u305f\u3060\u3057\u3001\u30eb\u30fc\u30d7\u304c\u3067\u304d\u308b\u306a\u3089\u305d\u306e\u679d\u3092\u6368\u3066\u308b \u30b9\u30c6\u30c3\u30d73\u3092\u3001N-1\u500b\u306e\u679d\u304c\u6728\u306b\u52a0\u308f\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059 \u6700\u5f8c\u306b\u6839\u30ce\u30fc\u30c9\u3092\u6c7a\u5b9a\u3057\u3001\u6839\u304b\u3089\u8449\u306b\u5411\u304b\u3046\u3088\u3046\u306b\u679d\u306b\u65b9\u5411\u3092\u3064\u3051\u308b Web\u30da\u30fc\u30b8\uff08\u30da\u30fc\u30b8\u657010\u4e07\u4ee5\u4e0a\uff09\u3092\u63a8\u85a6\u3059\u308b\u8ad6\u6587\u3067\u306f\u3001\u6839\u30ce\u30fc\u30c9\u3092\u6700\u3082\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3068\u3057\u3066\u3044\u305f \u30b5\u30a4\u30c8\u5168Web\u30da\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9\u306f\u8a08\u7b97\u91cf\u304c\u81a8\u5927\u306b\u306a\u308a\u5b9f\u884c\u3067\u304d\u305a\u3001\u69cb\u7bc9\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30da\u30fc\u30b8\u6570\u306f5000\u7a0b\u5ea6\u304c\u9650\u754c\u3068\u3057\u3066\u3044\u305f \u30b5\u30a4\u30c8\u5185\u306e\u5404\u30da\u30fc\u30b8\u3092\u6570\u5341\u500b\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u3051\u3001\u5404\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3068\u3057\u3066\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u8ad6\u3092\u884c\u306a\u3063\u3066\u3044\u305f \u5229\u70b9 \u4e8c\u6b21\u7d71\u8a08\u91cf\u307e\u3067\u3057\u304b\u7528\u3044\u306a\u3044\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304b\u3089\u306e\u6f14\u7b97\u304c\u5bb9\u6613\u3067\u4fe1\u983c\u3067\u304d\u308b \u8a08\u7b97\u91cf\u304c\u30ce\u30fc\u30c9\u6570n\u306b\u5bfe\u3057\u3066\u9ad8\u3005O(n^2) \u7d71\u8a08\u7684\u306b\u306f\u4e00\u81f4\u6027\u304c\u5168\u304f\u306a\u3044\u304c\u3001\u4e88\u6e2c\u52b9\u7387\u304c\u826f\u3044 Pearl's Message Passing Algorithm \u9ad8\u901f\u306b\u78ba\u7387\u63a8\u8ad6\u3092\u884c\u3046\u305f\u3081\u306e\u624b\u6cd5 \u4e00\u822c\u7684\u306b\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3057\u305f\u5f8c\u3084\u3001\u30ce\u30fc\u30c9\u306b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u305f\u5834\u5408\u3001\u3042\u308b\u30ce\u30fc\u30c9\u306e\u4e8b\u5f8c\u78ba\u7acb\u3092\u6c42\u3081\u308b\u306e\u306b\u5468\u8fba\u5316\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b \u3053\u306e\u5468\u8fba\u5316\u3092\u4e00\u822c\u7684\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3092\u5229\u7528\u3057\u3066\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3089\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u3001\u305d\u306e\u5468\u8fba\u30ce\u30fc\u30c9\u3078\u5411\u3051\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u884c\u3046 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u30ce\u30fc\u30c9\u306f\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7528\u3044\u3066\u81ea\u5206\u306e\u5468\u8fba\u4e8b\u5f8c\u78ba\u7387\u3092\u66f4\u65b0\u3059\u308b \u5468\u8fba\u81ea\u5df1\u78ba\u7387\u3092\u66f4\u65b0\u3057\u305f\u30ce\u30fc\u30c9\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5143\u4ee5\u5916\u306b\u81ea\u5206\u306e\u5468\u8fba\u30ce\u30fc\u30c9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b 2,3\u3092\u7e70\u308a\u8fd4\u3057\u3001\u5168\u3066\u306e\u30ce\u30fc\u30c9\u306e\u5468\u8fba\u4e8b\u5f8c\u78ba\u7387\u3092\u66f4\u65b0\u3059\u308b \u63a8\u8ad6\u6642 \u30e6\u30fc\u30b6\u30fc\u304c\u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3092\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u308c\u63a8\u8ad6\u3092\u884c\u3044\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u304a\u3051\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u55dc\u597d\u78ba\u7387\u3092\u6c42\u3081\u308b \u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306fPearl\u2019sMessage Passing\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u9ad8\u901f\u5316\u3059\u308b \u8a08\u7b97\u3055\u308c\u305f\u55dc\u597d\u78ba\u7387\u304c\u5927\u304d\u3044\u9806\u306b\u4e26\u3079\u3066\u3044\u304f \u6642\u7cfb\u5217\u30e2\u30c7\u30eb \u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30e2\u30c7\u30eb \\[ Pr[y^{(t+1)}|<Y^{(t)}>] = \\frac{1}{Z}exp \\bigl[ \\sum^K_{k=1}\\lambda_kf_k(y^{t+1},<Y^{(t)}>) \\bigr] \\\\ where ~ Z:\u6b63\u898f\u5316\u5b9a\u6570 \\\\ \\lambda_k: \u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bf \\\\ f_k(y^{t+1},<Y^{(t)}>):\u7d20\u6027\u95a2\u6570 \\\\ \\] \u7d20\u6027\u95a2\u6570\u3068\u306f\u3001\u8cfc\u5165\u5c65\u6b74 \u3092\u306b\u3042\u308b\u7279\u5fb4\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u56de\u306b\u8cfc\u5165\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u7279\u5b9a\u306e\u3082\u306e\u306b\u306a\u308b\u306a\u30891\u3092\u53d6\u308a\u3001\u305d\u308c\u4ee5\u5916\u3067\u306f0\u3068\u306a\u308b\u3088\u3046\u306a\u95a2\u6570 \u8cfc\u5165\u5c65\u6b74\u4e2d\u306b\u30a2\u30a4\u30c6\u30e0y\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u306b\u30a2\u30a4\u30c6\u30e0y`\u3092\u8cfc\u5165\u3059\u308b\u78ba\u7387 \\[ Pr[y^{(t+1)}=y^{,}|y \\in <Y^{(t)}>]-Pr[y^{(t+1)}=y^{,}] \\] \u304c\u5927\u304d\u306a\u3082\u306e\u3092\u9078\u3076 \u3053\u3046\u3057\u3066\u7d20\u6027\u95a2\u6570\u3092\u9078\u629e\u3059\u308c\u3070\u3001\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bflamda_k\u306f\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u539f\u7406\u306b\u57fa\u3065\u3044\u3066\u63a8\u5b9a\u3067\u304d\u308b \u3053\u306e\u7d20\u6027\u95a2\u6570\u306b\u306f\u69d8\u3005\u306a\u3082\u306e\u304c\u5229\u7528\u3067\u304d\u308b \u30de\u30eb\u30b3\u30d5\u904e\u7a0b\u30e2\u30c7\u30eb \u76f4\u8fd1K\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u7cfb\u5217\u3092\u7528\u3044\u3066\u4e88\u6e2c\u3059\u308b \u5f37\u5316\u5b66\u7fd2\u3092\u4f7f\u3046\u306a\u3069\u3059\u308b \u5b9a\u671f\u8cfc\u5165 \u751f\u5b58\u6642\u9593\u89e3\u6790\u306a\u3069\u306e\u624b\u6cd5\u3092\u7528\u3044\u308b Cox\u6bd4\u7387\u30cf\u30b6\u30fc\u30c9\u30e2\u30c7\u30eb \u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30c7\u30fc\u30bf\u306e\u5f62\u5f0f \u55dc\u597d\u30c7\u30fc\u30bf\u3068\u691c\u7d22\u8cea\u554f\u304c\u3042\u308b \u55dc\u597d\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5c5e\u6027\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u5c5e\u6027\u3092\u7279\u5fb4\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u3092\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4e88\u6e2c\u3059\u308b \u53c2\u8003\u6587\u732e \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u5168\u822c\u306e\u3053\u3068\uff1ahttp://www.kamishima.net/archive/recsysdoc.pdf \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u5206\u985e\u306a\u3069\uff1ahttps://eulerdijkstra.hatenadiary.org/entry/20130407/1365349866 CF\u3092\u7528\u3044\u305f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\uff1ahttps://www.slideshare.net/masayuki1986/recommendation-ml Web\u30da\u30fc\u30b8\u306e\u63a8\u85a6\u306b\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u65e5\u672c\u8a9e\u7814\u7a76\uff1ahttps://www.ai-gakkai.or.jp/jsai2007/data/pdf/100205.pdf FM, FFM\u3001FM+NN\u306b\u3064\u3044\u3066\uff1ahttps://qiita.com/s_katagiri/items/d630685dd2fe2627ecd3 FM\u306e\u5143\u8ad6\u6587\uff1ahttps://www.csie.ntu.edu.tw/~b97053/paper/Rendle2010FM.pdf DeepFM\u306e\u52d5\u5411(2018)\uff1ahttps://data.gunosy.io/entry/deep-factorization-machines-2018#f-95055ec5","title":"\u63a8\u85a6\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_1","text":"\u63a8\u85a6\u30e2\u30c7\u30eb\u3001\u6240\u8b02\u30ea\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30e2\u30c7\u30eb\u306e\u6700\u8fd1\u306e\u540c\u884c\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002 \u69d8\u3005\u306a\u8a18\u8ff0\u304c\u3042\u308a\u3001\u66f8\u304d\u624b\u306b\u3088\u308a\u5358\u8a9e\u304c\u6307\u3059\u7bc4\u56f2\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b \u3008w, x\u3009\u3068\u306fw,x\u306e\u5185\u7a4d\u3092\u8868\u3059","title":"\u63a8\u85a6\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_2","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306f\u5927\u304d\u304f\u5206\u3051\u30663\u7a2e\u985e \u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\uff1a\u63a8\u8ad6\u6642\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3057\u306a\u3044 \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\uff1a\u5b66\u7fd2\u30fb\u63a8\u8ad6\u6642\u5171\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3059\u308b \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\uff1a\u5b66\u7fd2\u6642\u306b\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3059\u308b\u304c\u3001\u63a8\u8ad6\u6642\u306b\u306f\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u5229\u7528\u3057\u306a\u3044 \u30eb\u30fc\u30eb\u30d9\u30fc\u30b9 \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9 \u30e2\u30c7\u30eb\u30d9\u30fc\u30b9 \u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044 \u4f4e\u3044 \u9ad8\u3044 \u30e2\u30c7\u30eb\u306b\u3088\u308b \u65b9\u6cd5 \u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u63a8\u85a6\u3059\u308b \u63a8\u85a6\u306e\u5ea6\u306b\u3001\u5168\u4f53\u7684\u306a\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u304b\u3089\u8a08\u7b97\u3059\u308b \u63a8\u85a6\u306e\u5ea6\u306b\u3001\u30e2\u30c7\u30eb\u306b\u5bfe\u8c61\u8005\u306e\u60c5\u5831\u3092\u3044\u308c\u8a08\u7b97\u3059\u308b \u624b\u6cd5 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30af\u30e9\u30b9\u30bf\u30e2\u30c7\u30eb\u3001\u95a2\u6570\u7cfb\u3001\u30d9\u30a4\u30ba \u305d\u306e\u4ed6\u306e\u5206\u985e \u500b\u4eba\u5316\u306a\u3057\uff1a\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u540c\u3058\u63a8\u85a6\u3092\u884c\u3046 \u4e00\u6642\u7684\u500b\u4eba\u5316\uff1a\u305d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\uff08\u4e00\u6642\u7684\u306a\u30c7\u30fc\u30bf\uff09\u306e\u307f\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046 \u6c38\u7d9a\u7684\u500b\u4eba\u5316\uff1a\u9577\u671f\u7684\u306a\u30c7\u30fc\u30bf\uff08\u5c65\u6b74\u306a\u3069\uff09\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046 \u66f4\u65b0\u3057\u306a\u3044\u500b\u4eba\u5316\uff1a\u30e6\u30fc\u30b6\u30fc\u304c\u767b\u9332\u3057\u305f\u57fa\u672c\u7684\u306b\u306f\u66f4\u65b0\u3055\u308c\u306a\u3044\u60c5\u5831\u3084\u3001\u305d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u306e\u307f\u6709\u52b9\u306a\u30c7\u30fc\u30bf\u306a\u3069\u3092\u7528\u3044\u3066\u63a8\u8ad6\u3059\u308b - \u500b\u4eba\u5316\u306a\u3057 \u4e00\u6642\u7684\u500b\u4eba\u5316 \u6c38\u7d9a\u7684\u500b\u4eba\u5316 \u66f4\u65b0\u3057\u306a\u3044\u500b\u4eba\u5316 \u30a2\u30a4\u30c6\u30e0 \u30b9\u30da\u30c3\u30af\u30e9\u30f3\u30ad\u30f3\u30b0\uff08\u4fa1\u683c\u9806\uff09 \u30ab\u30b4\u5185\u306e\u985e\u4f3c\u5546\u54c1\u30fb\u4ee3\u66ff\u6750\u88dc\u5b8c\u6b8b \u5c65\u6b74\u304b\u3089\u306e\u985e\u4f3c\u50be\u5411\u5546\u54c1 \u76f8\u4e92\u7684\u3067\u306a\u3044\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u30fb\u8ca9\u58f2\u54e1\u306e\u304a\u3059\u3059\u3081\uff1f \u4eba \u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0 \u3088\u304f\u4e00\u7dd2\u306b\u8cb7\u308f\u308c\u308b\u3082\u306e \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\uff08\u8a55\u4fa1\u30fb\u884c\u52d5\u304b\u3089\u306e\u985e\u4f3c\u50be\u5411\u5546\u54c1\uff09 \u30a2\u30f3\u30b1\u30fc\u30c8\u306a\u3069 \u77e5\u8b58 \u5e97\u30fb\u6642\u671f\u3054\u3068\u306e\u304a\u3059\u3059\u3081 \u4f1a\u8a08\u6642\u306e\u304a\u3059\u3059\u3081 \u3042\u307e\u308a\u306a\u3057\u30fb\u500b\u4eba\u306b\u5bfe\u3059\u308b\u5c02\u9580\u5bb6\u306e\u304a\u3059\u3059\u3081 \u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u30fb\u8ca9\u58f2\u54e1\u306e\u304a\u3059\u3059\u3081","title":"\u5206\u985e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_3","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u3092\u4f7f\u3044\u3001\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u306b\u985e\u4f3c\u3057\u305f\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046\u624b\u6cd5","title":"\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_4","text":"\u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u304c\u4e0d\u8981 \u7570\u306a\u308b\u30b8\u30e3\u30f3\u30eb\u9593\u3067\u63a8\u85a6\u53ef\u80fd\uff08\u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff09","title":"\u5229\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_5","text":"\u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u30b5\u30fc\u30d3\u30b9\u521d\u671f\u3001\u8cfc\u5165\uff08\u884c\u52d5\uff09\u56de\u6570\u304c\u5c11\u306a\u3044\u5229\u7528\u8005\u3084\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u30ab\u30d0\u30ec\u30c3\u30b8\uff08\u88ab\u8986\u7387\uff09\u304c\u4f4e\u304f\u306a\u308b \u63a8\u85a6\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u591a\u304f\u8cb7\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u306b\u306a\u308a\u3084\u3059\u3044 \u8cb7\u308f\u308c\u3066\u3044\u306a\u3044\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306f\u63a8\u85a6\u3067\u304d\u306a\u3044 \u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u306f\u308f\u304b\u3089\u306a\u3044","title":"\u6b20\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_6","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u3092\u84c4\u7a4d\u3059\u308b \u84c4\u7a4d\u3067\u304d\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u3084\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u7528\u3044\u308b \u8a55\u4fa1\uff08\u884c\u52d5\uff09\u60c5\u5831\u304b\u3089\u3001\u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3059 \u3069\u306e\u3088\u3046\u306b\u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u304b\u3092\u7b97\u51fa\u3059\u308b\u304b\u306f\u3001\u985e\u4f3c\u6027\u6307\u6a19\u306e\u30b5\u30fc\u30d9\u30a4\u3092\u53c2\u7167 \u30e6\u30fc\u30b6\u30fc\u304c\u591a\u3044\u5834\u5408\u3001\u3042\u3089\u304b\u3058\u3081\u30e6\u30fc\u30b6\u30fc\u3092\u884c\u52d5\u5c65\u6b74\u306a\u3069\u306b\u3088\u308a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u3001\u8a08\u7b97\u8cc7\u6e90\u3092\u7bc0\u7d04\u3067\u304d\u308b \u55dc\u597d\u304c\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3093\u3067\u304a\u308a\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u8a55\u4fa1\u304c\u9ad8\u3044\u3068\u601d\u308f\u308c\u308b\u3082\u306e\u3092\u63a8\u85a6\u3059\u308b \u3053\u3053\u3067\u306f\u3001k-NN\u306a\u3069\u3092\u7528\u3044\u308b","title":"\u624b\u9806"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_7","text":"","title":"\u554f\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_8","text":"\u30a2\u30a4\u30c6\u30e0\u304c\u975e\u5e38\u306b\u591a\u3044\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u5927\u534a\u306e\u5546\u54c1\u3092\u8cb7\u308f\u306a\u3044 \u305d\u306e\u305f\u3081\u3001\u5b9f\u969b\u306f\u985e\u4f3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3067\u3042\u3063\u3066\u3082\u3001\u5168\u304f\u540c\u3058\u30a2\u30a4\u30c6\u30e0\u3092\u3068\u3082\u306b\u8a55\u4fa1\u3057\u306a\u3044\u3068\u985e\u4f3c\u3067\u3042\u308b\u3068\u5224\u5225\u3067\u304d\u306a\u3044\uff08\u540c\u985e\u63a8\u79fb\u554f\u984c\uff09 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u7279\u7570\u5024\u5206\u89e3\uff08SVD\uff09\u306b\u3088\u308b\u6b21\u5143\u524a\u6e1b \u884c\u5217\u5206\u89e3\u306b\u3088\u308b\u6b21\u5143\u524a\u6e1b\uff08\u30e2\u30c7\u30eb.\u95a2\u6570\u7cfb.\u56de\u5e30\u306e\u6b04\u53c2\u7167\uff09 \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u88dc\u5b8c \u30e6\u30fc\u30b6\u30fc\u306e\u5c65\u6b74\u3092\u7528\u3044\u306a\u3044\u3001\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u30fb\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3067\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97 \u4e88\u6e2c\u30e2\u30c7\u30eb\u69cb\u7bc9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u306e\u88dc\u5b8c \u672a\u8a55\u4fa1\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3092\u4e88\u6e2c\u3057\u3066\u57cb\u3081\u308b","title":"\u30c7\u30fc\u30bf\u306e\u30b9\u30d1\u30fc\u30b9\u6027"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_9","text":"\u30a2\u30a4\u30c6\u30e0\u6570\u3084\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u975e\u5e38\u306b\u901f\u3044\u30b9\u30d4\u30fc\u30c9\u3067\u5897\u5927\u3057\u305f\u5834\u5408\u3001\u8a08\u7b97\u91cf\u304c\u5927\u304d\u304f\u306a\u308b \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 CF\u3092\u4f7f\u3046\u524d\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u30fb\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3067\u985e\u4f3c\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3001\u8a08\u7b97\u5bfe\u8c61\u3092\u7d5e\u308a\u8fbc\u3080\uff08\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u3088\u3046\u306a\u3082\u306e\uff09","title":"\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_10","text":"\u8907\u6570\u30d1\u30bf\u30fc\u30f3\u306e\u8da3\u5411\u3068\u4e00\u81f4\u3059\u308b\u3001\u3042\u308b\u3044\u306f\u3069\u308c\u3068\u3082\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u306b\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u6069\u6075\u306b\u3042\u305a\u304b\u308c\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u7fa4\u306e\u3053\u3068 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u884c\u52d5\u30d1\u30bf\u30fc\u30f3\u4ee5\u5916\u3067\u306e\u5dee\u5225\u5316","title":"\u7070\u8272\u306e\u7f8a"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_11","text":"\u8a55\u4fa1\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b\u653b\u6483\u3092\u6307\u3059\uff08\u30b5\u30af\u30e9\u30ec\u30d3\u30e5\u30fc\u306a\u3069\uff09 \u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\u4ee5\u4e0b\u306e\u624b\u6cd5\u304c\u5b58\u5728 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u7528\u3044\u308b \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3088\u308a\u5f71\u97ff\u3092\u53d7\u3051\u306b\u304f\u3044 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\uff0bCF\u306e\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u7528\u3044\u308b","title":"\u30b7\u30ea\u30f3\u30b0\u30a2\u30bf\u30c3\u30af"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_12","text":"\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u304b\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u304b\u3001\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u304b\u306b\u5206\u985e\u3067\u304d\u308b","title":"\u5206\u985e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#cf","text":"\u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u76f8\u95a2\u95a2\u4fc2\u306b\u3088\u308a\u3001\u985e\u4f3c\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u8a55\u4fa1\u3092\u3082\u3068\u306b\u63a8\u85a6\u3092\u884c\u3046","title":"\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u306eCF"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_13","text":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u5143\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u985e\u4f3c\u6027\u3092\u89e3\u6790\u3057\u3001\u8a55\u4fa1\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u5143\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u985e\u4f3c\u6027\u3092\u89e3\u6790\u3057\u3001\u95a2\u9023\u6027\u306e\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b","title":"\u4ee3\u8868\u7684\u306a\u624b\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_14","text":"\u5b9f\u88c5\u304c\u5bb9\u6613 \u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\u304c\u5bb9\u6613 \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u8003\u616e\u304c\u4e0d\u8981 \u3068\u3082\u306b\u8a55\u4fa1\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u4e0d\u8981","title":"\u9577\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_15","text":"\u4eba\u306e\u8a55\u4fa1\u3078\u306e\u4f9d\u5b58 \u8a55\u4fa1\u3092\u6a19\u6e96\u5316\u3059\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b \u758e\u306a\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd\u60aa\u5316 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8 \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3 \u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u3092\u4e8b\u524d\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308c\u3070\u3001\u3042\u308b\u7a0b\u5ea6\u306f\u6539\u5584\u53ef\u80fd \u305f\u3060\u3057\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u983b\u5ea6\u3067\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","title":"\u77ed\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#cf_1","text":"\u7d71\u8a08\u7684\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u306e\u8cfc\u8cb7\u884c\u52d5\u3092\u30e2\u30c7\u30eb\u5316\u3057\u3001\u30e2\u30c7\u30eb\u3092\u3082\u3068\u306b\u63a8\u85a6\u3092\u884c\u3046","title":"\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u306eCF"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_16","text":"\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30afCF \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0CF \u6f5c\u5728\u610f\u5473CF \u7d20\u56e0\u5b50\u5206\u6790 \u6b21\u5143\u524a\u6e1b\u3092\u7528\u3044\u305fCF","title":"\u4ee3\u8868\u7684\u306a\u624b\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_17","text":"\u758e\u306a\u30c7\u30fc\u30bf\u3067\u306e\u6027\u80fd \u4e88\u6e2c\u6027\u80fd\u5411\u4e0a \u76f4\u611f\u7684\u306a\u8aac\u660e","title":"\u9577\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_18","text":"\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u304c\u8907\u96d1 \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\uff08\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u3088\u308a\u306f\u901f\u3044\uff09 \u591c\u9593\u3084\u3001\u6708\u30fb\u9031\u3054\u3068\u306b\u66f4\u65b0\u3059\u308c\u3070\u826f\u3044 \u9069\u5fdc\u6027 \u30e6\u30fc\u30b6\u30fc\u3084\u30a2\u30a4\u30c6\u30e0\u306e\u5909\u5316\u306b\u5f31\u3044 \u30e2\u30c7\u30eb\u3092\u66f4\u65b0\u3057\u306a\u3044\u3068\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u6b21\u5143\u524a\u6e1b\u306b\u3088\u308b\u6709\u76ca\u306a\u60c5\u5831\u306e\u640d\u5931","title":"\u77ed\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#cf_2","text":"\uff08CF\u3067\u306f\u306a\u3044\uff09\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u3068\u3001CF\u306e\u53cc\u65b9\u3092\u7528\u3044\u3066\u63a8\u85a6\u3092\u884c\u3046","title":"\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u306aCF"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_19","text":"\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9CF \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\uff0b\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u306eCF","title":"\u4ee3\u8868\u7684\u306a\u624b\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_20","text":"\u5358\u4f53\u3067\u306e\u554f\u984c\u3092\u514b\u670d\u53ef\u80fd \u4e88\u6e2c\u6027\u80fd\u5411\u4e0a \u30b9\u30d1\u30fc\u30b9\u6027\u3001\u7070\u8272\u306e\u7f8a\u306b\u5bfe\u5fdc","title":"\u9577\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_21","text":"\u69cb\u7bc9\u304c\u8907\u96d1 \u5834\u5408\u306b\u3088\u308a\u5916\u90e8\u30c7\u30fc\u30bf\uff08\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\u4ee5\u5916\u306e\u60c5\u5831\uff09\u304c\u5fc5\u8981","title":"\u77ed\u6240"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_22","text":"","title":"\u4f7f\u3046\u30c7\u30fc\u30bf"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_23","text":"\u30e6\u30fc\u30b6\u30fc\u306b\u660e\u793a\u7684\u306b\u8a55\u4fa1\u3055\u305b\u308b Good/Bad, n\u6bb5\u968e\u8a55\u4fa1 \u30c7\u30fc\u30bf\u91cf\u306f\u5c11\u306a\u3044\u304c\u3001\u6b63\u78ba\u3067\u3001\u672a\u8a55\u4fa1\u3068\u4e0d\u652f\u6301\u306e\u533a\u5225\u306f\u660e\u78ba","title":"\u660e\u793a\u7684\u306a\u30c7\u30fc\u30bf"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_24","text":"\u95b2\u89a7\u30c7\u30fc\u30bf\u3001\u8cfc\u8cb7\u30c7\u30fc\u30bf\u306a\u3069\u306e\u81ea\u52d5\u7684\u306b\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831 \u30c7\u30fc\u30bf\u91cf\u306f\u591a\u3044\u304c\u3001\u4e0d\u6b63\u78ba\u3067\u3001\u672a\u8a55\u4fa1\u3068\u4e0d\u652f\u6301\u306e\u533a\u5225\u306f\u660e\u78ba\u3067\u306a\u3044","title":"\u6697\u9ed9\u7684\u30c7\u30fc\u30bf"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_25","text":"","title":"\u30c6\u30af\u30cb\u30c3\u30af"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#svd","text":"","title":"SVD"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_26","text":"\u4efb\u610f\u306em x n\u306e\u5b9f\u6570\u884c\u5217A\uff08rank=k\uff09\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u5143m x m\u306e\u76f4\u884c\u884c\u5217U, \u6b21\u5143n x n\u306e\u76f4\u884c\u884c\u5217V, \u975e\u5bfe\u89d2\u6210\u5206\u304c0\u3067\u3001\u5bfe\u89d2\u6210\u5206\u304c0\u3088\u308a\u5927\u304d\u3044\uff08\u3082\u3057\u5217\u304ck\u4ee5\u4e0b\u306a\u3089\uff09\u304b0\u3068\u7b49\u3057\u3044\uff08\u3082\u3057\u5217\u304ck\u3088\u308a\u5927\u304d\u3044\u306a\u3089\uff09\u884c\u5217S\u304c\u5b58\u5728\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u89e3\u3067\u304d\u308b \u4e0b\u306e\u884c\u5217\u3068\u306e\u5dee\uff08\u884c\u5217U\u3060\u3068\u3001r\u884c\u301cm\u884c\u306e\u90e8\u5206\uff09\u306e\u90e8\u5206\u306e\u6210\u5206\u306f\u5168\u30660 \u3053\u306e\u3068\u304d\u3001A\u306e\u7279\u7570\u5024\u5206\u89e3\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b \\[ A = U \\Gamma V^T \\\\ A:m*n, ~U:m*r,~ \\Gamma:r*r,~ V^T:r*n \\] U, V\u306f\u76f4\u884c\u884c\u5217\u3001\\Gamma\u306f\u5bfe\u89d2\u884c\u5217\u3067\u3001\\Gamma\u306e\u5bfe\u89d2\u6210\u5206\u306e\u884c\u5217\u304cA\u306e\u7279\u7570\u5024\uff08\uff1e0\uff09 \u5bfe\u89d2\u6210\u5206\u306e\u5927\u304d\u3055\u304c\u4e00\u5b9a\u5024\u4ee5\u4e0b\u306e\\Gamma\u3092\u5207\u308a\u6368\u3066\u308b\u3053\u3068\u3067\u3001\u6b21\u5143\u3092\u524a\u6e1b\u3059\u308b","title":"\u5b9a\u7fa9\u306a\u3069"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_27","text":"\u4ee5\u4e0b\u306e\u884c\u5217Aj*\u306f\u3001A\u306e\u30e9\u30f3\u30afj\u306e\u6700\u5c0f\u4e8c\u4e57\u8fd1\u4f3c \\[ A_{j*} = \\sum^j_{i=1}\\lambda_ju_iv_i \\] A\u306b\u5bfe\u3057\u3066\\Gamma\u306f\u4e00\u4f4d\u306b\u5b9a\u307e\u308b\u304c\u3001U,V\u306f\u4e00\u610f\u306b\u5b9a\u307e\u308b\u3068\u306f\u9650\u3089\u306a\u3044","title":"\u6027\u8cea"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#svd_1","text":"\u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u3068\u3057\u3066\u306eMF\u3092\u6b63\u5247\u304c\u3042\u308bSVD\u3068\u307f\u306a\u3057\u3001\u305d\u308c\u306e\u9032\u5316\u7cfb\u3068\u3044\u3046\u4f4d\u7f6e\u4ed8\u3051 \u2192\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9.Factorization Machines.SVD++\u53c2\u7167","title":"SVD ++"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_28","text":"NMF \u4fc2\u6570\u304c0\u4ee5\u4e0a\u3067\u3042\u308b\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308b\u624b\u6cd5 \u5206\u89e3\u5f8c\u306e\u4fc2\u6570\u304c\u758e\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u9069\u3057\u3066\u3044\u306a\u3044 PCA 0\u4ee5\u4e0b\u3092\u3068\u308b\u5834\u5408\u304c\u3042\u308b \u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u95b2\u89a7\u3084\u8a55\u4fa1\u3001\u884c\u52d5\u306a\u3069\u306f\u975e\u8ca0\u3067\u3042\u308a\u30010\u4ee5\u4e0b\u306b\u306b\u306a\u308b\u3053\u3068\u306f\u306a\u3044 LDA \u30c7\u30fc\u30bf\u304c\u591a\u5909\u91cf\u6b63\u898f\u5206\u5e03\u3067\u306a\u3044\u306e\u3067\u524d\u63d0\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u306a\u3044 ICA \u8a55\u4fa1\u30fb\u884c\u52d5\u5c65\u6b74\u306f\u76f8\u4e92\u306b\u7d71\u8a08\u7684\u306b\u72ec\u7acb\u3067\u306a\u3044\u306e\u3067\u4eee\u5b9a\u304c\u6e80\u305f\u3055\u308c\u306a\u3044","title":"\u4ed6\u306e\u6b21\u5143\u524a\u6e1b\u624b\u6cd5\u3068\u306e\u6bd4\u8f03"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_29","text":"","title":"\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_30","text":"\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\u3059\u308b \u4f55\u3092\u6301\u3063\u3066\u985e\u4f3c\u3057\u3066\u3044\u308b\u3068\u3059\u308b\u304b\u5b9a\u7fa9 \u5b9a\u7fa9\u306b\u5408\u308f\u305b\u3001\u30c7\u30fc\u30bf\u3092\u7528\u610f \u5b9a\u7fa9\u306b\u5408\u308f\u305b\u3001\u7b97\u51fa\u624b\u6cd5\u3092\u7b97\u51fa\u3057\u5b9f\u88c5 \u5b9f\u969b\u306b\u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3092\u7b97\u51fa \u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3067\u91cd\u307f\u3092\u3064\u3051\u3066\u63a8\u85a6 \u985e\u4f3c\u6027\u30b9\u30b3\u30a2\u3067\u91cd\u307f\u4ed8\u3051\uff08\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u306e\u5f71\u97ff\u5ea6\u3092\u5927\u304d\u304f\u3059\u308b\uff09 \u6b63\u898f\u5316\u3059\u308b \u9069\u5207\u306b\u30bd\u30fc\u30c8\u3057\u3066\u3001\u30b9\u30b3\u30a2\u304c\u9ad8\u3044\u9806\u306b\u7d50\u679c\u3092\u8868\u793a","title":"\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u2192\u63a8\u85a6\u306e\u6d41\u308c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_31","text":"","title":"\u4f8b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_32","text":"--- \u30a2\u30a4\u30c6\u30e01 \u30a2\u30a4\u30c6\u30e02 \u30a2\u30a4\u30c6\u30e03 \u30a2\u30a4\u30c6\u30e04 \u30a2\u30a4\u30c6\u30e05 \u30a2\u30a4\u30c6\u30e06 \u30a2\u30a4\u30c6\u30e07 \u30a2\u30a4\u30c6\u30e08 \u985e\u4f3c\u5ea6 \u30e6\u30fc\u30b6\u30fcA 1 0 x 1 0 x 1 0 1.0 \u30e6\u30fc\u30b6\u30fcB 0 0 1 1 1 0 0 1 0.5 \u30e6\u30fc\u30b6\u30fcC 0 0 1 0 1 0 0 x 0.25 \u30e6\u30fc\u30b6\u30fcD 0 1 0 x 1 0 1 0 0.0 \u63a8\u85a6\u3055\u308c\u308b\u4eba 1 0 x 1 0 x x x - \u8a55\u4fa1(n=1) - - x - - x 1 0 ref A n=2 - - 1 - - 0 0.5 0.5 ref A&B \u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u985e\u4f3c\u5ea6\u306f\u4e00\u81f4\u7387\uff08\u540c\u3058\u5024\u306e\u5272\u5408\uff09\u3092\u4f7f\u3063\u305f \u7c21\u7565\u5316\u306e\u305f\u3081\u306b\u8a55\u4fa1\u306f{0,1}\uff08\u8cfc\u8cb7\u3057\u305f\u304b\u5426\u304b\u3001\u597d\u304d\u304b\u5426\u304b\uff09 K-NN(n=1)\u306a\u3089\u3070\u3001\u4e00\u756a\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fcA\u306e\u8a55\u4fa1\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e07\u3092\u63a8\u85a6\u3059\u308b K-NN(n=2)\u306a\u3089\u3070\u3001\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fcA\u3068B\u306e\u8a55\u4fa1\u306e\u5e73\u5747\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e03\u3092\u63a8\u85a6\u3059\u308b","title":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_33","text":"\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u985e\u4f3c\u5ea6\u306e\u8a08\u7b97\u3001\u4f3c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u8a08\u7b97\u306b\u6539\u5584\u70b9\u304c\u591a\u3044 \u985e\u4f3c\u5ea6\u306b\u95b2\u89a7\u3057\u305f\u304b\u5426\u304b\u306a\u3069\u3092\u542b\u3081\u308b \u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u8a08\u7b97\u6642\u306b\u985e\u4f3c\u5ea6\u306b\u3088\u308b\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3046 \u8a55\u4fa1\u8005\u306e\u591a\u3055\u306b\u3088\u308a\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3046\u3000\u306a\u3069 \u307e\u305f\u3001\u758e\u306a\u30c7\u30fc\u30bf\u3092\u6271\u3046\u5834\u5408\u3001\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046 PCA\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u6b20\u640d\u5024\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u6295\u7968\u5024\uff08\u4e0b\u53c2\u7167\uff09\u3084EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4fdd\u7ba1\u3059\u308b \u8a55\u4fa1\u5024\u3078\u306e\u4f9d\u5b58\u3092\u4f4e\u3081\u305f\u3044\u5834\u5408\u306f\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u5316\u3057\u305f\u5f8c\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u306b\u5bfe\u3059\u308b\u985e\u4f3c\u6307\u6a19\u306a\u3069\u3092\u7528\u3044\u308b","title":"\u5171\u901a\u306e\u6539\u5584\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_34","text":"\u4e00\u4eba\u5f53\u305f\u308a\u306e\u5171\u901a\u306e\u8a55\u4fa1\u8005\u304c\u5c11\u306a\u3044\u5834\u5408\u3001\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u672a\u8a55\u4fa1\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3092\u3001\u5168\u5229\u7528\u306e\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u3067\u57cb\u3081\u308b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u6295\u7968\u5024\uff09 \u6700\u4f4e\u3001\u6700\u9ad8\u306a\u3069\u306e\u4e21\u7aef\u306b\u8fd1\u3044\u8a55\u4fa1\u5024\u3092\u3088\u308a\u91cd\u8996\u3059\u308b","title":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u72ec\u81ea\u306e\u6539\u5584\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_35","text":"\u30a2\u30a4\u30c6\u30e01 \u30a2\u30a4\u30c6\u30e02 \u30a2\u30a4\u30c6\u30e03 \u30a2\u30a4\u30c6\u30e04 \u30a2\u30a4\u30c6\u30e05 \u30a2\u30a4\u30c6\u30e06 \u30a2\u30a4\u30c6\u30e07 \u30a2\u30a4\u30c6\u30e08 \u30e6\u30fc\u30b6\u30fcA 1 0 x 1 0 x 1 0 \u30e6\u30fc\u30b6\u30fcB 0 0 1 1 1 0 0 1 \u30e6\u30fc\u30b6\u30fcC 0 0 1 0 1 0 0 x \u30e6\u30fc\u30b6\u30fcD 0 1 0 x 1 0 1 0 \u63a8\u85a6\u3055\u308c\u308b\u4eba 1 0 x 1 0 x x x \u30a2\u30a4\u30c6\u30e01\u306e\u985e\u4f3c\u5ea6 - - 0.33 - - 1.00 0.75 0.33 \u30a2\u30a4\u30c6\u30e04\u306e\u985e\u4f3c\u5ea6 - - 0.5 - - 0.5 0.67 0.5 \u9ad8\u8a55\u4fa1\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6 - - 0.42 - - 0.75 0.71 0.42 \u7c21\u7565\u5316\u306e\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3068\u540c\u3058\u8a08\u7b97\u65b9\u6cd5\u3092\u7528\u3044\u305f \u6539\u5584\u624b\u6cd5\u3082\u30e6\u30fc\u30b6\u30fc\u30d9\u30b9\u3068\u540c\u69d8 \u63a8\u85a6\u3057\u305f\u3044\u30e6\u30fc\u30b6\u30fc\u304c\u9ad8\u8a55\u4fa1\u3092\u3057\u305f\u30a2\u30a4\u30c6\u30e0{1,4}\u3092\u4f7f\u3044\u3001\u672a\u8a55\u4fa1\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97 \u985e\u4f3c\u5ea6\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e06\u3092\u63a8\u85a6\u3059\u308b","title":"\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_36","text":"\u5171\u8d77\u6027\u3084\u3001\u95b2\u89a7\u30fb\u8cb7\u3044\u7269\u30fb\u76f4\u8fd1\u306e\u5229\u7528\u5c65\u6b74\u3068\u985e\u4f3c\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u63a8\u85a6\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u6642\u7684\u500b\u4eba\u5316\u306e\u63a8\u85a6\u3092\u884c\u3048\u308b \u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fdd\u8b77\u306b\u304a\u3044\u3066\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3088\u308a\u512a\u4f4d","title":"\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u72ec\u81ea\u306e\u6539\u5584\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_37","text":"\u6620\u753b\u30fb\u30b3\u30f3\u30b5\u30fc\u30c8\u306e\u3088\u3046\u306b\u3001\u63a8\u85a6\u5bfe\u8c61\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u983b\u7e41\u306b\u5165\u308c\u66ff\u308f\u308b\u72b6\u6cc1\u3067\u306f\u3001\u983b\u7e41\u306a\u8fd1\u508d\u306e\u66f4\u65b0\u304c\u5fc5\u8981\u306b\u306a\u308b \u5b9f\u9a13\u7684\u306b\u7279\u5b9a\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u504f\u308b\u50be\u5411\u304c\u5f37\u3044\uff08\u7406\u8ad6\u7684\u6839\u62e0\u306f\u306a\u3044\u304c\uff09","title":"\u554f\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_38","text":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9 \u30e1\u30e2\u30ea\u306b\u53ce\u307e\u308b\u30b5\u30a4\u30ba\u3067\u5909\u66f4\u304c\u983b\u7e41\u306b\u884c\u308f\u308c\u308b \u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306e\u8da3\u5411\u304c\u72ec\u81ea\u306e\u5024\u3092\u6301\u3063\u3066\u3044\u308b \u301c\u3092\u63a8\u85a6\u3059\u308b\u30b5\u30a4\u30c8 \u30bb\u30ec\u30f3\u30c7\u30a3\u30d4\u30c6\u30a3\uff08\u4e88\u60f3\u5916\u306e\u3082\u306e\u3092\u898b\u3064\u3051\u308b\u3053\u3068\uff09\u304c\u9ad8\u3044 \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9 \u5de8\u5927\u306a\u30c7\u30fc\u30bf\u304c\u5bfe\u8c61 \u30a2\u30a4\u30c6\u30e0\u304c\u591a\u3044\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3092\u51fa\u3057\u306b\u304f\u3044 \u540c\u3058\u30a2\u30a4\u30c6\u30e0\u3092\u8cb7\u3046\u4eba\u304c\u5c11\u306a\u304b\u3063\u305f\u308a\u3001\u884c\u5217\u304c\u758e\u306b\u306a\u3063\u305f\u308a\u3059\u308b \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u306f\u4e8b\u524d\u306b\u8a08\u7b97\u53ef\u80fd\u306a\u306e\u3067\u3001\u904b\u7528\u74b0\u5883\u3067\u306e\u63a8\u85a6\u304c\u697d \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u306f\u5909\u5316\u3057\u3065\u3089\u3044\u306e\u3067\u518d\u8a08\u7b97\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080 \u8aac\u660e\u3057\u3084\u3059\u3044","title":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u3068\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5dee\u5225\u5316"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#factorization-machines","text":"2010\u5e74\u306bICDM\u3067\u51fa\u3055\u308c\u305f\u6c4e\u7528\u7684\u306a\u30e2\u30c7\u30eb \u7279\u5fb4\u91cf\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u3046\u307e\u304f\u8a08\u7b97\u3059\u308b \u5e74\u9f62\u3092\u8868\u3059\u7279\u5fb4\u91cf\u3068\u3001\u6027\u5225\u3092\u8868\u3059\u7279\u5fb4\u91cf\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u5e74\u9f62\uff0b\u6027\u5225\u306eAND\u6761\u4ef6\u306e\u7279\u5fb4\u91cf\u3092\u3001\u5e74\u9f62\u3068\u6027\u5225\u306e\u4ea4\u4e92\u4f5c\u7528\u3067\u8868\u73fe\u3059\u308b \u4ea4\u4e92\u4f5c\u7528\u306e\u91cd\u307f\u3092\u5404\u7279\u5fb4\u306b\u5bfe\u5fdc\u3059\u308b\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u3067\u5b66\u7fd2\u3059\u308b \u3088\u308a\u9ad8\u6b21\u306aFM\u3082\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u304c\u30012018\u5e74\u6642\u70b9\u3067\u306f\u30013\u6b21\u304f\u3089\u3044\u307e\u3067\u3057\u304b\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u3066\u3044\u304b\u306a\u3044 CF\u3068\u306f\u8003\u3048\u65b9\u304c\u3084\u3084\u7570\u306a\u308b user A user B user C - Item a Item b 1 0 0 1 0 1 0 0 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 0 1 \u3053\u306e\u3088\u3046\u306b\u30011\u8a55\u4fa1\u30921\u884c\u3067\u793a\u3057\u3001\u53d6\u308a\u51fa\u3059\u306e\u306f\u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u76f8\u4e92\u4f5c\u7528\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb \u76f8\u4e92\u4f5c\u7528\u3092\u6642\u9593\u3084\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306a\u3069\u81ea\u7531\u306b\u5165\u308c\u3089\u308c\u308b \u4f8b\u3048\u3070Age\u3092\u5165\u308c\u308c\u3070\u3001UserxItemxAge\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u3067\u6271\u3048\u308b","title":"Factorization Machines"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_39","text":"2\u6b21\u306eFM \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i+\\sum^n_{i=1}\\sum^n_{j=i+1}\u3008v_i,v_j\u3009x_ix_j \\\\ where~ w_0 \\in \\mathbb{R},~ w \\in \\mathbb{R}^n,~ V \\in \\mathbb{R}^{n\\times k} \\\\ <v_i,v_j> := \\sum^k_{f=1}v_{i,f} v_{j,f} \\] V\u5185\u306e\u884cv_i\u306f\u3001k\u500b\u306e\u56e0\u5b50\u3092\u6301\u3064i\u756a\u76ee\u306e\u5909\u6570 k in N+0\u306f\u56e0\u5b50\u5206\u89e3\u306e\u6b21\u5143\u6027\u3092\u5b9a\u7fa9\u3059\u308b\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf \u53c2\u7167\uff1a\u901a\u5e38\u306e\u4ea4\u4e92\u4f5c\u7528\u304c\u3042\u308b2\u6b21\u307e\u3067\u306e\u7dda\u5f62\u30e2\u30c7\u30eb \u305d\u306e\u307e\u307e\u63a8\u85a6\u306e\u30c7\u30fc\u30bf\u306b\u6301\u3063\u3066\u3044\u304f\u3068\u3001 \\(x_ix_j\\) \u304c\u758e\u3067\u3042\u308b\u305f\u3081 \\(w_{i,j}\\) \u90e8\u5206\u304c\u5b66\u7fd2\u3057\u306b\u304f\u3044 \u3088\u3063\u3066\u3001\u305d\u3053\u306e\u90e8\u5206\u3092\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3068\u3057\u3066\u5b66\u7fd2\u3059\u308b \u3064\u3044\u3067\u306b\u3001\u5b66\u7fd2\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6e1b\u3089\u305b\u308b \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i+\\sum^n_{i}\\sum^n_{j=i+1}w_{i,j}x_ix_j \\] 2way FM\u306f\u3001\u5909\u6570\u9593\u306e\u5909\u6570\u5358\u4e00\uff0b\u30da\u30a2\u30ef\u30a4\u30ba\u76f8\u4e92\u4f5c\u7528\u3092\u6349\u3048\u308b w0\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30d0\u30a4\u30a2\u30b9 wi\u306f\u3001i\u756a\u76ee\u306e\u5909\u6570\u306e\u5f37\u3055\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b w^i,j := \u306fi\u756a\u76ee\u3068j\u756a\u76ee\u306e\u5909\u6570\u9593\u306e\u76f8\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u76f8\u4e92\u4f5c\u7528\u3054\u3068\u306b\u30d1\u30e9\u30e1\u30fc\u30bfw_i,j\u3092\u4f7f\u7528\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001FM\u30e2\u30c7\u30eb\u306f\u56e0\u6570\u5206\u89e3\uff08Factorize\uff09\u3059\u308b\u3053\u3068\u3067\u76f8\u4e92\u4f5c\u7528\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u758e\u306a\u30d9\u30af\u30c8\u30eb\u3067\u306f\u3001\u3053\u308c\u304c\u91cd\u8981","title":"\u4e88\u6e2c\u5f0f"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_40","text":"\u56de\u5e30 y^(x)\u3092\u76f4\u63a5\u4e88\u6e2c\u5bfe\u8c61\u3068\u3057\u3066\u4f7f\u7528\u3057\u3001MSE\u306a\u3069\u3067\u5b66\u7fd2\u3055\u305b\u308b 2\u5024\u5206\u985e y^(x)\u3092\u30e9\u30d9\u30eb\u3068\u3057\u3066\u3001\u30ed\u30b8\u30c3\u30c8\u56de\u5e30\u3084\u30d2\u30f3\u30b8\u30ed\u30b9\u3067\u5b66\u7fd2\u3055\u305b\u308b \u30e9\u30f3\u30ad\u30f3\u30b0 \u30d9\u30af\u30c8\u30ebx\u3092 \\(y^{(x)}\\) \u3067\u9806\u4f4d\u4ed8\u3051\u3057\u3001 \\(x(a), x(b) \\in D\\) \u306e\u30da\u30a2\u306b\u5bfe\u3057\u3066\u30da\u30a2\u30ef\u30a4\u30ba\u5206\u985e\u640d\u5931\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3059\u308b","title":"\u4e88\u6e2c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_41","text":"SGD, ALS, MCMC\u306a\u3069 MSE, \u30ed\u30b8\u30c3\u30c8\u640d\u5931\u3001\u30d2\u30f3\u30b8\u30ed\u30b9\u306a\u3069\u69d8\u3005\u306a\u640d\u5931\u3092\u5b66\u7fd2\u3067\u304d\u308b L2\u6b63\u5247\u5316\u3067\u904e\u5b66\u7fd2\u3092\u9632\u3050 Early stopping\u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u826f\u3044\uff1f \u52fe\u914d\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u308b\uff08\uff11\u6b21\u306e\u5834\u5408\uff1f\uff09 $$ \\begin{equation} \\frac{d}{d\\theta}\\hat y(x)= \\Biggl{ \\begin{array}{1} 1, ~if~\\theta~is~w_0\\ x_i, ~if~\\theta~is~w_i\\ x_i\\sum^n_{i=1}v_{i,f}x_j- v_{i,f}x^2_i,~if~\\theta~is~v_{i,f} \\end{array} \\end{equation} $$ \u6570\u5f0f\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u305f\u3081\u3001\u30d1\u30fc\u30b7\u30e3\u30ebd\u3092\u305f\u3060\u306ed\u3068\u3057\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002","title":"\u6700\u9069\u5316\u624b\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#svd_2","text":"","title":"SVD++"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#mfsvd","text":"\\[ \\hat r_{ui} = \\mu + b_{user}(u)+b_{item}(i)+U_uI_i \\\\ where ~ \\hat r_{ui}:\u8a55\u4fa1\u306e\u4e88\u6e2c ~,~ b_{user}:\u500b\u4eba\u306e\u5f71\u97ff\uff08\u30d0\u30a4\u30a2\u30b9\uff09 \\\\ ~I:\u5546\u54c1\u306e\u5c5e\u6027(I \\in R^{k\\times m}) ~,~ \\mu:\u5168\u4f53\u5e73\u5747 \\\\ ~b_{item}:\u5546\u54c1\u306e\u5f71\u97ff\uff08\u30d0\u30a4\u30a2\u30b9\uff09 ~,~ U:\u5546\u54c1\u306e\u5c5e\u6027\uff08U \\in R^{u \\times k} \\] \\[ loss = \\min_{b,U,I}\\sum_{u,i\\in R}(r_{ui}-\\hat r_{ui})^2 + \\lambda(|b_{user}|^2+|b_{item}|^2+|U^T_u|^2+|I_i|^2) \\]","title":"\u5143\u306eMF\uff08SVD\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#svd_3","text":"\\[ \\hat r_{ui} = \\mu + b_{user}(u)+b_{item}(i)+(U_u+|R(u)|^{-0.5}\\sum_{j \\in R(u)}y_j)I_i \\\\ where ~ R(u):\u30e6\u30fc\u30b6\u30fcu\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u96c6\u5408 \\\\ y:\u5546\u54c1\u3078\u306e\u3042\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u52b9\u679c(y\\in R^{k \\times m})(\u30a2\u30af\u30b7\u30e7\u30f3\uff1a\u5546\u54c1\u3092\u8a55\u4fa1\u3057\u305f\u3001\u95b2\u89a7\u3057\u305f\u7b49) \\] \\[ loss = min_{b,U,I}\\sum_{(u,i)\\in R}(r_{ui}-\\hat r_{ui})^2+\\lambda_1(|b_{user}|^2+|b_{item}|^2)+ \\\\\\lambda_2(|U^T_u|^2+|I_i|^2+|y_j|^2) \\]","title":"SVD++"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#field-aware-fm-ffm","text":"\u5143\u8ad6\u6587\uff1ahttps://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf \u3053\u306e\u30e2\u30c7\u30eb\u3067\u512a\u52dd\u3057\u305f\u30b3\u30f3\u30da\uff08\u8ad6\u6587\u306e\u7b46\u8005\u304c\u4f7f\u7528\uff09 https://www.kaggle.com/c/criteo-display-ad-challenge https://www.kaggle.com/c/avazu-ctr-prediction ### \u4e88\u6e2c\u5f0f FM\u306e\u767a\u5c55\u578b FM\u3067\u306f\u5404\u7279\u5fb4\u91cf\u306b\u3064\u304d\u4e00\u3064\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3057\u305f FFM\u3067\u306f\u3001Field\uff08\u5143\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u985e\uff09\u306e\u5358\u4f4d\u306b\u5206\u3051\u3001\u5404\u7279\u5fb4\u91cf\u306b\u3064\u304dField\u5206\u306e\u57cb\u3081\u8fbc\u307f\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3059\u308b\u3088\u3046\u306b\u6539\u5584\u3057\u305f FM\u306f\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092one-hot encoding\u3057\u3066\u7279\u5fb4\u91cf\u3068\u3059\u308b\u306e\u304c\u524d\u63d0\u3060\u3063\u305f\u305f\u3081\u3001\u7570\u306a\u308b\u5c5e\u6027\u60c5\u5831\u304c\u4e00\u5f8b\u3067{0,1}\u306e\u5024\u306b\u3055\u308c\u3066\u3057\u307e\u3063\u305f \u5404\u7279\u5fb4\u91cf\u306f\u3001\u5143\u304c\u3069\u306e\u3088\u3046\u306a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u5c5e\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u304c\u629c\u3051\u843d\u3061\u3066\u3057\u307e\u3063\u3066\u3044\u308b FFM\u306b\u3088\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306b\u7279\u6709\u306e\u8981\u56e0\u3067\u3042\u308b\u76f8\u4e92\u4f5c\u7528\u3092\u8868\u73fe\u3067\u304d\u308b \\[ \\hat y(x) := w_0 + \\sum^n_{i=1}w_ix_i + \\sum^n_{i=1}\\sum^n_{j=i+1}<v_{i,f(j)},v_{j,f(i)}>x_ix_j \\\\ where ~ f(j)):j\u304c\u5c5e\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9 \\]","title":"Field-aware FM; FFM"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_42","text":"FM\u3068\u540c\u3058 \u305f\u3060\u3057\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5897\u5927\u3057\u305f\u5206\u3001\u904e\u5b66\u7fd2\u3057\u3084\u3059\u3044\u306e\u3067\u3001Early stopping\u3092\u7528\u3044\u308b","title":"\u5b66\u7fd2\u65b9\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#deepfm","text":"https://data.gunosy.io/entry/deep-factorization-machines-2018#f-95055ec5 \u30d9\u30af\u30c8\u30eb\u3054\u3068\u306e\u4ea4\u4e92\u4f5c\u7528\u3092\u7528\u3044\u308b\u3068\u826f\u3044 \u9ad8\u6b21\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u660e\u793a\u7684\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u5fc5\u8981 \u901a\u5e38\u306eDNN\u3068\u306f\u9055\u3046\u6027\u8cea\u3092\u6301\u3064 \uff08\u901a\u5e38\u306eDNN\u3068\u306f\u5225\u306e\u6027\u8cea\u3092\u6301\u3063\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5fc5\u8981\uff09","title":"Deep\u306aFM"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#factorization-machine-supported-neural-network-fnn","text":"ECIR2016 \u666e\u901a\u306eMLP \u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u306a\u5165\u529b\u30c7\u30fc\u30bf\u3092\u3001\u5404\u5909\u6570\u3054\u3068\u306bOne-Hot\u2192Embedding\u3057\u3066Dense\u306aNetwork\u306b\u5165\u308c\u308b \u30ec\u30a4\u30e4\u30fc\u306e\u91cd\u307f\u306e\u521d\u671f\u5316\u306bFM\u306e\u91cd\u307f\u3084\u30d9\u30af\u30c8\u30eb\u3092\u4f7f\u3046","title":"Factorization-machine supported Neural Network (FNN)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#deep-crossing-network-dcn","text":"KDD2016 FNN\u306eMLP\u90e8\u5206\u3092ResNet\u306e\u3088\u3046\u306askip-connection\u306b\u3057\u3066\u3001\u6b8b\u5dee\u3092\u4e88\u6e2c \u5185\u90e8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5b9f\u9a13\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u5f15\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u5f8c\u767a\u306e\u7814\u7a76\u3060\u3068FNN\u3088\u308a\u7cbe\u5ea6\u304c\u9ad8\u3044","title":"Deep Crossing Network (DCN)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#wide-deep-arxiv160607792","text":"2016 \u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u306a\u5024\u3092Embed\u3057\u3066\u4f7f\u3046\u306e\u306f\u3001FNN\u3084DCN\u3068\u540c\u3058 \u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u51fa\u529b\u5c64\u3067\u304f\u3063\u3064\u3051\u308b FNN\u3084DCN\u3088\u308a\u7cbe\u5ea6\u304c\u826f\u3044\u4e0a\u3001Tensorflow\u306bAPI\u304c\u3042\u308b","title":"Wide &amp; Deep (arXiv:1606.07792)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#product-based-neural-network-pnn","text":"ICDM2017 CategoricalEmbedding\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u540c\u58eb\u306e\u660e\u793a\u7684\u306a\u76f8\u4e92\u4f5c\u7528\u304c\u6271\u3044\u306b\u304f\u3044 \u30e2\u30c7\u30eb\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u4ea4\u4e92\u4f5c\u7528\u9805\u3092\u7d44\u307f\u8fbc\u3080 \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u540c\u58eb\u306e\u4ea4\u4e92\u4f5c\u7528\u9805\u306e\u5c64\u3092\u4f5c\u308b Embedding\u3092\u7a4d\u307f\u4e0a\u3052\u305fFNN\u3088\u308a\u3001PNN\u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u826f\u3044 \uff08Wide&Deep\u3088\u308a\u306f\u5f31\u3044\uff1f\uff09","title":"Product-based Neural Network (PNN)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#deepfm_1","text":"IJCAI2017 Wide&Deep\u306e\u767a\u5c55\u7cfb\uff1f \u30b9\u30d1\u30fc\u30b9\u306a\u7279\u5fb4\u91cf\u3092Embedding\u5c64\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\uff1aFactorization Machine\u306b\u5165\u308c\u308b \u5206\u5c90\uff12\uff1aDense\u306aNetwork\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\u3001\u5206\u5c90\uff12\u3092\u7d50\u5408\u3057\u3066\u51fa\u529b FM&Deep\uff08FM\u3078\u306e\u5165\u529b\u3092Embed\u3057\u306a\u3044\u7248\uff09\u3088\u308a\u7cbe\u5ea6\u304c\u826f\u3044","title":"DeepFM"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#deep-cross-network-crossnet","text":"ADKDD2017 \u9023\u7d9a\u5024\u306f\u305d\u306e\u307e\u307e\u3001\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306fEmbed\u3057\u3066\u7279\u5fb4\u306b\u3059\u308b \u4ee5\u4e0b\u306e\u5206\u5c90\u3092\u884c\u3046 \u5206\u5c90\uff11\uff1a\u4ea4\u4e92\u4f5c\u7528\u9805\u3092\u8003\u616e\u3057\u305f\u3088\u3046\u306aCross Network\u306b\u5165\u308c\u308b \u5206\u5c90\uff12\uff1aDense\u306aNetwork\u306b\u5165\u308c\u308b \u5206\u5c90\uff11\u3001\uff12\u3092\u7d50\u5408\u3057\u3001FC\u5f8c\u3001Sigmoid\u3067\u51fa\u529b","title":"Deep &amp; Cross Network (CrossNet)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#xdeepfm","text":"KDD2018 Compressed Interaction Network(CIN)\u3068\u3044\u3046\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u30d9\u30af\u30c8\u30eb\u5358\u4f4d\u3067\u660e\u793a\u7684\u306b\u9ad8\u6b21\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3059\u308b \u5206\u5c90\u3059\u308b Linear\u5c64 Embedding 1-2\u306eEmbedding\u304b\u3089\u5206\u5c90\u3059\u308b CIN Plain DNN 1-1, 2-1, 2-2\u3092\u7d50\u5408\u3057\u51fa\u529b","title":"xDeepFM"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#ffm","text":"https://qiita.com/guglilac/items/6c8971d27c143e2567a4 FM\u306e\u767a\u5c55\u7cfb\u3088\u308a\u3001FFM\u3092\u5143\u306b\u767a\u5c55\u3057\u3066\u3044\u308b\u305f\u3081\u6bd4\u8f03\u7684\u65b0\u3057\u3044 \u5c11\u3057\u7406\u89e3\u304c\u6d45\u3081","title":"FFM\u306e\u767a\u5c55\u7cfb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#field-aware-probabilistic-embedding-neural-networkfpenn","text":"RecSys2018 \u904e\u5b66\u7fd2\u3092\u9632\u3050\uff0bNN\u306e\u5c0e\u5165 Field\u5206\u306eEmbedding\u3092\u5b66\u7fd2\u3059\u308b\u306e\u306f\u540c\u69d8 \u305f\u3060\u3057\u3001Embedding\u304c\u5f93\u3046\u78ba\u7387\u5bc6\u5ea6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a8\u5b9a\u3059\u308b \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u6642\u306b\u542b\u307e\u308c\u308b\u30ce\u30a4\u30ba\u306b\u9811\u5065\u306b\u5b66\u7fd2\u3067\u304d\u308b Deep\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u578b\u306a\u3069\u306fDeepFM\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u308b\uff08\uff1f\uff09","title":"Field-aware Probabilistic Embedding Neural Network(FPENN)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#field-weighted-factorization-machinefwfm","text":"WWW2018 Field\u306e\u7d44\u307f\u6bce\u306b\u3001\u4e88\u6e2c\u306b\u5bfe\u3059\u308b\u91cd\u8981\u5ea6\u306f\u5909\u308f\u3063\u3066\u304f\u308b \u306a\u306e\u3067\u3001Field\u306e\u7d44\u6bce\u306e\u91cd\u8981\u5ea6\u3082\u5b9a\u5f0f\u5316\u3059\u308b","title":"Field-weighted Factorization Machine(FwFM)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#interaction-aware-factorization-machines-ifm","text":"AAAI 2019 Attention + FM feature level\u3068field level\u306eattention\u3092\u8003\u616e\u3059\u308b attention\u306b\u3064\u3044\u3066\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u30e2\u30c7\u30eb\u3068\u4e0b\u306e\u30e2\u30c7\u30eb\u306f\u3042\u307e\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044","title":"Interaction-aware Factorization Machines (IFM)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#field-attention-deep-field-aware-factorization-machine-fat-deepffm","text":"ICDM 2019 Attention + FFM Embedding\u5165\u308c\u308b\u6bb5\u968e\u3067Attention\u3092\u8003\u616e\u3059\u308b","title":"Field Attention Deep Field-aware Factorization Machine (FAT-DeepFFM)"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_43","text":"","title":"\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_44","text":"","title":"\u30af\u30e9\u30b9\u30bf\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_45","text":"\u55dc\u597d\u30d1\u30bf\u30fc\u30f3\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u5229\u7528\u8005\u306e\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210 \u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u5024\u306a\u3069\u3092\u7528\u3044\u308b \u5229\u7528\u8005\u306b\u5bfe\u3057\u3001\u6700\u3082\u4f3c\u3066\u3044\u308b\u30af\u30e9\u30b9\u30bf\u3092\u63a2\u3059 \u30af\u30e9\u30b9\u30bf\u5185\u3067\u6700\u3082\u5e73\u5747\u8a55\u4fa1\u5024\u304c\u9ad8\u3044\u30a2\u30a4\u30c6\u30e0\u3092\u9806\u306b\u63a8\u85a6\u3059\u308b","title":"\u624b\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_46","text":"\u30af\u30e9\u30b9\u30bf\u6570\u306b\u3088\u3063\u3066\u3001\u63a8\u85a6\u306e\u6027\u8cea\u304c\u5927\u304d\u304f\u7570\u306a\u308b \u76ee\u7684\u306b\u5408\u308f\u305b\u3066\u30af\u30e9\u30b9\u30bf\u6570\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u63a8\u85a6\u306e\u7a2e\u985e\u306f\u30af\u30e9\u30b9\u30bf\u6570\u306b\u5236\u9650\u3055\u308c\u308b \u30af\u30e9\u30b9\u30bf\u6570\u304c\u5c0f\u3055\u3044\u3068\u3001\u5927\u307e\u304b\u3067\u3042\u307e\u308a\u500b\u4eba\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u63a8\u85a6\u304c\u884c\u308f\u308c\u308b \u4e00\u65b9\u3001\u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c\u306b\u306f\u5f37\u304f\u306a\u308b \u30af\u30e9\u30b9\u30bf\u6570\u304c\u591a\u3044\u3068\u3001\u5b89\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u30bf\u3092\u6c42\u3081\u308b\u306e\u304c\u96e3\u3057\u3044 \u4e00\u65b9\u3001\u63a8\u85a6\u306e\u500b\u4eba\u5316\u306e\u5ea6\u5408\u3044\u306f\u9ad8\u307e\u308b \u7070\u8272\u306e\u7f8a\u554f\u984c\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u5229\u7528\u8005\u3092\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u30bf\u306b\u5206\u3051\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u8907\u6570\u30af\u30e9\u30b9\u30bf\u306b\u8de8\u304c\u308b\u3088\u3046\u306a\u63a8\u85a6\u306f\u3067\u304d\u306a\u3044 \u5b9f\u88c5\u304c\u5bb9\u6613\u3067\u3001\u5b9f\u884c\u901f\u5ea6\u3082\u901f\u3044","title":"\u6027\u8cea"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_47","text":"\u5229\u7528\u8005\u304c\u597d\u304d\u306a\u307b\u3069\u5927\u304d\u306a\u5024\u3092\u53d6\u308b\u52b9\u7528\u95a2\u6570\u3084\u3001\u8a55\u4fa1\u5024\u3092\u4e88\u6e2c\u3059\u308b\u95a2\u6570\u3092\u7528\u3044\u308b\u30e2\u30c7\u30eb\u5168\u822c \u56de\u5e30\u3001\u5206\u985e\u3001\u30e9\u30f3\u30af\u56de\u5e30\u306a\u3069\u306b\u5e30\u7740\u3059\u308b","title":"\u95a2\u6570\u7cfb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_48","text":"","title":"\u56de\u5e30"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_49","text":"\u8a55\u4fa1\u5024\u884c\u5217R\uff08\u6b20\u640d\u306a\u3057\uff09\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u89e3\u3059\u308b U\u306fk x n, V\u306fk x m\u6b21\u5143\u3067\u3042\u308b\uff08k<<m, n\uff09 \\[ R^* \\approx U^T V \\] U\u306ex\u5217\u306f\u5229\u7528\u8005x\u306e\u7279\u5fb4\u3092\u3001V\u306ey\u5217\u306f\u30a2\u30a4\u30c6\u30e0y\u306e\u7279\u5fb4\u3092\u8868\u3059 \u3088\u3063\u3066\u3001\u5229\u7528\u8005x\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\u5024\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b \\[ r^*_{xy} \\approx u^T_x v_y \\] \u3053\u308c\u306f\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u3001u_x=1/|v|, v_y=\u30a2\u30a4\u30c6\u30e0\u306e\u8a55\u4fa1\u3068\u307f\u306a\u3057\u305f\u5834\u5408\u3001\u985e\u4f3c\u3057\u305f\u30e2\u30c7\u30eb\u3068\u307f\u306a\u305b\u308b","title":"\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_50","text":"R\u3068R*\u3068\u306e\u671f\u5f85\u7684\u306a\u640d\u5931\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u3001U\u3068V\u3092\u5206\u89e3\u3057\u3066\u5b66\u7fd2\u3059\u308b \u884c\u5217\u5206\u89e3\u306e\u624b\u6cd5\u3092\u7528\u3044\u308b R-R*\u306e\u6b8b\u5dee\u304c\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u3068\u4eee\u5b9a\u3057\u3001\u89b3\u6e2c\u3055\u308c\u305f\u8a55\u4fa1\u5024\u306e\u751f\u6210\u78ba\u7387\u304c\u9ad8\u304f\u306a\u308b\u3088\u3046\u306bU\u3068V\u3092\u8a08\u7b97\u3059\u308b\uff08\u56e0\u5b50\u5206\u6790\uff09 \u76ee\u7684\u95a2\u6570\u3092\u6700\u5c0f\u5316\u3059\u308b \u03bb\u306f\u904e\u5b66\u7fd2\u9632\u6b62\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf SGD\u3084ALS\uff08\u4ed6\u306e\u5024\u3092\u56fa\u5b9a\u3057\u3001\u9010\u6b21\u7684\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\uff09\u3067\u5b66\u7fd2\u3059\u308b \\[ loss = min_{p^*,q^*} \\sum_{(u,i) \\in k}(r_{ui}-q^T_ip_u)^2+\\lambda (||q_i||^2+||p_u||^2) \\] \u6b20\u640d\u5024\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u304c\u8003\u3048\u3089\u308c\u308b \u6f5c\u5728\u5909\u6570\u3068\u307f\u306a\u3057\u3066EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u3066\u89e3\u304f \u6b20\u640d\u5024\u304c\u306a\u3044\u30c7\u30fc\u30bf\u306e\u307f\u3067\u8a08\u7b97\u3059\u308b \u5e73\u5747\u5024\u306a\u3069\u3067\u88dc\u5b8c\u3059\u308b \u6b20\u640d\u5024\u306f\u7121\u8996\u3057\u3066\u640d\u5931\u3092\u8a08\u7b97\u3059\u308b","title":"\u5b66\u7fd2\u65b9\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_51","text":"\u5358\u7d14\u306a\u306e\u3067\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fdd\u8b77\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084\u3001\u975e\u7dda\u5f62\u56de\u5e30\u3092\u5c0e\u5165\u3057\u305f\u4e88\u6e2c\u7cbe\u5ea6\u5411\u4e0a\u306a\u3069\u306e\u62e1\u5f35\u304c\u53ef\u80fd \u5168\u4f53\u30921\u3064\u306e\u7dda\u5f62\u30e2\u30c7\u30eb\u3067\u8868\u3059\u3068\u3001\u5927\u307e\u304b\u3059\u304e\u3066\u4e88\u6e2c\u7cbe\u5ea6\u304c\u4f4e\u304f\u306a\u308b\u5834\u5408\u304c\u3042\u308b \u55dc\u597d\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u5229\u7528\u8005\u9593\u3067\u3001\u5c40\u6240\u7684\u306b\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308bHorting\u6cd5\u306a\u3069\u3067\u5bfe\u5fdc\u53ef\u80fd","title":"\u305d\u306e\u4ed6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_52","text":"\u8a55\u4fa1\u5024\u306e\u5927\u5c0f\u95a2\u4fc2\u3092\u7121\u8996\u3057\u3001\u30af\u30e9\u30b9\u3068\u898b\u306a\u3059 \u5927\u5c0f\u95a2\u4fc2\u3092\u8003\u616e\u3059\u308b\u5de5\u592b\u3082\u70ba\u305b\u308b \u7279\u5fb4\u91cf\u306b\u306f\u3001\u5bfe\u8c61\u30a2\u30a4\u30c6\u30e0\u306e\u4ed6\u306e\u5229\u7528\u8005\u306b\u3088\u308b\u8a55\u4fa1\u5024\u3084\u3001\u5bfe\u8c61\u8005\u306e\u4ed6\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u8a55\u4fa1\u5024\u304c\u5229\u7528\u3067\u304d\u308b","title":"\u30af\u30e9\u30b9\u5206\u985e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_53","text":"\u5404\u30af\u30e9\u30b9\u3054\u3068\u306b\u3001\u5bfe\u8c61\u306e\u5206\u985e\u3055\u308c\u3084\u3059\u3055\u3092\u8868\u3059\u95a2\u6570\u3092\u7372\u5f97 \u95a2\u6570\u306e\u5024\u304c\u6700\u5927\u3068\u306a\u308b\u30af\u30e9\u30b9\u306b\u5bfe\u8c61\u3092\u5206\u985e \\[ \\hat r_{xy} = argmax_{r \\in R}\\bigl( \\sum_{i s.t.r_{iy}=r}u_{xi}+\\sum_{j s.t.r_{xj}=r}w_{yj} \\bigr) \\\\ where~u_{xi}:\u30a2\u30a4\u30c6\u30e0y\u306b\u3064\u3044\u3066\u306e\u8a55\u4fa1\u304c\u540c\u3058r\u3067\u3042\u308b\u5229\u7528\u8005i\u306b\u3064\u3044\u3066\u306e\u5229\u7528\u8005\u9593\u306e\u91cd\u307f \\\\ w_{yj}:\u5229\u7528\u8005x\u304c\u540c\u3058r\u3068\u8a55\u4fa1\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0j\u306b\u3064\u3044\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u9593\u306e\u91cd\u307f \\] u, w\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u306e\u67a0\u7d44\u307f\u3067\u6c42\u3081\u308b \u5b66\u7fd2\u7387\u3092\u53ce\u675f\u3055\u305b\u306a\u3044SGD\uff08Momentum\uff09\u306a\u3069 \u6700\u521d\u306bu, w\u3092\u521d\u671f\u5316\u3059\u308b r\u304c\u89b3\u6e2c\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u5229\u7528\u8005x\u4ee5\u5916\u3067\u30a2\u30a4\u30c6\u30e0y\u3092\u8a55\u4fa1\u6e08\u307f\u306e\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fci\u306b\u3064\u3044\u3066\u3001 \u8a55\u4fa1\u304c\u540c\u3058\u306a\u3089v\u3092\u5897\u3084\u3057\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u6e1b\u3089\u3059 \u307e\u305f\u3001\u5229\u7528\u8005x\u304c\u8a55\u4fa1\u3057\u3066\u3044\u308by\u4ee5\u5916\u306e\u30a2\u30a4\u30c6\u30e0\u5168\u3066\u306b\u3064\u3044\u3066\u3001 \u8a55\u4fa1\u304c\u540c\u3058\u306a\u3089\u91cd\u307fw\u3092\u5897\u3084\u3057\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u6e1b\u3089\u3059","title":"\u9010\u6b21\u578b\u4e8c\u9805\u95a2\u4fc2\u5b66\u7fd2\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_54","text":"\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\u306a\u306e\u3067\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u3060\u304c\u30a2\u30a4\u30c6\u30e0\u3084\u5229\u7528\u8005\u306e\u8ffd\u52a0\u306b\u5bfe\u5fdc\u3067\u304d\u308b \u30a2\u30a4\u30c6\u30e0\u3084\u5229\u7528\u8005\u306e\u524a\u9664\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044","title":"\u305d\u306e\u4ed6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_55","text":"RankBoost\u3067\u63a8\u85a6\u3059\u308b\u7814\u7a76\u304c\u3042\u308b","title":"\u30e9\u30f3\u30ad\u30f3\u30b0"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#k-nn","text":"\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u304c\u3001\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u3067\u306f\u306a\u3044\uff1f CF\u306e\u6587\u8108\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b K\u500b\u306e\u8fd1\u3044\u30a2\u30a4\u30c6\u30e0\u30fb\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u304b\u3089\u3001\u63a8\u85a6\u3092\u884c\u3046 \u8fd1\u3044\u30e6\u30fc\u30b6\u30fc\u307b\u3069\u91cd\u307f\u4ed8\u3051\u3057\u3066\u548c\u3092\u53d6\u308b\u5834\u5408\u3082\u3042\u308b","title":"k-NN"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_56","text":"\u30e2\u30c7\u30eb\u3068\u3044\u3048\u3070\u30e2\u30c7\u30eb\u3060\u304c\u3001\u30a8\u30ad\u30b9\u30d1\u30fc\u30c8\u30e2\u30c7\u30eb\u3092\u6307\u3059\uff1f","title":"\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_57","text":"","title":"\u30d9\u30a4\u30ba\u5206\u985e\u5668\uff08\u78ba\u7387\u30e2\u30c7\u30eb\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_58","text":"\u5bfe\u8c61\u8005\u306e\u904e\u53bb\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306e\u3001\u5bfe\u8c61\u8005\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\u5024\u306e\u6761\u4ef6\u4ed8\u304d\u671f\u5f85\u5024 \u78ba\u7387\u5206\u5e03\u306f\u672a\u77e5\u306a\u306e\u3067\u3001\u63a8\u5b9a\u3057\u305f\u95a2\u6570\u3092\u5229\u7528\u3059\u308b \u5f0f\u4e2d\u3067\u306f\u4ed6\u306e\u6a19\u672c\u5229\u7528\u8005\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u306f\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044\u304c\u3001\u78ba\u7387\u5206\u5e03\u306e\u63a8\u5b9a\u904e\u7a0b\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u3001\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u63a8\u85a6\u3068\u8a00\u3048\u308b \\[ \\hat r_{ay} = E \\bigl[ r_{ay} ~s.t.~ j \\in Y_a\\bigr] \\\\ = \\sum_{r \\in R}Pr \\bigl[ r_{ay}=r|r_{aj} ~s.t.~j \\in Y_a \\bigr] \\\\ where ~ r_{ay}: \u8a55\u4fa1\u8005a\u306e\u30a2\u30a4\u30c6\u30e0y\u3078\u306e\u8a55\u4fa1\\\\ Y_a: \u5229\u7528\u8005a\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408 \\] R = {0, 1}\u306e\u55dc\u597d\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001\u6761\u4ef6\u3064\u304d\u78ba\u7387\u5206\u5e03\u306b\u306a\u308b \u8a13\u7df4\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3060\u304c\u3001\u6697\u9ed9\u7684\u8a55\u4fa1\u3067\u306fr_ay=0\u3068\u306a\u308b\u30ce\u30a4\u30ba\u304c\u591a\u304f\u306a\u308a\u3001\u4e0d\u5229\u306b\u306a\u308b \u307e\u305f\u3001\u3053\u306e\u5f62\u3067\u306f\u500b\u3005\u306e\u5229\u7528\u8005\u306b\u3064\u3044\u3066\u30e2\u30c7\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u73fe\u5b9f\u7684\u3067\u306a\u3044 \\[ \\hat r_{ay} = Pr \\bigl[ r_{ay}=1 | s_{aj} ~s.t.~ j \\in Y_a \\bigr] \\] \u5b9f\u969b\u306b\u306f\u3001\u5229\u7528\u8005\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5168\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u8a55\u4fa1\u306e\u540c\u6642\u5206\u5e03\u3092\u6c42\u3081\u308b \\[ Pr \\bigl[ r_{.y}~s.t.~ y \\in Y \\bigr] \\\\ where ~ r_{.y}:\u5168\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30a4\u30c6\u30e0y\u306b\u5bfe\u3059\u308b\u8a55\u4fa1 \\] \u6700\u521d\u306e\u5f0f\u306e\u6761\u4ef6\u4ed8\u304d\u5206\u5e03\u306f\u30d9\u30a4\u30ba\u5247\u3068\u4e0d\u8981\u306a\u5909\u6570\u306e\u5468\u8fba\u304b\u3067\u6d88\u53bb\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u3059\u308b \u305f\u3060\u3057\u3001|Y| = m\u3067\u3001R^\u00ae = R1xR2xR3x...xRm\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306fm\u306b\u5bfe\u3057\u3066\u6307\u6570\u95a2\u6570\u7684\u306b\u5897\u52a0\u3059\u308b \u305d\u3053\u3067\u3001\u5909\u6570r.y\u306e\u9593\u306b\u90e8\u5206\u7684\u306a\u6761\u4ef6\u4ed8\u304d\u72ec\u7acb\u6027\u3092\u4eee\u5b9a\u3057\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e1b\u3089\u3059 \u6761\u4ef6\u4ed8\u304d\u72ec\u7acb\u6027\u3092\u5c0e\u5165\u3057\u305f\u78ba\u7acb\u30e2\u30c7\u30eb\u306f\u3001\u4f9d\u5b58\u95a2\u4fc2\u3092\u30b0\u30e9\u30d5\u3067\u793a\u3059\u305f\u3081\u3001\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u3068\u3044\u3046 \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u305d\u306e\u4e00\u3064","title":"\u5c65\u6b74\u6761\u4ef6\u578b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_59","text":"\u904e\u53bb\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u30c7\u30fc\u30bf\u304b\u3089\u3001\u4e88\u3081\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b \u5b9f\u74b0\u5883\u3067\u3001\u4e8b\u8c61\u767a\u751f\u3057\u305f\u969b\u306b\u63a8\u85a6\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u6c7a\u5b9a\u3059\u308b \u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3092\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4e0e\u3048\u63a8\u8ad6\u3001\u95b2\u89a7\u78ba\u7387\u3092\u7b97\u51fa \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u7814\u7a76\u3042\u308a \u3053\u306e\u5834\u5408\u3001\u5404\u30bb\u30b0\u30e1\u30f3\u30c8\u306b\u6240\u5c5e\u3059\u308b\u78ba\u7387\u304c\u5f97\u3089\u308c\u308b \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u3067\u3082\u3001\u5404\u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u304b\u3089\u306e\u8ddd\u96e2\u306a\u3069\u304c\u5f97\u3089\u308c\u308b\u306f\u305a \u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u5168\u3066\u306e\u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u306a\u3044 Maximum Weighted Spanning Tree (MWST) Algorithm \u5927\u898f\u6a21\u30c7\u30fc\u30bf\u306b\u9069\u3057\u3001\u4e88\u6e2c\u52b9\u679c\u304c\u826f\u3044\u3068\u3055\u308c\u308b\u8a08\u7b97\u91cf\u304c\u30ce\u30fc\u30c9\u6570\u306b\u5bfe\u3057O(n^2) \u6761\u4ef6\u4ed8\u304d\u78ba\u7acb\u304c\u4e00\u756a\u5927\u304d\u304f\u306a\u308bSpanning Tree\u3092\u69cb\u7bc9\u3059\u308b \u5225\u9805\uff08\u4e0b\uff09\u3067\u6271\u3046 Pearl's Passage Passing Algorithm \u9ad8\u901f\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5168\u30ce\u30fc\u30c9\u306e\u5468\u8fba\u81ea\u5df1\u78ba\u7387\u3092\u6c42\u3081\u308b\u624b\u6cd5 \u30e6\u30fc\u30b6\u30fc\u30a2\u30a4\u30c6\u30e0\u30d9\u30a4\u30b8\u30a2\u30f3 \u30e6\u30fc\u30b6\u30fc\u304c\u8a55\u4fa1\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3068\u3001\u4ed6\u30a2\u30a4\u30c6\u30e0\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b \u4ed6\u30a2\u30a4\u30c6\u30e0\u3092\u9078\u3076\u78ba\u7387\u3092\u7b97\u51fa\u3059\u308b \u30e6\u30fc\u30b6\u30fc\u30e6\u30fc\u30b6\u30fc\u30d9\u30a4\u30b8\u30a2\u30f3 \u30e6\u30fc\u30b6\u30fc\u304c\u597d\u3080\u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03 \u30e6\u30fc\u30b6\u30fc\u540c\u58eb\u306e\u597d\u307f\u306e\u8fd1\u3055\u3092\u7b97\u51fa \u30a2\u30a4\u30c6\u30e0\u30a2\u30a4\u30c6\u30e0\u30d9\u30a4\u30b8\u30a2\u30f3 \u30a2\u30a4\u30c6\u30e0\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03 \u30a2\u30a4\u30c6\u30e0\u540c\u58eb\u306e\u8fd1\u3055\u3092\u7b97\u51fa","title":"\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_60","text":"","title":"\u30ca\u30a4\u30fc\u30d6\u30d9\u30a4\u30ba"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_61","text":"\u3042\u308b\u5229\u7528\u8005\u304c\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u8a55\u4fa1\u3057\u305f\u3053\u3068\u3092\u3001\u305d\u306e\u5229\u7528\u8005\u304cx\u3067\u3042\u308b\u3068\u3044\u3046\u4e8b\u8c61\u3068\u3001\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u304cy\u3067\u3042\u308b\u3068\u3044\u3046\u4e8b\u8c61\u304c\u5171\u8d77\u3057\u3066\u3044\u308b\u3068\u6349\u3048\u308b \u3053\u306e\u5171\u8d77\u78ba\u7387\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u78ba\u7387\u7684\u6f5c\u5728\u610f\u5473\u89e3\u6790\uff08pLSA\uff09\u3092\u5229\u7528\u3059\u308b \u975e\u5e38\u306b\u67d4\u8edf\u3067\u3001\u8a55\u4fa1\u306e\u63fa\u3089\u304e\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u60c5\u5831\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u60c5\u5831\u3001\u500b\u4eba\u5c5e\u6027\u60c5\u5831\u306a\u3069\u306e\u8981\u56e0\u3092\u5c0e\u5165\u3059\u308b\u3068\u3044\u3063\u305f\u62e1\u5f35\u304c\u53ef\u80fd \u65b0\u898f\u306e\u5229\u7528\u8005\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001\u30d9\u30a4\u30ba\u306e\u67a0\u7d44\u307f\u306b\u62e1\u5f35\u3059\u308b\u3068\u6f5c\u5728\u7684\u30c7\u30a3\u30ea\u30af\u30ec\u914d\u5206\u6cd5\uff08Latent Dirichelt allocation; LDA\uff09\u3068\u306a\u308b \u8a73\u7d30\u306fhttp://www.kamishima.net/archive/recsysdoc.pdf\u3000P70","title":"\u5171\u8d77\u578b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#mwst-algorithm","text":"\u5404\u5909\u6570\u9593\u306e\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u57fa\u6e96\u3068\u3057\u3066\u6728\u3092\u69cb\u7bc9\u3059\u308b\u624b\u6cd5 \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u306a\u308b \u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3088\u308a\u3001Nx(N-1)/2\u500b\u306e\u679d\u306b\u3064\u3044\u3066\u3001\u5168\u3066\u306e\u679d\u306e\u76f8\u4e92\u60c5\u5831\u91cfI(xi; xj)\u3092\u6c42\u3081\u308b \u6700\u3082\u5927\u304d\u306a\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u793a\u3059\u679d\u3092\u53d6\u308a\u51fa\u3057\u3001\u6728\u3092\u69cb\u7bc9\u3059\u308b\u679d\u3068\u3059\u308b \u6b21\u306b\u5927\u304d\u306a\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u793a\u3059\u679d\u3092\u6728\u306b\u52a0\u3048\u308b \u305f\u3060\u3057\u3001\u30eb\u30fc\u30d7\u304c\u3067\u304d\u308b\u306a\u3089\u305d\u306e\u679d\u3092\u6368\u3066\u308b \u30b9\u30c6\u30c3\u30d73\u3092\u3001N-1\u500b\u306e\u679d\u304c\u6728\u306b\u52a0\u308f\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059 \u6700\u5f8c\u306b\u6839\u30ce\u30fc\u30c9\u3092\u6c7a\u5b9a\u3057\u3001\u6839\u304b\u3089\u8449\u306b\u5411\u304b\u3046\u3088\u3046\u306b\u679d\u306b\u65b9\u5411\u3092\u3064\u3051\u308b Web\u30da\u30fc\u30b8\uff08\u30da\u30fc\u30b8\u657010\u4e07\u4ee5\u4e0a\uff09\u3092\u63a8\u85a6\u3059\u308b\u8ad6\u6587\u3067\u306f\u3001\u6839\u30ce\u30fc\u30c9\u3092\u6700\u3082\u591a\u304f\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3068\u3057\u3066\u3044\u305f \u30b5\u30a4\u30c8\u5168Web\u30da\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9\u306f\u8a08\u7b97\u91cf\u304c\u81a8\u5927\u306b\u306a\u308a\u5b9f\u884c\u3067\u304d\u305a\u3001\u69cb\u7bc9\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30da\u30fc\u30b8\u6570\u306f5000\u7a0b\u5ea6\u304c\u9650\u754c\u3068\u3057\u3066\u3044\u305f \u30b5\u30a4\u30c8\u5185\u306e\u5404\u30da\u30fc\u30b8\u3092\u6570\u5341\u500b\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u3051\u3001\u5404\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3068\u3057\u3066\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u8ad6\u3092\u884c\u306a\u3063\u3066\u3044\u305f","title":"MWST algorithm"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_62","text":"\u4e8c\u6b21\u7d71\u8a08\u91cf\u307e\u3067\u3057\u304b\u7528\u3044\u306a\u3044\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304b\u3089\u306e\u6f14\u7b97\u304c\u5bb9\u6613\u3067\u4fe1\u983c\u3067\u304d\u308b \u8a08\u7b97\u91cf\u304c\u30ce\u30fc\u30c9\u6570n\u306b\u5bfe\u3057\u3066\u9ad8\u3005O(n^2) \u7d71\u8a08\u7684\u306b\u306f\u4e00\u81f4\u6027\u304c\u5168\u304f\u306a\u3044\u304c\u3001\u4e88\u6e2c\u52b9\u7387\u304c\u826f\u3044","title":"\u5229\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#pearls-message-passing-algorithm","text":"\u9ad8\u901f\u306b\u78ba\u7387\u63a8\u8ad6\u3092\u884c\u3046\u305f\u3081\u306e\u624b\u6cd5 \u4e00\u822c\u7684\u306b\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3057\u305f\u5f8c\u3084\u3001\u30ce\u30fc\u30c9\u306b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u305f\u5834\u5408\u3001\u3042\u308b\u30ce\u30fc\u30c9\u306e\u4e8b\u5f8c\u78ba\u7acb\u3092\u6c42\u3081\u308b\u306e\u306b\u5468\u8fba\u5316\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b \u3053\u306e\u5468\u8fba\u5316\u3092\u4e00\u822c\u7684\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3092\u5229\u7528\u3057\u3066\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3089\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u3001\u305d\u306e\u5468\u8fba\u30ce\u30fc\u30c9\u3078\u5411\u3051\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u3092\u884c\u3046 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u30ce\u30fc\u30c9\u306f\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7528\u3044\u3066\u81ea\u5206\u306e\u5468\u8fba\u4e8b\u5f8c\u78ba\u7387\u3092\u66f4\u65b0\u3059\u308b \u5468\u8fba\u81ea\u5df1\u78ba\u7387\u3092\u66f4\u65b0\u3057\u305f\u30ce\u30fc\u30c9\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5143\u4ee5\u5916\u306b\u81ea\u5206\u306e\u5468\u8fba\u30ce\u30fc\u30c9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b 2,3\u3092\u7e70\u308a\u8fd4\u3057\u3001\u5168\u3066\u306e\u30ce\u30fc\u30c9\u306e\u5468\u8fba\u4e8b\u5f8c\u78ba\u7387\u3092\u66f4\u65b0\u3059\u308b","title":"Pearl's Message Passing Algorithm"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_63","text":"\u30e6\u30fc\u30b6\u30fc\u304c\u95b2\u89a7\u3057\u305f\u30da\u30fc\u30b8\u3092\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u308c\u63a8\u8ad6\u3092\u884c\u3044\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u304a\u3051\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u55dc\u597d\u78ba\u7387\u3092\u6c42\u3081\u308b \u63a8\u8ad6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306fPearl\u2019sMessage Passing\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u9ad8\u901f\u5316\u3059\u308b \u8a08\u7b97\u3055\u308c\u305f\u55dc\u597d\u78ba\u7387\u304c\u5927\u304d\u3044\u9806\u306b\u4e26\u3079\u3066\u3044\u304f","title":"\u63a8\u8ad6\u6642"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_64","text":"","title":"\u6642\u7cfb\u5217\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_65","text":"\\[ Pr[y^{(t+1)}|<Y^{(t)}>] = \\frac{1}{Z}exp \\bigl[ \\sum^K_{k=1}\\lambda_kf_k(y^{t+1},<Y^{(t)}>) \\bigr] \\\\ where ~ Z:\u6b63\u898f\u5316\u5b9a\u6570 \\\\ \\lambda_k: \u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bf \\\\ f_k(y^{t+1},<Y^{(t)}>):\u7d20\u6027\u95a2\u6570 \\\\ \\] \u7d20\u6027\u95a2\u6570\u3068\u306f\u3001\u8cfc\u5165\u5c65\u6b74 \u3092\u306b\u3042\u308b\u7279\u5fb4\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u56de\u306b\u8cfc\u5165\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u7279\u5b9a\u306e\u3082\u306e\u306b\u306a\u308b\u306a\u30891\u3092\u53d6\u308a\u3001\u305d\u308c\u4ee5\u5916\u3067\u306f0\u3068\u306a\u308b\u3088\u3046\u306a\u95a2\u6570 \u8cfc\u5165\u5c65\u6b74\u4e2d\u306b\u30a2\u30a4\u30c6\u30e0y\u304c\u3042\u308b\u3068\u304d\u3001\u6b21\u306b\u30a2\u30a4\u30c6\u30e0y`\u3092\u8cfc\u5165\u3059\u308b\u78ba\u7387 \\[ Pr[y^{(t+1)}=y^{,}|y \\in <Y^{(t)}>]-Pr[y^{(t+1)}=y^{,}] \\] \u304c\u5927\u304d\u306a\u3082\u306e\u3092\u9078\u3076 \u3053\u3046\u3057\u3066\u7d20\u6027\u95a2\u6570\u3092\u9078\u629e\u3059\u308c\u3070\u3001\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bflamda_k\u306f\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u539f\u7406\u306b\u57fa\u3065\u3044\u3066\u63a8\u5b9a\u3067\u304d\u308b \u3053\u306e\u7d20\u6027\u95a2\u6570\u306b\u306f\u69d8\u3005\u306a\u3082\u306e\u304c\u5229\u7528\u3067\u304d\u308b","title":"\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_66","text":"\u76f4\u8fd1K\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u7cfb\u5217\u3092\u7528\u3044\u3066\u4e88\u6e2c\u3059\u308b \u5f37\u5316\u5b66\u7fd2\u3092\u4f7f\u3046\u306a\u3069\u3059\u308b","title":"\u30de\u30eb\u30b3\u30d5\u904e\u7a0b\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_67","text":"\u751f\u5b58\u6642\u9593\u89e3\u6790\u306a\u3069\u306e\u624b\u6cd5\u3092\u7528\u3044\u308b Cox\u6bd4\u7387\u30cf\u30b6\u30fc\u30c9\u30e2\u30c7\u30eb","title":"\u5b9a\u671f\u8cfc\u5165"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_68","text":"","title":"\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_69","text":"\u55dc\u597d\u30c7\u30fc\u30bf\u3068\u691c\u7d22\u8cea\u554f\u304c\u3042\u308b \u55dc\u597d\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5c5e\u6027\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u5c5e\u6027\u3092\u7279\u5fb4\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u3092\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u4e88\u6e2c\u3059\u308b","title":"\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/method/#_70","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u5168\u822c\u306e\u3053\u3068\uff1ahttp://www.kamishima.net/archive/recsysdoc.pdf \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u5206\u985e\u306a\u3069\uff1ahttps://eulerdijkstra.hatenadiary.org/entry/20130407/1365349866 CF\u3092\u7528\u3044\u305f\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\uff1ahttps://www.slideshare.net/masayuki1986/recommendation-ml Web\u30da\u30fc\u30b8\u306e\u63a8\u85a6\u306b\u30d9\u30a4\u30b8\u30a2\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u65e5\u672c\u8a9e\u7814\u7a76\uff1ahttps://www.ai-gakkai.or.jp/jsai2007/data/pdf/100205.pdf FM, FFM\u3001FM+NN\u306b\u3064\u3044\u3066\uff1ahttps://qiita.com/s_katagiri/items/d630685dd2fe2627ecd3 FM\u306e\u5143\u8ad6\u6587\uff1ahttps://www.csie.ntu.edu.tw/~b97053/paper/Rendle2010FM.pdf DeepFM\u306e\u52d5\u5411(2018)\uff1ahttps://data.gunosy.io/entry/deep-factorization-machines-2018#f-95055ec5","title":"\u53c2\u8003\u6587\u732e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/","text":"\u30b5\u30f3\u30d7\u30eb\u9593\u306e\u985e\u4f3c\u6027\u6307\u6a19 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3051\u308b\u5bfe\u8c61\u540c\u58eb\u306e \u985e\u4f3c\u5ea6 \u3092\u8a55\u4fa1\u3059\u308b\u7814\u7a76\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3002 \u30a2\u30a4\u30c6\u30e0\u3084\u30e6\u30fc\u30b6\u30fc\u306e\u985e\u4f3c\u6027\u3092\u6e2c\u308b\u305f\u3081\u306e\u6307\u6a19 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084K-NN\u3067\u3001\u300e\u985e\u4f3c\u3057\u305f\u300f\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u3092\u898b\u3064\u3051\u308b\u969b\u306b\u4e3b\u306b\u4f7f\u3046 \u53e4\u3044\u6307\u6a19 Peason correlation \u3044\u308f\u3086\u308b\u76f8\u95a2\u4fc2\u6570 -1\u301c+1\u307e\u3067\u306e\u5024\u3092\u53d6\u308b \\[ \\rho = \\frac{\\sigma_{XY}}{\\sigma_x \\sigma_y} \\\\ = \\frac{E\\bigl[ (X-E[X])(Y-E[Y]) \\bigr]}{\\sqrt{E[(X-E[X])^2]}\\sqrt{E[(Y-E[Y])^2]}} \\] cosine \u30d9\u30af\u30c8\u30ebA\u3068\u30d9\u30af\u30c8\u30ebB\u306e\u89d2\u5ea6\u306e\u30b3\u30b5\u30a4\u30f3 -1~1\u307e\u3067\u306e\u5024\u3092\u53d6\u308b \\[ cosineSim = \\frac{\\sum^n_{i=1} a_ib_i}{\\sqrt{\\sum^n_{i=1} a_i^2}\\sqrt{\\sum^n_{i=1} b_i^2}} \\] adjusted cosine \u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9CF\uff08\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\uff09\u3068\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9CF\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\u306e\u57fa\u672c\u7684\u306a\u9055\u3044\u306f\u3001\u8a08\u7b97\u3059\u308b\u65b9\u5411\u304c\u884c\u304b\u5217\u304b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5834\u5408\u3001cosine\u3092\u4f7f\u3063\u3066\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u306b\u306f\u4e00\u3064\u306e\u91cd\u5927\u306a\u6b20\u9665\u304c\u3042\u308b cosine\u306f\u89d2\u5ea6\u306f\u53cd\u6620\u3059\u308b\u304c\u3001\u4f4d\u7f6e\u3092\u554f\u308f\u306a\u3044 Adjusted cosine\u306f\u3001\u5404\u5171\u8a55\u4fa1\u30da\u30a2\u304b\u3089\u5bfe\u5fdc\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u5e73\u5747\u5024\u3092\u5dee\u3057\u5f15\u304f\u3053\u3068\u3067\u3001\u3053\u306e\u6b20\u70b9\u3092\u76f8\u6bba\u3059\u308b \\[ sim(i,j) = \\frac{\\sum_{u \\in U}(R_{u,i}-\\bar R)(R_{u,j}-\\bar R_u)}{\\sqrt{\\sum_{u \\in U}(R_{u,i}-\\bar R_u)^2}\\sqrt{\\sum_{u \\in U}(R_{u,j}-\\bar R_u)^2}} \\\\ where~ \\bar R_u: u\u756a\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u5e73\u5747\u8a55\u4fa1 \\] Euclidean \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2 \u985e\u4f3c\u5ea6\u3068\u3057\u3066\u8a55\u4fa1\u3059\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\u6b63\u898f\u5316\u3059\u308b \\[ sim = 1 / (1+\\sqrt{\\sum^n_{i=1}(p_i-q_i)^2}) \\] Jaccard similarity \u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u8a55\u4fa1\u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b \u4e21\u30e6\u30fc\u30b6\u30fc\u304c\u8a55\u4fa1\u3057\u305f\u5168\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u30ab\u30fc\u30c7\u30a3\u30ca\u30ea\u30c6\u30a3\u306b\u5bfe\u3059\u308b\u8a55\u4fa1\u306e\u30ab\u30fc\u30c6\u30a3\u30ca\u30ea\u30c6\u30a3\u306e\u5272\u5408 \\[ Sim(u,v)^{jaccard} = \\frac{(I_u \\cap I_v)}{I_u \\cup I_v} \\] Mean Square Distance \u5e73\u5747\u4e8c\u4e57\u8ddd\u96e2\u306f\u5171\u8a55\u4fa1\u9805\u76ee\u306e\u8a55\u4fa1\u306e\u5dee\u3068\u5171\u8a55\u4fa1\u9805\u76ee\u306e\u30ab\u30fc\u30c7\u30a3\u30ca\u30ea\u30c6\u30a3\u306e\u6bd4\u3067\u7b97\u51fa\u3055\u308c\u308b \u5e73\u5747\u4e8c\u4e57\u985e\u4f3c\u5ea6\u306f\u30011\u304b\u3089MSD\u3092\u5dee\u3057\u5f15\u3044\u3066\u8a08\u7b97\u3059\u308b \\[ Sim(u,v)^{MSD} = 1 - \\frac{\\sum_{i\\in I(u,v)}(R(u,i)-R(v,i))^2}{|I(u,v)|} \\] \u65b0\u3057\u3044\u6307\u6a19 JMSD MSD\u306b\u3088\u308b\u6570\u5024\u60c5\u5831\u3068Jaccard\u306b\u3088\u308b\u975e\u6570\u5024\u60c5\u5831\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u8a08\u7b97 Jaccard\u3068MSD\u306e\u90e8\u5206\u7684\u306a\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3057\u3001\u3053\u308c\u3089\uff12\u3064\u306e\u985e\u4f3c\u5ea6\u6e2c\u5b9a\u5024\u306e\u4e57\u7b97\u304b\u3089\u751f\u6210\u3055\u308c\u308b \\[ Sim_(u,v)^{JMSD} = (Sim(u,v)^{Jaccard})(Sim(u,v)^{MSD}) \\\\ =\\Bigl( \\frac{(I_u \\cap I_v)}{I_u \\cup I_v} \\Bigr) \\Bigl( \\frac{\\sum_{i\\in I(u,v)}(R(u,i)-R(v,i))^2}{|I(u,v)|} \\Bigr) \\] SING \u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u7279\u5316\u3057\u305f\u985e\u4f3c\u6307\u6a19 \u8ad6\u6587\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\uff08Abstract\u3068References\u3057\u304b\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\uff09 GEN \u907a\u4f1d\u7684\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u57fa\u3065\u3044\u305f\u985e\u4f3c\u6027\u6307\u6a19 CF\u30d9\u30fc\u30b9\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u7cbe\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u3001CF\u306e\u7d50\u679c\u3092\u5411\u4e0a\u3055\u305b\u308b\u306e\u304c\u76ee\u7684 \\[ sim_w(x,y) = \\frac{1}{M-m+1}\\sum^{M-m}_{i=0}w^{i}v^{i}_{x,y} \\\\ where~ m:\u8a55\u4fa1\u306e\u6700\u5c0f\u5024\uff08\u901a\u5e38\u306f1\uff09 \\\\ M: \u8a55\u4fa1\u306e\u6700\u5927\u5024\uff08\u901a\u5e38\u306f5\u308410\uff09\\\\ v: 2\u4eba\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u306e\u5dee \\\\ w: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306eMAE\u304c\u6700\u5c0f\u3068\u306a\u308b\u3088\u3046\u306a\u985e\u4f3c\u6027\u95a2\u6570\u306e\u4fc2\u6570 \\] \u4f8b r_1 = (4, 5, x, 3, 2, x, 1, 1, 4) r_2 = (4, 3, 1, 2, x, 3, 4, x, 2)\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u3092\u4eee\u5b9a \u8a55\u4fa1\u306e\u5dee\u306fr_d = (0, 2, x, 1, x, x, 3, x, 2) \u8a55\u4fa1\u306e\u5dee\u306e\u5272\u5408\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3001v = (\u2155, \u2155, \u2156, \u2155, 0)\u3068\u306a\u308b\uff08\u5dee\u304c0\u306e\u5272\u5408\u3001\u5dee\u304c1\u306e\u5272\u5408\u3001\u5dee\u304c2\u306e\u5272\u5408...\uff09 w\u306f(1, 0.5, 0, -0.5, -1)\u306e\u3044\u305a\u308c\u304b\u3092\u53d6\u308b 1\u306a\u3089\u975e\u5e38\u306b\u4f3c\u3066\u304a\u308a\u3001-1\u306a\u3089\u975e\u5e38\u306b\u4f3c\u3066\u3044\u306a\u3044 0\u306f\u3001\u305d\u306e\u8a55\u4fa1\u306e\u5dee\u304c\u3001\u985e\u4f3c\u6027\u306b\u95a2\u9023\u3057\u306a\u3044\u3068\u63a8\u5b9a\u3055\u308c\u308b w\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306eMAE\u3092\u6700\u5c0f\u3068\u3059\u308b\u3088\u3046\u306b\u3001\u907a\u4f1d\u7684\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b66\u7fd2\u3059\u308b TRUST \u30e6\u30fc\u30b6\u30fc\u306e\u4fe1\u983c\u5ea6\u3092\u8a55\u4fa1\u5024\u30c7\u30fc\u30bf\u304b\u3089\u5f97\u308b \u8ad6\u6587\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\uff08Abstract\u3068References\u3057\u304b\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\uff09 \u53e4\u3044\u6307\u6a19\u306e\u554f\u984c \u4f8b\u3048\u3070\u3001U=(2, 0, 3, 0)\u3068V=(5, 2, 0, 2)\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u3092\u8003\u3048\u308b \u4e21\u30e6\u30fc\u30b6\u30fc\u304c\u3068\u3082\u306b\u8a55\u4fa1\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306f1\u3064\u306e\u307f \u30d4\u30a2\u30bd\u30f3\u306e\u985e\u4f3c\u5ea6\u3060\u30680\u306b\u306a\u308b \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3060\u30681\u306b\u306a\u308b U=(2, 1, 3, 2), V=(1, 2, 2, 3)\u306a\u3069\u306f\u4f3c\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u30d4\u30a2\u30bd\u30f3\u306e\u985e\u4f3c\u5ea6\u306f0 U=(2, 2, 0, 1), V=(4, 4, 0, 2)\u3060\u3068\u3001\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f1\u306b\u306a\u308b \u8a55\u4fa1\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u3001\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f\u9ad8\u304f\u306a\u308a\u3084\u3059\u3044 1\u306a\u3069\u306e\u3042\u307e\u308a\u91cd\u8981\u3067\u306a\u3044\u8a55\u4fa1\u5024\u306b\u3072\u3063\u3071\u3089\u308c\u308b U=(5, 5, 1, 1), V=(1, 1, 5, 5)\u3060\u3068\u3001Jaccard\u306f\u975e\u5e38\u306b\u9ad8\u3044\u6570\u5024\u3092\u51fa\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u660e\u3089\u304b\u306b\u7570\u306a\u308b \u8a55\u4fa1\u306e\u5024\u3092\u7121\u8996\u3057\u3001\u5171\u8a55\u4fa1\u306e\u6709\u7121\u306e\u307f\u306b\u6ce8\u76ee\u3059\u308b\u3068\u60c5\u5831\u3092\u5927\u91cf\u306b\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308b","title":"\u30b5\u30f3\u30d7\u30eb\u9593\u306e\u985e\u4f3c\u6027\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#_1","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3051\u308b\u5bfe\u8c61\u540c\u58eb\u306e \u985e\u4f3c\u5ea6 \u3092\u8a55\u4fa1\u3059\u308b\u7814\u7a76\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3002 \u30a2\u30a4\u30c6\u30e0\u3084\u30e6\u30fc\u30b6\u30fc\u306e\u985e\u4f3c\u6027\u3092\u6e2c\u308b\u305f\u3081\u306e\u6307\u6a19 \u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084K-NN\u3067\u3001\u300e\u985e\u4f3c\u3057\u305f\u300f\u30e6\u30fc\u30b6\u30fc\u30fb\u30a2\u30a4\u30c6\u30e0\u3092\u898b\u3064\u3051\u308b\u969b\u306b\u4e3b\u306b\u4f7f\u3046","title":"\u30b5\u30f3\u30d7\u30eb\u9593\u306e\u985e\u4f3c\u6027\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#_2","text":"","title":"\u53e4\u3044\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#peason-correlation","text":"\u3044\u308f\u3086\u308b\u76f8\u95a2\u4fc2\u6570 -1\u301c+1\u307e\u3067\u306e\u5024\u3092\u53d6\u308b \\[ \\rho = \\frac{\\sigma_{XY}}{\\sigma_x \\sigma_y} \\\\ = \\frac{E\\bigl[ (X-E[X])(Y-E[Y]) \\bigr]}{\\sqrt{E[(X-E[X])^2]}\\sqrt{E[(Y-E[Y])^2]}} \\]","title":"Peason correlation"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#cosine","text":"\u30d9\u30af\u30c8\u30ebA\u3068\u30d9\u30af\u30c8\u30ebB\u306e\u89d2\u5ea6\u306e\u30b3\u30b5\u30a4\u30f3 -1~1\u307e\u3067\u306e\u5024\u3092\u53d6\u308b \\[ cosineSim = \\frac{\\sum^n_{i=1} a_ib_i}{\\sqrt{\\sum^n_{i=1} a_i^2}\\sqrt{\\sum^n_{i=1} b_i^2}} \\]","title":"cosine"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#adjusted-cosine","text":"\u30e6\u30fc\u30b6\u30fc\u30d9\u30fc\u30b9CF\uff08\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\uff09\u3068\u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9CF\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\u306e\u57fa\u672c\u7684\u306a\u9055\u3044\u306f\u3001\u8a08\u7b97\u3059\u308b\u65b9\u5411\u304c\u884c\u304b\u5217\u304b \u30a2\u30a4\u30c6\u30e0\u30d9\u30fc\u30b9\u306e\u5834\u5408\u3001cosine\u3092\u4f7f\u3063\u3066\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u306b\u306f\u4e00\u3064\u306e\u91cd\u5927\u306a\u6b20\u9665\u304c\u3042\u308b cosine\u306f\u89d2\u5ea6\u306f\u53cd\u6620\u3059\u308b\u304c\u3001\u4f4d\u7f6e\u3092\u554f\u308f\u306a\u3044 Adjusted cosine\u306f\u3001\u5404\u5171\u8a55\u4fa1\u30da\u30a2\u304b\u3089\u5bfe\u5fdc\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u5e73\u5747\u5024\u3092\u5dee\u3057\u5f15\u304f\u3053\u3068\u3067\u3001\u3053\u306e\u6b20\u70b9\u3092\u76f8\u6bba\u3059\u308b \\[ sim(i,j) = \\frac{\\sum_{u \\in U}(R_{u,i}-\\bar R)(R_{u,j}-\\bar R_u)}{\\sqrt{\\sum_{u \\in U}(R_{u,i}-\\bar R_u)^2}\\sqrt{\\sum_{u \\in U}(R_{u,j}-\\bar R_u)^2}} \\\\ where~ \\bar R_u: u\u756a\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u5e73\u5747\u8a55\u4fa1 \\]","title":"adjusted cosine"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#euclidean","text":"\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2 \u985e\u4f3c\u5ea6\u3068\u3057\u3066\u8a55\u4fa1\u3059\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\u6b63\u898f\u5316\u3059\u308b \\[ sim = 1 / (1+\\sqrt{\\sum^n_{i=1}(p_i-q_i)^2}) \\]","title":"Euclidean"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#jaccard-similarity","text":"\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u8a55\u4fa1\u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u308b \u4e21\u30e6\u30fc\u30b6\u30fc\u304c\u8a55\u4fa1\u3057\u305f\u5168\u3066\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u30ab\u30fc\u30c7\u30a3\u30ca\u30ea\u30c6\u30a3\u306b\u5bfe\u3059\u308b\u8a55\u4fa1\u306e\u30ab\u30fc\u30c6\u30a3\u30ca\u30ea\u30c6\u30a3\u306e\u5272\u5408 \\[ Sim(u,v)^{jaccard} = \\frac{(I_u \\cap I_v)}{I_u \\cup I_v} \\]","title":"Jaccard similarity"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#mean-square-distance","text":"\u5e73\u5747\u4e8c\u4e57\u8ddd\u96e2\u306f\u5171\u8a55\u4fa1\u9805\u76ee\u306e\u8a55\u4fa1\u306e\u5dee\u3068\u5171\u8a55\u4fa1\u9805\u76ee\u306e\u30ab\u30fc\u30c7\u30a3\u30ca\u30ea\u30c6\u30a3\u306e\u6bd4\u3067\u7b97\u51fa\u3055\u308c\u308b \u5e73\u5747\u4e8c\u4e57\u985e\u4f3c\u5ea6\u306f\u30011\u304b\u3089MSD\u3092\u5dee\u3057\u5f15\u3044\u3066\u8a08\u7b97\u3059\u308b \\[ Sim(u,v)^{MSD} = 1 - \\frac{\\sum_{i\\in I(u,v)}(R(u,i)-R(v,i))^2}{|I(u,v)|} \\]","title":"Mean Square Distance"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#_3","text":"","title":"\u65b0\u3057\u3044\u6307\u6a19"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#jmsd","text":"MSD\u306b\u3088\u308b\u6570\u5024\u60c5\u5831\u3068Jaccard\u306b\u3088\u308b\u975e\u6570\u5024\u60c5\u5831\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u8a08\u7b97 Jaccard\u3068MSD\u306e\u90e8\u5206\u7684\u306a\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3057\u3001\u3053\u308c\u3089\uff12\u3064\u306e\u985e\u4f3c\u5ea6\u6e2c\u5b9a\u5024\u306e\u4e57\u7b97\u304b\u3089\u751f\u6210\u3055\u308c\u308b \\[ Sim_(u,v)^{JMSD} = (Sim(u,v)^{Jaccard})(Sim(u,v)^{MSD}) \\\\ =\\Bigl( \\frac{(I_u \\cap I_v)}{I_u \\cup I_v} \\Bigr) \\Bigl( \\frac{\\sum_{i\\in I(u,v)}(R(u,i)-R(v,i))^2}{|I(u,v)|} \\Bigr) \\]","title":"JMSD"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#sing","text":"\u30e1\u30e2\u30ea\u30d9\u30fc\u30b9\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u7279\u5316\u3057\u305f\u985e\u4f3c\u6307\u6a19 \u8ad6\u6587\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\uff08Abstract\u3068References\u3057\u304b\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\uff09","title":"SING"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#gen","text":"\u907a\u4f1d\u7684\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u57fa\u3065\u3044\u305f\u985e\u4f3c\u6027\u6307\u6a19 CF\u30d9\u30fc\u30b9\u306e\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u7cbe\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u3001CF\u306e\u7d50\u679c\u3092\u5411\u4e0a\u3055\u305b\u308b\u306e\u304c\u76ee\u7684 \\[ sim_w(x,y) = \\frac{1}{M-m+1}\\sum^{M-m}_{i=0}w^{i}v^{i}_{x,y} \\\\ where~ m:\u8a55\u4fa1\u306e\u6700\u5c0f\u5024\uff08\u901a\u5e38\u306f1\uff09 \\\\ M: \u8a55\u4fa1\u306e\u6700\u5927\u5024\uff08\u901a\u5e38\u306f5\u308410\uff09\\\\ v: 2\u4eba\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u306e\u5dee \\\\ w: \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306eMAE\u304c\u6700\u5c0f\u3068\u306a\u308b\u3088\u3046\u306a\u985e\u4f3c\u6027\u95a2\u6570\u306e\u4fc2\u6570 \\] \u4f8b r_1 = (4, 5, x, 3, 2, x, 1, 1, 4) r_2 = (4, 3, 1, 2, x, 3, 4, x, 2)\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u3092\u4eee\u5b9a \u8a55\u4fa1\u306e\u5dee\u306fr_d = (0, 2, x, 1, x, x, 3, x, 2) \u8a55\u4fa1\u306e\u5dee\u306e\u5272\u5408\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3001v = (\u2155, \u2155, \u2156, \u2155, 0)\u3068\u306a\u308b\uff08\u5dee\u304c0\u306e\u5272\u5408\u3001\u5dee\u304c1\u306e\u5272\u5408\u3001\u5dee\u304c2\u306e\u5272\u5408...\uff09 w\u306f(1, 0.5, 0, -0.5, -1)\u306e\u3044\u305a\u308c\u304b\u3092\u53d6\u308b 1\u306a\u3089\u975e\u5e38\u306b\u4f3c\u3066\u304a\u308a\u3001-1\u306a\u3089\u975e\u5e38\u306b\u4f3c\u3066\u3044\u306a\u3044 0\u306f\u3001\u305d\u306e\u8a55\u4fa1\u306e\u5dee\u304c\u3001\u985e\u4f3c\u6027\u306b\u95a2\u9023\u3057\u306a\u3044\u3068\u63a8\u5b9a\u3055\u308c\u308b w\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306eMAE\u3092\u6700\u5c0f\u3068\u3059\u308b\u3088\u3046\u306b\u3001\u907a\u4f1d\u7684\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b66\u7fd2\u3059\u308b","title":"GEN"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#trust","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u4fe1\u983c\u5ea6\u3092\u8a55\u4fa1\u5024\u30c7\u30fc\u30bf\u304b\u3089\u5f97\u308b \u8ad6\u6587\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\uff08Abstract\u3068References\u3057\u304b\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\uff09","title":"TRUST"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/silimarity/#_4","text":"\u4f8b\u3048\u3070\u3001U=(2, 0, 3, 0)\u3068V=(5, 2, 0, 2)\u306e\u8a55\u4fa1\u30d9\u30af\u30c8\u30eb\u3092\u8003\u3048\u308b \u4e21\u30e6\u30fc\u30b6\u30fc\u304c\u3068\u3082\u306b\u8a55\u4fa1\u3057\u3066\u3044\u308b\u30a2\u30a4\u30c6\u30e0\u306f1\u3064\u306e\u307f \u30d4\u30a2\u30bd\u30f3\u306e\u985e\u4f3c\u5ea6\u3060\u30680\u306b\u306a\u308b \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3060\u30681\u306b\u306a\u308b U=(2, 1, 3, 2), V=(1, 2, 2, 3)\u306a\u3069\u306f\u4f3c\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3001\u30d4\u30a2\u30bd\u30f3\u306e\u985e\u4f3c\u5ea6\u306f0 U=(2, 2, 0, 1), V=(4, 4, 0, 2)\u3060\u3068\u3001\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f1\u306b\u306a\u308b \u8a55\u4fa1\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u3001\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f\u9ad8\u304f\u306a\u308a\u3084\u3059\u3044 1\u306a\u3069\u306e\u3042\u307e\u308a\u91cd\u8981\u3067\u306a\u3044\u8a55\u4fa1\u5024\u306b\u3072\u3063\u3071\u3089\u308c\u308b U=(5, 5, 1, 1), V=(1, 1, 5, 5)\u3060\u3068\u3001Jaccard\u306f\u975e\u5e38\u306b\u9ad8\u3044\u6570\u5024\u3092\u51fa\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u660e\u3089\u304b\u306b\u7570\u306a\u308b \u8a55\u4fa1\u306e\u5024\u3092\u7121\u8996\u3057\u3001\u5171\u8a55\u4fa1\u306e\u6709\u7121\u306e\u307f\u306b\u6ce8\u76ee\u3059\u308b\u3068\u60c5\u5831\u3092\u5927\u91cf\u306b\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308b","title":"\u53e4\u3044\u6307\u6a19\u306e\u554f\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/","text":"\u5b66\u7fd2\u30d9\u30fc\u30b9\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u6d3b\u7528\u4e8b\u4f8b \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u4e0b\u8abf\u3079\u3092\u517c\u306d\u305f\u6d3b\u7528\u4e8b\u4f8b\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\u3084\u3063\u3071\u30cd\u30c8\u30d5\u30ea\u3063\u3066\u795e\u3060\u308f\u3002 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u7a2e\u985e \u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3042\u308a / \u306a\u3057 \u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3059\u308b\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u30fb\u30a2\u30a4\u30c6\u30e0\u30b8\u30e3\u30f3\u30eb\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u306e2\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3092\u4e3b\u306b\u4f7f\u7528\u3059\u308b \u6700\u521d\u306f\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u304b\u3089\u306e\u63a8\u85a6\u3001\u30c7\u30fc\u30bf\u304c\u305f\u307e\u308b\u3068\u884c\u52d5\u5c65\u6b74\u304b\u3089\u306e\u63a8\u85a6 \u5f8c\u8005\u306e\u65b9\u304c\u55dc\u597d\u304c\u53cd\u6620\u3055\u308c\u3084\u3059\u3044\u50be\u5411 \u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u30fb\u65b0\u7740\u9806 \u5229\u70b9 \u5b9f\u88c5\u30b3\u30b9\u30c8\u306e\u4f4e\u3055\u306b\u5bfe\u3057\u3001\u52b9\u679c\u304c\u9ad8\u3044 \u30a2\u30a4\u30c6\u30e0\u306e\u5165\u308c\u66ff\u308f\u308a\u304c\u6fc0\u3057\u3044\u5834\u5408\u306b\u6709\u52b9 \u6b20\u70b9 \u30a2\u30a4\u30c6\u30e0\u306e\u6d41\u52d5\u6027\u304c\u7121\u3044\u5834\u5408\u306f\u3001\u540c\u3058\u3088\u3046\u306a\u30a2\u30a4\u30c6\u30e0\u304c\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3046 \u2192\u305d\u306e\u5834\u5408\u306f\u3001\u6025\u4e0a\u6607\u30e9\u30f3\u30ad\u30f3\u30b0\u306a\u3069\u3067\u5bfe\u5fdc\u3059\u308b\uff1f \u696d\u7a2e \u307b\u307c\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9 \u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u5c65\u6b74\u306e\u8868\u793a \u5229\u70b9 \u5b9f\u88c5\u30b3\u30b9\u30c8\u306e\u4f4e\u3055\u306b\u5bfe\u3057\u3001\u52b9\u679c\u304c\u9ad8\u3044 \u4e00\u5ea6\u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u3057\u305f\u3082\u306e\u3092\u518d\u5ea6\u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u5834\u5408\u306b\u6709\u52b9 \u6b20\u70b9 \u8cfc\u8cb7\u983b\u5ea6\u304c\u4f4e\u3044\u3082\u306e\uff08\u5bb6\u96fb\u7b49\uff09\u3067\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044 \u6d88\u8017\u54c1\u306a\u3069\u306f\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8868\u793a\u3057\u306a\u3044\u3068\u52b9\u679c\u304c\u8584\u3044 \u696d\u7a2e \u52d5\u753b\u3001\u97f3\u697d\u30b5\u30a4\u30c8 \u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306e\u8868\u793a \u5229\u70b9 \u30e6\u30fc\u30b6\u30fc\u306e\u56de\u904a\u3092\u5897\u52a0\u3055\u305b\u3001\u6b32\u3057\u3044\u30a2\u30a4\u30c6\u30e0\u306b\u51fa\u4f1a\u3044\u3084\u3059\u304f\u3055\u305b\u308b \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\u6587\u30fb\u30ab\u30c6\u30b4\u30ea\u60c5\u5831\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\uff0b\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u3082\u3068\u306b\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b \u524d\u8005\u306e\u60c5\u5831\u3088\u308a\u5f8c\u8005\u306e\u60c5\u5831\u3092\u7528\u3044\u305f\u65b9\u304c\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u96f0\u56f2\u6c17\u3084\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u6349\u3048\u3084\u3059\u3044 \u6b20\u70b9 1\u500b\u3042\u308c\u3070\u5341\u5206\u306a\u5546\u54c1\u306e\u5834\u5408\u3001\u8cfc\u8cb7\u5f8c\u306e\u8868\u793a\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044 \u30af\u30ea\u30c3\u30af\u7387\u306e\u307f\u306b\u7126\u70b9\u3092\u7f6e\u304f\u3068\u3001\u9762\u767d\u3044\u5546\u54c1\u3084\u73cd\u3057\u3044\u5546\u54c1\u306a\u3069\u3001\u8cfc\u8cb7\u306b\u3064\u306a\u304c\u3089\u306a\u3044\u30ce\u30a4\u30b8\u30fc\u306a\u5c65\u6b74\u3092\u5897\u3084\u3057\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308b \u696d\u7a2e EC\u30b5\u30a4\u30c8 \u30e6\u30fc\u30b6\u30fc\u3078\u76f4\u63a5\u63a8\u85a6 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3084\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u304b\u3089\u63a8\u85a6\u3059\u308b \u6700\u5f8c\u306b\u898b\u305f/\u8cfc\u5165\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3068\u985e\u4f3c\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u304c\u591a\u3044 \u4e0a\u306e\u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306e\u8868\u793a\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u4f7f\u7528\u3067\u304d\u308b \u4ed6\u793e\u306e\u4e8b\u4f8b Netflix \u8996\u8074\u3055\u308c\u308b\u4f5c\u54c1\u306f\u300180%\u4ee5\u4e0a\u304c\u63a8\u85a6\u7d4c\u7531 \u5143\u3005\u306f\u30aa\u30f3\u30e9\u30a4\u30f3DVD\u30ec\u30f3\u30bf\u30eb\u4f1a\u793e \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u4f7f\u3046\u60c5\u5831 \u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff085\u6bb5\u968e\uff09\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff082\u6bb5\u968e\uff09 \u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\uff08\u30b8\u30e3\u30f3\u30eb\u30fb\u51fa\u6f14\u8005\u30fb\u76e3\u7763\u7b49\uff09 \uff0b \u5b9f\u88c5\u306f\u697d\u3060\u3063\u305f \u30fc \u63a8\u85a6\u306b\u7d0d\u5f97\u611f\u304c\u7121\u3044\uff08\u59a5\u5f53\u3067\u306f\u306a\u304b\u3063\u305f\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u3069\u306e\u4f5c\u54c1\u3068\u3069\u306e\u4f5c\u54c1\u3092\u30ec\u30f3\u30bf\u30eb\u3057\u305f\u304b\uff09 \uff0b \u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3088\u308a\u826f\u3044\u6027\u80fd \u30fc \u5b9f\u969b\u306e\u63a8\u85a6\u306e\u826f\u3055\u304c\u628a\u63e1\u3067\u304d\u306a\u3044 \u300c\u501f\u308a\u305f\u304c\u30cf\u30ba\u30ec\u300d\u3060\u3063\u305f\u6642\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff085\u6bb5\u968e\uff09 \uff0b \u4f5c\u54c1\u306e\u597d\u307f\u3092\u53cd\u6620\u3057\u305f\u63a8\u85a6\u304c\u3067\u304d\u308b \u30fc \uff08\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u65b9\u6cd5\u306b\u306f\u500b\u4eba\u306e\u504f\u308a\u304c\u3042\u308b\uff09 \u30fc \uff08\u30b7\u30b9\u30c6\u30e0\u306b\u843d\u3068\u3057\u8fbc\u307f\u306b\u304f\u3044\u30fb\u56de\u5e30\u3067\u89e3\u304f\uff1f\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff082\u6bb5\u968e\uff09 \uff0b \u4f5c\u54c1\u306e\u597d\u307f\u3092\u53cd\u6620\u3057\u305f\u63a8\u85a6 \uff0b \u300cXX%\u3067\u6c17\u306b\u5165\u308b\u300d\u3068\u8868\u793a\u3057\u3084\u3059\u3044 \uff0b \u30b7\u30b9\u30c6\u30e0\u306b\u843d\u3068\u3057\u8fbc\u307f\u3084\u3059\u3044 \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f7f\u7528\u2192\u4f1a\u54e1\u767b\u9332\u6642\u306b\u597d\u304d\u306a\u4f5c\u54c1\u3092\u8907\u6570\u9078\u629e\u3059\u308b\uff0b\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f7f\u7528 \u8868\u793a\u65b9\u6cd5 \u884c\u65b9\u5411\u306b\u63a8\u85a6\u306e\u67a0\u7d44\u307f\uff08\u65b0\u7740\u3001\u30b8\u30e3\u30f3\u30eb\u3001\u4eba\u6c17\u4f5c\u7b49\uff09\u3001\u5217\u65b9\u5411\u306b\u63a8\u85a6\u306e\u9806\u4f4d\u3067\u8868\u793a \u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u54c1\u3092\u63a2\u7d22\u3057\u3084\u3059\u304f\u306a\u308b \u7e26\u65b9\u5411\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u8208\u5473\u306e\u3042\u308b\u30b8\u30e3\u30f3\u30eb\u3092\u63a2\u3057\u3001\u6a2a\u65b9\u5411\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u8208\u5473\u306e\u3042\u308b\u4f5c\u54c1\u3092\u898b\u3064\u3051\u308b \u4ee5\u524d\u898b\u305f\u4f5c\u54c1\u3084\u65e2\u306b\u4ed8\u3051\u305f\u8a55\u4fa1\u306b\u3088\u308a\u3001\u63a8\u85a6\u5185\u5bb9\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b \u305d\u306e\u4ed6 \u30c8\u30ec\u30f3\u30c9 Deep Learning Causality Bandits & Reinforcement Learning Fairness Experience personalization Deep Learning 2017\u5e74\u304f\u3089\u3044\u304b\u3089\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3067\u3082\u666e\u53ca \u5f93\u6765\u306f\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084\u3001\u884c\u5217\u5206\u89e3\uff08MF\uff09 User\u306e\u60c5\u5831\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u884c\u5217\u3092Deep\u306b\u5165\u308c\u308b\u3060\u3051\u3067\u306f\u5e38\u306b\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304c\u3001\u4e0a\u624b\u304f\u3084\u308c\u3070\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\uff08\u9077\u79fb\u60c5\u5831\uff09\u3092\u4f7f\u3046 \u5927\u91cf\u306e\u60c5\u5831\u3092\u4f7f\u3046 \u96e2\u6563\u6642\u9593\u60c5\u5831\uff08\u66dc\u65e5\u3001\u65e5\u6642\u3054\u3068\u306e\u5c65\u6b74\uff09\uff0b\u9023\u7d9a\u6642\u9593\u60c5\u5831\uff08\u76f4\u8fd1\u306e\u884c\u52d5\u5c65\u6b74\uff09\u306a\u3069\u3046\u307e\u304f\u8a2d\u8a08\u3059\u308b\u3068\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u305f Causality \u300c\u9762\u767d\u305d\u3046\u3060\u304b\u3089\u898b\u305f\u300d\u306e\u304b\u300c\u63a8\u85a6\u3057\u305f\u304b\u3089\u898b\u305f\u300d\u306e\u304b Debiasing Recommendations Bandits & Reinforcement Learning \u65b0\u3057\u3044\u3082\u306e\u3078\u306e\u95a2\u5fc3\u306f\u4e0d\u78ba\u5b9f\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u50be\u5411\u306f\u5909\u308f\u308b\u305f\u3081\u3001\u63a8\u85a6\u306f\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u8a73\u3057\u3044\u8a2d\u8a08\u306f Slide 36P~ Fairness \u504f\u3063\u305f\u30b8\u30e3\u30f3\u30eb\u306e\u63a8\u85a6\u3070\u304b\u308a\u3057\u3066\u3044\u306a\u3044\u304b\uff1f \u30b8\u30e3\u30f3\u30eb\u6bce\u306b\u91cd\u307f\u4ed8\u3051\u306e\u4fc2\u6570\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306a\u30b8\u30e3\u30f3\u30eb\u3092\u63a8\u85a6\u3067\u304d\u308b Experience personalization \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30ec\u30d9\u30eb\u3001UX\u30ec\u30d9\u30eb\u3001\u884c\u52d5\u30ec\u30d9\u30eb \u8cc7\u6599 https://note.com/masa_kazama/n/n0f70dcc0989e https://netflixtechblog.com/learning-a-personalized-homepage-aa8ec670359a https://www.slideshare.net/justinbasilico/recent-trends-in-personalization-a-netflix-perspective Airbnb \u5bbf\u6cca\u30fb\u6c11\u6cca\u65bd\u8a2d\u306e\u30b5\u30fc\u30d3\u30b9 \u4ee5\u4e0b\u306f2019\u5e742\u6708\u306e\u8a18\u4e8b \u30b9\u30c6\u30a4\u3059\u308b\u5bbf\u6cca\u30d7\u30e9\u30f3\u3068\u30b9\u30c6\u30a4\u5148\u3067\u306e\u4f53\u9a13\u30d7\u30e9\u30f3\u306e2\u6bb5\u968e\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e2\u30c7\u30eb\uff08\u5c0e\u5165\u304b\u3089\u73fe\u5728\u307e\u3067\u306e3\u6bb5\u968e\uff09 \u30c7\u30fc\u30bf\u91cf\u306b\u5fdc\u3058\u3066\u30e2\u30c7\u30eb\u306e\u8907\u96d1\u5ea6\u3092\u5909\u3048\u308b 1. \u5c0e\u5165\u30e2\u30c7\u30eb\uff08\u5f37\u529b\u306a\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\uff09 \u63a8\u85a6\u3059\u308b\u5019\u88dc\u306f\u5c11\u306a\u304f\u3001\u30c7\u30fc\u30bf\u306f\u96c6\u3081\u59cb\u3081\u305f\u3070\u304b\u308a \u30c7\u30fc\u30bf\u53ce\u96c6 \u6bce\u65e5\u30e9\u30f3\u30c0\u30e0\u306b\u30e9\u30f3\u30af\u4ed8\u3051\u3092\u884c\u3044\u3001\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u308b \u5019\u88dc\u3092\u30e9\u30f3\u30ad\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u4e88\u7d04\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30b0\u3092\u96c6\u3081\u308b \u30e9\u30d9\u30ea\u30f3\u30b0 \u4e88\u7d04\u3055\u308c\u305f\uff08\u30dd\u30b8\u30c6\u30a3\u30d6\uff09\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304c\u4e88\u7d04\u3055\u308c\u306a\u304b\u3063\u305f\uff08\u30cd\u30ac\u30c6\u30a3\u30d6\uff09\u306e50,000\u4f8b\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u53ce\u96c6 \u7279\u5fb4\u91cf 25\u6b21\u5143\u3001\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u8a73\u7d30\u30fb\u30c7\u30fc\u30bf\u3001\u30ec\u30d3\u30e5\u30fc\u3001\u4e88\u7d04\u6570\u3001\u30af\u30ea\u30c3\u30af\u30b9\u30eb\u30fc\u7387\u7b49 \u30b5\u30fc\u30d3\u30b9\u304c\u6025\u9032\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u500b\u6570\u3067\u306f\u306a\u304f\u6bd4\u7387\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u30e2\u30c7\u30eb\u306e\u7834\u7dbb\u3092\u9632\u3050 \u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u60c5\u5831\u2192\u4e88\u6e2c\u306a\u306e\u3067\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u540c\u4e00\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u63d0\u4f9b\u3059\u308b\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u691c\u7d22\u57fa\u6e96\u3092\u8a2d\u5b9a\u3057\u3066\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b/\u30e9\u30f3\u30ad\u30f3\u30b0\u306f\u6bce\u65e5\u66f4\u65b0\uff09 \u30e2\u30c7\u30eb GBDT\u306e2\u5024\u5206\u985e \u5909\u6570\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u4e0d\u8981\u3067\u3001\u6b20\u640d\u5024\u3092\u305d\u306e\u307e\u307e\u6271\u3048\u308b \u8a55\u4fa1 \u30e2\u30c7\u30eb\u306e\u30b9\u30b3\u30a2\u306b\u5fdc\u3058\u3066\u30e9\u30f3\u30ad\u30f3\u30b0\u4ed8\u3051\u3092\u884c\u3044\u3001AUC\u3068nDCG\u3067\u8a55\u4fa1 \u30e2\u30c7\u30eb\u5206\u6790 1\u3064\u306e\u7279\u5fb4\u91cf\u4ee5\u5916\u306e\u5168\u3066\u306e\u5024\u3092\u56fa\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001\u30b9\u30b3\u30a2\u4ed8\u3051\u304c\u3069\u3046\u306a\u308b\u304b\u89b3\u5bdf\u3059\u308b \uff08\u30b7\u30e3\u30fc\u30d7\u30ec\u30a4\u5024\u306b\u3088\u308b\u7279\u5fb4\u91cf\u306e\u5bc4\u4e0e\u5ea6\u8a08\u7b97\uff1f\uff09 \u691c\u8a3c A/B\u30c6\u30b9\u30c8\u3067\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u30e9\u30f3\u30c0\u30e0\u30e9\u30f3\u30ad\u30f3\u30b0\u3068\u6bd4\u8f03 \u4e88\u7d04\u6570\u3092+13% 2. \u500b\u4eba\u5316\u30e2\u30c7\u30eb \u30e6\u30fc\u30b6\u30fc\u306e\u95a2\u5fc3\u3092\u7d20\u65e9\u304f\u6349\u3048\u3001\u691c\u7d22\u7d50\u679c\u306e\u4e0a\u4f4d\u306b\u9069\u5207\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19 2\u3064\u306e\u7570\u306a\u308b\u30bf\u30a4\u30d7\u306e\u500b\u4eba\u5316 \u4e88\u7d04\u3055\u308c\u305f\u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u60c5\u5831 \u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u4e88\u7d04\u2192\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u4e88\u7d04\u306a\u306e\u3067\u3001\u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u60c5\u5831\u306f\u4f7f\u3048\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u30af\u30ea\u30c3\u30af\u60c5\u5831 \u904e\u53bb15\u65e5\u9593\u306e\u7279\u5b9a\u306e\u30ab\u30c6\u30b4\u30ea\u3078\u306e\u8208\u5473\u5ea6\u5408\u3044\uff08\u30af\u30ea\u30c3\u30af\u7387\u30fb\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30d7\u30e9\u30f3\u304c\u6301\u3064\u30ab\u30c6\u30b4\u30ea\u306e\u52a0\u91cd\u548c\u30fb\u6700\u5f8c\u306b\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u304b\u3089\u306e\u7d4c\u904e\u65e5\u6570\u306a\u3069\uff09 \u30e6\u30fc\u30b6\u30fc\u304c\u5229\u7528\u53ef\u80fd\u306a\u6642\u9593\u5e2f\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u30af\u30ea\u30c3\u30af\u3057\u305f\u30d7\u30e9\u30f3\u306e\u6642\u9593\u5e2f\u306e\u5272\u5408\uff09 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2 250k\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u300150\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u7528\u7279\u5fb4\u91cf Leakage\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f \u6642\u7cfb\u5217\u3092\u5b88\u3063\u305f\u7279\u5fb4\u91cf 1\u3064\u306e\u30d7\u30e9\u30f3\u3057\u304b\u898b\u3066\u3044\u306a\u3044\uff08\uff1d\u305d\u306e\u30d7\u30e9\u30f3\u3092\u4e88\u7d04\u3057\u305f\u78ba\u7387\u304c\u9ad8\u3044\uff09\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u306a\u3044 \u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u306e\u305f\u3081\u306e\u500b\u5225\u5316\u6a5f\u80fd\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3068\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3059\u308b\u500b\u5225\u5316\u3057\u306a\u3044\u30e2\u30c7\u30eb\u306e2\u3064\u306e\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b \u500b\u5225\u5316\u6a5f\u80fd\u306f\u7279\u5fb4\u91cf\u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001\u30c7\u30fc\u30bf\u304c\u306a\u3044\u3068\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8 stage 1 v.s. stage 2\u3067A/B\u30c6\u30b9\u30c8 +7.9%\u306e\u6539\u5584 \u5b9f\u88c5\u306e\u8a73\u7d30 UserID\u3092\u30ad\u30fc\u3068\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306fUserID:=0\u3068\u3059\u308b \u5168\u3066\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u6bce\u65e5\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u8a08\u7b97\u3059\u308b\u304c\u3001\u5168\u30e6\u30fc\u30b6\u30fc\u306f\u91cd\u3044\u306e\u3067\u6700\u3082\u30a2\u30af\u30c6\u30a3\u30d6\u306a100\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u9650\u5b9a \u6700\u5927\u30671\u65e5\u7a0b\u5ea6\u306e\u9045\u308c Stage3\u306b\u79fb\u884c\u3059\u308b\u305f\u3081\u306e\u500b\u4eba\u5316\u3057\u305f\u30e2\u30c7\u30eb\u306e\u30b2\u30a4\u30f3\u3092\u6e2c\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u3060\u3063\u305f 3. \u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30b3\u30a2\u4ed8\u3051 \u7279\u5fb4\u91cf \u4eca\u307e\u3067\u306e\u306b\u52a0\u3048\u3001\u691c\u7d22\u3057\u305f\u30d7\u30e9\u30f3\u306e\u8a2d\u5b9a\uff08\u30af\u30a8\u30ea\u6a5f\u80fd\u306e\u60c5\u5831\uff09\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u60c5\u5831\uff08\u8a00\u8a9e\u30fb\u56fd\uff09\u306a\u3069\u3082\u4f7f\u7528\u3057\u3066\u30b9\u30b3\u30a2\u4ed8\u3051 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 200\u4e07\u4ef6\u4ee5\u4e0a\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u305f\u30c7\u30fc\u30bf 90\u306e\u7279\u5fb4\u91cf 2\u3064\u306eGBDT\u30e2\u30c7\u30eb \u4f53\u9a13\u30d7\u30e9\u30f3\u7279\u5fb4\u91cf\u3001\u30af\u30a8\u30ea\u6a5f\u80fd\u7279\u5fb4\u91cf\u3001\u30e6\u30fc\u30b6\u30fc\u7279\u5fb4\u91cf\u306e3\u3064\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30e2\u30c7\u30eb \u4f53\u9a13\u30d7\u30e9\u30f3\u7279\u5fb4\u91cf\u3001\u30af\u30a8\u30ea\u6a5f\u80fd\u7279\u5fb4\u91cf\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30e2\u30c7\u30eb \u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30b3\u30a2\u4ed8\u3051\u30e2\u30c7\u30eb\u306e\u5229\u70b9 \u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u4e8b\u524d\u306b\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u591a\u304f\u306e\u7528\u9014\u3067\u63a8\u85a6\u3067\u304d\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8 stage 2 v.s. stage 3\u306eA/B\u30c6\u30b9\u30c8\u3067+5.1% \u5b9f\u88c5\u306e\u8a73\u7d30 \u4ee5\u4e0b\u306e3\u3064\u306e\u30a4\u30f3\u30d5\u30e9\u304b\u3089\u306a\u308b \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u5404\u6240\u304b\u3089\u30e2\u30c7\u30eb\u306e\u5165\u529b\u3092\u5f97\u308b \u30e2\u30c7\u30eb\u3092\u672c\u756a\u306b\u5c55\u958b\u3059\u308b \u30e2\u30c7\u30eb\u306e\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3046 \u5404\u30a4\u30f3\u30d5\u30e9\u6bce\u306b\u7279\u5fb4\u91cf\u306e\u4fdd\u7ba1\u65b9\u6cd5\u3092\u5909\u3048\u3066\u3044\u305f 4. \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306e\u4f7f\u7528 \u30b5\u30fc\u30d3\u30b9\u306e\u8cea\u3092\u9ad8\u3081\u308b \u76ee\u7684\u95a2\u6570\u3092(+1=\u4e88\u7d04\u3001-1=\u30af\u30ea\u30c3\u30af\u3057\u305f\u304c\u4e88\u7d04\u305b\u305a)\u304b\u3089\u3001(\u4f4e\u8a55\u4fa1\uff1d\u4f4e\u3044\u30b9\u30b3\u30a2\u3001\u9ad8\u8a55\u4fa1\uff1d\u9ad8\u3044\u30b9\u30b3\u30a2)\u3067\u91cd\u307f\u4ed8\u3051\u3092\u5b66\u7fd2 A/B\u30c6\u30b9\u30c8\u3092\u884c\u3044\u3001\u4e88\u7d04\u306e\u8cea\u306e\u5411\u4e0a\u3092\u78ba\u8a8d \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u3092\u767a\u898b\u3057\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u3067\u63a8\u85a6 Top 8\u306e\u7d50\u679c\u5185\u3067\u591a\u69d8\u6027\u3092\u5f37\u5316 \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u6642\u306b\u6709\u52b9 \u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u8a2a\u308c\u305f\u304c\u691c\u7d22\u3057\u306a\u304b\u3063\u305f\u5834\u5408 \u5225\u306e\u76ee\u7684\u304c\u3042\u308b\u3068\u8003\u3048\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u30b9\u30b3\u30a2Top18\u9078\u51fa\u3001Click\u7387\u3067\u518d\u30e9\u30f3\u30ad\u30f3\u30b0\u3057\u305f\u3089\u6709\u52b9\u3060\u3063\u305f \u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u76e3\u8996\u3068\u8aac\u660e \u30e9\u30f3\u30ad\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u822c\u7684\u306a\u50be\u5411\u3092\u8ffd\u8de1\u3057\u3001\u305d\u308c\u304c\u671b\u307e\u3057\u3044\u50be\u5411\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b \u5b89\u3044\u30d7\u30e9\u30f3\uff1d\u512a\u308c\u305f\u30d7\u30e9\u30f3\u3067\u306f\u306a\u3044\u304c\u3001\u5b89\u3044\u30d7\u30e9\u30f3\u304c\u63a8\u85a6\u3055\u308c\u3084\u3059\u304b\u3063\u305f \u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u300c\u5024\u6bb5\u300d\u306f\u30e2\u30c7\u30eb\u304b\u3089\u524a\u9664\u3057\u305f\u304c\u3001\u554f\u984c\u306f\u306a\u304b\u3063\u305f \u5e02\u5834\u306b\u304a\u3051\u308b\u3042\u308b\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u9806\u4f4d\u3068\u3001ML\u30e2\u30c7\u30eb\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u7279\u5fb4\u91cf\u306e\u8ffd\u8de1 \u7279\u5b9a\u306e\u30b0\u30eb\u30fc\u30d7\uff08\u661f5\u306e\u4f53\u9a13\u30d7\u30e9\u30f3\u306a\u3069\uff09\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u50be\u5411 \u30de\u30fc\u30b1\u30c3\u30c8\u30de\u30cd\u30b8\u30e3\u30fc\u304c\u30db\u30b9\u30c8\u306b\u9069\u5207\u306a\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u9001\u308b\u306e\u306b\u7279\u306b\u6709\u7528 \u65e2\u5b58\u306e\u8ab2\u984c \u640d\u5931\u95a2\u6570 \u30da\u30a2\u30ef\u30a4\u30ba\u640d\u5931 \u30e9\u30d9\u30eb\u4ed8\u3051 0 or 1\u3067\u306f\u306a\u304f\u3001\u30b9\u30b3\u30a2\u95a2\u6570\u306b\u57fa\u3065\u3044\u305f\u56de\u5e30 \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb 1\u65e5\u5358\u4f4d\u3067\u306f\u306a\u304f\u5206\u5358\u4f4d\u306e\u5c65\u6b74\u306a\u3069 \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306b\u5b58\u5728\u3059\u308b\u30dd\u30b8\u30b7\u30e7\u30cb\u30f3\u30b0\u30d0\u30a4\u30a2\u30b9\u3078\u306e\u5bfe\u5fdc GBDT\u3092\u8d85\u3048\u308b\u69d8\u3005\u306a\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8 \u30b5\u30de\u30ea\u30fc \u53c2\u8003\u8cc7\u6599 https://medium.com/airbnb-engineering/machine-learning-powered-search-ranking-of-airbnb-experiences-110b4b1a0789 Gunosy \u7279\u306b\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u306b\u3064\u3044\u3066\u306e\u8a71 \u65b0\u7740\u8a18\u4e8b\u306f1\u65e510,000\u4ee5\u4e0a \u5927\u91cf\u306e\u8a18\u4e8b\uff0b\u884c\u52d5\u30ed\u30b0\u304b\u3089\u9ad8\u901f\u304b\u3064\u5b89\u5b9a\u3057\u305f\u63a8\u85a6\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b\uff08\u30cb\u30e5\u30fc\u30b9\u7279\u6709\uff09 \u30cb\u30e5\u30fc\u30b9\u306e\u4fa1\u5024\u304c\u6642\u9593\u306b\u3088\u308a\u6e1b\u8870\u3059\u308b \u884c\u52d5\u30ed\u30b0\u304c\u6e9c\u307e\u308b\u9803\u306b\u306f\u30cb\u30e5\u30fc\u30b9\u306e\u4fa1\u5024\u304c\u4f4e\u3044 \u30e6\u30fc\u30b6\u30fc\u306e\u8208\u5473\u306e\u5909\u5316\u30b5\u30a4\u30af\u30eb\u304c\u65e9\u3044 \u8a00\u8449\u306e\u4e00\u81f4\u5ea6\u306e\u307f\u3067\u306f\u8cea\u304c\u62c5\u4fdd\u3055\u308c\u306a\u3044 XX\u3055\u3093\u304c\u6b7b\u53bb\u3001XX\u770c\u3067\u5730\u9707\u3001XX\u3067YY\u304c\u52dd\u5229 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e2\u30c7\u30eb\uff08\u72ec\u81ea\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\uff09 \u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u2192\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306bEmbedding \u76f4\u8fd1\u3067\u95b2\u89a7\u3057\u305f\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8bM\u4ef6\u306e\u30d9\u30af\u30c8\u30eb\u306e\u5e73\u5747\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u30d9\u30af\u30c8\u30eb \u65b0\u3057\u3044\u8a18\u4e8b\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u5ea6\u306b\u3001\u6700\u3082\u53e4\u3044\u8a18\u4e8b\u3092\u9664\u3044\u3066\u65b0\u3057\u3044\u8a18\u4e8b\u306e\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u3001\u5e73\u5747\u3092\u53d6\u308a\u76f4\u3059 \u30e6\u30fc\u30b6\u30fc\u306e\u30d9\u30af\u30c8\u30eb\u5468\u8fba\u3067\u306e\u5bc6\u5ea6\u306e\u9ad8\u3055\u3092\u30b9\u30b3\u30a2\u3068\u3057\u3066\u8a18\u4e8b\u3092\u30bd\u30fc\u30c8\u3057\u3066\u63a8\u85a6 \u3053\u3053\u3089\u8fba\u306f\u809d\u3067\u3042\u308a\u3001\u8a73\u7d30\u306a\u30b9\u30b3\u30a2\u4ed8\u3051\u306f\u79d8\u5bc6 \u30b9\u30b3\u30a2\u306f\u6642\u9593\u3067\u6e1b\u8870\u3059\u308b\u3088\u3046\u306b\u4fc2\u6570\u3092\u8a2d\u5b9a\u3059\u308b 1\u5ea6\u898b\u305f\u8a18\u4e8b\u306a\u3069\u3082\u6e1b\u8870\u3055\u305b\u308b \u65e2\u77e5\u306e\u554f\u984c \u52d5\u4f5c\u691c\u8a3c \u958b\u767a\u74b0\u5883\u3067\u306f\u30c7\u30fc\u30bf\u6570\u304c\u5c11\u306a\u3044 \u500b\u4eba\u5316\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30b9\u30c8\u306e\u7db2\u7f85\u6027\u306e\u691c\u8a3c\u304c\u56f0\u96e3 \u30aa\u30d5\u30e9\u30a4\u30f3\u5b9f\u9a13 \u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306eA/B\u30c6\u30b9\u30c8\u306f\u56f0\u96e3 \u30aa\u30f3\u30e9\u30a4\u30f3\u5b9f\u9a13\u3068\u5fc5\u305a\u3057\u3082\u4e00\u81f4\u3057\u306a\u3044 \u9077\u79fb\u306e\u6271\u3044 \u30af\u30ea\u30c3\u30af\u3067\u306e\u63a8\u85a6\u306b\u306a\u308a\u304c\u3061\u3060\u304c\u3001\u8a18\u4e8b\u306e\u95b2\u89a7\u306e\u63a8\u79fb\u306e\u63a8\u85a6\u3067\u3082\u3057\u305f\u3044 \u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u306a\u3069\u306e\u5b9f\u904b\u7528\u306b\u5de5\u592b\u304c\u5fc5\u8981 \u53c2\u8003\u8cc7\u6599 https://logmi.jp/tech/articles/304737 https://www.slideshare.net/shunsukekozawa5/gunosy-152302982 Instagram Facebook AI\u304c\u7d61\u3093\u3060\u30b7\u30b9\u30c6\u30e0 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e6\u30fc\u30b6\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u57cb\u3081\u8fbc\u307f \u30e6\u30fc\u30b6\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u6c17\u306b\u5165\u3063\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3092\u7528\u3044\u3001Word2vec\u306e\u3088\u3046\u306b\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092Embedding\u306b\u3059\u308b \u8ddd\u96e2\u306fCosine\u8ddd\u96e2\u307e\u305f\u306f\u30c9\u30c3\u30c8\u7a4d\u3067\u8a08\u7b97\u3059\u308b \u6700\u8fd1\u508d\u691c\u7d22\u306b\u306f\u3001Facebook\u304c\u958b\u767a\u3057\u305fFAISS\u3092\u7528\u3044\u308b \u3053\u306e\u57cb\u3081\u8fbc\u307f\u3092\u7528\u3044\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30c8\u30d4\u30c3\u30af\u96c6\u5408\u3092\u4e88\u6e2c\u3059\u308b\u5206\u985e\u5668\u3092\u8a13\u7df4\u3059\u308b \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u63d0\u793a\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7d5e\u308a\u8fbc\u3080 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306f\u3001\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u3092\u84b8\u7559\uff08\u8fd1\u4f3c\uff09\u3057\u305f\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3092\u7528\u3044\u308b nDCG\u306e\u640d\u5931\u3092\u6700\u9069\u5316\u3059\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3059\u308b \u5019\u88dc\u8005\u306e\u751f\u6210 \u30e6\u30fc\u30b6\u30fc\u304c\u3044\u3044\u306d\u3057\u305f\u308a\u3001\u4fdd\u5b58\u3057\u305f\u308a\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u57cb\u3081\u8fbc\u307f\u3092\u7528\u3044\u3066\u985e\u4f3c\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u898b\u3064\u3051\u3001\u305d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u6295\u7a3f\u30fb\u95a2\u4e0e\u3057\u305f\u30e1\u30c7\u30a3\u30a2\u3092\u898b\u3064\u3051\u308b \u4f55\u5343\u3082\u306e\u5bfe\u8c61\u3092\u7279\u5b9a\u3057\u3001500\u500b\u307e\u3067\u7d5e\u308a\u6b21\u306e\u6bb5\u968e\u3078\u9032\u3080 \u30e9\u30f3\u30ad\u30f3\u30b0\u5019\u88dc \u4ed6\u306e2\u3064\u306e\u30e2\u30c7\u30eb\u3092\u8fd1\u4f3c\u3057\u305f\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3067\u3001\u6700\u5c0f\u9650\u306e\u7279\u5fb4\u91cf\u3092\u7528\u3044\u3066500\u500b\u304b\u3089150\u500b\u307e\u3067\u7d5e\u308b \u5bc6\u306a\u7279\u5fb4\u91cf\u3092\u30d5\u30eb\u306b\u4f7f\u3063\u305f\u8efd\u91cf\u306eNN\u3067\u3001150\u500b\u304b\u308950\u500b\u306e\u5019\u88dc\u3092\u7d5e\u308b \u5168\u3066\u306e\u7279\u5fb4\u91cf\u3092\u7528\u3044\u305fNN\u306725\u500b\u307e\u3067\u5019\u88dc\u3092\u7d5e\u308b NN\u306f\u3044\u3044\u306d\u3059\u308b\u304b\u30fb\u4fdd\u5b58\u3059\u308b\u304b\u30fb\u8868\u793a\u3092\u6e1b\u3089\u3059\u304b\u306a\u3069\u306e\u80af\u5b9a\u7684\u30fb\u5426\u5b9a\u7684\u306a\u884c\u52d5\u3092\u4e88\u6e2c\u3057\u3001\u6700\u7d42\u7684\u306b\u91cd\u307f\u4ed8\u3051\u3057\u305f\u7dda\u5f62\u548c\u3067\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u5bfe\u3059\u308b\u30b7\u30b0\u30ca\u30eb\u306e\u91cd\u8981\u6027\u3092\u5224\u65ad\u3059\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u51fa\u3059 \u591a\u69d8\u6027\u3092\u5897\u3084\u3059\u305f\u3081\u306b\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30af\u30b9\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u305f \u540c\u3058\u4f5c\u8005\u304b\u3089\u306e\u6295\u7a3f\u306b\u306f\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u52a0\u3048\u30e9\u30f3\u30af\u3092\u4e0b\u3052\u308b \u540c\u3058\u4f5c\u8005\u304b\u3089\u306e\u6295\u7a3f\u304c\u8907\u6570\u6295\u7a3f\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b \u53c2\u8003\u8cc7\u6599 https://ai.facebook.com/blog/powered-by-ai-instagrams-explore-recommender-system/ Sportify \u97f3\u697d\u306f\u6620\u753b\u3088\u308a\u3082\u6570\u304c\u591a\u3044 \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u6642\u9593\u306f\u77ed\u3044 \u30ea\u30d7\u30ec\u30a4\u56de\u6570\u304c\u591a\u3044 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e2\u30c7\u30eb\uff08\u30de\u30eb\u30c1\u30a2\u30fc\u30e0\u30d0\u30f3\u30c7\u30a3\u30c3\u30c9\uff09 \u63a2\u7d22\u3068\u6d3b\u7528\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u308b\u30de\u30eb\u30c1\u30a2\u30fc\u30e0\u30d0\u30f3\u30c7\u30a3\u30c3\u30c9\u306e\u67a0\u7d44\u307f\u3092\u4f7f\u7528 \u6d3b\u7528\uff1a\u4ee5\u524d\u9078\u629e\u3057\u305f\u97f3\u697d\u3084PodCast\u306b\u57fa\u3065\u3044\u3066\u63a8\u85a6 \u304a\u6c17\u306b\u5165\u308a\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7279\u5b9a\u30fb\u914d\u4fe1 \u63a2\u7d22\uff1a\u672a\u77e5\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u5bfe\u3059\u308b\u4e0d\u78ba\u5b9f\u306a\u30e6\u30fc\u30b6\u30fc\u306e\u53cd\u5fdc\u3092\u660e\u3089\u304b\u306b\u3059\u308b A/B\u30c6\u30b9\u30c8\u3084\u7121\u4f5c\u70ba\u5316\u5b9f\u9a13\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5185\u3067\u8a13\u7df4\u3068\u63a8\u8ad6\u304c\u5b8c\u7d50\u3059\u308b \u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u30fb\u76e3\u8996 \u30e2\u30c7\u30eb\u30fbValidation\u7b49\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092TensorFlow\u3067\u4e00\u672c\u5316 Kubeflow\u3067\u30e2\u30c7\u30eb\u958b\u767a\u306e\u9ad8\u901f\u5316 \u7279\u5b9a\u306e\u95be\u5024\u3067\u30a2\u30e9\u30fc\u30c8 \u53c2\u8003\u8cc7\u6599 https://engineering.atspotify.com/2020/01/16/for-your-ears-only-personalizing-spotify-home-with-machine-learning/ Cookpad \u30ec\u30b7\u30d4\u63a8\u85a6\u3001\u30d7\u30c3\u30b7\u30e5\u914d\u4fe1\u3001\u30ec\u30b7\u30d4\u4f5c\u8005\u306e\u30d5\u30a9\u30ed\u30fc\u63a8\u85a6\u3001\u691c\u7d22\u30ad\u30fc\u30ef\u30fc\u30c9\u7b49 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\uff08\u958b\u767a\uff09\u306e\u5de5\u592b \u30d3\u30b8\u30cd\u30b9\u30e2\u30c7\u30eb\u306b\u5373\u3057\u305f\u63a8\u85a6KPI\u8a2d\u8a08 EC\u30b5\u30a4\u30c8\uff1a\u58f2\u308a\u4e0a\u3052\u3001\u8cfc\u5165\u8005\u6570\u3001\u5e83\u544a\u30b5\u30a4\u30c8\uff1a\u30a4\u30f3\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u3001\u30af\u30ea\u30c3\u30af\u7387\u7b49\u306e\u30b4\u30fc\u30eb\u8a2d\u8a08 Cookpad\u7279\u6709\u306e\u3053\u3068 \u65e2\u5b58\u30b7\u30b9\u30c6\u30e0\u306b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u306e\u96e3\u3057\u3055 \u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u30fb\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306e\u5bb9\u6613\u3055 \u5f71\u97ff\u304c\u5927\u304d\u3044\uff1d\u8ca0\u306e\u5f71\u97ff\u304c\u51fa\u305f\u6642\u7bc4\u56f2\u304c\u5927\u304d\u3044 \u53c2\u8003\u8cc7\u6599 https://logmi.jp/tech/articles/321731 Retty \u98f2\u98df\uff08\u53e3\u30b3\u30df\u30fb\u4e88\u7d04\u7b49\uff09\u306eWeb\u30fb\u30a2\u30d7\u30ea\u30b5\u30fc\u30d3\u30b9 \u64ec\u4f3c\u5e97\u8217\u3001\u4eba\u6c17\u5e97\u8217\u306e\u63a8\u85a6\u3001\u6709\u7528\u306a\u53e3\u30b3\u30df\u30fb\u5199\u771f\u306e\u62bd\u51fa \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e2\u30c7\u30eb\uff08\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f7f\u3044\u5206\u3051\uff09 \u4f3c\u3066\u3044\u308b\u304a\u5e97\u2192\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u4eba\u6c17\u306e\u304a\u5e97\u2192\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0 \u904e\u53bb\u306e\u50be\u5411\u304b\u3089\u2192\uff08\u30a2\u30a4\u30c6\u30e0\uff09\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30e9\u30f3\u30c0\u30e0\u63a8\u85a6\u2192\u8a55\u4fa1\u7528\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u5272\u5408\u3067\u6df7\u305c\u308b \u63d0\u793a\u60c5\u5831 \u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u7406\u7531\u3092\u8868\u793a \u4e0d\u4fe1\u611f\u306e\u6392\u9664\uff08\u904b\u55b6\u90fd\u5408\u306e\u5e83\u544a\u3067\u306f\u306a\u3044\uff09 \u9b45\u529b\u306e\u8a34\u6c42\uff08\u30a2\u30d4\u30fc\u30eb\u30dd\u30a4\u30f3\u30c8\u3092\u308f\u304b\u308a\u3084\u3059\u304f\uff09 \u6bd4\u8f03\u8981\u7d20\u306e\u5c0e\u5165\uff08\u30a2\u30a4\u30c6\u30e0\u306e\u6bd4\u8f03\u3092\u3057\u3084\u3059\u304f\u3059\u308b\uff09 \u63a2\u7d22 \u30d0\u30f3\u30c7\u30a3\u30c3\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f7f\u7528 \u7d2f\u7a4d\u5831\u916c\u3092\u6700\u5927\u5316\u3057\u3064\u3064\u3001\u78ba\u7387\u7684\u306b\u30a2\u30a4\u30c6\u30e0\u3092\u63d0\u793a\u3059\u308b ElasticNet\u3067\u904e\u5270\u9069\u5408\u3092\u907f\u3051\u308b \u53c2\u8003\u8cc7\u6599 https://engineer.retty.me/entry/2018/12/18/103810 ZOZO \u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u3089\u308c\u305f\u753b\u50cf\u304b\u3089\u3001\u985e\u4f3c\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u30e2\u30c7\u30eb \u753b\u50cf\u2192\u7269\u4f53\u691c\u51fa\u2192512\u6b21\u5143\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u5316\u2192\u8fd1\u4f3c\u6700\u8fd1\u508d\u63a2\u7d22 \u53c2\u8003\u8cc7\u6599 https://techblog.zozo.com/entry/zozotown-item-recommend-infra-arch \u30e1\u30eb\u30ab\u30ea \u753b\u50cf\u691c\u7d22 \u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b \u753b\u50cf\u2192\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u5316\u2192\u8fd1\u4f3c\u6700\u8fd1\u508d\u63a2\u7d22 \u305d\u306e\u4ed6 BigQuery ML https://cloud.google.com/bigquery-ml/docs/bigqueryml-mf-implicit-tutorial Recommendation AI https://cloud.google.com/recommendations?hl=ja","title":"\u5b66\u7fd2\u30d9\u30fc\u30b9\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u6d3b\u7528\u4e8b\u4f8b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_1","text":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u4e0b\u8abf\u3079\u3092\u517c\u306d\u305f\u6d3b\u7528\u4e8b\u4f8b\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\u3084\u3063\u3071\u30cd\u30c8\u30d5\u30ea\u3063\u3066\u795e\u3060\u308f\u3002","title":"\u5b66\u7fd2\u30d9\u30fc\u30b9\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u6d3b\u7528\u4e8b\u4f8b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_2","text":"\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3042\u308a / \u306a\u3057 \u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3059\u308b\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u30fb\u30a2\u30a4\u30c6\u30e0\u30b8\u30e3\u30f3\u30eb\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u306e2\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3092\u4e3b\u306b\u4f7f\u7528\u3059\u308b \u6700\u521d\u306f\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u304b\u3089\u306e\u63a8\u85a6\u3001\u30c7\u30fc\u30bf\u304c\u305f\u307e\u308b\u3068\u884c\u52d5\u5c65\u6b74\u304b\u3089\u306e\u63a8\u85a6 \u5f8c\u8005\u306e\u65b9\u304c\u55dc\u597d\u304c\u53cd\u6620\u3055\u308c\u3084\u3059\u3044\u50be\u5411","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u7a2e\u985e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_3","text":"","title":"\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u30fb\u65b0\u7740\u9806"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_4","text":"\u5b9f\u88c5\u30b3\u30b9\u30c8\u306e\u4f4e\u3055\u306b\u5bfe\u3057\u3001\u52b9\u679c\u304c\u9ad8\u3044 \u30a2\u30a4\u30c6\u30e0\u306e\u5165\u308c\u66ff\u308f\u308a\u304c\u6fc0\u3057\u3044\u5834\u5408\u306b\u6709\u52b9","title":"\u5229\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_5","text":"\u30a2\u30a4\u30c6\u30e0\u306e\u6d41\u52d5\u6027\u304c\u7121\u3044\u5834\u5408\u306f\u3001\u540c\u3058\u3088\u3046\u306a\u30a2\u30a4\u30c6\u30e0\u304c\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3046 \u2192\u305d\u306e\u5834\u5408\u306f\u3001\u6025\u4e0a\u6607\u30e9\u30f3\u30ad\u30f3\u30b0\u306a\u3069\u3067\u5bfe\u5fdc\u3059\u308b\uff1f","title":"\u6b20\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_6","text":"\u307b\u307c\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9","title":"\u696d\u7a2e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_7","text":"","title":"\u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u5c65\u6b74\u306e\u8868\u793a"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_8","text":"\u5b9f\u88c5\u30b3\u30b9\u30c8\u306e\u4f4e\u3055\u306b\u5bfe\u3057\u3001\u52b9\u679c\u304c\u9ad8\u3044 \u4e00\u5ea6\u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u3057\u305f\u3082\u306e\u3092\u518d\u5ea6\u95b2\u89a7\uff08\u8cfc\u8cb7\uff09\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u5834\u5408\u306b\u6709\u52b9","title":"\u5229\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_9","text":"\u8cfc\u8cb7\u983b\u5ea6\u304c\u4f4e\u3044\u3082\u306e\uff08\u5bb6\u96fb\u7b49\uff09\u3067\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044 \u6d88\u8017\u54c1\u306a\u3069\u306f\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8868\u793a\u3057\u306a\u3044\u3068\u52b9\u679c\u304c\u8584\u3044","title":"\u6b20\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_10","text":"\u52d5\u753b\u3001\u97f3\u697d\u30b5\u30a4\u30c8","title":"\u696d\u7a2e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_11","text":"","title":"\u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306e\u8868\u793a"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_12","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u56de\u904a\u3092\u5897\u52a0\u3055\u305b\u3001\u6b32\u3057\u3044\u30a2\u30a4\u30c6\u30e0\u306b\u51fa\u4f1a\u3044\u3084\u3059\u304f\u3055\u305b\u308b \u30a2\u30a4\u30c6\u30e0\u306e\u8aac\u660e\u6587\u30fb\u30ab\u30c6\u30b4\u30ea\u60c5\u5831\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\uff0b\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3092\u3082\u3068\u306b\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3059\u308b \u524d\u8005\u306e\u60c5\u5831\u3088\u308a\u5f8c\u8005\u306e\u60c5\u5831\u3092\u7528\u3044\u305f\u65b9\u304c\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u96f0\u56f2\u6c17\u3084\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u6349\u3048\u3084\u3059\u3044","title":"\u5229\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_13","text":"1\u500b\u3042\u308c\u3070\u5341\u5206\u306a\u5546\u54c1\u306e\u5834\u5408\u3001\u8cfc\u8cb7\u5f8c\u306e\u8868\u793a\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044 \u30af\u30ea\u30c3\u30af\u7387\u306e\u307f\u306b\u7126\u70b9\u3092\u7f6e\u304f\u3068\u3001\u9762\u767d\u3044\u5546\u54c1\u3084\u73cd\u3057\u3044\u5546\u54c1\u306a\u3069\u3001\u8cfc\u8cb7\u306b\u3064\u306a\u304c\u3089\u306a\u3044\u30ce\u30a4\u30b8\u30fc\u306a\u5c65\u6b74\u3092\u5897\u3084\u3057\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308b","title":"\u6b20\u70b9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_14","text":"EC\u30b5\u30a4\u30c8","title":"\u696d\u7a2e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_15","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\u3084\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u304b\u3089\u63a8\u85a6\u3059\u308b \u6700\u5f8c\u306b\u898b\u305f/\u8cfc\u5165\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3068\u985e\u4f3c\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u304c\u591a\u3044 \u4e0a\u306e\u985e\u4f3c\u30a2\u30a4\u30c6\u30e0\u306e\u8868\u793a\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u4f7f\u7528\u3067\u304d\u308b","title":"\u30e6\u30fc\u30b6\u30fc\u3078\u76f4\u63a5\u63a8\u85a6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_16","text":"","title":"\u4ed6\u793e\u306e\u4e8b\u4f8b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#netflix","text":"\u8996\u8074\u3055\u308c\u308b\u4f5c\u54c1\u306f\u300180%\u4ee5\u4e0a\u304c\u63a8\u85a6\u7d4c\u7531 \u5143\u3005\u306f\u30aa\u30f3\u30e9\u30a4\u30f3DVD\u30ec\u30f3\u30bf\u30eb\u4f1a\u793e","title":"Netflix"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_17","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_18","text":"\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff085\u6bb5\u968e\uff09\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff082\u6bb5\u968e\uff09 \u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\uff08\u30b8\u30e3\u30f3\u30eb\u30fb\u51fa\u6f14\u8005\u30fb\u76e3\u7763\u7b49\uff09 \uff0b \u5b9f\u88c5\u306f\u697d\u3060\u3063\u305f \u30fc \u63a8\u85a6\u306b\u7d0d\u5f97\u611f\u304c\u7121\u3044\uff08\u59a5\u5f53\u3067\u306f\u306a\u304b\u3063\u305f\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u60c5\u5831\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u3069\u306e\u4f5c\u54c1\u3068\u3069\u306e\u4f5c\u54c1\u3092\u30ec\u30f3\u30bf\u30eb\u3057\u305f\u304b\uff09 \uff0b \u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3088\u308a\u826f\u3044\u6027\u80fd \u30fc \u5b9f\u969b\u306e\u63a8\u85a6\u306e\u826f\u3055\u304c\u628a\u63e1\u3067\u304d\u306a\u3044 \u300c\u501f\u308a\u305f\u304c\u30cf\u30ba\u30ec\u300d\u3060\u3063\u305f\u6642\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff085\u6bb5\u968e\uff09 \uff0b \u4f5c\u54c1\u306e\u597d\u307f\u3092\u53cd\u6620\u3057\u305f\u63a8\u85a6\u304c\u3067\u304d\u308b \u30fc \uff08\u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\u65b9\u6cd5\u306b\u306f\u500b\u4eba\u306e\u504f\u308a\u304c\u3042\u308b\uff09 \u30fc \uff08\u30b7\u30b9\u30c6\u30e0\u306b\u843d\u3068\u3057\u8fbc\u307f\u306b\u304f\u3044\u30fb\u56de\u5e30\u3067\u89e3\u304f\uff1f\uff09 \u30e6\u30fc\u30b6\u30fc\u306e\u8a55\u4fa1\uff082\u6bb5\u968e\uff09 \uff0b \u4f5c\u54c1\u306e\u597d\u307f\u3092\u53cd\u6620\u3057\u305f\u63a8\u85a6 \uff0b \u300cXX%\u3067\u6c17\u306b\u5165\u308b\u300d\u3068\u8868\u793a\u3057\u3084\u3059\u3044 \uff0b \u30b7\u30b9\u30c6\u30e0\u306b\u843d\u3068\u3057\u8fbc\u307f\u3084\u3059\u3044","title":"\u4f7f\u3046\u60c5\u5831"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_19","text":"\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f7f\u7528\u2192\u4f1a\u54e1\u767b\u9332\u6642\u306b\u597d\u304d\u306a\u4f5c\u54c1\u3092\u8907\u6570\u9078\u629e\u3059\u308b\uff0b\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u4f7f\u7528","title":"\u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_20","text":"\u884c\u65b9\u5411\u306b\u63a8\u85a6\u306e\u67a0\u7d44\u307f\uff08\u65b0\u7740\u3001\u30b8\u30e3\u30f3\u30eb\u3001\u4eba\u6c17\u4f5c\u7b49\uff09\u3001\u5217\u65b9\u5411\u306b\u63a8\u85a6\u306e\u9806\u4f4d\u3067\u8868\u793a \u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u54c1\u3092\u63a2\u7d22\u3057\u3084\u3059\u304f\u306a\u308b \u7e26\u65b9\u5411\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u8208\u5473\u306e\u3042\u308b\u30b8\u30e3\u30f3\u30eb\u3092\u63a2\u3057\u3001\u6a2a\u65b9\u5411\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u8208\u5473\u306e\u3042\u308b\u4f5c\u54c1\u3092\u898b\u3064\u3051\u308b \u4ee5\u524d\u898b\u305f\u4f5c\u54c1\u3084\u65e2\u306b\u4ed8\u3051\u305f\u8a55\u4fa1\u306b\u3088\u308a\u3001\u63a8\u85a6\u5185\u5bb9\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b","title":"\u8868\u793a\u65b9\u6cd5"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_21","text":"","title":"\u305d\u306e\u4ed6"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_22","text":"Deep Learning Causality Bandits & Reinforcement Learning Fairness Experience personalization","title":"\u30c8\u30ec\u30f3\u30c9"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#deep-learning","text":"2017\u5e74\u304f\u3089\u3044\u304b\u3089\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3067\u3082\u666e\u53ca \u5f93\u6765\u306f\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3084\u3001\u884c\u5217\u5206\u89e3\uff08MF\uff09 User\u306e\u60c5\u5831\u3068\u30a2\u30a4\u30c6\u30e0\u306e\u884c\u5217\u3092Deep\u306b\u5165\u308c\u308b\u3060\u3051\u3067\u306f\u5e38\u306b\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304c\u3001\u4e0a\u624b\u304f\u3084\u308c\u3070\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u884c\u52d5\u5c65\u6b74\uff08\u9077\u79fb\u60c5\u5831\uff09\u3092\u4f7f\u3046 \u5927\u91cf\u306e\u60c5\u5831\u3092\u4f7f\u3046 \u96e2\u6563\u6642\u9593\u60c5\u5831\uff08\u66dc\u65e5\u3001\u65e5\u6642\u3054\u3068\u306e\u5c65\u6b74\uff09\uff0b\u9023\u7d9a\u6642\u9593\u60c5\u5831\uff08\u76f4\u8fd1\u306e\u884c\u52d5\u5c65\u6b74\uff09\u306a\u3069\u3046\u307e\u304f\u8a2d\u8a08\u3059\u308b\u3068\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u305f","title":"Deep Learning"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#causality","text":"\u300c\u9762\u767d\u305d\u3046\u3060\u304b\u3089\u898b\u305f\u300d\u306e\u304b\u300c\u63a8\u85a6\u3057\u305f\u304b\u3089\u898b\u305f\u300d\u306e\u304b Debiasing Recommendations","title":"Causality"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#bandits-reinforcement-learning","text":"\u65b0\u3057\u3044\u3082\u306e\u3078\u306e\u95a2\u5fc3\u306f\u4e0d\u78ba\u5b9f\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u50be\u5411\u306f\u5909\u308f\u308b\u305f\u3081\u3001\u63a8\u85a6\u306f\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b \u8a73\u3057\u3044\u8a2d\u8a08\u306f Slide 36P~","title":"Bandits &amp; Reinforcement Learning"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#fairness","text":"\u504f\u3063\u305f\u30b8\u30e3\u30f3\u30eb\u306e\u63a8\u85a6\u3070\u304b\u308a\u3057\u3066\u3044\u306a\u3044\u304b\uff1f \u30b8\u30e3\u30f3\u30eb\u6bce\u306b\u91cd\u307f\u4ed8\u3051\u306e\u4fc2\u6570\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306a\u30b8\u30e3\u30f3\u30eb\u3092\u63a8\u85a6\u3067\u304d\u308b","title":"Fairness"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#experience-personalization","text":"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30ec\u30d9\u30eb\u3001UX\u30ec\u30d9\u30eb\u3001\u884c\u52d5\u30ec\u30d9\u30eb","title":"Experience personalization"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_23","text":"https://note.com/masa_kazama/n/n0f70dcc0989e https://netflixtechblog.com/learning-a-personalized-homepage-aa8ec670359a https://www.slideshare.net/justinbasilico/recent-trends-in-personalization-a-netflix-perspective","title":"\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#airbnb","text":"\u5bbf\u6cca\u30fb\u6c11\u6cca\u65bd\u8a2d\u306e\u30b5\u30fc\u30d3\u30b9 \u4ee5\u4e0b\u306f2019\u5e742\u6708\u306e\u8a18\u4e8b \u30b9\u30c6\u30a4\u3059\u308b\u5bbf\u6cca\u30d7\u30e9\u30f3\u3068\u30b9\u30c6\u30a4\u5148\u3067\u306e\u4f53\u9a13\u30d7\u30e9\u30f3\u306e2\u6bb5\u968e\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b","title":"Airbnb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_24","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#3","text":"\u30c7\u30fc\u30bf\u91cf\u306b\u5fdc\u3058\u3066\u30e2\u30c7\u30eb\u306e\u8907\u96d1\u5ea6\u3092\u5909\u3048\u308b","title":"\u30e2\u30c7\u30eb\uff08\u5c0e\u5165\u304b\u3089\u73fe\u5728\u307e\u3067\u306e3\u6bb5\u968e\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#1","text":"\u63a8\u85a6\u3059\u308b\u5019\u88dc\u306f\u5c11\u306a\u304f\u3001\u30c7\u30fc\u30bf\u306f\u96c6\u3081\u59cb\u3081\u305f\u3070\u304b\u308a \u30c7\u30fc\u30bf\u53ce\u96c6 \u6bce\u65e5\u30e9\u30f3\u30c0\u30e0\u306b\u30e9\u30f3\u30af\u4ed8\u3051\u3092\u884c\u3044\u3001\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u308b \u5019\u88dc\u3092\u30e9\u30f3\u30ad\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u4e88\u7d04\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30b0\u3092\u96c6\u3081\u308b \u30e9\u30d9\u30ea\u30f3\u30b0 \u4e88\u7d04\u3055\u308c\u305f\uff08\u30dd\u30b8\u30c6\u30a3\u30d6\uff09\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u304c\u4e88\u7d04\u3055\u308c\u306a\u304b\u3063\u305f\uff08\u30cd\u30ac\u30c6\u30a3\u30d6\uff09\u306e50,000\u4f8b\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u53ce\u96c6 \u7279\u5fb4\u91cf 25\u6b21\u5143\u3001\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u8a73\u7d30\u30fb\u30c7\u30fc\u30bf\u3001\u30ec\u30d3\u30e5\u30fc\u3001\u4e88\u7d04\u6570\u3001\u30af\u30ea\u30c3\u30af\u30b9\u30eb\u30fc\u7387\u7b49 \u30b5\u30fc\u30d3\u30b9\u304c\u6025\u9032\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u500b\u6570\u3067\u306f\u306a\u304f\u6bd4\u7387\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u30e2\u30c7\u30eb\u306e\u7834\u7dbb\u3092\u9632\u3050 \u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u60c5\u5831\u2192\u4e88\u6e2c\u306a\u306e\u3067\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u540c\u4e00\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u63d0\u4f9b\u3059\u308b\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u691c\u7d22\u57fa\u6e96\u3092\u8a2d\u5b9a\u3057\u3066\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b/\u30e9\u30f3\u30ad\u30f3\u30b0\u306f\u6bce\u65e5\u66f4\u65b0\uff09 \u30e2\u30c7\u30eb GBDT\u306e2\u5024\u5206\u985e \u5909\u6570\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u304c\u4e0d\u8981\u3067\u3001\u6b20\u640d\u5024\u3092\u305d\u306e\u307e\u307e\u6271\u3048\u308b \u8a55\u4fa1 \u30e2\u30c7\u30eb\u306e\u30b9\u30b3\u30a2\u306b\u5fdc\u3058\u3066\u30e9\u30f3\u30ad\u30f3\u30b0\u4ed8\u3051\u3092\u884c\u3044\u3001AUC\u3068nDCG\u3067\u8a55\u4fa1 \u30e2\u30c7\u30eb\u5206\u6790 1\u3064\u306e\u7279\u5fb4\u91cf\u4ee5\u5916\u306e\u5168\u3066\u306e\u5024\u3092\u56fa\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001\u30b9\u30b3\u30a2\u4ed8\u3051\u304c\u3069\u3046\u306a\u308b\u304b\u89b3\u5bdf\u3059\u308b \uff08\u30b7\u30e3\u30fc\u30d7\u30ec\u30a4\u5024\u306b\u3088\u308b\u7279\u5fb4\u91cf\u306e\u5bc4\u4e0e\u5ea6\u8a08\u7b97\uff1f\uff09 \u691c\u8a3c A/B\u30c6\u30b9\u30c8\u3067\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u30e9\u30f3\u30c0\u30e0\u30e9\u30f3\u30ad\u30f3\u30b0\u3068\u6bd4\u8f03 \u4e88\u7d04\u6570\u3092+13%","title":"1. \u5c0e\u5165\u30e2\u30c7\u30eb\uff08\u5f37\u529b\u306a\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#2","text":"\u30e6\u30fc\u30b6\u30fc\u306e\u95a2\u5fc3\u3092\u7d20\u65e9\u304f\u6349\u3048\u3001\u691c\u7d22\u7d50\u679c\u306e\u4e0a\u4f4d\u306b\u9069\u5207\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19 2\u3064\u306e\u7570\u306a\u308b\u30bf\u30a4\u30d7\u306e\u500b\u4eba\u5316 \u4e88\u7d04\u3055\u308c\u305f\u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u60c5\u5831 \u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u4e88\u7d04\u2192\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u4e88\u7d04\u306a\u306e\u3067\u3001\u5bbf\u6cca\u30d7\u30e9\u30f3\u306e\u60c5\u5831\u306f\u4f7f\u3048\u308b \u30e6\u30fc\u30b6\u30fc\u306e\u30af\u30ea\u30c3\u30af\u60c5\u5831 \u904e\u53bb15\u65e5\u9593\u306e\u7279\u5b9a\u306e\u30ab\u30c6\u30b4\u30ea\u3078\u306e\u8208\u5473\u5ea6\u5408\u3044\uff08\u30af\u30ea\u30c3\u30af\u7387\u30fb\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30d7\u30e9\u30f3\u304c\u6301\u3064\u30ab\u30c6\u30b4\u30ea\u306e\u52a0\u91cd\u548c\u30fb\u6700\u5f8c\u306b\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066\u304b\u3089\u306e\u7d4c\u904e\u65e5\u6570\u306a\u3069\uff09 \u30e6\u30fc\u30b6\u30fc\u304c\u5229\u7528\u53ef\u80fd\u306a\u6642\u9593\u5e2f\uff08\u30e6\u30fc\u30b6\u30fc\u304c\u30af\u30ea\u30c3\u30af\u3057\u305f\u30d7\u30e9\u30f3\u306e\u6642\u9593\u5e2f\u306e\u5272\u5408\uff09 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2 250k\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u300150\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u7528\u7279\u5fb4\u91cf Leakage\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f \u6642\u7cfb\u5217\u3092\u5b88\u3063\u305f\u7279\u5fb4\u91cf 1\u3064\u306e\u30d7\u30e9\u30f3\u3057\u304b\u898b\u3066\u3044\u306a\u3044\uff08\uff1d\u305d\u306e\u30d7\u30e9\u30f3\u3092\u4e88\u7d04\u3057\u305f\u78ba\u7387\u304c\u9ad8\u3044\uff09\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u306a\u3044 \u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u306e\u305f\u3081\u306e\u500b\u5225\u5316\u6a5f\u80fd\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3068\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3059\u308b\u500b\u5225\u5316\u3057\u306a\u3044\u30e2\u30c7\u30eb\u306e2\u3064\u306e\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b \u500b\u5225\u5316\u6a5f\u80fd\u306f\u7279\u5fb4\u91cf\u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001\u30c7\u30fc\u30bf\u304c\u306a\u3044\u3068\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8 stage 1 v.s. stage 2\u3067A/B\u30c6\u30b9\u30c8 +7.9%\u306e\u6539\u5584 \u5b9f\u88c5\u306e\u8a73\u7d30 UserID\u3092\u30ad\u30fc\u3068\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306fUserID:=0\u3068\u3059\u308b \u5168\u3066\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u6bce\u65e5\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u8a08\u7b97\u3059\u308b\u304c\u3001\u5168\u30e6\u30fc\u30b6\u30fc\u306f\u91cd\u3044\u306e\u3067\u6700\u3082\u30a2\u30af\u30c6\u30a3\u30d6\u306a100\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u9650\u5b9a \u6700\u5927\u30671\u65e5\u7a0b\u5ea6\u306e\u9045\u308c Stage3\u306b\u79fb\u884c\u3059\u308b\u305f\u3081\u306e\u500b\u4eba\u5316\u3057\u305f\u30e2\u30c7\u30eb\u306e\u30b2\u30a4\u30f3\u3092\u6e2c\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u3060\u3063\u305f","title":"2. \u500b\u4eba\u5316\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#3_1","text":"\u7279\u5fb4\u91cf \u4eca\u307e\u3067\u306e\u306b\u52a0\u3048\u3001\u691c\u7d22\u3057\u305f\u30d7\u30e9\u30f3\u306e\u8a2d\u5b9a\uff08\u30af\u30a8\u30ea\u6a5f\u80fd\u306e\u60c5\u5831\uff09\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u60c5\u5831\uff08\u8a00\u8a9e\u30fb\u56fd\uff09\u306a\u3069\u3082\u4f7f\u7528\u3057\u3066\u30b9\u30b3\u30a2\u4ed8\u3051 \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 200\u4e07\u4ef6\u4ee5\u4e0a\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u305f\u30c7\u30fc\u30bf 90\u306e\u7279\u5fb4\u91cf 2\u3064\u306eGBDT\u30e2\u30c7\u30eb \u4f53\u9a13\u30d7\u30e9\u30f3\u7279\u5fb4\u91cf\u3001\u30af\u30a8\u30ea\u6a5f\u80fd\u7279\u5fb4\u91cf\u3001\u30e6\u30fc\u30b6\u30fc\u7279\u5fb4\u91cf\u306e3\u3064\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30e2\u30c7\u30eb \u4f53\u9a13\u30d7\u30e9\u30f3\u7279\u5fb4\u91cf\u3001\u30af\u30a8\u30ea\u6a5f\u80fd\u7279\u5fb4\u91cf\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30e2\u30c7\u30eb \u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30b3\u30a2\u4ed8\u3051\u30e2\u30c7\u30eb\u306e\u5229\u70b9 \u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u4e8b\u524d\u306b\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u591a\u304f\u306e\u7528\u9014\u3067\u63a8\u85a6\u3067\u304d\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8 stage 2 v.s. stage 3\u306eA/B\u30c6\u30b9\u30c8\u3067+5.1% \u5b9f\u88c5\u306e\u8a73\u7d30 \u4ee5\u4e0b\u306e3\u3064\u306e\u30a4\u30f3\u30d5\u30e9\u304b\u3089\u306a\u308b \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u5404\u6240\u304b\u3089\u30e2\u30c7\u30eb\u306e\u5165\u529b\u3092\u5f97\u308b \u30e2\u30c7\u30eb\u3092\u672c\u756a\u306b\u5c55\u958b\u3059\u308b \u30e2\u30c7\u30eb\u306e\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3046 \u5404\u30a4\u30f3\u30d5\u30e9\u6bce\u306b\u7279\u5fb4\u91cf\u306e\u4fdd\u7ba1\u65b9\u6cd5\u3092\u5909\u3048\u3066\u3044\u305f","title":"3. \u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30b3\u30a2\u4ed8\u3051"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#4","text":"\u30b5\u30fc\u30d3\u30b9\u306e\u8cea\u3092\u9ad8\u3081\u308b \u76ee\u7684\u95a2\u6570\u3092(+1=\u4e88\u7d04\u3001-1=\u30af\u30ea\u30c3\u30af\u3057\u305f\u304c\u4e88\u7d04\u305b\u305a)\u304b\u3089\u3001(\u4f4e\u8a55\u4fa1\uff1d\u4f4e\u3044\u30b9\u30b3\u30a2\u3001\u9ad8\u8a55\u4fa1\uff1d\u9ad8\u3044\u30b9\u30b3\u30a2)\u3067\u91cd\u307f\u4ed8\u3051\u3092\u5b66\u7fd2 A/B\u30c6\u30b9\u30c8\u3092\u884c\u3044\u3001\u4e88\u7d04\u306e\u8cea\u306e\u5411\u4e0a\u3092\u78ba\u8a8d \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u554f\u984c \u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u3092\u767a\u898b\u3057\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u3067\u63a8\u85a6 Top 8\u306e\u7d50\u679c\u5185\u3067\u591a\u69d8\u6027\u3092\u5f37\u5316 \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u6642\u306b\u6709\u52b9 \u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u8a2a\u308c\u305f\u304c\u691c\u7d22\u3057\u306a\u304b\u3063\u305f\u5834\u5408 \u5225\u306e\u76ee\u7684\u304c\u3042\u308b\u3068\u8003\u3048\u3001\u30e9\u30f3\u30ad\u30f3\u30b0\u30b9\u30b3\u30a2Top18\u9078\u51fa\u3001Click\u7387\u3067\u518d\u30e9\u30f3\u30ad\u30f3\u30b0\u3057\u305f\u3089\u6709\u52b9\u3060\u3063\u305f","title":"4. \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306e\u4f7f\u7528"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_25","text":"\u30e9\u30f3\u30ad\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u822c\u7684\u306a\u50be\u5411\u3092\u8ffd\u8de1\u3057\u3001\u305d\u308c\u304c\u671b\u307e\u3057\u3044\u50be\u5411\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b \u5b89\u3044\u30d7\u30e9\u30f3\uff1d\u512a\u308c\u305f\u30d7\u30e9\u30f3\u3067\u306f\u306a\u3044\u304c\u3001\u5b89\u3044\u30d7\u30e9\u30f3\u304c\u63a8\u85a6\u3055\u308c\u3084\u3059\u304b\u3063\u305f \u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u300c\u5024\u6bb5\u300d\u306f\u30e2\u30c7\u30eb\u304b\u3089\u524a\u9664\u3057\u305f\u304c\u3001\u554f\u984c\u306f\u306a\u304b\u3063\u305f \u5e02\u5834\u306b\u304a\u3051\u308b\u3042\u308b\u4f53\u9a13\u30d7\u30e9\u30f3\u306e\u9806\u4f4d\u3068\u3001ML\u30e2\u30c7\u30eb\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u7279\u5fb4\u91cf\u306e\u8ffd\u8de1 \u7279\u5b9a\u306e\u30b0\u30eb\u30fc\u30d7\uff08\u661f5\u306e\u4f53\u9a13\u30d7\u30e9\u30f3\u306a\u3069\uff09\u306e\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u50be\u5411 \u30de\u30fc\u30b1\u30c3\u30c8\u30de\u30cd\u30b8\u30e3\u30fc\u304c\u30db\u30b9\u30c8\u306b\u9069\u5207\u306a\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u9001\u308b\u306e\u306b\u7279\u306b\u6709\u7528","title":"\u30e9\u30f3\u30ad\u30f3\u30b0\u306e\u76e3\u8996\u3068\u8aac\u660e"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_26","text":"\u640d\u5931\u95a2\u6570 \u30da\u30a2\u30ef\u30a4\u30ba\u640d\u5931 \u30e9\u30d9\u30eb\u4ed8\u3051 0 or 1\u3067\u306f\u306a\u304f\u3001\u30b9\u30b3\u30a2\u95a2\u6570\u306b\u57fa\u3065\u3044\u305f\u56de\u5e30 \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb 1\u65e5\u5358\u4f4d\u3067\u306f\u306a\u304f\u5206\u5358\u4f4d\u306e\u5c65\u6b74\u306a\u3069 \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306b\u5b58\u5728\u3059\u308b\u30dd\u30b8\u30b7\u30e7\u30cb\u30f3\u30b0\u30d0\u30a4\u30a2\u30b9\u3078\u306e\u5bfe\u5fdc GBDT\u3092\u8d85\u3048\u308b\u69d8\u3005\u306a\u30e2\u30c7\u30eb\u306e\u30c6\u30b9\u30c8","title":"\u65e2\u5b58\u306e\u8ab2\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_27","text":"","title":"\u30b5\u30de\u30ea\u30fc"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_28","text":"https://medium.com/airbnb-engineering/machine-learning-powered-search-ranking-of-airbnb-experiences-110b4b1a0789","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#gunosy","text":"\u7279\u306b\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u306b\u3064\u3044\u3066\u306e\u8a71 \u65b0\u7740\u8a18\u4e8b\u306f1\u65e510,000\u4ee5\u4e0a \u5927\u91cf\u306e\u8a18\u4e8b\uff0b\u884c\u52d5\u30ed\u30b0\u304b\u3089\u9ad8\u901f\u304b\u3064\u5b89\u5b9a\u3057\u305f\u63a8\u85a6\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b","title":"Gunosy"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_29","text":"\u30cb\u30e5\u30fc\u30b9\u306e\u4fa1\u5024\u304c\u6642\u9593\u306b\u3088\u308a\u6e1b\u8870\u3059\u308b \u884c\u52d5\u30ed\u30b0\u304c\u6e9c\u307e\u308b\u9803\u306b\u306f\u30cb\u30e5\u30fc\u30b9\u306e\u4fa1\u5024\u304c\u4f4e\u3044 \u30e6\u30fc\u30b6\u30fc\u306e\u8208\u5473\u306e\u5909\u5316\u30b5\u30a4\u30af\u30eb\u304c\u65e9\u3044 \u8a00\u8449\u306e\u4e00\u81f4\u5ea6\u306e\u307f\u3067\u306f\u8cea\u304c\u62c5\u4fdd\u3055\u308c\u306a\u3044 XX\u3055\u3093\u304c\u6b7b\u53bb\u3001XX\u770c\u3067\u5730\u9707\u3001XX\u3067YY\u304c\u52dd\u5229","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b\uff08\u30cb\u30e5\u30fc\u30b9\u7279\u6709\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_30","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_31","text":"\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u2192\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306bEmbedding \u76f4\u8fd1\u3067\u95b2\u89a7\u3057\u305f\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8bM\u4ef6\u306e\u30d9\u30af\u30c8\u30eb\u306e\u5e73\u5747\u2192\u30e6\u30fc\u30b6\u30fc\u306e\u30d9\u30af\u30c8\u30eb \u65b0\u3057\u3044\u8a18\u4e8b\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u5ea6\u306b\u3001\u6700\u3082\u53e4\u3044\u8a18\u4e8b\u3092\u9664\u3044\u3066\u65b0\u3057\u3044\u8a18\u4e8b\u306e\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u3001\u5e73\u5747\u3092\u53d6\u308a\u76f4\u3059 \u30e6\u30fc\u30b6\u30fc\u306e\u30d9\u30af\u30c8\u30eb\u5468\u8fba\u3067\u306e\u5bc6\u5ea6\u306e\u9ad8\u3055\u3092\u30b9\u30b3\u30a2\u3068\u3057\u3066\u8a18\u4e8b\u3092\u30bd\u30fc\u30c8\u3057\u3066\u63a8\u85a6 \u3053\u3053\u3089\u8fba\u306f\u809d\u3067\u3042\u308a\u3001\u8a73\u7d30\u306a\u30b9\u30b3\u30a2\u4ed8\u3051\u306f\u79d8\u5bc6 \u30b9\u30b3\u30a2\u306f\u6642\u9593\u3067\u6e1b\u8870\u3059\u308b\u3088\u3046\u306b\u4fc2\u6570\u3092\u8a2d\u5b9a\u3059\u308b 1\u5ea6\u898b\u305f\u8a18\u4e8b\u306a\u3069\u3082\u6e1b\u8870\u3055\u305b\u308b","title":"\u30e2\u30c7\u30eb\uff08\u72ec\u81ea\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_32","text":"","title":"\u65e2\u77e5\u306e\u554f\u984c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_33","text":"\u958b\u767a\u74b0\u5883\u3067\u306f\u30c7\u30fc\u30bf\u6570\u304c\u5c11\u306a\u3044 \u500b\u4eba\u5316\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30b9\u30c8\u306e\u7db2\u7f85\u6027\u306e\u691c\u8a3c\u304c\u56f0\u96e3","title":"\u52d5\u4f5c\u691c\u8a3c"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_34","text":"\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306eA/B\u30c6\u30b9\u30c8\u306f\u56f0\u96e3 \u30aa\u30f3\u30e9\u30a4\u30f3\u5b9f\u9a13\u3068\u5fc5\u305a\u3057\u3082\u4e00\u81f4\u3057\u306a\u3044","title":"\u30aa\u30d5\u30e9\u30a4\u30f3\u5b9f\u9a13"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_35","text":"\u30af\u30ea\u30c3\u30af\u3067\u306e\u63a8\u85a6\u306b\u306a\u308a\u304c\u3061\u3060\u304c\u3001\u8a18\u4e8b\u306e\u95b2\u89a7\u306e\u63a8\u79fb\u306e\u63a8\u85a6\u3067\u3082\u3057\u305f\u3044 \u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u306a\u3069\u306e\u5b9f\u904b\u7528\u306b\u5de5\u592b\u304c\u5fc5\u8981","title":"\u9077\u79fb\u306e\u6271\u3044"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_36","text":"https://logmi.jp/tech/articles/304737 https://www.slideshare.net/shunsukekozawa5/gunosy-152302982","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#instagram","text":"Facebook AI\u304c\u7d61\u3093\u3060\u30b7\u30b9\u30c6\u30e0","title":"Instagram"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_37","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_38","text":"\u30e6\u30fc\u30b6\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u6c17\u306b\u5165\u3063\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u60c5\u5831\u3092\u7528\u3044\u3001Word2vec\u306e\u3088\u3046\u306b\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092Embedding\u306b\u3059\u308b \u8ddd\u96e2\u306fCosine\u8ddd\u96e2\u307e\u305f\u306f\u30c9\u30c3\u30c8\u7a4d\u3067\u8a08\u7b97\u3059\u308b \u6700\u8fd1\u508d\u691c\u7d22\u306b\u306f\u3001Facebook\u304c\u958b\u767a\u3057\u305fFAISS\u3092\u7528\u3044\u308b \u3053\u306e\u57cb\u3081\u8fbc\u307f\u3092\u7528\u3044\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30c8\u30d4\u30c3\u30af\u96c6\u5408\u3092\u4e88\u6e2c\u3059\u308b\u5206\u985e\u5668\u3092\u8a13\u7df4\u3059\u308b \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u63d0\u793a\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7d5e\u308a\u8fbc\u3080","title":"\u30e6\u30fc\u30b6\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u57cb\u3081\u8fbc\u307f"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_39","text":"\u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb\u306f\u3001\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u3092\u84b8\u7559\uff08\u8fd1\u4f3c\uff09\u3057\u305f\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3092\u7528\u3044\u308b nDCG\u306e\u640d\u5931\u3092\u6700\u9069\u5316\u3059\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3059\u308b","title":"\u30e9\u30f3\u30ad\u30f3\u30b0\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_40","text":"\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u3044\u306d\u3057\u305f\u308a\u3001\u4fdd\u5b58\u3057\u305f\u308a\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u57cb\u3081\u8fbc\u307f\u3092\u7528\u3044\u3066\u985e\u4f3c\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u898b\u3064\u3051\u3001\u305d\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u6295\u7a3f\u30fb\u95a2\u4e0e\u3057\u305f\u30e1\u30c7\u30a3\u30a2\u3092\u898b\u3064\u3051\u308b \u4f55\u5343\u3082\u306e\u5bfe\u8c61\u3092\u7279\u5b9a\u3057\u3001500\u500b\u307e\u3067\u7d5e\u308a\u6b21\u306e\u6bb5\u968e\u3078\u9032\u3080","title":"\u5019\u88dc\u8005\u306e\u751f\u6210"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_41","text":"\u4ed6\u306e2\u3064\u306e\u30e2\u30c7\u30eb\u3092\u8fd1\u4f3c\u3057\u305f\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3067\u3001\u6700\u5c0f\u9650\u306e\u7279\u5fb4\u91cf\u3092\u7528\u3044\u3066500\u500b\u304b\u3089150\u500b\u307e\u3067\u7d5e\u308b \u5bc6\u306a\u7279\u5fb4\u91cf\u3092\u30d5\u30eb\u306b\u4f7f\u3063\u305f\u8efd\u91cf\u306eNN\u3067\u3001150\u500b\u304b\u308950\u500b\u306e\u5019\u88dc\u3092\u7d5e\u308b \u5168\u3066\u306e\u7279\u5fb4\u91cf\u3092\u7528\u3044\u305fNN\u306725\u500b\u307e\u3067\u5019\u88dc\u3092\u7d5e\u308b NN\u306f\u3044\u3044\u306d\u3059\u308b\u304b\u30fb\u4fdd\u5b58\u3059\u308b\u304b\u30fb\u8868\u793a\u3092\u6e1b\u3089\u3059\u304b\u306a\u3069\u306e\u80af\u5b9a\u7684\u30fb\u5426\u5b9a\u7684\u306a\u884c\u52d5\u3092\u4e88\u6e2c\u3057\u3001\u6700\u7d42\u7684\u306b\u91cd\u307f\u4ed8\u3051\u3057\u305f\u7dda\u5f62\u548c\u3067\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u5bfe\u3059\u308b\u30b7\u30b0\u30ca\u30eb\u306e\u91cd\u8981\u6027\u3092\u5224\u65ad\u3059\u308b \u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u51fa\u3059 \u591a\u69d8\u6027\u3092\u5897\u3084\u3059\u305f\u3081\u306b\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30af\u30b9\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u305f \u540c\u3058\u4f5c\u8005\u304b\u3089\u306e\u6295\u7a3f\u306b\u306f\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u52a0\u3048\u30e9\u30f3\u30af\u3092\u4e0b\u3052\u308b \u540c\u3058\u4f5c\u8005\u304b\u3089\u306e\u6295\u7a3f\u304c\u8907\u6570\u6295\u7a3f\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b","title":"\u30e9\u30f3\u30ad\u30f3\u30b0\u5019\u88dc"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_42","text":"https://ai.facebook.com/blog/powered-by-ai-instagrams-explore-recommender-system/","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#sportify","text":"\u97f3\u697d\u306f\u6620\u753b\u3088\u308a\u3082\u6570\u304c\u591a\u3044 \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u6642\u9593\u306f\u77ed\u3044 \u30ea\u30d7\u30ec\u30a4\u56de\u6570\u304c\u591a\u3044","title":"Sportify"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_43","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_44","text":"\u63a2\u7d22\u3068\u6d3b\u7528\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u308b\u30de\u30eb\u30c1\u30a2\u30fc\u30e0\u30d0\u30f3\u30c7\u30a3\u30c3\u30c9\u306e\u67a0\u7d44\u307f\u3092\u4f7f\u7528 \u6d3b\u7528\uff1a\u4ee5\u524d\u9078\u629e\u3057\u305f\u97f3\u697d\u3084PodCast\u306b\u57fa\u3065\u3044\u3066\u63a8\u85a6 \u304a\u6c17\u306b\u5165\u308a\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7279\u5b9a\u30fb\u914d\u4fe1 \u63a2\u7d22\uff1a\u672a\u77e5\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u5bfe\u3059\u308b\u4e0d\u78ba\u5b9f\u306a\u30e6\u30fc\u30b6\u30fc\u306e\u53cd\u5fdc\u3092\u660e\u3089\u304b\u306b\u3059\u308b A/B\u30c6\u30b9\u30c8\u3084\u7121\u4f5c\u70ba\u5316\u5b9f\u9a13\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5185\u3067\u8a13\u7df4\u3068\u63a8\u8ad6\u304c\u5b8c\u7d50\u3059\u308b","title":"\u30e2\u30c7\u30eb\uff08\u30de\u30eb\u30c1\u30a2\u30fc\u30e0\u30d0\u30f3\u30c7\u30a3\u30c3\u30c9\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_45","text":"\u30e2\u30c7\u30eb\u30fbValidation\u7b49\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092TensorFlow\u3067\u4e00\u672c\u5316 Kubeflow\u3067\u30e2\u30c7\u30eb\u958b\u767a\u306e\u9ad8\u901f\u5316 \u7279\u5b9a\u306e\u95be\u5024\u3067\u30a2\u30e9\u30fc\u30c8","title":"\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u30fb\u76e3\u8996"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_46","text":"https://engineering.atspotify.com/2020/01/16/for-your-ears-only-personalizing-spotify-home-with-machine-learning/","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#cookpad","text":"\u30ec\u30b7\u30d4\u63a8\u85a6\u3001\u30d7\u30c3\u30b7\u30e5\u914d\u4fe1\u3001\u30ec\u30b7\u30d4\u4f5c\u8005\u306e\u30d5\u30a9\u30ed\u30fc\u63a8\u85a6\u3001\u691c\u7d22\u30ad\u30fc\u30ef\u30fc\u30c9\u7b49","title":"Cookpad"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_47","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\uff08\u958b\u767a\uff09\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#kpi","text":"EC\u30b5\u30a4\u30c8\uff1a\u58f2\u308a\u4e0a\u3052\u3001\u8cfc\u5165\u8005\u6570\u3001\u5e83\u544a\u30b5\u30a4\u30c8\uff1a\u30a4\u30f3\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\u3001\u30af\u30ea\u30c3\u30af\u7387\u7b49\u306e\u30b4\u30fc\u30eb\u8a2d\u8a08 Cookpad\u7279\u6709\u306e\u3053\u3068","title":"\u30d3\u30b8\u30cd\u30b9\u30e2\u30c7\u30eb\u306b\u5373\u3057\u305f\u63a8\u85a6KPI\u8a2d\u8a08"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_48","text":"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u30fb\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306e\u5bb9\u6613\u3055 \u5f71\u97ff\u304c\u5927\u304d\u3044\uff1d\u8ca0\u306e\u5f71\u97ff\u304c\u51fa\u305f\u6642\u7bc4\u56f2\u304c\u5927\u304d\u3044","title":"\u65e2\u5b58\u30b7\u30b9\u30c6\u30e0\u306b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u306e\u96e3\u3057\u3055"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_49","text":"https://logmi.jp/tech/articles/321731","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#retty","text":"\u98f2\u98df\uff08\u53e3\u30b3\u30df\u30fb\u4e88\u7d04\u7b49\uff09\u306eWeb\u30fb\u30a2\u30d7\u30ea\u30b5\u30fc\u30d3\u30b9 \u64ec\u4f3c\u5e97\u8217\u3001\u4eba\u6c17\u5e97\u8217\u306e\u63a8\u85a6\u3001\u6709\u7528\u306a\u53e3\u30b3\u30df\u30fb\u5199\u771f\u306e\u62bd\u51fa","title":"Retty"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_50","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_51","text":"\u4f3c\u3066\u3044\u308b\u304a\u5e97\u2192\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u4eba\u6c17\u306e\u304a\u5e97\u2192\u4eba\u6c17\u30e9\u30f3\u30ad\u30f3\u30b0 \u904e\u53bb\u306e\u50be\u5411\u304b\u3089\u2192\uff08\u30a2\u30a4\u30c6\u30e0\uff09\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 \u30e9\u30f3\u30c0\u30e0\u63a8\u85a6\u2192\u8a55\u4fa1\u7528\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u5272\u5408\u3067\u6df7\u305c\u308b","title":"\u30e2\u30c7\u30eb\uff08\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f7f\u3044\u5206\u3051\uff09"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_52","text":"\u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6\u7406\u7531\u3092\u8868\u793a \u4e0d\u4fe1\u611f\u306e\u6392\u9664\uff08\u904b\u55b6\u90fd\u5408\u306e\u5e83\u544a\u3067\u306f\u306a\u3044\uff09 \u9b45\u529b\u306e\u8a34\u6c42\uff08\u30a2\u30d4\u30fc\u30eb\u30dd\u30a4\u30f3\u30c8\u3092\u308f\u304b\u308a\u3084\u3059\u304f\uff09 \u6bd4\u8f03\u8981\u7d20\u306e\u5c0e\u5165\uff08\u30a2\u30a4\u30c6\u30e0\u306e\u6bd4\u8f03\u3092\u3057\u3084\u3059\u304f\u3059\u308b\uff09","title":"\u63d0\u793a\u60c5\u5831"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_53","text":"\u30d0\u30f3\u30c7\u30a3\u30c3\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f7f\u7528 \u7d2f\u7a4d\u5831\u916c\u3092\u6700\u5927\u5316\u3057\u3064\u3064\u3001\u78ba\u7387\u7684\u306b\u30a2\u30a4\u30c6\u30e0\u3092\u63d0\u793a\u3059\u308b ElasticNet\u3067\u904e\u5270\u9069\u5408\u3092\u907f\u3051\u308b","title":"\u63a2\u7d22"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_54","text":"https://engineer.retty.me/entry/2018/12/18/103810","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#zozo","text":"\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u3089\u308c\u305f\u753b\u50cf\u304b\u3089\u3001\u985e\u4f3c\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u63a8\u85a6","title":"ZOZO"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_55","text":"","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_56","text":"\u753b\u50cf\u2192\u7269\u4f53\u691c\u51fa\u2192512\u6b21\u5143\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u5316\u2192\u8fd1\u4f3c\u6700\u8fd1\u508d\u63a2\u7d22","title":"\u30e2\u30c7\u30eb"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_57","text":"https://techblog.zozo.com/entry/zozotown-item-recommend-infra-arch","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_58","text":"\u753b\u50cf\u691c\u7d22","title":"\u30e1\u30eb\u30ab\u30ea"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_59","text":"\u753b\u50cf\u2192\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u5316\u2192\u8fd1\u4f3c\u6700\u8fd1\u508d\u63a2\u7d22","title":"\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0\u306e\u5de5\u592b"},{"location":"%E7%B5%B1%E8%A8%88%E3%83%A2%E3%83%87%E3%83%AB/use_case/#_60","text":"BigQuery ML https://cloud.google.com/bigquery-ml/docs/bigqueryml-mf-implicit-tutorial Recommendation AI https://cloud.google.com/recommendations?hl=ja","title":"\u305d\u306e\u4ed6"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/","text":"Graph Attention Network \u89e3\u8aac \u3069\u3093\u306a\u30e2\u30c7\u30eb\uff1f \u30ce\u30fc\u30c9\u306e\u7279\u5fb4\u8868\u73fe\u3092\u901a\u5e38\u306e\u7573\u307f\u8fbc\u307f\u3067\u306f\u306a\u304f\uff0c\u5468\u8fba\u30ce\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u304d\u548c\u3067\u8868\u73fe \u3059\u308b ---> \u8981\u3059\u308b\u306b\uff0c \u30a8\u30c3\u30b8\u8868\u73fe\u3092\u30b7\u30f3\u30d7\u30eb\u306battention weight \u3067\u8868\u73fe \u7570\u306a\u308b\u30b5\u30a4\u30ba\u306e\u8fd1\u508d\u3092\u6271\u3044\u306a\u304c\u3089\u3001\u8fd1\u508d\u5185\u306e\u7570\u306a\u308b\u30ce\u30fc\u30c9\u306b\u7570\u306a\u308b\u91cd\u8981\u5ea6\u3092\uff08\u6697\u9ed9\u7684\u306b\uff09\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b \u30b0\u30e9\u30d5\u69cb\u9020\u5168\u4f53\u3092\u4e8b\u524d\u306b\u77e5\u308b\u3053\u3068\u306b\u4f9d\u5b58\u3057\u306a\u3044\u306a\u3069\u3001 \u5f93\u6765\u306e\u30b9\u30da\u30af\u30c8\u30eb\u30d9\u30fc\u30b9 \u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u7406\u8ad6\u7684\u306a\u554f\u984c\u306e\u591a\u304f\u3092\u89e3\u6c7a \u30a8\u30c3\u30b8\u3092\u5358\u7d14\u306b\u8868\u73fe\u3067\u304d\u308b\u305f\u3081\u8a08\u7b97\u901f\u5ea6\u3082\u305d\u3053\u305d\u3053\u6539\u5584 \u76ee\u7684 GNN \u3067\u8fd1\u5e74\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b GATs(Gragh Attention Networks) \u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b \u524d\u63d0 \u8ad6\u6587\u306f\u3053\u3061\u3089 ICLR 2018 \u80cc\u666f graph\u306f\u30ce\u30fc\u30c9\u306b\u52a0\u3048\u3066\u30a8\u30c3\u30b8\u306e\u60c5\u5831\u3082\u91cd\u8981 \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u30a8\u30c3\u30b8\u306e\u6f5c\u5728\u8868\u73fe\u3092\u4f5c\u3063\u3066\u3044\u3066\u306f\u8a08\u7b97\u901f\u5ea6\u304c\u9045\u3044 -> \u30a8\u30c3\u30b8\u3092\u5358\u7d14\u306battention\u306e\u91cd\u307f\u3067\u8868\u73fe\u3059\u308b \u624b\u6cd5 GATs \u306e\u6982\u8981\u56f3\u3092\u4ee5\u4e0b\u306b\u793a\u3059 \u30ce\u30fc\u30c9\u306e\u66f4\u65b0\u5f0f\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u73fe \u5b9f\u969b\u306b\u306f Multi-Head Attention (head\u6570=K) \u3092\u8a08\u7b97\u3059\u308b (|| \u306f concat \u3092\u610f\u5473\u3059\u308b) \u3082\u3046\u5c11\u3057\u565b\u307f\u7815\u3044\u3066 \u5404\u3005\u306e\u5f0f\u306e\u89e3\u91c8 (1) node i \u306e\u7279\u5fb4\u91cf\u3092 linear\u5c64\u3067\u5909\u63db (2) \u96a3\u63a5\u3059\u308bnode i \u3068 j \u3092 concatenate (\u5f0f\u306e || \u306f concatenate) \u3057\uff0clinear + LeReLU \u3067\u30a8\u30cd\u30eb\u30ae\u30fc\u95a2\u6570\u3092\u8a08\u7b97 dot-product attention\u3067\u306f\u306a\u304f additive attention(\u52a0\u6cd5\u6ce8\u610f) \u3068\u547c\u3070\u308c\u308b\u3082\u306e (3) \u91cd\u307f\u306b\u5909\u63db (4) node i \u306e Layer (l+1) \u306e\u7279\u5fb4\u91cf\u306f attention\u306b\u3088\u308a\u8a08\u7b97\u3057\u305f(3) \u3068 (1) \u306e\u91cd\u307f\u4ed8\u304d\u548c\u3067\u8868\u73fe \u5b9f\u9a13 Transductive Learning \u5b66\u7fd2\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u3068\u30c6\u30b9\u30c8\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u304c\u540c\u3058 (\u3059\u3067\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u304c\uff0c\u30e9\u30d9\u30eb\u304c\u672a\u77e5\u306e\u30ce\u30fc\u30c9\u3092\u4e88\u6e2c\u3059\u308b\u306a\u3069) - 3\u3064\u306ecitation network benchmark dataset\u3092\u4f7f\u7528 Inductive Learning \u5b66\u7fd2\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u3068\u30c6\u30b9\u30c8\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b (\u65b0\u3057\u3044\u30a8\u30c3\u30b8\u3084\u30ce\u30fc\u30c9\u306e\u4e88\u6e2c\uff0c\u5225\u306e\u30b0\u30e9\u30d5\u3067\u306e\u8a55\u4fa1\u306a\u3069) - \u30bf\u30f3\u30d1\u30af\u8cea\u306e\u76f8\u4e92\u4f5c\u7528\u3092\u8868\u3059dataset (PPI dataset) \u4e00\u822c\u7684\u306bInductive\u306a\u8a2d\u5b9a\u306e\u65b9\u304c\u6c4e\u5316\u6027\u80fd\u304c\u6c42\u3081\u3089\u308c\u308b \u53ef\u8996\u5316\u4f8b node\u9593\u306e\u5f37\u3044\u7d50\u3073\u4ed8\u304d\u306f\u5927\u304d\u3044\u91cd\u307f\u3067\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u65b9\u6cd5\u304c\u8868\u73fe\u3067\u304d\u3066\u3044\u308b epochs\u6bce\u306e node classification \u306e\u53ef\u8996\u5316\u4f8b(\u4f59\u8ac7) \u53c2\u8003\u8cc7\u6599 https://www.slideshare.net/takahirokubo7792/graph-attention-network","title":"Graph Attention Network \u89e3\u8aac"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#graph-attention-network","text":"","title":"Graph Attention Network \u89e3\u8aac"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_1","text":"\u30ce\u30fc\u30c9\u306e\u7279\u5fb4\u8868\u73fe\u3092\u901a\u5e38\u306e\u7573\u307f\u8fbc\u307f\u3067\u306f\u306a\u304f\uff0c\u5468\u8fba\u30ce\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u304d\u548c\u3067\u8868\u73fe \u3059\u308b ---> \u8981\u3059\u308b\u306b\uff0c \u30a8\u30c3\u30b8\u8868\u73fe\u3092\u30b7\u30f3\u30d7\u30eb\u306battention weight \u3067\u8868\u73fe \u7570\u306a\u308b\u30b5\u30a4\u30ba\u306e\u8fd1\u508d\u3092\u6271\u3044\u306a\u304c\u3089\u3001\u8fd1\u508d\u5185\u306e\u7570\u306a\u308b\u30ce\u30fc\u30c9\u306b\u7570\u306a\u308b\u91cd\u8981\u5ea6\u3092\uff08\u6697\u9ed9\u7684\u306b\uff09\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b \u30b0\u30e9\u30d5\u69cb\u9020\u5168\u4f53\u3092\u4e8b\u524d\u306b\u77e5\u308b\u3053\u3068\u306b\u4f9d\u5b58\u3057\u306a\u3044\u306a\u3069\u3001 \u5f93\u6765\u306e\u30b9\u30da\u30af\u30c8\u30eb\u30d9\u30fc\u30b9 \u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u7406\u8ad6\u7684\u306a\u554f\u984c\u306e\u591a\u304f\u3092\u89e3\u6c7a \u30a8\u30c3\u30b8\u3092\u5358\u7d14\u306b\u8868\u73fe\u3067\u304d\u308b\u305f\u3081\u8a08\u7b97\u901f\u5ea6\u3082\u305d\u3053\u305d\u3053\u6539\u5584","title":"\u3069\u3093\u306a\u30e2\u30c7\u30eb\uff1f"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_2","text":"GNN \u3067\u8fd1\u5e74\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b GATs(Gragh Attention Networks) \u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b","title":"\u76ee\u7684"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_3","text":"\u8ad6\u6587\u306f\u3053\u3061\u3089 ICLR 2018","title":"\u524d\u63d0"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_4","text":"graph\u306f\u30ce\u30fc\u30c9\u306b\u52a0\u3048\u3066\u30a8\u30c3\u30b8\u306e\u60c5\u5831\u3082\u91cd\u8981 \u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u30a8\u30c3\u30b8\u306e\u6f5c\u5728\u8868\u73fe\u3092\u4f5c\u3063\u3066\u3044\u3066\u306f\u8a08\u7b97\u901f\u5ea6\u304c\u9045\u3044 -> \u30a8\u30c3\u30b8\u3092\u5358\u7d14\u306battention\u306e\u91cd\u307f\u3067\u8868\u73fe\u3059\u308b","title":"\u80cc\u666f"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_5","text":"GATs \u306e\u6982\u8981\u56f3\u3092\u4ee5\u4e0b\u306b\u793a\u3059 \u30ce\u30fc\u30c9\u306e\u66f4\u65b0\u5f0f\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u73fe \u5b9f\u969b\u306b\u306f Multi-Head Attention (head\u6570=K) \u3092\u8a08\u7b97\u3059\u308b (|| \u306f concat \u3092\u610f\u5473\u3059\u308b)","title":"\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_6","text":"\u5404\u3005\u306e\u5f0f\u306e\u89e3\u91c8 (1) node i \u306e\u7279\u5fb4\u91cf\u3092 linear\u5c64\u3067\u5909\u63db (2) \u96a3\u63a5\u3059\u308bnode i \u3068 j \u3092 concatenate (\u5f0f\u306e || \u306f concatenate) \u3057\uff0clinear + LeReLU \u3067\u30a8\u30cd\u30eb\u30ae\u30fc\u95a2\u6570\u3092\u8a08\u7b97 dot-product attention\u3067\u306f\u306a\u304f additive attention(\u52a0\u6cd5\u6ce8\u610f) \u3068\u547c\u3070\u308c\u308b\u3082\u306e (3) \u91cd\u307f\u306b\u5909\u63db (4) node i \u306e Layer (l+1) \u306e\u7279\u5fb4\u91cf\u306f attention\u306b\u3088\u308a\u8a08\u7b97\u3057\u305f(3) \u3068 (1) \u306e\u91cd\u307f\u4ed8\u304d\u548c\u3067\u8868\u73fe","title":"\u3082\u3046\u5c11\u3057\u565b\u307f\u7815\u3044\u3066"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_7","text":"","title":"\u5b9f\u9a13"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#transductive-learning","text":"\u5b66\u7fd2\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u3068\u30c6\u30b9\u30c8\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u304c\u540c\u3058 (\u3059\u3067\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u304c\uff0c\u30e9\u30d9\u30eb\u304c\u672a\u77e5\u306e\u30ce\u30fc\u30c9\u3092\u4e88\u6e2c\u3059\u308b\u306a\u3069) - 3\u3064\u306ecitation network benchmark dataset\u3092\u4f7f\u7528","title":"Transductive Learning"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#inductive-learning","text":"\u5b66\u7fd2\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u3068\u30c6\u30b9\u30c8\u306b\u4f7f\u3046\u30b0\u30e9\u30d5\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b (\u65b0\u3057\u3044\u30a8\u30c3\u30b8\u3084\u30ce\u30fc\u30c9\u306e\u4e88\u6e2c\uff0c\u5225\u306e\u30b0\u30e9\u30d5\u3067\u306e\u8a55\u4fa1\u306a\u3069) - \u30bf\u30f3\u30d1\u30af\u8cea\u306e\u76f8\u4e92\u4f5c\u7528\u3092\u8868\u3059dataset (PPI dataset) \u4e00\u822c\u7684\u306bInductive\u306a\u8a2d\u5b9a\u306e\u65b9\u304c\u6c4e\u5316\u6027\u80fd\u304c\u6c42\u3081\u3089\u308c\u308b \u53ef\u8996\u5316\u4f8b node\u9593\u306e\u5f37\u3044\u7d50\u3073\u4ed8\u304d\u306f\u5927\u304d\u3044\u91cd\u307f\u3067\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u65b9\u6cd5\u304c\u8868\u73fe\u3067\u304d\u3066\u3044\u308b epochs\u6bce\u306e node classification \u306e\u53ef\u8996\u5316\u4f8b(\u4f59\u8ac7)","title":"Inductive Learning"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/GNN/#_8","text":"https://www.slideshare.net/takahirokubo7792/graph-attention-network","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/","text":"SGD\u6700\u9069\u5316\u30e2\u30c7\u30eb\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u624b\u6cd5 Data Cleansing for Models Trained with SGD https://arxiv.org/abs/1906.08473 github\u5b9f\u88c5 https://github.com/sato9hara/sgd-influence \u6982\u8981 \u5b66\u7fd2\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3068\u304d\u306b\u5143\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30c7\u30fc\u30bf\u306eError Analysis\u3092\u3059\u308b\u969b\u306b\u3001\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9(\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8)\u304c\u5b66\u7fd2\u306b\u5f37\u304f\u5f71\u97ff\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8003\u5bdf\u3059\u308b\u305f\u3081\u306b\u306f\u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u304c\u5fc5\u8981\u3002 \u3053\u306e\u8ad6\u6587\u3067\u306f\u3001\u5b66\u7fd2\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3057\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u306a\u3057\u3067Cleanse\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u793a\u3057\u3066\u3044\u308b\u3002 Keyword: influence estimation counterfactual SGD Linear Influence Estimation (LIE) Kendall's tau Jaccard index 2. Preliminaries SGD\u306e\u304a\u3055\u3089\u3044 3. SGD-Influence training step \\(t\\) \u306b\u304a\u3044\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \\(z_{j}\\) \u3092\u9664\u3044\u305f\u6642\u306egradient\u3092 \\(\\\\theta_{-j}^{[t]}\\) \u3068\u3057\u305f\u3068\u304d\u3001SGD-influence\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002 \\( \\(\\\\theta\\_{-j}^{[t]} - \\\\theta^{[t]}\\) \\) \u3064\u307e\u308a\u3001j\u756a\u76ee\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092drop\u3057\u305f\u6642\u306e \\(\\\\theta\\) \u3068\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u6642\u306e \\(\\\\theta\\) \u306e\u5dee\u304c\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u304c\u5927\u304d\u3044\u3068\u8a00\u3048\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u3001\u7d50\u679c\u304b\u3089\u30c7\u30fc\u30bf\u3092\u632f\u308a\u8fd4\u308b\u901a\u5e38\u3068\u306f\u9006\u306e\u8996\u70b9\u3067\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092Counterfactual SGD\uff08\u53cd\u5b9f\u4eee\u60f3: \u3082\u3057\u306a\u304b\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u304b\uff09\u3068\u547c\u3093\u3067\u3044\u308b\u3002 Linear Influence Estimation (LIE) \\[ L_{-j}^{[T]}(u) = \\\\langle u, \\\\theta_{-j}^{[t]} - \\\\theta^{[t]}\\\\rangle \\] \\(u\\) \u306b prediction function\u306e1\u968e\u5fae\u5206 \\(\\\\nabla_{\\\\theta}f(x,\\\\theta)\\) \u3084\u3001loss\u95a2\u6570\u306e1\u968e\u5fae\u5206 \\(\\\\nabla_{\\\\theta}l(x,\\\\theta)\\) \u3092\u5165\u308c\u3066\u7528\u3044\u308b\u3002\u5f8c\u8005\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \\(z_i\\) \u304c\u5b66\u7fd2(loss)\u306b\u53ca\u307c\u3059\u5f71\u97ff\u3092\u6e2c\u308c\u308b \u5b9f\u969b\u306f\u3001\u30c6\u30a4\u30e9\u30fc\u5c55\u958b\u3067\u8fd1\u4f3c\u3057\u3066 $$ L_{-j}^{[T]}(\\nabla_{\\theta}l(x,\\theta)) \\approx \\nabla_{\\theta}l(x,\\theta_{-j}^{[t]}) - \\nabla_{\\theta}l(x,\\theta^{[t]}) $$ \u3068\u3057\u3066\u8a08\u7b97\u3067\u304d\u308b\u3002 \u305f\u3060\u3057\u3001\u6b63\u76f4\u306b\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u500b\u6570N\u56de\u306eSGD\u8a08\u7b97\u3092\u3084\u308b\u3053\u3068\u306b\u306a\u308a\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u52b9\u7387\u7684\u306b\u884c\u3046\u65b9\u6cd5\u3092\u672c\u8ad6\u6587\u3067\u63d0\u6848\u3057\u305f\u3002 4. Estimating SGD-Influence \u4eca\u306e\u3068\u3053\u308d\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002 \u5909\u5f62\u3059\u308b\u3068 \\(\\\\Delta\\\\theta\\_{-j}\\) (2\u968e\u5fae\u5206)\u306b\u306a\u308b\u3002 Eq(2) \u306f\u6f38\u5316\u5f0f\u7e70\u308a\u8fd4\u3057\u4f7f\u3063\u3066\u5909\u5f62\u3057\u3066\u3044\u308b\\ Eq(3), (4)\u306f\u3001\u3053\u306e\u8fba\u306e\u5fae\u7a4d\u5206\u306e\u9023\u7d9a\u6027\u306e\u6982\u5ff5\u3092\u5143\u306b\u4e0d\u7b49\u5f0f\u304c\u6210\u7acb\u3057\u3066\u3044\u308b\u3063\u307d\u3044\u3002 https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%97%E3%82%B7%E3%83%83%E3%83%84%E9%80%A3%E7%B6%9A 5. Proposed Method for LIE \u8a08\u7b97\u30b3\u30b9\u30c8\u672c\u6765\u306a\u3089 \\(O(p^2)\\) \u304b\u304b\u308b\u3068\u3053\u308d\u3092 \\(O(TM\\\\delta)\\) \u306b\u3067\u304d\u3066\u3044\u308b p: \u30c7\u30fc\u30bf\u306e\u6b21\u5143? T: total SGD steps M: the largest batch size in SGD \\(\\\\delta\\) : complexity for computing the parameter gradient (\u3069\u306eOptimizer\u3092\u4f7f\u3046\u304b\u3067\u6c7a\u307e\u308b?) 6. Related Studies \u904e\u53bb\u306e\u540c\u69d8\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u306e\u9055\u3044 \u6700\u9069\u5316\u3055\u308c\u305f\u30e2\u30c7\u30eb\u3092\u60f3\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\uff08\u5b66\u7fd2\u306e\u5404\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3067\u306e\u30e2\u30c7\u30eb\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09 loss\u304cconvex\u3067\u306a\u304f\u3001non-convex\u3067\u3082\u826f\u3044 \u6bd4\u8f03\u3055\u308c\u3066\u308b\u8ad6\u6587 Understanding Black-box Predictions via Influence Functions \u3068\u304b \u5178\u578b\u7684\u306a\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3067\u3042\u308b\u5916\u308c\u5024\u691c\u51fa\uff08\u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u306a\u3089 Isolation forest , \u753b\u50cf\u306a\u3089VAE\u3084GAN\u3068\u304b\u3067\u306e\u518d\u69cb\u6210\uff09\u3067\u5916\u308c\u5024\u3068\u5224\u65ad\u3055\u308c\u305f\u3082\u306e\u306f\u3001\u5fc5\u305a\u3057\u3082\u305d\u308c\u304c\u5b66\u7fd2\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3059\u3068\u3044\u3046\u308f\u3051\u3067\u3082\u306a\u3044\uff08\u304c\u3001\u672c\u624b\u6cd5\u3067\u5916\u308c\u5024\u3068\u5224\u65ad\u3057\u305f\u3082\u306e\u304c\u5b9f\u969b\u306b\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u5ea6\u3068\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\uff09 7. Experiments 7.1 Evaluation of LIE Kendall's tau Jaccard index \u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u304c\u4f55\u304b\u8abf\u3079\u308b\u3002 Fig1, Table1 x, y\u306e\u898b\u65b9\u304c\u308f\u304b\u3089\u306a\u3044\u304c\u3001y=x\u306e\u7dda\u4e0a\u306b\u4e57\u308b\u307b\u3069\u3001\u6b63\u78ba\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5f71\u97ff\u3092\u8a55\u4fa1\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3002\u904e\u53bb\u306e\u624b\u6cd5\uff08\u8d64\u306eK&L\uff09\u3088\u308a\u3082\u9752\u306e\u63d0\u6848\u624b\u6cd5\u306e\u65b9\u304c\u826f\u3044\u3002 convex\u306a\u4f8b\u3067\u3042\u308blinear logistic regression\u3068\u3001non-convex\u306a\u4f8b\u3067\u3042\u308bDNN\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5f71\u97ff\u3092\u6b63\u3057\u304f\u8a55\u4fa1\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u306e\u3082\u91cd\u8981\u3002 7.2 Evaluation of Data Cleansing Autoencoder\u306e\u5834\u5408\u306fvivid color\u306a\u80cc\u666f\u3092\u7570\u5e38\u3068\u898b\u505a\u3057\u304c\u3061\u3060\u304c\u3001\u305d\u308c\u3092\u9664\u3044\u3066\u3082\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u306f\u5c11\u306a\u3044\uff08\u6539\u5584\u3057\u306a\u3044\uff09\u3002\u4e00\u65b9\u3001\u753b\u50cf\u5185\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u80cc\u666f\u306e\u5883\u754c\u304c\u307c\u3084\u3051\u3066\u3044\u308b\u3082\u306e\u306fAutoencoder\u3067\u306f\u7570\u5e38\u3068\u307f\u306a\u3055\u308c\u306a\u3044\u304c\u3001\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u306f\u5927\u304d\u304b\u3063\u305f\uff08\u6539\u5584\u3057\u305f\uff09\u3002\u63d0\u6848\u624b\u6cd5\u306f\u5f8c\u8005\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u7570\u5e38\u3092\u898b\u629c\u3051\u3066\u3044\u305f","title":"SGD\u6700\u9069\u5316\u30e2\u30c7\u30eb\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#sgd","text":"","title":"SGD\u6700\u9069\u5316\u30e2\u30c7\u30eb\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#data-cleansing-for-models-trained-with-sgd","text":"https://arxiv.org/abs/1906.08473 github\u5b9f\u88c5 https://github.com/sato9hara/sgd-influence","title":"Data Cleansing for Models Trained with SGD"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#_1","text":"\u5b66\u7fd2\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3068\u304d\u306b\u5143\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30c7\u30fc\u30bf\u306eError Analysis\u3092\u3059\u308b\u969b\u306b\u3001\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9(\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8)\u304c\u5b66\u7fd2\u306b\u5f37\u304f\u5f71\u97ff\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8003\u5bdf\u3059\u308b\u305f\u3081\u306b\u306f\u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u304c\u5fc5\u8981\u3002 \u3053\u306e\u8ad6\u6587\u3067\u306f\u3001\u5b66\u7fd2\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3057\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30c9\u30e1\u30a4\u30f3\u77e5\u8b58\u306a\u3057\u3067Cleanse\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u793a\u3057\u3066\u3044\u308b\u3002 Keyword: influence estimation counterfactual SGD Linear Influence Estimation (LIE) Kendall's tau Jaccard index","title":"\u6982\u8981"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#2-preliminaries","text":"SGD\u306e\u304a\u3055\u3089\u3044","title":"2. Preliminaries"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#3-sgd-influence","text":"training step \\(t\\) \u306b\u304a\u3044\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \\(z_{j}\\) \u3092\u9664\u3044\u305f\u6642\u306egradient\u3092 \\(\\\\theta_{-j}^{[t]}\\) \u3068\u3057\u305f\u3068\u304d\u3001SGD-influence\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002 \\( \\(\\\\theta\\_{-j}^{[t]} - \\\\theta^{[t]}\\) \\) \u3064\u307e\u308a\u3001j\u756a\u76ee\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092drop\u3057\u305f\u6642\u306e \\(\\\\theta\\) \u3068\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u6642\u306e \\(\\\\theta\\) \u306e\u5dee\u304c\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u304c\u5927\u304d\u3044\u3068\u8a00\u3048\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u3001\u7d50\u679c\u304b\u3089\u30c7\u30fc\u30bf\u3092\u632f\u308a\u8fd4\u308b\u901a\u5e38\u3068\u306f\u9006\u306e\u8996\u70b9\u3067\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092Counterfactual SGD\uff08\u53cd\u5b9f\u4eee\u60f3: \u3082\u3057\u306a\u304b\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u304b\uff09\u3068\u547c\u3093\u3067\u3044\u308b\u3002 Linear Influence Estimation (LIE) \\[ L_{-j}^{[T]}(u) = \\\\langle u, \\\\theta_{-j}^{[t]} - \\\\theta^{[t]}\\\\rangle \\] \\(u\\) \u306b prediction function\u306e1\u968e\u5fae\u5206 \\(\\\\nabla_{\\\\theta}f(x,\\\\theta)\\) \u3084\u3001loss\u95a2\u6570\u306e1\u968e\u5fae\u5206 \\(\\\\nabla_{\\\\theta}l(x,\\\\theta)\\) \u3092\u5165\u308c\u3066\u7528\u3044\u308b\u3002\u5f8c\u8005\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \\(z_i\\) \u304c\u5b66\u7fd2(loss)\u306b\u53ca\u307c\u3059\u5f71\u97ff\u3092\u6e2c\u308c\u308b \u5b9f\u969b\u306f\u3001\u30c6\u30a4\u30e9\u30fc\u5c55\u958b\u3067\u8fd1\u4f3c\u3057\u3066 $$ L_{-j}^{[T]}(\\nabla_{\\theta}l(x,\\theta)) \\approx \\nabla_{\\theta}l(x,\\theta_{-j}^{[t]}) - \\nabla_{\\theta}l(x,\\theta^{[t]}) $$ \u3068\u3057\u3066\u8a08\u7b97\u3067\u304d\u308b\u3002 \u305f\u3060\u3057\u3001\u6b63\u76f4\u306b\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u500b\u6570N\u56de\u306eSGD\u8a08\u7b97\u3092\u3084\u308b\u3053\u3068\u306b\u306a\u308a\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u52b9\u7387\u7684\u306b\u884c\u3046\u65b9\u6cd5\u3092\u672c\u8ad6\u6587\u3067\u63d0\u6848\u3057\u305f\u3002","title":"3. SGD-Influence"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#4-estimating-sgd-influence","text":"\u4eca\u306e\u3068\u3053\u308d\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002 \u5909\u5f62\u3059\u308b\u3068 \\(\\\\Delta\\\\theta\\_{-j}\\) (2\u968e\u5fae\u5206)\u306b\u306a\u308b\u3002 Eq(2) \u306f\u6f38\u5316\u5f0f\u7e70\u308a\u8fd4\u3057\u4f7f\u3063\u3066\u5909\u5f62\u3057\u3066\u3044\u308b\\ Eq(3), (4)\u306f\u3001\u3053\u306e\u8fba\u306e\u5fae\u7a4d\u5206\u306e\u9023\u7d9a\u6027\u306e\u6982\u5ff5\u3092\u5143\u306b\u4e0d\u7b49\u5f0f\u304c\u6210\u7acb\u3057\u3066\u3044\u308b\u3063\u307d\u3044\u3002 https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%97%E3%82%B7%E3%83%83%E3%83%84%E9%80%A3%E7%B6%9A","title":"4. Estimating SGD-Influence"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#5-proposed-method-for-lie","text":"\u8a08\u7b97\u30b3\u30b9\u30c8\u672c\u6765\u306a\u3089 \\(O(p^2)\\) \u304b\u304b\u308b\u3068\u3053\u308d\u3092 \\(O(TM\\\\delta)\\) \u306b\u3067\u304d\u3066\u3044\u308b p: \u30c7\u30fc\u30bf\u306e\u6b21\u5143? T: total SGD steps M: the largest batch size in SGD \\(\\\\delta\\) : complexity for computing the parameter gradient (\u3069\u306eOptimizer\u3092\u4f7f\u3046\u304b\u3067\u6c7a\u307e\u308b?)","title":"5. Proposed Method for LIE"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#6-related-studies","text":"\u904e\u53bb\u306e\u540c\u69d8\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u306e\u9055\u3044 \u6700\u9069\u5316\u3055\u308c\u305f\u30e2\u30c7\u30eb\u3092\u60f3\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\uff08\u5b66\u7fd2\u306e\u5404\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3067\u306e\u30e2\u30c7\u30eb\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09 loss\u304cconvex\u3067\u306a\u304f\u3001non-convex\u3067\u3082\u826f\u3044 \u6bd4\u8f03\u3055\u308c\u3066\u308b\u8ad6\u6587 Understanding Black-box Predictions via Influence Functions \u3068\u304b \u5178\u578b\u7684\u306a\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3067\u3042\u308b\u5916\u308c\u5024\u691c\u51fa\uff08\u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u306a\u3089 Isolation forest , \u753b\u50cf\u306a\u3089VAE\u3084GAN\u3068\u304b\u3067\u306e\u518d\u69cb\u6210\uff09\u3067\u5916\u308c\u5024\u3068\u5224\u65ad\u3055\u308c\u305f\u3082\u306e\u306f\u3001\u5fc5\u305a\u3057\u3082\u305d\u308c\u304c\u5b66\u7fd2\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3059\u3068\u3044\u3046\u308f\u3051\u3067\u3082\u306a\u3044\uff08\u304c\u3001\u672c\u624b\u6cd5\u3067\u5916\u308c\u5024\u3068\u5224\u65ad\u3057\u305f\u3082\u306e\u304c\u5b9f\u969b\u306b\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u5ea6\u3068\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\uff09","title":"6. Related Studies"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#7-experiments","text":"","title":"7. Experiments"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#71-evaluation-of-lie","text":"Kendall's tau Jaccard index \u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u304c\u4f55\u304b\u8abf\u3079\u308b\u3002 Fig1, Table1 x, y\u306e\u898b\u65b9\u304c\u308f\u304b\u3089\u306a\u3044\u304c\u3001y=x\u306e\u7dda\u4e0a\u306b\u4e57\u308b\u307b\u3069\u3001\u6b63\u78ba\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5f71\u97ff\u3092\u8a55\u4fa1\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3002\u904e\u53bb\u306e\u624b\u6cd5\uff08\u8d64\u306eK&L\uff09\u3088\u308a\u3082\u9752\u306e\u63d0\u6848\u624b\u6cd5\u306e\u65b9\u304c\u826f\u3044\u3002 convex\u306a\u4f8b\u3067\u3042\u308blinear logistic regression\u3068\u3001non-convex\u306a\u4f8b\u3067\u3042\u308bDNN\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5f71\u97ff\u3092\u6b63\u3057\u304f\u8a55\u4fa1\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u306e\u3082\u91cd\u8981\u3002","title":"7.1 Evaluation of LIE"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/SGD%E6%9C%80%E9%81%A9%E5%8C%96%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%AF%E3%83%AC%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B0%E6%89%8B%E6%B3%95/#72-evaluation-of-data-cleansing","text":"Autoencoder\u306e\u5834\u5408\u306fvivid color\u306a\u80cc\u666f\u3092\u7570\u5e38\u3068\u898b\u505a\u3057\u304c\u3061\u3060\u304c\u3001\u305d\u308c\u3092\u9664\u3044\u3066\u3082\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u306f\u5c11\u306a\u3044\uff08\u6539\u5584\u3057\u306a\u3044\uff09\u3002\u4e00\u65b9\u3001\u753b\u50cf\u5185\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u80cc\u666f\u306e\u5883\u754c\u304c\u307c\u3084\u3051\u3066\u3044\u308b\u3082\u306e\u306fAutoencoder\u3067\u306f\u7570\u5e38\u3068\u307f\u306a\u3055\u308c\u306a\u3044\u304c\u3001\u5b66\u7fd2\u3078\u306e\u5f71\u97ff\u306f\u5927\u304d\u304b\u3063\u305f\uff08\u6539\u5584\u3057\u305f\uff09\u3002\u63d0\u6848\u624b\u6cd5\u306f\u5f8c\u8005\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u7570\u5e38\u3092\u898b\u629c\u3051\u3066\u3044\u305f","title":"7.2 Evaluation of Data Cleansing"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/","text":"Faster R-CNN \u307e\u3068\u3081 \u7269\u4f53\u691c\u51fa\u306e\u30e2\u30c7\u30eb\u306e\u4e00\u3064 \u7cbe\u5ea6\u304c\u9ad8\u304f\u901f\u5ea6\u304c\u9045\u3044 \u901f\u5ea6\u304c\u5fc5\u8981\u306a\u304f\u3001\u7cbe\u5ea6\u304c\u6b32\u3057\u3044\u6642\u306b\u4f7f\u3046\u30e2\u30c7\u30eb \u4ed6\u306e\u7269\u4f53\u691c\u51fa\u306e\u30e2\u30c7\u30eb\u3068\u306e\u6bd4\u8f03 \u30e2\u30c7\u30eb\u540d Yolo v3 SSD Faster R-CNN CenterNet \u7cbe\u5ea6 \u60aa\u3044 \u5c11\u3057\u60aa\u3044 \u5c11\u3057\u826f\u3044 \u826f\u3044 \u901f\u3055 \u65e9\u3044 \u5c11\u3057\u65e9\u3044 \u5c11\u3057\u9045\u3044 \u9045\u3044 \u6b74\u53f2 R-CNN Selective Search\u3092\u7528\u3044\u3066\u7269\u4f53\u3089\u3057\u3044\u3068\u3053\u308d\u30922000\u500b\u307b\u3069\u691c\u51fa \u3053\u3053\u306f\u4eba\u304c\u4f5c\u3063\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u30c6\u30af\u30b9\u30c1\u30e3\u3001\u8272\u306a\u3069\u3067\u7269\u4f53\u3092\u8b58\u5225\u3059\u308b \u691c\u51fa\u3057\u305f\u3068\u3053\u308d\u3092\u30af\u30ed\u30c3\u30d7\u3057\u3001\u4e00\u5b9a\u306e\u5927\u304d\u3055\u306b\u3057\u3066CNN\u3067\u7279\u5fb4\u91cf\u62bd\u51fa SVM\u3067\u30af\u30e9\u30b9\u5206\u985e\u3001\u56de\u5e30\u3067BBOX\u306e\u4f4d\u7f6e\u8abf\u6574 Fast R-CNN R-CNN\u306e\u554f\u984c\u70b9 R-CNN\u306fCNN,SVM,BBOX\u56de\u5e30\u3092\u5225\u3005\u306b\u5b66\u7fd2\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u5b9f\u884c\u6642\u9593\u304c\u9045\u3044 \u6539\u5584\u65b9\u6cd5 RoI pooling\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3001Selective Search\u2192CNN\u6642\u306e\u91cd\u8907\u90e8\u5206\u3092\u7121\u304f\u3059 \u7279\u5fb4\u62bd\u51fa\u306e\u305f\u3081\u306eCNN\u306e\u5f8c\u306b\u3001\u5e45\u306e\u5927\u304d\u3055\u304c\u53ef\u5909\u7684\u306aPooling\u5c64\u3092\u5165\u308c\u308b \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u4e0d\u5747\u4e00\u306a\u30b5\u30a4\u30ba\u306e\u5165\u529b\u306b\u5bfe\u3057\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u5f97\u308b CNN,SVM,BBOX\u56de\u5e30\u3092\u5358\u4e00\u306e\u30e2\u30c7\u30eb\u306b\u3059\u308b \u6d41\u308c\u306fR-CNN\u3068\u540c\u3058 Faster R-CNN Fast R-CNN\u306e\u554f\u984c\u70b9 Selective Search\u304c\u9045\u3044 Selective Search\uff08\u5019\u88dc\u9818\u57df\u306e\u63d0\u6848\uff09\u306f\u5b66\u7fd2\u3057\u306a\u3044 \u6539\u5584\u70b9 Selective Search\u3092Region Proposal Network\u306b\u7f6e\u63db \u5c0f\u3055\u306aCNN\u3092\u304b\u3051\u305f\u5f8c\u3001\u7e26\u6a2a\u6bd4\u30fb\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308bAnchorBOX\uff08BBOX\uff09\u3067\u7279\u5fb4\u62bd\u51fa \u305d\u306e\u5f8c\u3001FC\u5c64\u3067\u7269\u4f53\u304b\u5426\u304b\u3068BBOX\u306e\u4f4d\u7f6e\u3092\u56de\u5e30 \u9ad8\u901f\u5316\u30fb\u5b8c\u5168\u306aEnd2End\u306b\u3088\u308b\u9ad8\u7cbe\u5ea6\u5316\u3092\u9054\u6210 \u985e\u4f3c\u30e2\u30c7\u30eb\u306a\u3069\uff08\u8a73\u7d30\u306f\u5272\u611b\uff09 Yolo \u753b\u50cf\u3092\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u5206\u5272\u3059\u308b \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u3082\u306e\u306b\u4f7f\u7528 SGD \u7573\u307f\u8fbc\u307f\u306e\u7570\u306a\u308b\u6bb5\u968e\u306e\u7279\u5fb4\u91cf\u3092\u4f7f\u7528\u3059\u308b \u4f4e\u89e3\u50cf\u5ea6\u30fb\u5c0f\u3055\u306a\u753b\u50cf\u306b\u5f37\u3044 Cascade R-CNN Faster R-CNN\u306e\u6539\u826f IoU\u306e\u95be\u5024\u3092\u6bb5\u968e\u7684\u306b\u4e0a\u3052\u3066\u3044\u304f \u7cbe\u5ea6\u306f\u826f\u3044\u304c\u3001\u8a08\u7b97\u8cc7\u6e90\u3092\u8981\u6c42 \u30e2\u30c7\u30eb\u306e\u69cb\u9020 \u753b\u50cf\u3092\u7573\u307f\u8fbc\u307f\u5c64\u306b\u5165\u308c\u3001\u7279\u5fb4\u30de\u30c3\u30d7\u3092\u51fa\u3059 image - conv_layers - feature_maps \u7279\u5fb4\u30de\u30c3\u30d7\u306bnxn\uff08\u8ad6\u6587\u3067\u306fn=3\uff09\u306eConv\u5c64\u3092\u304b\u3051\u305f\u5f8c\u3001FC\u5c64\u306e\u3088\u3046\u306a\u7573\u307f\u8fbc\u307f\u5c64\uff08kernel=1,stride=1\u306b\u3059\u308b\u3053\u3068\u3067\u7dcf\u7d50\u5408\u3063\u307d\u304f\u3059\u308b\uff09\u3067\u7269\u4f53\u3089\u3057\u3055\u3068\u4f4d\u7f6e\uff08x1,x2,w,h\uff09\u3092\u51fa\u529b Region Proposal Network 1\u306e\u7279\u5fb4\u30de\u30c3\u30d7\u30682\u306e\u63d0\u6848\u9818\u57df\u304b\u3089\u3001BBOX\u3092\u8a08\u7b97\u30fb\u5206\u985e\u3059\u308b RoI pooling classifier \u8ad6\u6587\u3067\u306e\u5de5\u592b\u70b9 RPN\u90e8\u5206\u3067\u306f\u3001\u305d\u306e\u307e\u307e\u5b66\u7fd2\u3059\u308b\u3068\u8ca0\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u5f71\u97ff\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u6b63\u8ca0\u306e\u5272\u5408\u304c\uff11\u5bfe\uff11\u306b\u306a\u308b\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b \u4e0a\u8a18\u306e\u30e2\u30c7\u30eb\u306e\u69cb\u9020\u3060\u3068\u3001\u53b3\u5bc6\u306a\u5b66\u7fd2\u3067\u306f\u306a\u304f\u8fd1\u4f3c\u89e3\u306b\u306a\u308b \u3053\u3061\u3089\u306e\u65b9\u304c\u5b66\u7fd2\u306f\u65e9\u3044 \u8ad6\u6587\u3067\u306fRPN\u3068Fast R-CNN\u90e8\u5206\u3092\u4ea4\u4e92\u306b\u5b66\u7fd2\u3057\u3066\u3044\u305f CenterNet\u3068\u306f CenterNet\u3068\u3044\u3046\u540d\u524d\u306e2\u7a2e\u985e\u30e2\u30c7\u30eb\u304c\u3042\u308b\u304c\u3001Object as Points\u306e\u65b9 \u6b74\u53f2 Heatmap\u30d9\u30fc\u30b9\u306e\u624b\u6cd5 Faster R-CNN\u306a\u3069\u3088\u308a\u5f8c \u30a2\u30f3\u30ab\u30fc\u306e\u4ee3\u308f\u308a\u306bHeatmap\u3092\u7528\u3044\u308b CornerNet\uff082018/8\uff09\u304c\u6e90\u6d41 \u30a2\u30f3\u30ab\u30fc\u2192BBOX\u56de\u5e30\u3067\u306f\u306a\u304f\u3001Heatmap\u3067\u5de6\u4e0a\u30fb\u53f3\u4e0b\u3092\u30ad\u30fc\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u5b66\u7fd2\u3059\u308b \u30e2\u30c7\u30eb\u306e\u69cb\u9020 \u30a2\u30f3\u30ab\u30fc\u3067\u306f\u306a\u304f\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3067\u30af\u30e9\u30b9\u3054\u3068\u306b\u7269\u4f53\u306e\u4e2d\u5fc3\u3092\u4e88\u6e2c \u9ad8\u3055\u30fb\u5e45\u30fb\u30af\u30e9\u30b9\u30fb\u306a\u3069\u306e\u7279\u6027\u306f\u3001\u5404\u4f4d\u7f6e\u3067\u56de\u5e30\u3059\u308b \u753b\u50cf\u3092\u7573\u307f\u8fbc\u307f\u5c64\u306e\u307f\u3067\u51fa\u6765\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u308c\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u4f5c\u6210\u3059\u308b \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u30d4\u30fc\u30af\uff08\u5468\u56f28\u7b87\u6240\u3068\u6bd4\u8f03\u3057\u3066\uff09\u3092\u7269\u4f53\u306e\u4e2d\u5fc3\u3068\u3059\u308b \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u7269\u4f53\u306e\u4e2d\u5fc3\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u304b\u3089\u3001\u7269\u4f53\u306e\u30b5\u30a4\u30ba\u30fb\u5965\u884c\u304d\u30fb\u5411\u304d\u30fb\u59ff\u52e2\u306a\u3069\u3092\u63a8\u5b9a\u3059\u308b","title":"Faster R-CNN \u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#faster-r-cnn","text":"\u7269\u4f53\u691c\u51fa\u306e\u30e2\u30c7\u30eb\u306e\u4e00\u3064 \u7cbe\u5ea6\u304c\u9ad8\u304f\u901f\u5ea6\u304c\u9045\u3044 \u901f\u5ea6\u304c\u5fc5\u8981\u306a\u304f\u3001\u7cbe\u5ea6\u304c\u6b32\u3057\u3044\u6642\u306b\u4f7f\u3046\u30e2\u30c7\u30eb","title":"Faster R-CNN \u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_1","text":"\u30e2\u30c7\u30eb\u540d Yolo v3 SSD Faster R-CNN CenterNet \u7cbe\u5ea6 \u60aa\u3044 \u5c11\u3057\u60aa\u3044 \u5c11\u3057\u826f\u3044 \u826f\u3044 \u901f\u3055 \u65e9\u3044 \u5c11\u3057\u65e9\u3044 \u5c11\u3057\u9045\u3044 \u9045\u3044","title":"\u4ed6\u306e\u7269\u4f53\u691c\u51fa\u306e\u30e2\u30c7\u30eb\u3068\u306e\u6bd4\u8f03"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_2","text":"","title":"\u6b74\u53f2"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#r-cnn","text":"Selective Search\u3092\u7528\u3044\u3066\u7269\u4f53\u3089\u3057\u3044\u3068\u3053\u308d\u30922000\u500b\u307b\u3069\u691c\u51fa \u3053\u3053\u306f\u4eba\u304c\u4f5c\u3063\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \u30c6\u30af\u30b9\u30c1\u30e3\u3001\u8272\u306a\u3069\u3067\u7269\u4f53\u3092\u8b58\u5225\u3059\u308b \u691c\u51fa\u3057\u305f\u3068\u3053\u308d\u3092\u30af\u30ed\u30c3\u30d7\u3057\u3001\u4e00\u5b9a\u306e\u5927\u304d\u3055\u306b\u3057\u3066CNN\u3067\u7279\u5fb4\u91cf\u62bd\u51fa SVM\u3067\u30af\u30e9\u30b9\u5206\u985e\u3001\u56de\u5e30\u3067BBOX\u306e\u4f4d\u7f6e\u8abf\u6574","title":"R-CNN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#fast-r-cnn","text":"","title":"Fast R-CNN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#r-cnn_1","text":"R-CNN\u306fCNN,SVM,BBOX\u56de\u5e30\u3092\u5225\u3005\u306b\u5b66\u7fd2\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u5b9f\u884c\u6642\u9593\u304c\u9045\u3044","title":"R-CNN\u306e\u554f\u984c\u70b9"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_3","text":"RoI pooling\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3001Selective Search\u2192CNN\u6642\u306e\u91cd\u8907\u90e8\u5206\u3092\u7121\u304f\u3059 \u7279\u5fb4\u62bd\u51fa\u306e\u305f\u3081\u306eCNN\u306e\u5f8c\u306b\u3001\u5e45\u306e\u5927\u304d\u3055\u304c\u53ef\u5909\u7684\u306aPooling\u5c64\u3092\u5165\u308c\u308b \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u4e0d\u5747\u4e00\u306a\u30b5\u30a4\u30ba\u306e\u5165\u529b\u306b\u5bfe\u3057\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u5f97\u308b CNN,SVM,BBOX\u56de\u5e30\u3092\u5358\u4e00\u306e\u30e2\u30c7\u30eb\u306b\u3059\u308b \u6d41\u308c\u306fR-CNN\u3068\u540c\u3058","title":"\u6539\u5584\u65b9\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#faster-r-cnn_1","text":"","title":"Faster R-CNN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#fast-r-cnn_1","text":"Selective Search\u304c\u9045\u3044 Selective Search\uff08\u5019\u88dc\u9818\u57df\u306e\u63d0\u6848\uff09\u306f\u5b66\u7fd2\u3057\u306a\u3044","title":"Fast R-CNN\u306e\u554f\u984c\u70b9"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_4","text":"Selective Search\u3092Region Proposal Network\u306b\u7f6e\u63db \u5c0f\u3055\u306aCNN\u3092\u304b\u3051\u305f\u5f8c\u3001\u7e26\u6a2a\u6bd4\u30fb\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308bAnchorBOX\uff08BBOX\uff09\u3067\u7279\u5fb4\u62bd\u51fa \u305d\u306e\u5f8c\u3001FC\u5c64\u3067\u7269\u4f53\u304b\u5426\u304b\u3068BBOX\u306e\u4f4d\u7f6e\u3092\u56de\u5e30 \u9ad8\u901f\u5316\u30fb\u5b8c\u5168\u306aEnd2End\u306b\u3088\u308b\u9ad8\u7cbe\u5ea6\u5316\u3092\u9054\u6210","title":"\u6539\u5584\u70b9"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_5","text":"","title":"\u985e\u4f3c\u30e2\u30c7\u30eb\u306a\u3069\uff08\u8a73\u7d30\u306f\u5272\u611b\uff09"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#yolo","text":"\u753b\u50cf\u3092\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u5206\u5272\u3059\u308b \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u3082\u306e\u306b\u4f7f\u7528","title":"Yolo"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#sgd","text":"\u7573\u307f\u8fbc\u307f\u306e\u7570\u306a\u308b\u6bb5\u968e\u306e\u7279\u5fb4\u91cf\u3092\u4f7f\u7528\u3059\u308b \u4f4e\u89e3\u50cf\u5ea6\u30fb\u5c0f\u3055\u306a\u753b\u50cf\u306b\u5f37\u3044","title":"SGD"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#cascade-r-cnn","text":"Faster R-CNN\u306e\u6539\u826f IoU\u306e\u95be\u5024\u3092\u6bb5\u968e\u7684\u306b\u4e0a\u3052\u3066\u3044\u304f \u7cbe\u5ea6\u306f\u826f\u3044\u304c\u3001\u8a08\u7b97\u8cc7\u6e90\u3092\u8981\u6c42","title":"Cascade R-CNN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_6","text":"\u753b\u50cf\u3092\u7573\u307f\u8fbc\u307f\u5c64\u306b\u5165\u308c\u3001\u7279\u5fb4\u30de\u30c3\u30d7\u3092\u51fa\u3059 image - conv_layers - feature_maps \u7279\u5fb4\u30de\u30c3\u30d7\u306bnxn\uff08\u8ad6\u6587\u3067\u306fn=3\uff09\u306eConv\u5c64\u3092\u304b\u3051\u305f\u5f8c\u3001FC\u5c64\u306e\u3088\u3046\u306a\u7573\u307f\u8fbc\u307f\u5c64\uff08kernel=1,stride=1\u306b\u3059\u308b\u3053\u3068\u3067\u7dcf\u7d50\u5408\u3063\u307d\u304f\u3059\u308b\uff09\u3067\u7269\u4f53\u3089\u3057\u3055\u3068\u4f4d\u7f6e\uff08x1,x2,w,h\uff09\u3092\u51fa\u529b Region Proposal Network 1\u306e\u7279\u5fb4\u30de\u30c3\u30d7\u30682\u306e\u63d0\u6848\u9818\u57df\u304b\u3089\u3001BBOX\u3092\u8a08\u7b97\u30fb\u5206\u985e\u3059\u308b RoI pooling classifier","title":"\u30e2\u30c7\u30eb\u306e\u69cb\u9020"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_7","text":"RPN\u90e8\u5206\u3067\u306f\u3001\u305d\u306e\u307e\u307e\u5b66\u7fd2\u3059\u308b\u3068\u8ca0\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u5f71\u97ff\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u6b63\u8ca0\u306e\u5272\u5408\u304c\uff11\u5bfe\uff11\u306b\u306a\u308b\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b \u4e0a\u8a18\u306e\u30e2\u30c7\u30eb\u306e\u69cb\u9020\u3060\u3068\u3001\u53b3\u5bc6\u306a\u5b66\u7fd2\u3067\u306f\u306a\u304f\u8fd1\u4f3c\u89e3\u306b\u306a\u308b \u3053\u3061\u3089\u306e\u65b9\u304c\u5b66\u7fd2\u306f\u65e9\u3044 \u8ad6\u6587\u3067\u306fRPN\u3068Fast R-CNN\u90e8\u5206\u3092\u4ea4\u4e92\u306b\u5b66\u7fd2\u3057\u3066\u3044\u305f","title":"\u8ad6\u6587\u3067\u306e\u5de5\u592b\u70b9"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#centernet","text":"CenterNet\u3068\u3044\u3046\u540d\u524d\u306e2\u7a2e\u985e\u30e2\u30c7\u30eb\u304c\u3042\u308b\u304c\u3001Object as Points\u306e\u65b9","title":"CenterNet\u3068\u306f"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_8","text":"Heatmap\u30d9\u30fc\u30b9\u306e\u624b\u6cd5 Faster R-CNN\u306a\u3069\u3088\u308a\u5f8c \u30a2\u30f3\u30ab\u30fc\u306e\u4ee3\u308f\u308a\u306bHeatmap\u3092\u7528\u3044\u308b CornerNet\uff082018/8\uff09\u304c\u6e90\u6d41 \u30a2\u30f3\u30ab\u30fc\u2192BBOX\u56de\u5e30\u3067\u306f\u306a\u304f\u3001Heatmap\u3067\u5de6\u4e0a\u30fb\u53f3\u4e0b\u3092\u30ad\u30fc\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u5b66\u7fd2\u3059\u308b","title":"\u6b74\u53f2"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/fast_rcnn/#_9","text":"\u30a2\u30f3\u30ab\u30fc\u3067\u306f\u306a\u304f\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3067\u30af\u30e9\u30b9\u3054\u3068\u306b\u7269\u4f53\u306e\u4e2d\u5fc3\u3092\u4e88\u6e2c \u9ad8\u3055\u30fb\u5e45\u30fb\u30af\u30e9\u30b9\u30fb\u306a\u3069\u306e\u7279\u6027\u306f\u3001\u5404\u4f4d\u7f6e\u3067\u56de\u5e30\u3059\u308b \u753b\u50cf\u3092\u7573\u307f\u8fbc\u307f\u5c64\u306e\u307f\u3067\u51fa\u6765\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5165\u308c\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u4f5c\u6210\u3059\u308b \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u30d4\u30fc\u30af\uff08\u5468\u56f28\u7b87\u6240\u3068\u6bd4\u8f03\u3057\u3066\uff09\u3092\u7269\u4f53\u306e\u4e2d\u5fc3\u3068\u3059\u308b \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u7269\u4f53\u306e\u4e2d\u5fc3\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u304b\u3089\u3001\u7269\u4f53\u306e\u30b5\u30a4\u30ba\u30fb\u5965\u884c\u304d\u30fb\u5411\u304d\u30fb\u59ff\u52e2\u306a\u3069\u3092\u63a8\u5b9a\u3059\u308b","title":"\u30e2\u30c7\u30eb\u306e\u69cb\u9020"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/","text":"\u8868\u73fe\u5b66\u7fd2\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u306e\u307e\u3068\u3081\u306e\u307e\u3068\u3081 \u8868\u73fe\u5b66\u7fd2\u306e\u307e\u3068\u3081\u3067\u3059\u3002\u8868\u73fe\u5b66\u7fd2\u306f\u6700\u8fd1\u6d41\u884c\u308a\u306e\u81ea\u5df1\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3092\u542b\u3080\u975e\u5e38\u306b\u5fdc\u7528\u6027\u306e\u9ad8\u3044\u5b66\u7fd2\u624b\u6cd5\u3067\u3042\u308a\u3001\u69d8\u3005\u306a\u30bf\u30b9\u30af\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305a\u52c9\u5f37\u3059\u308b\u304b\u3061\u3042\u308a\u304b\u3082\uff1f\uff1f 1. \u8868\u73fe\u5b66\u7fd2 \u753b\u50cf\u7b49\u306e\u9ad8\u6b21\u306a\u30c7\u30fc\u30bf\u3092\u3088\u308a\u4f4e\u6b21\u306a\u8868\u73fe\u306b\u5909\u63db\u3059\u308b(\u4f4e\u6b21\u5143\u7a7a\u9593\u306b\u57cb\u3081\u8fbc\u3080)\u3092\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u306b\u3067\u304d\u308b\u3060\u3051\u60c5\u5831\u3092\u5931\u308f\u306a\u3044\u304b\u3064\u3001\u305d\u308c\u305e\u308c\u306e\u5727\u7e2e\u3055\u308c\u305f\u8868\u73fe\u304c\u306a\u306b\u304b\u9ad8\u5ea6\u306a\u610f\u5473\u3092\u6301\u3064\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u3002\u305d\u306e\u76ee\u7684\u306f\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u6319\u3052\u3089\u308c\u308b\u3002 \u8868\u73fe\u3092\u4f4e\u6b21\u5143\u306a\u8868\u73fe\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u8efd\u304f\u3059\u308b \u3088\u308a\u672c\u8cea\u7684\u306a\u60c5\u5831\u3092\u62bd\u8c61\u5316\u3057\u3066\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u3055\u3089\u306b\u4ed6\u306e\u30bf\u30b9\u30af\u3092\u884c\u3044\u3084\u3059\u304f\u3059\u308b \u4e0a\u8a18\u7279\u6027\u306b\u3088\u308bTransfer Learning\u3078\u306e\u9069\u5fdc\u6027\u3092\u9ad8\u3081\u308b 1-1. \u8868\u73fe\u5b66\u7fd2\u306e\u5206\u985e \u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u30bf\u30b9\u30af\u306b\u3088\u308b\u5b66\u7fd2 \u8ddd\u96e2\u5b66\u7fd2 \u6df1\u5c64\u751f\u6210 1-2. \u5b66\u7fd2\u3092\u7528\u3044\u306a\u3044\u7279\u5fb4\u62bd\u51fa \u8868\u73fe\u5b66\u7fd2\u304b\u3089\u5f97\u3089\u308c\u308b\u60c5\u5831\u306f\u7814\u7a76\u306f\u9032\u3093\u3067\u304d\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u305e\u308c\u304c\u4f55\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u304b\u660e\u78ba\u306b\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3002\u6c42\u3081\u305f\u3044\u753b\u50cf\u306e\u4e2d\u306e\u7279\u5fb4\u91cf\u306b\u3088\u3063\u3066\u306f\u5b66\u7fd2\u306b\u3088\u3089\u306a\u3044\u3082\u306e\u3067\u6e08\u3080\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u6700\u8fd1\u306e\u52d5\u5411\u3092\u307e\u3068\u3081\u305fsurvey\u8ad6\u6587\u304c\u4ee5\u4e0b\u3067\u3042\u308b\u3002 Recent Advances in Features Extraction and Description Algorithms: A Comprehensive Survey. Ehab Salahat, Member, IEEE, and Murad Qasaimeh, Member, IEEE 2. \u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u30bf\u30b9\u30af 2-1. \u5206\u985e Supervised \"Full\"-supervised Semi-supervised Weakly-supervised UnSupervised Self-Supervised 2-2. Supervised \u3053\u3053\u3067\u306f\u5168\u3066\u30e9\u30d9\u30eb\u3042\u308a\u3067\u5b66\u7fd2\u3092\u884c\u3046\u3044\u308f\u3086\u308bSupervised learning \u3068\u305d\u306e\u4ed6\u306eSemi-supervised learning\u3084Weakly-supervised learning\u3092\u533a\u5225\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u4f55\u304b\u3057\u3089\u306e\u30e9\u30d9\u30eb\u3042\u308a\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3067NN\u306e\u4efb\u610f\u306e\u5c64\u304b\u3089\u7279\u5fb4\u91cf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u624b\u6cd5\u3068\u3057\u3066\u3088\u304f\u4f7f\u308f\u308c\u308b\u3082\u306e\u3092\u6319\u3052\u308b\u3002 \u5206\u985e Semantic Segmentation Object Detection Image Cpationing Action Recognition 2-2-0. \u307e\u3068\u3081 supervised\u306a\u65b9\u6cd5\u3067\u7279\u5fb4\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306f\u672c\u5f53\u306b\u591a\u7a2e\u591a\u69d8\u306a\u3082\u306e\u304c\u3042\u308a\u3001\u73fe\u72b6\u3067\u306f\u305d\u306e\u30bf\u30b9\u30af\u306eground truth\u306b\u5bfe\u3059\u308b\u7cbe\u5ea6\u3067NN\u304c\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u304b\u5224\u65ad\u3057\u3066\u3044\u308b\u304c\u5b9f\u969b\u306b\u306fNN\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u5b66\u7fd2\u3057\u3066\u3044\u308b\u304b\u306f\u660e\u3089\u304b\u306b\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u7279\u5fb4\u62bd\u51fa\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u898b\u308c\u3070\u305d\u308c\u305e\u308c\u306e\u5c64(\u305d\u306e\u4e2d\u306e\u305d\u308c\u305e\u308c\u306e\u30c1\u30e3\u30cd\u30eb)\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u3044\u308b\u304b\u3092\u660e\u3089\u304b\u306b\u3059\u308b\u306e\u306f\u7c21\u5358\u3067\u306f\u306a\u3044\u3002 \u307e\u305f\u3001 Adversarial machine learning \u306b\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u5b9f\u969b\u306b\u306f\u9ad8\u5ea6\u306a\u610f\u5473\u3067\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u8003\u3048\u3082\u3042\u308a\u3001\u8868\u73fe\u5b66\u7fd2\u3068\u3057\u3066\u306e\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u30bf\u30b9\u30af\u3092\u901a\u3057\u3066\u3001\u305d\u306e\u9014\u4e2d\u306eNN\u304b\u3089\u7279\u5fb4\u8868\u73fe\u3092\u5f97\u308b\u65b9\u6cd5\u306f\u500b\u4eba\u7684\u306b\u306f\u73fe\u6bb5\u968e\u3067\u306f\u307e\u3060\u96e3\u3057\u3044\u306e\u304b\u306a\u3068\u601d\u3063\u305f\u3002 2-2-1. Semantic Segmentation Fully Convolutional Networks for Semantic Segmentation[Jonathan Long, Evan Shelhamer, Trevor Darrell] 2-2-2. Object Detection Object Detection\u306f\u7269\u4f53\u304c\u3042\u308a\u305d\u3046\u306a\u9818\u57df\u3092\u53d6\u308a\u51fa\u3057\u3066\u304f\u308b \u691c\u51fa \u90e8\u5206\u3068\u3001\u5b9f\u969b\u306b\u305d\u306e\u9818\u57df\u306b\u7269\u4f53\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u5224\u65ad\u3059\u308b \u8b58\u5225 \u90e8\u5206\u306b\u5206\u304b\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u691c\u51fa\u90e8\u5206\u306e\u69cb\u9020\u306b\u3088\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u985e\u3055\u308c\u3001\u6539\u826f\u3055\u308c\u3066\u304d\u305f\u3002 Faster R-CNN Towards Real-Time Object Detection with Region Proposal Networks \u691c\u51fa\u90e8\u5206\u3068\u8b58\u5225\u90e8\u5206\u3092\u5206\u3051\u3066\u3044\u308b\u3068\u3001\u691c\u51fa\u3055\u308c\u305f\u90e8\u5206\u3092\u6bce\u56de\u6bce\u56deConvNet\u306b\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3053\u308c\u3060\u3068\u30ed\u30b9\u304c\u5927\u304d\u3044\u306e\u3067\u307e\u305aConv layers\u306b\u304b\u3051\u3066\u3001\u305d\u3053\u304b\u3089proposals\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30ed\u30b9\u3092\u5c0f\u3055\u304f\u3057\u305f\u3002\u3064\u307e\u308a\u691c\u51fa\u3068\u8b58\u5225\u3092\u4e00\u3064\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3067\u5b8c\u7d50\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u6700\u9069\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 YOLO You Only Look Once: Unified, Real-Time Object Detection Faster R-CNN\u3067\u306f\u691c\u51fa\u90e8\u5206\u306e\u51fa\u529b\u3092\u53d7\u3051\u3066\u8b58\u5225\u90e8\u5206\u304c\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3067\u306f\u51e6\u7406\u7cfb\u304c\u76f4\u5217\u306b\u4e26\u3093\u3067\u3044\u308b\u306e\u3067\u540c\u6642\u306b\u51e6\u7406\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u9045\u5ef6\u3092\u751f\u3093\u3067\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u3001YOLO\u3067\u306f\u3053\u308c\u3092\u6539\u5584\u3057\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u826f\u3055\u308c\u305f\u3002 2-2-3. Image Cptioning \u6b63\u76f4\u3053\u3053\u306f\u304b\u306a\u308a\u8272\u3005\u306a\u624b\u6cd5\u304c\u3042\u3063\u3066\u5916\u89b3\u3092\u63b4\u3081\u306a\u304b\u3063\u305f\u306e\u3067\u4ee5\u4e0b\u306b \u3088\u304f\u307e\u3068\u307e\u3063\u305f\u30b5\u30a4\u30c8 \u3068\u30ea\u30f3\u30af\u306b survey\u8ad6\u6587 \u306a\u3069\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002 Show, Attend and Tell: Neural Image Caption Generation with Visual Attention 2-2-4. Action Recognition Action Estimation\u3068\u8abf\u3079\u3066\u3082\u51fa\u3066\u304d\u305d\u3046\u3002\u4e00\u679a\u306e\u9759\u6b62\u753b\u306b\u3064\u3044\u3066\u884c\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308b\u304c\u305d\u308c\u306fImage Captioning\u3068\u91cd\u306a\u308b\u90e8\u5206\u3067\u306f\u3042\u308a\u305d\u3046\u3002\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308b\u3082\u306e\u306f\u52d5\u753b\u306a\u3069\u306e\u9023\u7d9a\u3057\u305f\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4f55\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u3092\u63a8\u5b9a\u3059\u308b\u3002 2D/3D Pose Estimation and Action Recognition using Multitask Deep Learning [Diogo C. Luvizon, David Picard, Hedi Tabia] 2-3. Unsupervised \u4ee5\u4e0b\u306fConvNet\u306e\u5229\u7528\u3092\u60f3\u5b9a\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3002 \u3053\u3053\u3067\u306fUnsupervised\u3068\u8a00\u3044\u306a\u304c\u3089\u3001Self-supervised\u306b\u3064\u3044\u3066\u6271\u3063\u3066\u3044\u308b\u3002Unsupervised\u306b\u306fGAN\u306a\u3069\u306e\u751f\u6210\u30e2\u30c7\u30eb\u304c\u8003\u3048\u3089\u308c\u308b\u304c\u3053\u308c\u306f\u500b\u5225\u306b\u6271\u3063\u3066\u3044\u308b\u3002 \u7c21\u5358\u306a\u8aac\u660e Self-supervised\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30e9\u30d9\u30eb\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u3082\u306e\u3092\u4f7f\u3046\u3002Self-supervised\u306f \u9054\u6210\u3057\u305f\u3044\u30bf\u30b9\u30af(target tasks) \u306b\u6709\u52b9\u306a\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u8868\u73fe\u3092\u5f97\u308b\u305f\u3081\u306b \u64ec\u4f3c\u7684\u306a\u30bf\u30b9\u30af(pretext tasks) \u3092\u884c\u3046\u3002\u3053\u306epretext tasks\u306b\u3064\u3044\u3066\u69d8\u3005\u306a\u624b\u6cd5\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u4ee5\u4e0b\u306b\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3002 \u307e\u305fSelf-supervised\u3067\u5b66\u7fd2\u3057\u305f\u5024\u3092NN\u306e\u91cd\u307f\u306e\u521d\u671f\u5024\u3068\u3057\u3066\u7528\u3044\u308b\u3053\u3068\u3067\u904e\u5b66\u7fd2\u3092\u9632\u304e\u3001\u5206\u985e\u5668\u306e\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u52b9\u679c\u304c\u3042\u308b\u3002 \u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8 \u30e1\u30ea\u30c3\u30c8 \u30e9\u30d9\u30eb\u4ed8\u304d\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044 \u751f\u6210\u30e2\u30c7\u30eb\u3068\u6bd4\u8f03\u3057\u3066\u7406\u89e3\u3057\u3084\u3059\u3044(\u69cb\u9020\u3092\u8907\u96d1\u306b\u3057\u3084\u3059\u3044) \u30c7\u30e1\u30ea\u30c3\u30c8 \u5f97\u3089\u308c\u305f\u8868\u73fe\u304c\u5b9f\u969b\u306b\u826f\u3044\u8868\u73fe\u306a\u306e\u304b\u305d\u308c\u81ea\u4f53\u3067\u8a55\u4fa1\u3059\u308b\u306e\u306f\u96e3\u3057\u3044 target tasks\u306b\u5165\u529b\u3057\u3066\u8a55\u4fa1\u3059\u308b\u306b\u306f\u73fe\u72b6target task\u3092\u3084\u3089\u305b\u308b\u304c\u3001\u7d50\u5c40ground truth\u304c\u5fc5\u8981\u3068\u306a\u308b \u5177\u4f53\u7684\u306a\u624b\u6cd5 \u5177\u4f53\u7684\u306a\u624b\u6cd5\u306f\u4ee5\u4e0b\u306e\uff14\u3064\u306b\u5927\u5225\u3059\u308b 1. Context-Based 2. Free Semantic Label-Based 3. Cross Modal-Based 4. Generation-Based 2-3-0. \u307e\u3068\u3081 \u53c2\u8003\u306b\u3057\u305f\u8ad6\u6587\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u9759\u6b62\u753b\u50cf\u306b\u3064\u3044\u3066\u6700\u3082\u3088\u304f\u7279\u5fb4\u3092\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u65b9\u6cd5\u306f DeepClustering \u3067\u3042\u3063\u305f\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u5206\u985e\u30fb\u691c\u51fa\u30fb\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u3067supervised\u306b\u8fd1\u3044\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u305f\u3002 \u4e00\u65b9\u3067\u52d5\u753b\u306b\u3064\u3044\u3066\u306f CubicPuzzle \u304c\u6700\u3082\u9ad8\u3044\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u305f\u304c\u305d\u308c\u3067\u3082supervised\u306a\u3082\u306e\u3068\u306f\u7cbe\u5ea6\u306b\u5927\u304d\u306a\u5dee\u304c\u3042\u3063\u305f\u3002 \u8868\u73fe\u5b66\u7fd2\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u898b\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306eself-supervised\u306a\u624b\u6cd5\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u3044\u308b\u304b\u306fsupervised\u306a\u624b\u6cd5\u3068\u540c\u69d8\u3067\u308f\u304b\u3089\u306a\u3044\u3002\u307e\u305fself-supervised\u306b\u306f\u305d\u308c\u3068\u306f\u5225\u306b\u3001\u305d\u3082\u305d\u3082\u826f\u3044\u7279\u5fb4\u306b\u6ce8\u76ee\u3067\u304d\u3066\u308b\u304b\u3069\u3046\u304b\u304c\u3001\u5b66\u7fd2\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ee2\u79fb\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308bsupervised\u306a\u624b\u6cd5\u306b\u3088\u308b\u30bf\u30b9\u30af\u3092\u3084\u3063\u3066\u307f\u308b\u3053\u3068\u3067\u8a55\u4fa1\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u81ea\u4f53\u3067\u78ba\u304b\u306b\u826f\u3044\u7279\u5fb4\u306b\u6ce8\u76ee\u3067\u304d\u3066\u3044\u308b\u306e\u304b\u304c\u308f\u304b\u3089\u306a\u3044\u3002 2-3-1. Context-Based \u52d5\u753b\u50cf\u306e\u5185\u5bb9\u3092\u7406\u89e3\u3059\u308b\u3057\u3088\u3046\u3068\u3059\u308b\u65b9\u6cd5\u3002 \u5229\u70b9\u3068\u3057\u3066\u306f\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u610f\u5473\u3082\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\u307e\u305f\u3001\u3069\u306e\u30bf\u30b9\u30af\u3068\u3082\u89aa\u548c\u6027\u304c\u9ad8\u304f\u884c\u3044\u3084\u3059\u3044\u3002 \u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u3001\u9ad8\u6b21\u3067\u610f\u5473\u306e\u3042\u308b\u60c5\u5831\u3092\u5143\u306b\u610f\u5473\u3092\u7406\u89e3\u3057\u3066pretext tasks\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u304b\u306f\u308f\u304b\u3089\u306a\u3044\u3002\u4f8b\u3048\u3070\u30d1\u30ba\u30eb\u3092\u4e26\u3079\u66ff\u3048\u308b\u554f\u984c\u306b\u3057\u3066\u3082\u3001\u305d\u306e\u30d1\u30ba\u30eb\u306e\u8272\u3084\u7aef\u306e\u7e4b\u304c\u308a\u3060\u3051\u3092\u6c17\u306b\u3057\u3066\u89e3\u3044\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002 DeepCluster Deep Clustering for Unsupervised Learning of Visual Features [Mathilde Caron+, ECCV2018] \u307e\u305a\u5165\u529b\u753b\u50cf\u3092Convnet\u306b\u5165\u529b\u3057\u3066\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u3092\u5f97\u308b\u3002\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u306fConvnet\u306e\u307f\u3092\u7528\u3044\u3001\u5168\u7d50\u5408\u5c64\u306f\u3053\u3053\u307e\u3067\u3067\u306f\u7528\u3044\u306a\u3044\u3002\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u4e0a\u3067PCA,L2\u6b63\u5247\u5316\u3092\u884c\u3044\u6b21\u5143\u5727\u7e2e\u3092\u884c\u306a\u3063\u305f\u3082\u306e\u306bk-means\u3092\u5b9f\u884c\u3057\u3066Pseudo-label\u3092\u4ed8\u4e0e\u3059\u308b\u3002\u3053\u306ePseudo-label\u3092\u5143\u306b\u3057\u3066Classification\u3092\u884c\u3044\u5b66\u7fd2\u3092\u884c\u3046\u3002 Jigsaw Puzzle++ Noroozi et al., \u201cBoosting Self-Supervised Learning via Knowledge Transfer \u201d, CVPR 2018. \u4e8c\u679a\u306e\u753b\u50cf\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30d1\u30ba\u30eb\u3092\u89e3\u304b\u305b\u308b Learning and Using the Arrow of Time Donglai Wei, Joseph Lim, Andrew Zisserman and William T. Freeman Harvard University University of Southern California University of Oxford Massachusetts Institute of Technology Google Research \u52d5\u753b\u306b\u304a\u3044\u3066\u6642\u9593\u304c\u9032\u3093\u3067\u3044\u308b\u306e\u304b\u623b\u3063\u3066\u3044\u308b\u306e\u304b\u5224\u65ad\u3055\u305b\u308b 2-3-2. Generation-Based \u53c2\u8003\u306b\u3057\u305f\u8ad6\u6587\u3067\u306fVAE\u3084GAN\u3092\u542b\u3081\u3066Generation-Based\u3068\u3057\u3066\u3044\u305f\u304c\u3053\u3053\u3067\u306f\u305d\u308c\u3089\u306f\u4ee5\u4e0b\u3067\u751f\u6210\u30e2\u30c7\u30eb\u3068\u3057\u3066\u500b\u5225\u306b\u6271\u3046\u3002\u3053\u3053\u3067\u3044\u3046Generation-Based\u3068\u306f\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u4f55\u304b\u3057\u3089\u306e\u60c5\u5831\u3092\u306a\u304f\u3057\u305f\u3082\u306e\u306b\u5bfe\u3057\u3066NN\u3092\u7528\u3044\u3066\u518d\u69cb\u6210\u3055\u305b\u308b\u3082\u306e\u3092\u6307\u3059\u3002 Context Encoders: Feature Learning by Inpainting \u753b\u50cf\u306e\u4e00\u90e8\u5206\u3092\u304f\u308a\u629c\u3044\u305f\u3082\u306e\u3092NN\u306b\u518d\u69cb\u6210\u3055\u305b\u308b Colorful Image Colorization \u8272\u306e\u60c5\u5831\u3092\u306a\u304f\u3057\u305f\u5165\u529b\u306b\u5bfe\u3057\u3066NN\u306b\u8272\u3092\u5857\u3089\u305b\u308b 2-3-3. Free Semantic Lavel-Based \u4eba\u9593\u306e\u89e3\u91c8\u3092\u4ecb\u5165\u3055\u305b\u306a\u3044\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3055\u305b\u308b\u65b9\u6cd5\u3002(\u3053\u308c\u3092\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u3068\u3044\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u305a\u308b\u3044\u306e\u3067\u306f\uff1f\uff09\u4eba\u9593\u306e\u89e3\u91c8\u3092\u4ecb\u5165\u3055\u305b\u306a\u3044\u30e9\u30d9\u30eb\u3068\u306f\u3001Depth\u3084\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3001\u6cd5\u7dda\u60c5\u5831\u306a\u3069\u304c\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u666e\u901a\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u308b\u3002 \u5229\u70b9\u3068\u3057\u3066\u306f\u4ed6\u306eself-supervised\u306e\u65b9\u6cd5\u3088\u308a\u3082\u7279\u5fb4\u3092\u6349\u3048\u3055\u305b\u3084\u3059\u3044\u3002 \u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u307e\u305a\u305d\u306e\u3088\u3046\u306a\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u305b\u3066\u4f5c\u3089\u305b\u305f\u30e9\u30d9\u30eb\u306b\u306f\u30ce\u30a4\u30ba\u304c\u591a\u3044\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u308b\u3002 Cross-Domain Self-supervised Multi-task Feature Learning using Synthetic Imagery[Zhongzheng Ren and Yong Jae Lee University of California, Davis] \u30cf\u30fc\u30c9\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u305b\u305f\u3082\u306e\u306b\u3088\u3063\u3066\u751f\u6210\u3057\u305f\u5408\u6210\u753b\u50cf\u3067\u5b66\u7fd2\u3055\u305b\u3066\u3001\u5b9f\u4e16\u754c\u306e\u30ea\u30a2\u30eb\u753b\u50cf\u3067\u30c9\u30e1\u30a4\u30f3\u5b66\u7fd2\u3055\u305b\u308b 2-3-4. Cross Modal-based Learning \u52d5\u753b\u306e\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001\u9023\u7d9a\u7684\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u5236\u7d04\u3068\u3057\u3066\u5b66\u7fd2\u3092\u9032\u3081\u308b\u65b9\u5f0f\u3002\u5177\u4f53\u7684\u306b\u52d5\u753b\u3067\u9023\u7d9a\u7684\u306b\u306a\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3068\u306f\u3001 RGB\u306e\u5024\u3001 \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc \u3001\u97f3\u306e\u30c7\u30fc\u30bf\u3001\u30ab\u30e1\u30e9\u306e\u30dd\u30fc\u30ba \u306a\u3069\u304c\u6319\u3052\u308c\u3089\u308c\u308b\u3002 Tracking Emerges by Colorizing Videos[Carl Vondrick, Abhinav Shrivastava, Alireza Fathi, Sergio Guadarrama, Kevin Murphy] \u3042\u308b\u7269\u4f53\u306f\u9023\u7d9a\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u9593\u3067\u52d5\u304f\u304c\u3001\u8272\u306f\u540c\u3058\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u4eba\u9593\u304c\u30ec\u30d9\u30eb\u3092\u3064\u3051\u308b\u3053\u3068\u306a\u304f\u7269\u4f53\u306e\u52d5\u304d\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 3. \u8ddd\u96e2\u5b66\u7fd2 3-1. \u5206\u985e \u8ddd\u96e2\u5b66\u7fd2(Metric Learning) Contrastive Learning \u305d\u306e\u4ed6 3-2. Contrastive Learning \u3053\u3053\u3067\u306fContrasive Learning\u306e\u5b9a\u7fa9\u3068\u3057\u3066\u306f\"positive pair\"\u3084\"negative pair\"\u3068\u3044\u3063\u305f\u6982\u5ff5\u304c\u51fa\u3066\u304f\u308b\u3082\u306e\u3092\u8ddd\u96e2\u5b66\u7fd2\u306b\u304a\u3051\u308bContrastive learning\u3068\u3059\u308b\u3002 \u4eba\u306b\u3088\u3063\u3066\u306fContrastive learning\u306fself-supervised\u306e\u6587\u8108\u3067\u4f7f\u308f\u308c\u308b\u7528\u8a9e\u3067\u3001\u3088\u308a\u5e83\u3044\u610f\u5473\u3067Metric learning\u3092\u3084\u3063\u3066\u308b\u4eba\u306f\"Contrastive learning\"\u3068\u3044\u3046\u7528\u8a9e\u306f\u7528\u3044\u306a\u3044\u3068\u3042\u3063\u305f\u304c\u53b3\u5bc6\u306a\u5b9a\u7fa9\u307f\u305f\u3044\u306a\u3082\u306e\u306f\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u3002 \u5206\u985e Contrastive loss Triplet loss + \\(\\\\alpha\\) 3-2-1. Contrastive loss \u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306f\u3053\u306econtrastive loss\u306e\u8003\u6848\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3001\u305d\u306econtrstive loss\u3092\u7d44\u307f\u8fbc\u3093\u3060\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c siamese network(\u30b7\u30e3\u30e0\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) \u3067\u3042\u308b\u3002\u3057\u304b\u3057\u73fe\u5728\u306fcontrastive loss\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4ee5\u4e0b\u306b\u793a\u3059\u3088\u3046\u306atriplet loss\u3084\u305d\u306e\u767a\u5c55\u7684\u306a\u3082\u306e\u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u308a\u3001contrastive loss\u306b\u3064\u3044\u3066\u3082\u5358\u306b\uff12\u679a\u306e\u753b\u50cf\u3092\u5165\u308c\u3066\u305d\u308c\u3089\u306e\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8ddd\u96e2\u304c\u9060\u304f\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u69d8\u3005\u306a\u5de5\u592b\u304c\u3055\u308c\u3066\u3044\u308b\u3002 SimCLR A Simple Framework for Contrastive Learning of Visual Representations \u5358\u306b\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u30c7\u30fc\u30bf\u30aa\u30fc\u30ae\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u306a\u3063\u305f\u753b\u50cf\u3092\u5229\u7528\u3059\u308b\u3002\u307e\u305f\u3001contrastive loss\u306b\u3064\u3044\u3066\u3082\u6539\u826f\u3092\u52a0\u3048\u3066\u5358\u4f4d\u8d85\u7403\u9762\u3067\u8868\u73fe\u3055\u308c\u308b\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8ddd\u96e2\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308bSelf-supervised contrastive loss\u3068\u547c\u3079\u308c\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3002 Supervised SimCLR Supervised Contrastive Learning \u4e0a\u306eSimCLR\u3092\u6539\u826f\u3057\u305f\u3082\u306e\u3067\u3001\u666e\u901a\u306eSimCLR\u306fSelf-supervised\u306b\u884c\u308f\u308c\u308b\u306e\u3067\u305d\u306e\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8868\u73fe\u306f\u3082\u3068\u3082\u3068\u540c\u3058\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u306f\u8003\u616e\u3055\u308c\u306a\u3044\u3002\u3057\u304b\u3057\u76f4\u611f\u3067\u8003\u3048\u308c\u3070\u3001\u540c\u3058\u72ac\u306e\u753b\u50cf\u3067\u3042\u308c\u3070\u5c11\u306a\u304f\u3068\u3082\u732b\u306e\u753b\u50cf\u3088\u308a\u306f\u8fd1\u3044\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u3066\u307b\u3057\u3044\u3002\u3053\u306e\u76f4\u611f\u3092\u7d44\u307f\u8fbc\u3093\u3060\u306e\u304c\u3053\u306e\u8ad6\u6587\u3067\u3042\u308b\u3002 Prototypical Contrastive Learning Prototypical Contrastive Learning of Unsupervised Representations \u3053\u308c\u306f\u5148\u307b\u3069\u306eSupervised SimCLR\u3068\u540c\u3058\u601d\u60f3\u3067\u304b\u3064\u3001\u5b8c\u5168\u306aUnspervised\u306a\u65b9\u6cd5\u306b\u3088\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u3064\u307e\u308a\u5143\u3005\u306e\u5165\u529b\u753b\u50cf\u3068\u3057\u3066\u4f3c\u3066\u3044\u308b\u753b\u50cf\u306f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u3082\u4f3c\u3066\u308b\u306f\u305a\u3060\u3068\u3044\u3046\u601d\u60f3\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3002\u5148\u306b\u5165\u529b\u753b\u50cf\u3092k-means\u3067\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u305d\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u8ddd\u96e2\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u305f\u3002 \u99ac\u306e\u753b\u50cf\u7fa4\u304c\u3061\u3083\u3093\u3068\u9ce5\u306e\u753b\u50cf\u3068\u6bd4\u8f03\u3057\u3066\u8fd1\u304f\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u99ac\u306b\u95a2\u3059\u308b\u753b\u50cf\u7fa4\u306e\u4e2d\u3067\u3082\u3061\u3083\u3093\u3068\u4eba\u304c\u99ac\u306b\u4e57\u3063\u305f\u3082\u306e\u3068\u99ac\u5358\u4f53\u306e\u3082\u306e\u306f\u533a\u5225\u3055\u308c\u3066\u3044\u308b\u3002 3-2-2. Triplet loss + \\(\\\\alpha\\) \u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306e\u59cb\u307e\u308a\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u305fContrasive Loss\u306e\u554f\u984c\u70b9\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u51fa\u3066\u304d\u305f\u624b\u6cd5\u3002\u305f\u3060\u3057\u3053\u308c\u306f\u3053\u308c\u3067\u4ee5\u524d\u306b\u306f\u306a\u304b\u3063\u305f\u554f\u984c\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3055\u3089\u306a\u308b\u6539\u5584\u3092\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\u8a73\u3057\u304f\u306f \u3053\u306e\u30b5\u30a4\u30c8 \u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u78ba\u8a8d\u3057\u3066\u307b\u3057\u3044\u3002 FaceNet A Unified Embedding for Face Recognition and Clustering \u4e00\u756a\u57fa\u672c\u7684\u306aTriplet loss\u3092\u7528\u3044\u308b\u624b\u6cd5 N+1 Tuplet Improved Deep Metric Learning with Multi-class N-pair Loss Objective Triplet\u3092\u4e00\u822c\u306eN\u307e\u3067\u62e1\u5927\u3057\u305f\u624b\u6cd5 \u3088\u308a\u591a\u304f\u306e\u70b9\u3068\u6bd4\u8f03\u3059\u308b\u306e\u3067\u6319\u52d5\u3068\u3057\u3066\u306f\u3088\u308a\u5b89\u5b9a\u3059\u308b\u306f\u305a\u3002 Ranked List Loss Ranked List Loss for Deep Metric Learning \u7279\u5b9a\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u9078\u3076\u308f\u3051\u3067\u306f\u306a\u304f\u5168\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u8003\u616e\u3059\u308b\u306e\u3067\u5b66\u7fd2\u306b\u6709\u52b9\u306a\u30da\u30a2\u3092\u53d6\u308a\u3053\u307c\u3059\u3053\u3068\u304c\u306a\u304f\u306a\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u5f93\u6765\u306fpositive pair\u306b\u3064\u3044\u3066\u306f\u3069\u3053\u307e\u3067\u3082\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u66f4\u65b0\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u3053\u3053\u307e\u3067\u8fd1\u304f\u306a\u308c\u3070\u305d\u308c\u4ee5\u4e0a\u8fd1\u304f\u3057\u306a\u304f\u3066\u826f\u3044\u3068\u3044\u3046\u57fa\u6e96\u3092\u4f5c\u3063\u305f\u3002(\u3053\u306e\u624b\u6cd5\u306f\u3069\u3061\u3089\u304b\u3068\u8a00\u3048\u3070Contrasive loss\u306e\u9032\u5316\u7cfb\u306b\u542b\u3081\u305f\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002) Ranked List Loss\u307e\u3067\u306e\u3082\u306e\u3068\u306e\u6bd4\u8f03\u56f3 3-3. \u305d\u306e\u4ed6 \u8ddd\u96e2\u5b66\u7fd2\u306e\u4e2d\u3067\"positive pair\"\u3067\u3042\u3063\u305f\u308a\"negative pair\"\u3068\u3044\u3046\u6587\u8a00\u304c\u51fa\u3066\u3053\u306a\u3044\u3082\u306e\u3092\u305d\u306e\u4ed6\u306b\u542b\u3081\u3066\u6271\u3046\u3002\u3064\u307e\u308acontrastive loss\u3084triplet loss\u306b\u3088\u308b\u5b66\u7fd2\u3092\u884c\u308f\u306a\u3044\u3082\u306e\u3092\u307e\u3068\u3081\u308b\u3002\u3053\u308c\u306f\u50d5\u306e\u8abf\u67fb\u4e0d\u8db3\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u8ddd\u96e2\u5b66\u7fd2\u306e\u591a\u304f\u304ccontrastive learning\u306e\u6587\u8108\u3067\u6271\u308f\u308c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\u3002\u3002 3-3-1. ArcFace Additive Angular Margin Loss for Deep Face Recognition \u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3092\u8d85\u7403\u9762\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u306e\u4f4d\u7f6e\u3092\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u89d2\u5ea6\u3067\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u3092\u8868\u73fe\u3059\u308bW\u3068\u306e\u306a\u3059\u89d2\u3092 \\(\\\\cos\\\\theta\\) \u3067\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\u3053\u306e \\(\\\\theta\\) \u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u304c\u9060\u304f\u306a\u308b\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b. 4. \u6df1\u5c64\u751f\u6210 \u751f\u6210\u30e2\u30c7\u30eb\u306fUnsupervised\u306e\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\u3053\u3053\u3067\u306f\u751f\u6210\u30e2\u30c7\u30eb\u3092\u4e0a\u306eSemi-supervised\u306e\u30e2\u30c7\u30eb\u306e\u67a0\u7d44\u307f\u3068\u306f\u5225\u306b\u6271\u3046\u3002\u305d\u306e\u7406\u7531\u306f\u751f\u6210\u30e2\u30c7\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u6f5c\u5728\u5909\u6570\u306f\u9ad8\u5ea6\u306b\u62bd\u8c61\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3067\u3042\u308a\u3001\u3053\u306e\u6f5c\u5728\u7a7a\u9593\u304cDisentangled\u306a\u95a2\u4fc2\u306b\u306a\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3067\u304d\u308b\u304b\u3089\u3067\u3042\u308b\u3002 4-1. \u5206\u985e VAE GAN 4-2. Disentangled\u306a\u8868\u73fe\u3068\u5206\u6563\u8868\u73fe \u5165\u529b\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u6570\u3092\u524a\u6e1b\u3057\u3088\u308a\u9ad8\u6b21\u306a\u610f\u5473\u3092\u6301\u3064\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u306b\u3001\u5f97\u3089\u308c\u305f\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u306f\u5165\u529b\u3055\u308c\u305f\u6b21\u5143\u3088\u308a\u3082\u5c0f\u3055\u304f\u3059\u308b\u3002\u3059\u308b\u3068\u65b0\u3057\u304f\u5f97\u3089\u308c\u305f\u8868\u73fe\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6210\u5206\u3092\u5206\u914d\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3067\u304d\u308b\u65b0\u305f\u306a\u60c5\u5831\u3068\u306a\u308a\u3001\u3053\u308c\u3092\u5206\u6563\u8868\u73fe\u3068\u3044\u3046\u3002\u3053\u306e\u5206\u6563\u8868\u73fe\u306f\u5fc5\u305a\u3057\u3082\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u304c\u72ec\u7acb\u306b\u51fa\u529b\u306b\u95a2\u4fc2\u3059\u308b\u8a33\u3067\u306f\u306a\u3044\u3002 \u4e00\u65b9\u3067\u3053\u306e\u3088\u3046\u306a\u65b0\u305f\u306b\u5f97\u308b\u8868\u73fe\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u304c\u51fa\u529b\u306b\u5bfe\u3057\u3066\u72ec\u7acb\u306a\u95a2\u4fc2\u306b\u3042\u308b\u3082\u306e\u3092Disentangled\u306a\u8868\u73fe\u3068\u3044\u3046\u3002\u3064\u307e\u308a\u4f55\u304b\u4e00\u3064\u306e\u6f5c\u5728\u5909\u6570\u3092\u52d5\u304b\u3059\u3068\u7406\u60f3\u7684\u306b\u306f\u51fa\u529b\u306f\u4f55\u304b\u4e00\u3064\u306e\u7279\u5fb4\u306b\u3064\u3044\u3066\u306e\u307f\u5909\u5316\u3059\u308b\u306f\u305a\u3067\u3042\u308b\u3002\u3053\u306e\u3088\u3046\u306bDisentangled\u306a\u8868\u73fe\u3067\u3042\u308c\u3070\u51fa\u529b\u306b\u304a\u3044\u3066\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u304c\u4f55\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u5909\u6570\u306a\u306e\u304b\u304c\u7406\u89e3\u3057\u3084\u3059\u304f\u306a\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u304c\u51fa\u529b\u306e\u306a\u3093\u306e\u7279\u5fb4\u306b\u95a2\u308f\u3063\u3066\u3044\u308b\u304b\u7406\u89e3\u3067\u304d\u308b\u3082\u306e\u3092Interpretable\u306a\u8868\u73fe\u3068\u3044\u3046\u3002 4-3. Disentaglement\u306e\u8a55\u4fa1\u3068Decomposition \u73fe\u72b6\u3067\u306fdisentangled\u3067\u3042\u308b\u3053\u3068\u306b\u5bfe\u3059\u308b\u7d76\u5bfe\u7684\u306a\u8a55\u4fa1\u6cd5\u306f\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u4e0a\u306b\u3001\u65b0\u305f\u306adisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u304c\u51fa\u3066\u304f\u308b\u5ea6\u306b\u65b0\u305f\u306a\u8a55\u4fa1\u6cd5\u3082\u63d0\u6848\u3055\u308c\u3066\u304a\u308a\u3001\u69d8\u3005\u306a\u8a55\u4fa1\u65b9\u304c\u4e71\u7acb\u3057\u3066\u3044\u308b\u3002 \u3053\u3053\u3067Disentanglement\u3068\u306f\u672c\u6765\u3069\u3046\u3042\u3063\u3066\u307b\u3057\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u4e8c\u3064\u306b\u3088\u3063\u3066\u4e3b\u306b\u69cb\u6210\u3055\u308c\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1. Disentanglement\u3055\u308c\u305f\u6f5c\u5728\u5909\u6570\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u7d10\u3065\u3044\u3066\u3044\u308b\u306e\u304b\u7406\u89e3\u3067\u304d\u3001\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b 2. \u6f5c\u5728\u7a7a\u9593\u306e\u69cb\u9020\u3092\u6b63\u3057\u304f\u62bd\u51fa\u3057\u3066\u305d\u308c\u3089\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1\u306f\u3064\u307e\u308a\u3001\u6f5c\u5728\u5909\u6570 \\(z_i\\) \u3092\u5909\u5316\u3055\u305b\u308b\u3068\u751f\u6210\u753b\u50cf\u306e\u4f55\u304c\u5909\u308f\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u7406\u89e3\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308a\u73fe\u5728\u3042\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u6ce8\u529b\u3057\u3066\u3044\u308b\u3002\u500b\u4eba\u7684\u306b\u306f\u3053\u306e\uff11\u306b\u3064\u3044\u3066\u306f Interpretable \u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3068\u601d\u3046\u3002 \u4e00\u65b9\u30672\u304c\u610f\u5473\u3059\u308b\u3068\u3053\u308d\u306f\u3001\u4f8b\u3048\u3070\u4eba\u7a2e\u306a\u3069\u306e\u8907\u6570\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u3088\u3046\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u6f5c\u5728\u7a7a\u9593\u306b\u304a\u3044\u3066\u3082\u8907\u6570\u306e\u8981\u7d20\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u306f\u305a\u3067\u3042\u308b\u3002\u3088\u3063\u3066\u6211\u3005\u304c\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u3088\u3046\u306a\u60c5\u5831\u3092\u6271\u3044\u305f\u304b\u3063\u305f\u3089\u6f5c\u5728\u7a7a\u9593\u304c\u3069\u306e\u3088\u3046\u306a\u69cb\u9020\u3092\u3057\u3066\u3044\u308b\u304b\u7406\u89e3\u3057\u305f\u3044\u3002\u73fe\u5728\u3042\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u6ce8\u529b\u3092\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u3053\u306e2\u307e\u3067\u542b\u3081\u305f\u6982\u5ff5\u3068\u3057\u3066 Decomposition \u3068\u3044\u3046\u7528\u8a9e\u304c\u63d0\u8a00\u3055\u308c\u3066\u3044\u308b\u3002 4-4. \u6df1\u5c64\u751f\u6210\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8 \u30e1\u30ea\u30c3\u30c8 \u30e9\u30d9\u30eb\u4ed8\u304d\u306e\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044(supervised GAN\u3092\u9664\u304f) Disentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u4ed6\u306e\u30bf\u30b9\u30af\u306b\u8ee2\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b \u30c7\u30e1\u30ea\u30c3\u30c8 \u5c64\u3092\u6df1\u304f\u3057\u3066\u8868\u73fe\u80fd\u529b\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u96e3\u3057\u3044 4-5. VAE \u5206\u985e \u6b63\u5247\u5316\u9805\u3092\u52a0\u3048\u308b \u7570\u306a\u308b\u6df1\u3055\u3067\u62bd\u51fa\u3055\u308c\u305f\u968e\u5c64\u6f5c\u5728\u8868\u73fe\u3092\u4f7f\u7528\u3059\u308b\u624b\u6cd5 \u7c21\u5358\u306a\u8aac\u660e VAE\u306e\u76ee\u7684\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b $$ \\log p(x)=D_{KL}[q(z|x)||p(z|x)] + L(x,z) $$ \u3053\u3053\u3067 \\(L(x,z)\\) \u306f\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6c42\u307e\u308b\u3002 $$ L(x,z) := \\underbrace{\\mathbb{E} {q(z|X)}[\\log p(x|z)]} \\ \\underbrace{-\\ D_{KL}[q(z|x)||p(z)]}_{\\rm (ii)} $$ \u3053\u306e\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03 \\(p(x)\\) \u3092\u8868\u73fe\u3059\u308b\u826f\u3044\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306f \\({\\\\rm (i), (ii)}\\) \u306e\u4e8c\u3064\u306e\u8981\u7d20\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 \u3053\u308c\u3089\u306e\u305d\u308c\u305e\u308c\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3042\u308b\u3002 1. \\(\\\\mathbb{E}\\_{q(z|X)}[\\log p(x|z)]\\) : \u518d\u69cb\u6210\u8aa4\u5dee \u3053\u306e\u4e00\u3064\u76ee\u306e\u5f0f\u306fAE\u81ea\u4f53\u306e\u7cbe\u5ea6\u3092\u8868\u3057\u305f\u9805\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u5165\u529b\u30c7\u30fc\u30bf \\(X\\) \u304cEncoder\u3068Decoder\u3092\u901a\u904e\u3057\u3066\u51fa\u3066\u304f\u308b\u51fa\u529b \\(X'\\) \u306b\u3069\u308c\u3050\u3089\u3044\u8fd1\u3044\u304b\u3092\u8868\u3059\u3002 \\(-D_{KL}[q(z|x)||p(z)]\\) : KLD\u9805 \u3053\u308c\u306f\u78ba\u7387\u5206\u5e03 \\(q(z|x)\\) \u3068 \\(P(z)\\) \u304c\u3069\u308c\u3060\u3051\u8fd1\u3044\u304b\u3092\u8868\u3059KL\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306e\u9805\u3067\u3042\u308a\u3001\u4e8c\u3064\u306e\u78ba\u7387\u5206\u5e03\u304c\u8fd1\u3044\u307b\u3069\u3053\u306e \\(-D_{KL}[q(z|x)||p(z)]\\) \u306e\u90e8\u5206\u306f\u5168\u4f53\u3068\u3057\u3066\u5927\u304d\u306a\u5024\u3068\u306a\u308b(\u30de\u30a4\u30ca\u30b9\u304c\u3064\u3044\u3066\u308b\u3053\u3068\u306b\u6ce8\u610f)\u3002VAE\u3067\u306f \\(p(z)\\) \u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u306a\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u304a\u308a\u3001 \u3064\u307e\u308a\u5165\u529b\u30c7\u30fc\u30bf \\(X\\) \u304c\u5199\u50cf\u3055\u308c\u308b\u6f5c\u5728\u7a7a\u9593\u304c\u3069\u308c\u3060\u3051\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u304b\u3092\u8a55\u4fa1\u3057\u3066\u3044\u308b \u3002 4-5-1. \u6b63\u5247\u5316\u9805\u3092\u52a0\u3048\u308b disentangled\u306a\u8868\u73fe\u3092\u5f97\u305f\u3044\u3068\u3044\u3046\u8996\u70b9\u304b\u3089\u898b\u305f\u6642\u306bVAE\u3092\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3057\u305f\u3089\u826f\u3044\u304b\u8003\u308b\u3068\u3001\u3053\u306e\u7b2c\u4e8c\u9805\u76ee\u3067\u8003\u3048\u3066\u3044\u308b\u8fd1\u4f3c\u4e8b\u5f8c\u5206\u5e03 \\(q(z|x)\\) \u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3068disentangled\u306a\u8868\u73fe\u3092\u6301\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3002\u6b63\u5247\u5316\u3092\u4e0e\u3048\u308b\u65b9\u6cd5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u305f\u3002 \u03b2-VAE LEARNING BASIC VISUAL CONCEPTS WITH A CONSTRAINED VARIATIONAL FRAMEWORK[Irina Higgins, et al.] \u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306e\u7b2c\u4e8c\u9805\u306b\u6b63\u5247\u5316\u9805 \\(\\\\beta\\) \u8db3\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3053\u308c\u306b\u3088\u3063\u3066\"Vanilla\" VAE\u3088\u308a\u3082\u8fd1\u4f3c\u4e8b\u5f8c\u5206\u5e03\u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u304f\u306a\u3044\u3068 \\(L(x,z)\\) \u304c\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u8a2d\u8a08\u3057\u305f\u3002\"Vanilla\" VAE\u3067\u306f\u4e00\u3064\u306e\u8981\u7d20(\u89d2\u5ea6\u3084\u7b11\u9854\u306e\u5ea6\u5408\u3044)\u3092\u5909\u3048\u305f\u3044\u306e\u306b\u4eba\u76f8\u3084\u9aea\u306a\u3069\u306e\u4ed6\u306e\u8981\u7d20\u306b\u3064\u3044\u3066\u3082\u5909\u5316\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304c \\(\\\\beta\\) -VAE\u306e\u65b9\u306f\u4ed6\u306e\u8981\u7d20\u3078\u306e\u5f71\u97ff\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002 $$ L(x,z) := \\mathbb{E} {q(z|X)}[\\log p(x|z)]-\\beta\\cdot D [q(z|x)||p(z)] $$ FactorVAE Disentangling by Factorising [Hyunjik Kim, Andriy Mnih] \u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306e\u7b2c\u4e8c\u9805\u3092\u91cd\u8981\u8996\u3057\u3059\u304e\u308b\u3068 \u518d\u69cb\u6210\u8aa4\u5dee \u304c\u8efd\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u751f\u6210\u753b\u50cf\u304c\u307c\u3084\u3051\u3066\u3044\u308b\u554f\u984c\u304c\u3042\u3063\u305f\u3002\u305d\u3053\u3067 \\(\\\\beta\\) -VAE\u306e\u7b2c\u4e8c\u9805\u306b\u3064\u3044\u3066\u6ce8\u76ee\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3055\u3089\u306b\u5206\u89e3\u3067\u304d\u308b\u3002 $$ -\\beta\\cdot D_{KL}[q(z|x)||p(z)]= -\\beta\\cdot\\bigl{ \\underbrace{-I\\bigl(x;z\\bigr)} {\\rm (i)} + \\underbrace{L \\bigl(q(z),p(z)\\bigr)}_{\\rm (ii)}\\bigr} $$ \\(\\\\rm (i)\\) : \u5165\u529b \\(X\\) \u3068\u6f5c\u5728\u5909\u6570 \\(z\\) \u306e\u4f9d\u5b58\u95a2\u4fc2, \\(\\\\rm (ii)\\) : z\u5358\u4f53\u306e\u5206\u5e03\u3068\u4e8b\u524d\u5206\u5e03\u306e\u4e0d\u4e00\u81f4\u5ea6\u5408 \u3053\u3053\u304b\u3089 \\(\\\\beta\\) -VAE\u3067\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3092\u5927\u304d\u304f\u3059\u308b\u305f\u3081\u306b\u7b2c\u4e8c\u9805\u306e\u90e8\u5206\u3092\u5c0f\u3055\u304f\u3057\u3066\u3044\u305f\u306e\u306f \\(\\\\rm (i)\\) \u304b\u3089\u4e8c\u3064\u306e\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u5c0f\u3055\u304f\u3057\u3001\u518d\u69cb\u6210\u8aa4\u5dee\u3092\u5897\u5927\u3055\u305b\u3066\u3044\u305f\u3002\u305d\u3053\u3067\u3053\u308c\u3092\u88dc\u6b63\u3059\u308b\u9805\u3092\u76ee\u7684\u95a2\u6570\u306b\u7d44\u307f\u8fbc\u3093\u3060\u3002\u5177\u4f53\u7684\u306b\u306f Total Correlation\u5236\u7d04 \u3068\u3044\u3046\u5236\u7d04\u9805\u3092\u52a0\u3048\u305f\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b \\(\\\\beta\\) -VAE\u3088\u308a\u3082\u591a\u304f\u306e\u7279\u5fb4\u3092\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u53d6\u308a\u51fa\u305b\u3066\u308b\u3002\u305f\u3060\u3057\u9854\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u306b\u306f\u3042\u307e\u308a\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3002(\u9854\u306f\u7279\u5fb4\u3092\u5206\u985e\u3057\u3084\u3059\u3044\uff1f) 4-5-2. \u7570\u306a\u308b\u6df1\u3055\u3067\u62bd\u51fa\u3055\u308c\u305f\u968e\u5c64\u6f5c\u5728\u8868\u73fe\u3092\u4f7f\u7528\u3059\u308b\u624b\u6cd5 LVAE Ladder Variational Autoencoders(Casper Kaae S\u00f8nderby, Tapani Raiko, Lars Maal\u00f8e, S\u00f8ren Kaae S\u00f8nderby, Ole Winther) \u5f93\u6765\u306eVAE\u304c\u6700\u7d42\u5c64\u304b\u3089\u306e\u307f\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3057\u3066\u3044\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001LVAE\u3067\u306f\u5404\u6df1\u3055\u304b\u3089\u62bd\u8c61\u5ea6\u306e\u7570\u306a\u308b\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3057\u3066\u3044\u308b\u3002VAE\u3067\u306f\u6700\u7d42\u5c64\u306e\u307f\u304b\u3089\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3059\u308b\u3068\u3001\u305d\u306e\u6f5c\u5728\u5909\u6570\u3092\u8abf\u6574\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u305d\u306e\u9593\u306b\u4f55\u5c64\u3082\u3042\u308b\u3068\u305d\u308c\u306f\u96e3\u3057\u304b\u3063\u305f\u304c\u3001\u5404\u5c64\u304b\u3089\u7372\u5f97\u3059\u308b\u3088\u3046\u306b\u6539\u5584\u3059\u308b\u3053\u3068\u3067\u8868\u73fe\u529b\u3092\u5897\u3059\u3053\u3068\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3002 \u307e\u305f\u3001\u672c\u8ad6\u6587\u3067\u306f \\(\\\\beta\\) -VAE\u3068\u540c\u69d8\u306b\u6b63\u5247\u5316\u9805 \\(\\\\beta\\) \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3053\u306e \\(\\\\beta\\) \u3092\u5b66\u7fd2\u306e\u9032\u5ea6\u306b\u5fdc\u3058\u3066 \\([0,1]\\) \u306e\u7bc4\u56f2\u3067\u5f90\u3005\u306b\u5927\u304d\u304f\u3059\u308b (Warm-Up) \u3053\u3068\u306b\u3088\u3063\u3066\u6027\u80fd\u304c\u6539\u5584\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002 pro-VAE Progressive Learning and Disentanglement of Hierarchical Representations[Zhiyuan Li, Jaideep Vitthal Murkute, Prashnna Kumar Gyawali, Linwei Wang] pro-VAE\u306f\u4e0a\u306eLVAE\u306bProgressive Learning\u3092\u5c0e\u5165\u3057\u305f\u3082\u306e\u3002\u6700\u521d\u306f\u5c64\u304c\u6df1\u304f\u62bd\u8c61\u5ea6\u304c\u9ad8\u3044\u3082\u306e\u3060\u3051\u3092\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u3066\u3001\u5b66\u7fd2\u306e\u9032\u5ea6\u306b\u5408\u308f\u305b\u3066\u3088\u308a\u6d45\u3044\u5c64\u306e\u7279\u5fb4\u91cf\u3082\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u53d6\u308a\u5165\u308c\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304f\u3002 \u4ee5\u4e0b\u306e\u56f3\u306fpro-VAE\u3068pro-VAE\u304b\u3089Ladder\u3068\u3044\u3046\u8981\u7d20\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u306e\u3067\u304d\u308bteacher-student model\u306e\u6027\u80fd\u3092\u6bd4\u8f03\u3057\u3066\u3044\u308b\u3002pro-VAE\u306e\u5404\u5c64\u304b\u3089\u5f97\u3089\u308c\u305f\u6f5c\u5728\u5909\u6570\u3092\u5909\u5316\u3055\u305b\u305f\u6642\u306e\u751f\u6210\u753b\u50cf\u306e\u5909\u5316\u3068\u3001teature-student model\u306e\u6700\u7d42\u5c64\u304b\u3089\u5f97\u3089\u308c\u305f\u6f5c\u5728\u5909\u6570\u3092\u5909\u5316\u3055\u305b\u305f\u6642\u306e\u751f\u6210\u753b\u50cf\u306e\u5909\u5316\u6bd4\u8f03\u3059\u308b\u3068\u3001pro-VAE\u306e\u65b9\u304c\u5b66\u7fd2\u304c\u9032\u307f\u3001\u3088\u308a\u591a\u304f\u306e\u5c64\u3092\u751f\u6210\u306b\u7528\u3044\u308b\u3088\u3046\u306b\u306a\u308b\u3068disentangled\u306a\u6f5c\u5728\u5909\u6570\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 4-6. GAN GAN\u306b\u3088\u308bDisentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u8868\u73fe\u5b66\u7fd2\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u985e\u3092\u3057\u3066\u7d39\u4ecb\u3059\u308b\u3002 GAN\u306b\u3088\u308bDisentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u3068\u3044\u3046\u8a66\u307f\u306f InfoGAN \u304b\u3089\u59cb\u307e\u3063\u305f\u3002InfoGAN\u81ea\u4f53\u306f\u5b66\u7fd2\u304c\u4e0d\u5b89\u5b9a\u306a\u306e\u3067\u73fe\u5728\u306f\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u304cDisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u306e\u5148\u99c6\u3051\u3068\u306a\u3063\u305f\u3002 InfoGAN Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets [Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, Pieter Abbeel] \u5206\u985e GAN\u306a\u306e\u306bSupervised\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u7a7a\u9593\u3067\u306e\u5909\u5316\u304cDisentangled\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u306e\u306b\u305d\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u5b66\u7fd2\u30af\u30e9\u30b9\u5206\u985e\u5668\u304c\u5fc5\u8981\u3068\u3055\u308c\u305f\u308a\u3059\u308b\u304b\u3089\u3067\u3042\u308b\u3002 Supervised Self-supervised Unsupervised 4-6-0. \u307e\u3068\u3081 \u305d\u3082\u305d\u3082GAN\u3067\u306edisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u3068\u3044\u3046\u5206\u91ce\u304c\u6700\u8fd1\u59cb\u307e\u3063\u305f\u7814\u7a76\u5206\u91ce\u306a\u306e\u3067\u3069\u306e\u624b\u6cd5\u3082\u65b0\u3057\u304f\u305d\u308c\u307b\u3069\u591a\u304f\u306e\u7814\u7a76\u304c\u307e\u3060\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3069\u308c\u304c\u4e00\u756a\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u4eca\u306e\u6bb5\u968e\u3067\u306f\u65ad\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u304c\u73fe\u6642\u70b9\u306e\u8ad6\u6587\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u305f\u3060\u305d\u308c\u305e\u308c\u306e\u8ad6\u6587\u304c\u81ea\u5206\u306e\u7814\u7a76\u304c\u6bd4\u8f03\u3057\u3066\u512a\u308c\u3066\u3044\u308b\u3068\u4e3b\u5f35\u3059\u308b\u306e\u3067\u3001\u3001\u3001 Supervised \u30b3\u30b9\u30c8\u00d7, \u8868\u73fe\u529b\u25b3 Self-supervised \u30b3\u30b9\u30c8\u25b3, \u8868\u73fe\u529b\u25b3 Unsupervised \u30b3\u30b9\u30c8\u25cb, \u8868\u73fe\u529b\u25cb 4-6-1. Supervised GAN Style GAN AInterpreting the Latent Space of GANs for Semantic Face Editing[Yujun Shen, et al] \u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u3042\u3089\u304b\u3058\u3081\u60f3\u5b9a\u3057\u3066\u30af\u30e9\u30b9\u5206\u985e\u5668\u3092\u5b66\u7fd2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3088\u3063\u3066\u5b66\u7fd2\u3059\u308b\u524d\u304b\u3089\u3069\u306e\u3088\u3046\u306a\u6f5c\u5728\u7a7a\u9593\u306e\u7279\u5fb4\u304c\u51fa\u3066\u304f\u308b\u304b\u60f3\u5b9a\u3057\u305f\u3082\u306e\u304c\u51fa\u3066\u304f\u308b\uff1f\u306e\u306a\u3089\u3053\u308c\u306f\u3053\u308c\u3067\u4fbf\u5229\u3067\u306f\uff1f\u305f\u3060\u3001\u3059\u3054\u304f\u614e\u91cd\u306b\u8a2d\u8a08\u3057\u306a\u3044\u3068\u518d\u73fe\u6027\u306f\u4f4e\u305d\u3046\u3002 4-6-2. Self-supervised GAN ON THE \u201cSTEERABILITY\u201d OF GENERATIVE ADVERSARIAL NETWORKS[Ali Jahanian, Lucy Chai, Phillip Isola] \u30ba\u30fc\u30e0\u3084\u3001\u8272\u5408\u3044\u306a\u3069\u306e\u7c21\u5358\u306a\u753b\u50cf\u7de8\u96c6\u3067\u7372\u5f97\u3067\u304d\u308b\u7279\u5fb4\u306b\u3064\u3044\u3066\u306edisentangled\u306a\u6f5c\u5728\u7a7a\u9593\u3067\u306e\u8868\u73fe\u306fSelf-supervised\u306a\u624b\u6cd5\u3067\u7372\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u304c\u3069\u3053\u307e\u3067\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u5206\u6563\u306b\u4f9d\u5b58\u3059\u308b\u3002 4-6-3. Unsupervised GAN Unsupervised Discovery of Interpretable Directions in the GAN Latent Space [Andrey Voynov Artem Babenko] \u4ed6\u306esupervised\u306a\u65b9\u6cd5\u3068\u540c\u69d8\u306bRotatino\u306a\u3069\u306e\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u3069\u3053\u304c\u80cc\u666f\u304b\u3082\u6349\u3048\u3066\u3044\u3066\u7b46\u8005\u3089\u306f\u3053\u308c\u306f\u4ed6\u306eGAN\u3092\u7528\u3044\u305f\u624b\u6cd5\u3088\u308a\u8868\u73fe\u529b\u304c\u3042\u308b\u3068\u4e3b\u5f35\u3057\u3066\u3044\u305f\u3002\u307e\u305f\u3001\u3053\u306e\u80cc\u666f\u3092\u6349\u3048\u305f\u308a\u3057\u3066\u3044\u308b\u3082\u306e\u304cweakly-supervised\u306a\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u306a\u3069\u306b\u5fdc\u7528\u3067\u304d\u308b\u3068\u3044\u3063\u305f\u4f8b\u3082\u51fa\u3057\u3066\u3044\u305f\u3002 \u53c2\u8003 \u30b5\u30a4\u30c8 \u500b\u4eba\u7684\u306b\u9762\u767d\u304b\u3063\u305fMachine Learning\u8ad6\u6587 in 2019 Deep Learning: A Survey of Surveys Self-Supervised Representation Learning Self-supervised Learning\u306b\u3088\u308b\u7279\u5fb4\u8868\u73fe\u5b66\u7fd2 Disentangle\u306a\u8868\u73fe\u5b66\u7fd2\u306e\u65b0\u624b\u6cd5\uff1aProgressive VLAE\u3092\u89e3\u8aac\uff01 Disentangled \u306a\u8868\u73fe\u306e\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u624b\u6cd5\u306e\u691c\u8a3c \u76f8\u4e92\u60c5\u5831\u91cf\u304b\u3089\u307f\u308bDeep Learning Awesome Image Captioning Disentanglement Survey:Can You Explain How Much Are Generative models Disentangled? \u5909\u5206\u63a8\u8ad6\u306e\u7406\u8ad6 PRML\u5b66\u7fd2\u8005\u304b\u3089\u5165\u308b\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u5165\u9580 \u8ad6\u6587 Recent Advances in Features Extraction and Description Algorithms: A Comprehensive Survey [ Ehab Salahat, Member, IEEE, and Murad Qasaimeh, Member, IEEE] Self-supervised Visual Feature Learning with Deep Neural Networks: A Survey [Longlong Jing and Yingli Tian\u21e4, Fellow, IEEE] A Comprehensive Survey of Deep Learning for Image Captioning","title":"\u8868\u73fe\u5b66\u7fd2\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u306e\u307e\u3068\u3081\u306e\u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_1","text":"\u8868\u73fe\u5b66\u7fd2\u306e\u307e\u3068\u3081\u3067\u3059\u3002\u8868\u73fe\u5b66\u7fd2\u306f\u6700\u8fd1\u6d41\u884c\u308a\u306e\u81ea\u5df1\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3092\u542b\u3080\u975e\u5e38\u306b\u5fdc\u7528\u6027\u306e\u9ad8\u3044\u5b66\u7fd2\u624b\u6cd5\u3067\u3042\u308a\u3001\u69d8\u3005\u306a\u30bf\u30b9\u30af\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305a\u52c9\u5f37\u3059\u308b\u304b\u3061\u3042\u308a\u304b\u3082\uff1f\uff1f","title":"\u8868\u73fe\u5b66\u7fd2\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u306e\u307e\u3068\u3081\u306e\u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#1","text":"\u753b\u50cf\u7b49\u306e\u9ad8\u6b21\u306a\u30c7\u30fc\u30bf\u3092\u3088\u308a\u4f4e\u6b21\u306a\u8868\u73fe\u306b\u5909\u63db\u3059\u308b(\u4f4e\u6b21\u5143\u7a7a\u9593\u306b\u57cb\u3081\u8fbc\u3080)\u3092\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u306b\u3067\u304d\u308b\u3060\u3051\u60c5\u5831\u3092\u5931\u308f\u306a\u3044\u304b\u3064\u3001\u305d\u308c\u305e\u308c\u306e\u5727\u7e2e\u3055\u308c\u305f\u8868\u73fe\u304c\u306a\u306b\u304b\u9ad8\u5ea6\u306a\u610f\u5473\u3092\u6301\u3064\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u3002\u305d\u306e\u76ee\u7684\u306f\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u6319\u3052\u3089\u308c\u308b\u3002 \u8868\u73fe\u3092\u4f4e\u6b21\u5143\u306a\u8868\u73fe\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u8efd\u304f\u3059\u308b \u3088\u308a\u672c\u8cea\u7684\u306a\u60c5\u5831\u3092\u62bd\u8c61\u5316\u3057\u3066\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u3055\u3089\u306b\u4ed6\u306e\u30bf\u30b9\u30af\u3092\u884c\u3044\u3084\u3059\u304f\u3059\u308b \u4e0a\u8a18\u7279\u6027\u306b\u3088\u308bTransfer Learning\u3078\u306e\u9069\u5fdc\u6027\u3092\u9ad8\u3081\u308b","title":"1. \u8868\u73fe\u5b66\u7fd2"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#1-1","text":"\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u30bf\u30b9\u30af\u306b\u3088\u308b\u5b66\u7fd2 \u8ddd\u96e2\u5b66\u7fd2 \u6df1\u5c64\u751f\u6210","title":"1-1. \u8868\u73fe\u5b66\u7fd2\u306e\u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#1-2","text":"\u8868\u73fe\u5b66\u7fd2\u304b\u3089\u5f97\u3089\u308c\u308b\u60c5\u5831\u306f\u7814\u7a76\u306f\u9032\u3093\u3067\u304d\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u305e\u308c\u304c\u4f55\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u304b\u660e\u78ba\u306b\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3002\u6c42\u3081\u305f\u3044\u753b\u50cf\u306e\u4e2d\u306e\u7279\u5fb4\u91cf\u306b\u3088\u3063\u3066\u306f\u5b66\u7fd2\u306b\u3088\u3089\u306a\u3044\u3082\u306e\u3067\u6e08\u3080\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u6700\u8fd1\u306e\u52d5\u5411\u3092\u307e\u3068\u3081\u305fsurvey\u8ad6\u6587\u304c\u4ee5\u4e0b\u3067\u3042\u308b\u3002 Recent Advances in Features Extraction and Description Algorithms: A Comprehensive Survey. Ehab Salahat, Member, IEEE, and Murad Qasaimeh, Member, IEEE","title":"1-2. \u5b66\u7fd2\u3092\u7528\u3044\u306a\u3044\u7279\u5fb4\u62bd\u51fa"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2","text":"","title":"2. \u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u30bf\u30b9\u30af"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-1","text":"Supervised \"Full\"-supervised Semi-supervised Weakly-supervised UnSupervised Self-Supervised","title":"2-1. \u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-supervised","text":"\u3053\u3053\u3067\u306f\u5168\u3066\u30e9\u30d9\u30eb\u3042\u308a\u3067\u5b66\u7fd2\u3092\u884c\u3046\u3044\u308f\u3086\u308bSupervised learning \u3068\u305d\u306e\u4ed6\u306eSemi-supervised learning\u3084Weakly-supervised learning\u3092\u533a\u5225\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u4f55\u304b\u3057\u3089\u306e\u30e9\u30d9\u30eb\u3042\u308a\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3067NN\u306e\u4efb\u610f\u306e\u5c64\u304b\u3089\u7279\u5fb4\u91cf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u624b\u6cd5\u3068\u3057\u3066\u3088\u304f\u4f7f\u308f\u308c\u308b\u3082\u306e\u3092\u6319\u3052\u308b\u3002","title":"2-2. Supervised"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_2","text":"Semantic Segmentation Object Detection Image Cpationing Action Recognition","title":"\u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-0","text":"supervised\u306a\u65b9\u6cd5\u3067\u7279\u5fb4\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306f\u672c\u5f53\u306b\u591a\u7a2e\u591a\u69d8\u306a\u3082\u306e\u304c\u3042\u308a\u3001\u73fe\u72b6\u3067\u306f\u305d\u306e\u30bf\u30b9\u30af\u306eground truth\u306b\u5bfe\u3059\u308b\u7cbe\u5ea6\u3067NN\u304c\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u304b\u5224\u65ad\u3057\u3066\u3044\u308b\u304c\u5b9f\u969b\u306b\u306fNN\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u5b66\u7fd2\u3057\u3066\u3044\u308b\u304b\u306f\u660e\u3089\u304b\u306b\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u7279\u5fb4\u62bd\u51fa\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u898b\u308c\u3070\u305d\u308c\u305e\u308c\u306e\u5c64(\u305d\u306e\u4e2d\u306e\u305d\u308c\u305e\u308c\u306e\u30c1\u30e3\u30cd\u30eb)\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u3044\u308b\u304b\u3092\u660e\u3089\u304b\u306b\u3059\u308b\u306e\u306f\u7c21\u5358\u3067\u306f\u306a\u3044\u3002 \u307e\u305f\u3001 Adversarial machine learning \u306b\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u5b9f\u969b\u306b\u306f\u9ad8\u5ea6\u306a\u610f\u5473\u3067\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u8003\u3048\u3082\u3042\u308a\u3001\u8868\u73fe\u5b66\u7fd2\u3068\u3057\u3066\u306e\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u30bf\u30b9\u30af\u3092\u901a\u3057\u3066\u3001\u305d\u306e\u9014\u4e2d\u306eNN\u304b\u3089\u7279\u5fb4\u8868\u73fe\u3092\u5f97\u308b\u65b9\u6cd5\u306f\u500b\u4eba\u7684\u306b\u306f\u73fe\u6bb5\u968e\u3067\u306f\u307e\u3060\u96e3\u3057\u3044\u306e\u304b\u306a\u3068\u601d\u3063\u305f\u3002","title":"2-2-0. \u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-1-semantic-segmentation","text":"Fully Convolutional Networks for Semantic Segmentation[Jonathan Long, Evan Shelhamer, Trevor Darrell]","title":"2-2-1. Semantic Segmentation"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-2-object-detection","text":"Object Detection\u306f\u7269\u4f53\u304c\u3042\u308a\u305d\u3046\u306a\u9818\u57df\u3092\u53d6\u308a\u51fa\u3057\u3066\u304f\u308b \u691c\u51fa \u90e8\u5206\u3068\u3001\u5b9f\u969b\u306b\u305d\u306e\u9818\u57df\u306b\u7269\u4f53\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u5224\u65ad\u3059\u308b \u8b58\u5225 \u90e8\u5206\u306b\u5206\u304b\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u691c\u51fa\u90e8\u5206\u306e\u69cb\u9020\u306b\u3088\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u985e\u3055\u308c\u3001\u6539\u826f\u3055\u308c\u3066\u304d\u305f\u3002 Faster R-CNN Towards Real-Time Object Detection with Region Proposal Networks \u691c\u51fa\u90e8\u5206\u3068\u8b58\u5225\u90e8\u5206\u3092\u5206\u3051\u3066\u3044\u308b\u3068\u3001\u691c\u51fa\u3055\u308c\u305f\u90e8\u5206\u3092\u6bce\u56de\u6bce\u56deConvNet\u306b\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3053\u308c\u3060\u3068\u30ed\u30b9\u304c\u5927\u304d\u3044\u306e\u3067\u307e\u305aConv layers\u306b\u304b\u3051\u3066\u3001\u305d\u3053\u304b\u3089proposals\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30ed\u30b9\u3092\u5c0f\u3055\u304f\u3057\u305f\u3002\u3064\u307e\u308a\u691c\u51fa\u3068\u8b58\u5225\u3092\u4e00\u3064\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3067\u5b8c\u7d50\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u6700\u9069\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002 YOLO You Only Look Once: Unified, Real-Time Object Detection Faster R-CNN\u3067\u306f\u691c\u51fa\u90e8\u5206\u306e\u51fa\u529b\u3092\u53d7\u3051\u3066\u8b58\u5225\u90e8\u5206\u304c\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3067\u306f\u51e6\u7406\u7cfb\u304c\u76f4\u5217\u306b\u4e26\u3093\u3067\u3044\u308b\u306e\u3067\u540c\u6642\u306b\u51e6\u7406\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u9045\u5ef6\u3092\u751f\u3093\u3067\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u3001YOLO\u3067\u306f\u3053\u308c\u3092\u6539\u5584\u3057\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u826f\u3055\u308c\u305f\u3002","title":"2-2-2. Object Detection"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-3-image-cptioning","text":"\u6b63\u76f4\u3053\u3053\u306f\u304b\u306a\u308a\u8272\u3005\u306a\u624b\u6cd5\u304c\u3042\u3063\u3066\u5916\u89b3\u3092\u63b4\u3081\u306a\u304b\u3063\u305f\u306e\u3067\u4ee5\u4e0b\u306b \u3088\u304f\u307e\u3068\u307e\u3063\u305f\u30b5\u30a4\u30c8 \u3068\u30ea\u30f3\u30af\u306b survey\u8ad6\u6587 \u306a\u3069\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002 Show, Attend and Tell: Neural Image Caption Generation with Visual Attention","title":"2-2-3. Image Cptioning"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-2-4-action-recognition","text":"Action Estimation\u3068\u8abf\u3079\u3066\u3082\u51fa\u3066\u304d\u305d\u3046\u3002\u4e00\u679a\u306e\u9759\u6b62\u753b\u306b\u3064\u3044\u3066\u884c\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308b\u304c\u305d\u308c\u306fImage Captioning\u3068\u91cd\u306a\u308b\u90e8\u5206\u3067\u306f\u3042\u308a\u305d\u3046\u3002\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308b\u3082\u306e\u306f\u52d5\u753b\u306a\u3069\u306e\u9023\u7d9a\u3057\u305f\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4f55\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u3092\u63a8\u5b9a\u3059\u308b\u3002 2D/3D Pose Estimation and Action Recognition using Multitask Deep Learning [Diogo C. Luvizon, David Picard, Hedi Tabia]","title":"2-2-4. Action Recognition"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-unsupervised","text":"\u4ee5\u4e0b\u306fConvNet\u306e\u5229\u7528\u3092\u60f3\u5b9a\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3002 \u3053\u3053\u3067\u306fUnsupervised\u3068\u8a00\u3044\u306a\u304c\u3089\u3001Self-supervised\u306b\u3064\u3044\u3066\u6271\u3063\u3066\u3044\u308b\u3002Unsupervised\u306b\u306fGAN\u306a\u3069\u306e\u751f\u6210\u30e2\u30c7\u30eb\u304c\u8003\u3048\u3089\u308c\u308b\u304c\u3053\u308c\u306f\u500b\u5225\u306b\u6271\u3063\u3066\u3044\u308b\u3002","title":"2-3. Unsupervised"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_3","text":"Self-supervised\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30e9\u30d9\u30eb\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u3082\u306e\u3092\u4f7f\u3046\u3002Self-supervised\u306f \u9054\u6210\u3057\u305f\u3044\u30bf\u30b9\u30af(target tasks) \u306b\u6709\u52b9\u306a\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u8868\u73fe\u3092\u5f97\u308b\u305f\u3081\u306b \u64ec\u4f3c\u7684\u306a\u30bf\u30b9\u30af(pretext tasks) \u3092\u884c\u3046\u3002\u3053\u306epretext tasks\u306b\u3064\u3044\u3066\u69d8\u3005\u306a\u624b\u6cd5\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u4ee5\u4e0b\u306b\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3002 \u307e\u305fSelf-supervised\u3067\u5b66\u7fd2\u3057\u305f\u5024\u3092NN\u306e\u91cd\u307f\u306e\u521d\u671f\u5024\u3068\u3057\u3066\u7528\u3044\u308b\u3053\u3068\u3067\u904e\u5b66\u7fd2\u3092\u9632\u304e\u3001\u5206\u985e\u5668\u306e\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u52b9\u679c\u304c\u3042\u308b\u3002","title":"\u7c21\u5358\u306a\u8aac\u660e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_4","text":"\u30e1\u30ea\u30c3\u30c8 \u30e9\u30d9\u30eb\u4ed8\u304d\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044 \u751f\u6210\u30e2\u30c7\u30eb\u3068\u6bd4\u8f03\u3057\u3066\u7406\u89e3\u3057\u3084\u3059\u3044(\u69cb\u9020\u3092\u8907\u96d1\u306b\u3057\u3084\u3059\u3044) \u30c7\u30e1\u30ea\u30c3\u30c8 \u5f97\u3089\u308c\u305f\u8868\u73fe\u304c\u5b9f\u969b\u306b\u826f\u3044\u8868\u73fe\u306a\u306e\u304b\u305d\u308c\u81ea\u4f53\u3067\u8a55\u4fa1\u3059\u308b\u306e\u306f\u96e3\u3057\u3044 target tasks\u306b\u5165\u529b\u3057\u3066\u8a55\u4fa1\u3059\u308b\u306b\u306f\u73fe\u72b6target task\u3092\u3084\u3089\u305b\u308b\u304c\u3001\u7d50\u5c40ground truth\u304c\u5fc5\u8981\u3068\u306a\u308b","title":"\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_5","text":"\u5177\u4f53\u7684\u306a\u624b\u6cd5\u306f\u4ee5\u4e0b\u306e\uff14\u3064\u306b\u5927\u5225\u3059\u308b 1. Context-Based 2. Free Semantic Label-Based 3. Cross Modal-Based 4. Generation-Based","title":"\u5177\u4f53\u7684\u306a\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-0","text":"\u53c2\u8003\u306b\u3057\u305f\u8ad6\u6587\u3092\u307e\u3068\u3081\u308b\u3068\u3001\u9759\u6b62\u753b\u50cf\u306b\u3064\u3044\u3066\u6700\u3082\u3088\u304f\u7279\u5fb4\u3092\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u65b9\u6cd5\u306f DeepClustering \u3067\u3042\u3063\u305f\u3002\u3053\u308c\u306f\u30af\u30e9\u30b9\u5206\u985e\u30fb\u691c\u51fa\u30fb\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u3067supervised\u306b\u8fd1\u3044\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u305f\u3002 \u4e00\u65b9\u3067\u52d5\u753b\u306b\u3064\u3044\u3066\u306f CubicPuzzle \u304c\u6700\u3082\u9ad8\u3044\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u305f\u304c\u305d\u308c\u3067\u3082supervised\u306a\u3082\u306e\u3068\u306f\u7cbe\u5ea6\u306b\u5927\u304d\u306a\u5dee\u304c\u3042\u3063\u305f\u3002 \u8868\u73fe\u5b66\u7fd2\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u898b\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306eself-supervised\u306a\u624b\u6cd5\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u6ce8\u76ee\u3057\u3066\u3044\u308b\u304b\u306fsupervised\u306a\u624b\u6cd5\u3068\u540c\u69d8\u3067\u308f\u304b\u3089\u306a\u3044\u3002\u307e\u305fself-supervised\u306b\u306f\u305d\u308c\u3068\u306f\u5225\u306b\u3001\u305d\u3082\u305d\u3082\u826f\u3044\u7279\u5fb4\u306b\u6ce8\u76ee\u3067\u304d\u3066\u308b\u304b\u3069\u3046\u304b\u304c\u3001\u5b66\u7fd2\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ee2\u79fb\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308bsupervised\u306a\u624b\u6cd5\u306b\u3088\u308b\u30bf\u30b9\u30af\u3092\u3084\u3063\u3066\u307f\u308b\u3053\u3068\u3067\u8a55\u4fa1\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u81ea\u4f53\u3067\u78ba\u304b\u306b\u826f\u3044\u7279\u5fb4\u306b\u6ce8\u76ee\u3067\u304d\u3066\u3044\u308b\u306e\u304b\u304c\u308f\u304b\u3089\u306a\u3044\u3002","title":"2-3-0. \u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-1-context-based","text":"\u52d5\u753b\u50cf\u306e\u5185\u5bb9\u3092\u7406\u89e3\u3059\u308b\u3057\u3088\u3046\u3068\u3059\u308b\u65b9\u6cd5\u3002 \u5229\u70b9\u3068\u3057\u3066\u306f\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u610f\u5473\u3082\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\u307e\u305f\u3001\u3069\u306e\u30bf\u30b9\u30af\u3068\u3082\u89aa\u548c\u6027\u304c\u9ad8\u304f\u884c\u3044\u3084\u3059\u3044\u3002 \u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u3001\u9ad8\u6b21\u3067\u610f\u5473\u306e\u3042\u308b\u60c5\u5831\u3092\u5143\u306b\u610f\u5473\u3092\u7406\u89e3\u3057\u3066pretext tasks\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u304b\u306f\u308f\u304b\u3089\u306a\u3044\u3002\u4f8b\u3048\u3070\u30d1\u30ba\u30eb\u3092\u4e26\u3079\u66ff\u3048\u308b\u554f\u984c\u306b\u3057\u3066\u3082\u3001\u305d\u306e\u30d1\u30ba\u30eb\u306e\u8272\u3084\u7aef\u306e\u7e4b\u304c\u308a\u3060\u3051\u3092\u6c17\u306b\u3057\u3066\u89e3\u3044\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002 DeepCluster Deep Clustering for Unsupervised Learning of Visual Features [Mathilde Caron+, ECCV2018] \u307e\u305a\u5165\u529b\u753b\u50cf\u3092Convnet\u306b\u5165\u529b\u3057\u3066\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u3092\u5f97\u308b\u3002\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u306fConvnet\u306e\u307f\u3092\u7528\u3044\u3001\u5168\u7d50\u5408\u5c64\u306f\u3053\u3053\u307e\u3067\u3067\u306f\u7528\u3044\u306a\u3044\u3002\u7279\u5fb4\u91cf\u30de\u30c3\u30d7\u4e0a\u3067PCA,L2\u6b63\u5247\u5316\u3092\u884c\u3044\u6b21\u5143\u5727\u7e2e\u3092\u884c\u306a\u3063\u305f\u3082\u306e\u306bk-means\u3092\u5b9f\u884c\u3057\u3066Pseudo-label\u3092\u4ed8\u4e0e\u3059\u308b\u3002\u3053\u306ePseudo-label\u3092\u5143\u306b\u3057\u3066Classification\u3092\u884c\u3044\u5b66\u7fd2\u3092\u884c\u3046\u3002 Jigsaw Puzzle++ Noroozi et al., \u201cBoosting Self-Supervised Learning via Knowledge Transfer \u201d, CVPR 2018. \u4e8c\u679a\u306e\u753b\u50cf\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30d1\u30ba\u30eb\u3092\u89e3\u304b\u305b\u308b Learning and Using the Arrow of Time Donglai Wei, Joseph Lim, Andrew Zisserman and William T. Freeman Harvard University University of Southern California University of Oxford Massachusetts Institute of Technology Google Research \u52d5\u753b\u306b\u304a\u3044\u3066\u6642\u9593\u304c\u9032\u3093\u3067\u3044\u308b\u306e\u304b\u623b\u3063\u3066\u3044\u308b\u306e\u304b\u5224\u65ad\u3055\u305b\u308b","title":"2-3-1. Context-Based"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-2-generation-based","text":"\u53c2\u8003\u306b\u3057\u305f\u8ad6\u6587\u3067\u306fVAE\u3084GAN\u3092\u542b\u3081\u3066Generation-Based\u3068\u3057\u3066\u3044\u305f\u304c\u3053\u3053\u3067\u306f\u305d\u308c\u3089\u306f\u4ee5\u4e0b\u3067\u751f\u6210\u30e2\u30c7\u30eb\u3068\u3057\u3066\u500b\u5225\u306b\u6271\u3046\u3002\u3053\u3053\u3067\u3044\u3046Generation-Based\u3068\u306f\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u4f55\u304b\u3057\u3089\u306e\u60c5\u5831\u3092\u306a\u304f\u3057\u305f\u3082\u306e\u306b\u5bfe\u3057\u3066NN\u3092\u7528\u3044\u3066\u518d\u69cb\u6210\u3055\u305b\u308b\u3082\u306e\u3092\u6307\u3059\u3002 Context Encoders: Feature Learning by Inpainting \u753b\u50cf\u306e\u4e00\u90e8\u5206\u3092\u304f\u308a\u629c\u3044\u305f\u3082\u306e\u3092NN\u306b\u518d\u69cb\u6210\u3055\u305b\u308b Colorful Image Colorization \u8272\u306e\u60c5\u5831\u3092\u306a\u304f\u3057\u305f\u5165\u529b\u306b\u5bfe\u3057\u3066NN\u306b\u8272\u3092\u5857\u3089\u305b\u308b","title":"2-3-2. Generation-Based"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-3-free-semantic-lavel-based","text":"\u4eba\u9593\u306e\u89e3\u91c8\u3092\u4ecb\u5165\u3055\u305b\u306a\u3044\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3055\u305b\u308b\u65b9\u6cd5\u3002(\u3053\u308c\u3092\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u3068\u3044\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u305a\u308b\u3044\u306e\u3067\u306f\uff1f\uff09\u4eba\u9593\u306e\u89e3\u91c8\u3092\u4ecb\u5165\u3055\u305b\u306a\u3044\u30e9\u30d9\u30eb\u3068\u306f\u3001Depth\u3084\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3001\u6cd5\u7dda\u60c5\u5831\u306a\u3069\u304c\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u666e\u901a\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u308b\u3002 \u5229\u70b9\u3068\u3057\u3066\u306f\u4ed6\u306eself-supervised\u306e\u65b9\u6cd5\u3088\u308a\u3082\u7279\u5fb4\u3092\u6349\u3048\u3055\u305b\u3084\u3059\u3044\u3002 \u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u307e\u305a\u305d\u306e\u3088\u3046\u306a\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u305b\u3066\u4f5c\u3089\u305b\u305f\u30e9\u30d9\u30eb\u306b\u306f\u30ce\u30a4\u30ba\u304c\u591a\u3044\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u308b\u3002 Cross-Domain Self-supervised Multi-task Feature Learning using Synthetic Imagery[Zhongzheng Ren and Yong Jae Lee University of California, Davis] \u30cf\u30fc\u30c9\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u305b\u305f\u3082\u306e\u306b\u3088\u3063\u3066\u751f\u6210\u3057\u305f\u5408\u6210\u753b\u50cf\u3067\u5b66\u7fd2\u3055\u305b\u3066\u3001\u5b9f\u4e16\u754c\u306e\u30ea\u30a2\u30eb\u753b\u50cf\u3067\u30c9\u30e1\u30a4\u30f3\u5b66\u7fd2\u3055\u305b\u308b","title":"2-3-3. Free Semantic Lavel-Based"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#2-3-4-cross-modal-based-learning","text":"\u52d5\u753b\u306e\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001\u9023\u7d9a\u7684\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u5236\u7d04\u3068\u3057\u3066\u5b66\u7fd2\u3092\u9032\u3081\u308b\u65b9\u5f0f\u3002\u5177\u4f53\u7684\u306b\u52d5\u753b\u3067\u9023\u7d9a\u7684\u306b\u306a\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3068\u306f\u3001 RGB\u306e\u5024\u3001 \u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc \u3001\u97f3\u306e\u30c7\u30fc\u30bf\u3001\u30ab\u30e1\u30e9\u306e\u30dd\u30fc\u30ba \u306a\u3069\u304c\u6319\u3052\u308c\u3089\u308c\u308b\u3002 Tracking Emerges by Colorizing Videos[Carl Vondrick, Abhinav Shrivastava, Alireza Fathi, Sergio Guadarrama, Kevin Murphy] \u3042\u308b\u7269\u4f53\u306f\u9023\u7d9a\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u9593\u3067\u52d5\u304f\u304c\u3001\u8272\u306f\u540c\u3058\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u4eba\u9593\u304c\u30ec\u30d9\u30eb\u3092\u3064\u3051\u308b\u3053\u3068\u306a\u304f\u7269\u4f53\u306e\u52d5\u304d\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"2-3-4. Cross Modal-based Learning"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3","text":"","title":"3. \u8ddd\u96e2\u5b66\u7fd2"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-1","text":"\u8ddd\u96e2\u5b66\u7fd2(Metric Learning) Contrastive Learning \u305d\u306e\u4ed6","title":"3-1. \u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-2-contrastive-learning","text":"\u3053\u3053\u3067\u306fContrasive Learning\u306e\u5b9a\u7fa9\u3068\u3057\u3066\u306f\"positive pair\"\u3084\"negative pair\"\u3068\u3044\u3063\u305f\u6982\u5ff5\u304c\u51fa\u3066\u304f\u308b\u3082\u306e\u3092\u8ddd\u96e2\u5b66\u7fd2\u306b\u304a\u3051\u308bContrastive learning\u3068\u3059\u308b\u3002 \u4eba\u306b\u3088\u3063\u3066\u306fContrastive learning\u306fself-supervised\u306e\u6587\u8108\u3067\u4f7f\u308f\u308c\u308b\u7528\u8a9e\u3067\u3001\u3088\u308a\u5e83\u3044\u610f\u5473\u3067Metric learning\u3092\u3084\u3063\u3066\u308b\u4eba\u306f\"Contrastive learning\"\u3068\u3044\u3046\u7528\u8a9e\u306f\u7528\u3044\u306a\u3044\u3068\u3042\u3063\u305f\u304c\u53b3\u5bc6\u306a\u5b9a\u7fa9\u307f\u305f\u3044\u306a\u3082\u306e\u306f\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u3002","title":"3-2. Contrastive Learning"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_6","text":"Contrastive loss Triplet loss + \\(\\\\alpha\\)","title":"\u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-2-1-contrastive-loss","text":"\u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306f\u3053\u306econtrastive loss\u306e\u8003\u6848\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3001\u305d\u306econtrstive loss\u3092\u7d44\u307f\u8fbc\u3093\u3060\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c siamese network(\u30b7\u30e3\u30e0\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) \u3067\u3042\u308b\u3002\u3057\u304b\u3057\u73fe\u5728\u306fcontrastive loss\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4ee5\u4e0b\u306b\u793a\u3059\u3088\u3046\u306atriplet loss\u3084\u305d\u306e\u767a\u5c55\u7684\u306a\u3082\u306e\u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u308a\u3001contrastive loss\u306b\u3064\u3044\u3066\u3082\u5358\u306b\uff12\u679a\u306e\u753b\u50cf\u3092\u5165\u308c\u3066\u305d\u308c\u3089\u306e\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8ddd\u96e2\u304c\u9060\u304f\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u69d8\u3005\u306a\u5de5\u592b\u304c\u3055\u308c\u3066\u3044\u308b\u3002 SimCLR A Simple Framework for Contrastive Learning of Visual Representations \u5358\u306b\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u30c7\u30fc\u30bf\u30aa\u30fc\u30ae\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u306a\u3063\u305f\u753b\u50cf\u3092\u5229\u7528\u3059\u308b\u3002\u307e\u305f\u3001contrastive loss\u306b\u3064\u3044\u3066\u3082\u6539\u826f\u3092\u52a0\u3048\u3066\u5358\u4f4d\u8d85\u7403\u9762\u3067\u8868\u73fe\u3055\u308c\u308b\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8ddd\u96e2\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308bSelf-supervised contrastive loss\u3068\u547c\u3079\u308c\u308b\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3002 Supervised SimCLR Supervised Contrastive Learning \u4e0a\u306eSimCLR\u3092\u6539\u826f\u3057\u305f\u3082\u306e\u3067\u3001\u666e\u901a\u306eSimCLR\u306fSelf-supervised\u306b\u884c\u308f\u308c\u308b\u306e\u3067\u305d\u306e\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u8868\u73fe\u306f\u3082\u3068\u3082\u3068\u540c\u3058\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u306f\u8003\u616e\u3055\u308c\u306a\u3044\u3002\u3057\u304b\u3057\u76f4\u611f\u3067\u8003\u3048\u308c\u3070\u3001\u540c\u3058\u72ac\u306e\u753b\u50cf\u3067\u3042\u308c\u3070\u5c11\u306a\u304f\u3068\u3082\u732b\u306e\u753b\u50cf\u3088\u308a\u306f\u8fd1\u3044\u95a2\u4fc2\u306b\u306a\u3063\u3066\u3044\u3066\u307b\u3057\u3044\u3002\u3053\u306e\u76f4\u611f\u3092\u7d44\u307f\u8fbc\u3093\u3060\u306e\u304c\u3053\u306e\u8ad6\u6587\u3067\u3042\u308b\u3002 Prototypical Contrastive Learning Prototypical Contrastive Learning of Unsupervised Representations \u3053\u308c\u306f\u5148\u307b\u3069\u306eSupervised SimCLR\u3068\u540c\u3058\u601d\u60f3\u3067\u304b\u3064\u3001\u5b8c\u5168\u306aUnspervised\u306a\u65b9\u6cd5\u306b\u3088\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u3064\u307e\u308a\u5143\u3005\u306e\u5165\u529b\u753b\u50cf\u3068\u3057\u3066\u4f3c\u3066\u3044\u308b\u753b\u50cf\u306f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u3082\u4f3c\u3066\u308b\u306f\u305a\u3060\u3068\u3044\u3046\u601d\u60f3\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3002\u5148\u306b\u5165\u529b\u753b\u50cf\u3092k-means\u3067\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u305d\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u8ddd\u96e2\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u7cbe\u5ea6\u304c\u4e0a\u304c\u3063\u305f\u3002 \u99ac\u306e\u753b\u50cf\u7fa4\u304c\u3061\u3083\u3093\u3068\u9ce5\u306e\u753b\u50cf\u3068\u6bd4\u8f03\u3057\u3066\u8fd1\u304f\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u99ac\u306b\u95a2\u3059\u308b\u753b\u50cf\u7fa4\u306e\u4e2d\u3067\u3082\u3061\u3083\u3093\u3068\u4eba\u304c\u99ac\u306b\u4e57\u3063\u305f\u3082\u306e\u3068\u99ac\u5358\u4f53\u306e\u3082\u306e\u306f\u533a\u5225\u3055\u308c\u3066\u3044\u308b\u3002","title":"3-2-1. Contrastive loss"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-2-2-triplet-loss-alpha","text":"\u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306e\u59cb\u307e\u308a\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u305fContrasive Loss\u306e\u554f\u984c\u70b9\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u51fa\u3066\u304d\u305f\u624b\u6cd5\u3002\u305f\u3060\u3057\u3053\u308c\u306f\u3053\u308c\u3067\u4ee5\u524d\u306b\u306f\u306a\u304b\u3063\u305f\u554f\u984c\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3055\u3089\u306a\u308b\u6539\u5584\u3092\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\u8a73\u3057\u304f\u306f \u3053\u306e\u30b5\u30a4\u30c8 \u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u78ba\u8a8d\u3057\u3066\u307b\u3057\u3044\u3002 FaceNet A Unified Embedding for Face Recognition and Clustering \u4e00\u756a\u57fa\u672c\u7684\u306aTriplet loss\u3092\u7528\u3044\u308b\u624b\u6cd5 N+1 Tuplet Improved Deep Metric Learning with Multi-class N-pair Loss Objective Triplet\u3092\u4e00\u822c\u306eN\u307e\u3067\u62e1\u5927\u3057\u305f\u624b\u6cd5 \u3088\u308a\u591a\u304f\u306e\u70b9\u3068\u6bd4\u8f03\u3059\u308b\u306e\u3067\u6319\u52d5\u3068\u3057\u3066\u306f\u3088\u308a\u5b89\u5b9a\u3059\u308b\u306f\u305a\u3002 Ranked List Loss Ranked List Loss for Deep Metric Learning \u7279\u5b9a\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u9078\u3076\u308f\u3051\u3067\u306f\u306a\u304f\u5168\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u8003\u616e\u3059\u308b\u306e\u3067\u5b66\u7fd2\u306b\u6709\u52b9\u306a\u30da\u30a2\u3092\u53d6\u308a\u3053\u307c\u3059\u3053\u3068\u304c\u306a\u304f\u306a\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u5f93\u6765\u306fpositive pair\u306b\u3064\u3044\u3066\u306f\u3069\u3053\u307e\u3067\u3082\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u66f4\u65b0\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u3053\u3053\u307e\u3067\u8fd1\u304f\u306a\u308c\u3070\u305d\u308c\u4ee5\u4e0a\u8fd1\u304f\u3057\u306a\u304f\u3066\u826f\u3044\u3068\u3044\u3046\u57fa\u6e96\u3092\u4f5c\u3063\u305f\u3002(\u3053\u306e\u624b\u6cd5\u306f\u3069\u3061\u3089\u304b\u3068\u8a00\u3048\u3070Contrasive loss\u306e\u9032\u5316\u7cfb\u306b\u542b\u3081\u305f\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002) Ranked List Loss\u307e\u3067\u306e\u3082\u306e\u3068\u306e\u6bd4\u8f03\u56f3","title":"3-2-2. Triplet loss + \\(\\\\alpha\\)"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-3","text":"\u8ddd\u96e2\u5b66\u7fd2\u306e\u4e2d\u3067\"positive pair\"\u3067\u3042\u3063\u305f\u308a\"negative pair\"\u3068\u3044\u3046\u6587\u8a00\u304c\u51fa\u3066\u3053\u306a\u3044\u3082\u306e\u3092\u305d\u306e\u4ed6\u306b\u542b\u3081\u3066\u6271\u3046\u3002\u3064\u307e\u308acontrastive loss\u3084triplet loss\u306b\u3088\u308b\u5b66\u7fd2\u3092\u884c\u308f\u306a\u3044\u3082\u306e\u3092\u307e\u3068\u3081\u308b\u3002\u3053\u308c\u306f\u50d5\u306e\u8abf\u67fb\u4e0d\u8db3\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u8ddd\u96e2\u5b66\u7fd2\u306e\u591a\u304f\u304ccontrastive learning\u306e\u6587\u8108\u3067\u6271\u308f\u308c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\u3002\u3002","title":"3-3. \u305d\u306e\u4ed6"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#3-3-1-arcface","text":"Additive Angular Margin Loss for Deep Face Recognition \u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3092\u8d85\u7403\u9762\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u306e\u4f4d\u7f6e\u3092\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u3067\u306e\u89d2\u5ea6\u3067\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u3092\u8868\u73fe\u3059\u308bW\u3068\u306e\u306a\u3059\u89d2\u3092 \\(\\\\cos\\\\theta\\) \u3067\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\u3053\u306e \\(\\\\theta\\) \u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u304c\u9060\u304f\u306a\u308b\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b.","title":"3-3-1. ArcFace"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4","text":"\u751f\u6210\u30e2\u30c7\u30eb\u306fUnsupervised\u306e\u30e2\u30c7\u30eb\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\u3053\u3053\u3067\u306f\u751f\u6210\u30e2\u30c7\u30eb\u3092\u4e0a\u306eSemi-supervised\u306e\u30e2\u30c7\u30eb\u306e\u67a0\u7d44\u307f\u3068\u306f\u5225\u306b\u6271\u3046\u3002\u305d\u306e\u7406\u7531\u306f\u751f\u6210\u30e2\u30c7\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u6f5c\u5728\u5909\u6570\u306f\u9ad8\u5ea6\u306b\u62bd\u8c61\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3067\u3042\u308a\u3001\u3053\u306e\u6f5c\u5728\u7a7a\u9593\u304cDisentangled\u306a\u95a2\u4fc2\u306b\u306a\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3067\u304d\u308b\u304b\u3089\u3067\u3042\u308b\u3002","title":"4. \u6df1\u5c64\u751f\u6210"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-1","text":"VAE GAN","title":"4-1. \u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-2-disentangled","text":"\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u6570\u3092\u524a\u6e1b\u3057\u3088\u308a\u9ad8\u6b21\u306a\u610f\u5473\u3092\u6301\u3064\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u306b\u3001\u5f97\u3089\u308c\u305f\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u306f\u5165\u529b\u3055\u308c\u305f\u6b21\u5143\u3088\u308a\u3082\u5c0f\u3055\u304f\u3059\u308b\u3002\u3059\u308b\u3068\u65b0\u3057\u304f\u5f97\u3089\u308c\u305f\u8868\u73fe\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6210\u5206\u3092\u5206\u914d\u3057\u3066\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3067\u304d\u308b\u65b0\u305f\u306a\u60c5\u5831\u3068\u306a\u308a\u3001\u3053\u308c\u3092\u5206\u6563\u8868\u73fe\u3068\u3044\u3046\u3002\u3053\u306e\u5206\u6563\u8868\u73fe\u306f\u5fc5\u305a\u3057\u3082\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u304c\u72ec\u7acb\u306b\u51fa\u529b\u306b\u95a2\u4fc2\u3059\u308b\u8a33\u3067\u306f\u306a\u3044\u3002 \u4e00\u65b9\u3067\u3053\u306e\u3088\u3046\u306a\u65b0\u305f\u306b\u5f97\u308b\u8868\u73fe\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8868\u73fe\u304c\u51fa\u529b\u306b\u5bfe\u3057\u3066\u72ec\u7acb\u306a\u95a2\u4fc2\u306b\u3042\u308b\u3082\u306e\u3092Disentangled\u306a\u8868\u73fe\u3068\u3044\u3046\u3002\u3064\u307e\u308a\u4f55\u304b\u4e00\u3064\u306e\u6f5c\u5728\u5909\u6570\u3092\u52d5\u304b\u3059\u3068\u7406\u60f3\u7684\u306b\u306f\u51fa\u529b\u306f\u4f55\u304b\u4e00\u3064\u306e\u7279\u5fb4\u306b\u3064\u3044\u3066\u306e\u307f\u5909\u5316\u3059\u308b\u306f\u305a\u3067\u3042\u308b\u3002\u3053\u306e\u3088\u3046\u306bDisentangled\u306a\u8868\u73fe\u3067\u3042\u308c\u3070\u51fa\u529b\u306b\u304a\u3044\u3066\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u304c\u4f55\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u5909\u6570\u306a\u306e\u304b\u304c\u7406\u89e3\u3057\u3084\u3059\u304f\u306a\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u304c\u51fa\u529b\u306e\u306a\u3093\u306e\u7279\u5fb4\u306b\u95a2\u308f\u3063\u3066\u3044\u308b\u304b\u7406\u89e3\u3067\u304d\u308b\u3082\u306e\u3092Interpretable\u306a\u8868\u73fe\u3068\u3044\u3046\u3002","title":"4-2. Disentangled\u306a\u8868\u73fe\u3068\u5206\u6563\u8868\u73fe"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-3-disentaglementdecomposition","text":"\u73fe\u72b6\u3067\u306fdisentangled\u3067\u3042\u308b\u3053\u3068\u306b\u5bfe\u3059\u308b\u7d76\u5bfe\u7684\u306a\u8a55\u4fa1\u6cd5\u306f\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u4e0a\u306b\u3001\u65b0\u305f\u306adisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u304c\u51fa\u3066\u304f\u308b\u5ea6\u306b\u65b0\u305f\u306a\u8a55\u4fa1\u6cd5\u3082\u63d0\u6848\u3055\u308c\u3066\u304a\u308a\u3001\u69d8\u3005\u306a\u8a55\u4fa1\u65b9\u304c\u4e71\u7acb\u3057\u3066\u3044\u308b\u3002 \u3053\u3053\u3067Disentanglement\u3068\u306f\u672c\u6765\u3069\u3046\u3042\u3063\u3066\u307b\u3057\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u4e8c\u3064\u306b\u3088\u3063\u3066\u4e3b\u306b\u69cb\u6210\u3055\u308c\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1. Disentanglement\u3055\u308c\u305f\u6f5c\u5728\u5909\u6570\u304c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u306b\u7d10\u3065\u3044\u3066\u3044\u308b\u306e\u304b\u7406\u89e3\u3067\u304d\u3001\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b 2. \u6f5c\u5728\u7a7a\u9593\u306e\u69cb\u9020\u3092\u6b63\u3057\u304f\u62bd\u51fa\u3057\u3066\u305d\u308c\u3089\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1\u306f\u3064\u307e\u308a\u3001\u6f5c\u5728\u5909\u6570 \\(z_i\\) \u3092\u5909\u5316\u3055\u305b\u308b\u3068\u751f\u6210\u753b\u50cf\u306e\u4f55\u304c\u5909\u308f\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u7406\u89e3\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308a\u73fe\u5728\u3042\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u6ce8\u529b\u3057\u3066\u3044\u308b\u3002\u500b\u4eba\u7684\u306b\u306f\u3053\u306e\uff11\u306b\u3064\u3044\u3066\u306f Interpretable \u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3068\u601d\u3046\u3002 \u4e00\u65b9\u30672\u304c\u610f\u5473\u3059\u308b\u3068\u3053\u308d\u306f\u3001\u4f8b\u3048\u3070\u4eba\u7a2e\u306a\u3069\u306e\u8907\u6570\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u3088\u3046\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u6f5c\u5728\u7a7a\u9593\u306b\u304a\u3044\u3066\u3082\u8907\u6570\u306e\u8981\u7d20\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u306f\u305a\u3067\u3042\u308b\u3002\u3088\u3063\u3066\u6211\u3005\u304c\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u3088\u3046\u306a\u60c5\u5831\u3092\u6271\u3044\u305f\u304b\u3063\u305f\u3089\u6f5c\u5728\u7a7a\u9593\u304c\u3069\u306e\u3088\u3046\u306a\u69cb\u9020\u3092\u3057\u3066\u3044\u308b\u304b\u7406\u89e3\u3057\u305f\u3044\u3002\u73fe\u5728\u3042\u308b\u8a55\u4fa1\u6307\u6a19\u306f\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u6ce8\u529b\u3092\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u3053\u306e2\u307e\u3067\u542b\u3081\u305f\u6982\u5ff5\u3068\u3057\u3066 Decomposition \u3068\u3044\u3046\u7528\u8a9e\u304c\u63d0\u8a00\u3055\u308c\u3066\u3044\u308b\u3002","title":"4-3. Disentaglement\u306e\u8a55\u4fa1\u3068Decomposition"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-4","text":"\u30e1\u30ea\u30c3\u30c8 \u30e9\u30d9\u30eb\u4ed8\u304d\u306e\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044(supervised GAN\u3092\u9664\u304f) Disentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\u4ed6\u306e\u30bf\u30b9\u30af\u306b\u8ee2\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b \u30c7\u30e1\u30ea\u30c3\u30c8 \u5c64\u3092\u6df1\u304f\u3057\u3066\u8868\u73fe\u80fd\u529b\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u96e3\u3057\u3044","title":"4-4. \u6df1\u5c64\u751f\u6210\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-5-vae","text":"","title":"4-5. VAE"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_7","text":"\u6b63\u5247\u5316\u9805\u3092\u52a0\u3048\u308b \u7570\u306a\u308b\u6df1\u3055\u3067\u62bd\u51fa\u3055\u308c\u305f\u968e\u5c64\u6f5c\u5728\u8868\u73fe\u3092\u4f7f\u7528\u3059\u308b\u624b\u6cd5","title":"\u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_8","text":"VAE\u306e\u76ee\u7684\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u3055\u308c\u308b $$ \\log p(x)=D_{KL}[q(z|x)||p(z|x)] + L(x,z) $$ \u3053\u3053\u3067 \\(L(x,z)\\) \u306f\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6c42\u307e\u308b\u3002 $$ L(x,z) := \\underbrace{\\mathbb{E} {q(z|X)}[\\log p(x|z)]} \\ \\underbrace{-\\ D_{KL}[q(z|x)||p(z)]}_{\\rm (ii)} $$ \u3053\u306e\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03 \\(p(x)\\) \u3092\u8868\u73fe\u3059\u308b\u826f\u3044\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306f \\({\\\\rm (i), (ii)}\\) \u306e\u4e8c\u3064\u306e\u8981\u7d20\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 \u3053\u308c\u3089\u306e\u305d\u308c\u305e\u308c\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3042\u308b\u3002 1. \\(\\\\mathbb{E}\\_{q(z|X)}[\\log p(x|z)]\\) : \u518d\u69cb\u6210\u8aa4\u5dee \u3053\u306e\u4e00\u3064\u76ee\u306e\u5f0f\u306fAE\u81ea\u4f53\u306e\u7cbe\u5ea6\u3092\u8868\u3057\u305f\u9805\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u5165\u529b\u30c7\u30fc\u30bf \\(X\\) \u304cEncoder\u3068Decoder\u3092\u901a\u904e\u3057\u3066\u51fa\u3066\u304f\u308b\u51fa\u529b \\(X'\\) \u306b\u3069\u308c\u3050\u3089\u3044\u8fd1\u3044\u304b\u3092\u8868\u3059\u3002 \\(-D_{KL}[q(z|x)||p(z)]\\) : KLD\u9805 \u3053\u308c\u306f\u78ba\u7387\u5206\u5e03 \\(q(z|x)\\) \u3068 \\(P(z)\\) \u304c\u3069\u308c\u3060\u3051\u8fd1\u3044\u304b\u3092\u8868\u3059KL\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306e\u9805\u3067\u3042\u308a\u3001\u4e8c\u3064\u306e\u78ba\u7387\u5206\u5e03\u304c\u8fd1\u3044\u307b\u3069\u3053\u306e \\(-D_{KL}[q(z|x)||p(z)]\\) \u306e\u90e8\u5206\u306f\u5168\u4f53\u3068\u3057\u3066\u5927\u304d\u306a\u5024\u3068\u306a\u308b(\u30de\u30a4\u30ca\u30b9\u304c\u3064\u3044\u3066\u308b\u3053\u3068\u306b\u6ce8\u610f)\u3002VAE\u3067\u306f \\(p(z)\\) \u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u306a\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u304a\u308a\u3001 \u3064\u307e\u308a\u5165\u529b\u30c7\u30fc\u30bf \\(X\\) \u304c\u5199\u50cf\u3055\u308c\u308b\u6f5c\u5728\u7a7a\u9593\u304c\u3069\u308c\u3060\u3051\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u304b\u3092\u8a55\u4fa1\u3057\u3066\u3044\u308b \u3002","title":"\u7c21\u5358\u306a\u8aac\u660e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-5-1","text":"disentangled\u306a\u8868\u73fe\u3092\u5f97\u305f\u3044\u3068\u3044\u3046\u8996\u70b9\u304b\u3089\u898b\u305f\u6642\u306bVAE\u3092\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3057\u305f\u3089\u826f\u3044\u304b\u8003\u308b\u3068\u3001\u3053\u306e\u7b2c\u4e8c\u9805\u76ee\u3067\u8003\u3048\u3066\u3044\u308b\u8fd1\u4f3c\u4e8b\u5f8c\u5206\u5e03 \\(q(z|x)\\) \u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3068disentangled\u306a\u8868\u73fe\u3092\u6301\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3002\u6b63\u5247\u5316\u3092\u4e0e\u3048\u308b\u65b9\u6cd5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u305f\u3002 \u03b2-VAE LEARNING BASIC VISUAL CONCEPTS WITH A CONSTRAINED VARIATIONAL FRAMEWORK[Irina Higgins, et al.] \u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306e\u7b2c\u4e8c\u9805\u306b\u6b63\u5247\u5316\u9805 \\(\\\\beta\\) \u8db3\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3053\u308c\u306b\u3088\u3063\u3066\"Vanilla\" VAE\u3088\u308a\u3082\u8fd1\u4f3c\u4e8b\u5f8c\u5206\u5e03\u304c\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u304f\u306a\u3044\u3068 \\(L(x,z)\\) \u304c\u5927\u304d\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u8a2d\u8a08\u3057\u305f\u3002\"Vanilla\" VAE\u3067\u306f\u4e00\u3064\u306e\u8981\u7d20(\u89d2\u5ea6\u3084\u7b11\u9854\u306e\u5ea6\u5408\u3044)\u3092\u5909\u3048\u305f\u3044\u306e\u306b\u4eba\u76f8\u3084\u9aea\u306a\u3069\u306e\u4ed6\u306e\u8981\u7d20\u306b\u3064\u3044\u3066\u3082\u5909\u5316\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304c \\(\\\\beta\\) -VAE\u306e\u65b9\u306f\u4ed6\u306e\u8981\u7d20\u3078\u306e\u5f71\u97ff\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002 $$ L(x,z) := \\mathbb{E} {q(z|X)}[\\log p(x|z)]-\\beta\\cdot D [q(z|x)||p(z)] $$ FactorVAE Disentangling by Factorising [Hyunjik Kim, Andriy Mnih] \u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u306e\u7b2c\u4e8c\u9805\u3092\u91cd\u8981\u8996\u3057\u3059\u304e\u308b\u3068 \u518d\u69cb\u6210\u8aa4\u5dee \u304c\u8efd\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u751f\u6210\u753b\u50cf\u304c\u307c\u3084\u3051\u3066\u3044\u308b\u554f\u984c\u304c\u3042\u3063\u305f\u3002\u305d\u3053\u3067 \\(\\\\beta\\) -VAE\u306e\u7b2c\u4e8c\u9805\u306b\u3064\u3044\u3066\u6ce8\u76ee\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3055\u3089\u306b\u5206\u89e3\u3067\u304d\u308b\u3002 $$ -\\beta\\cdot D_{KL}[q(z|x)||p(z)]= -\\beta\\cdot\\bigl{ \\underbrace{-I\\bigl(x;z\\bigr)} {\\rm (i)} + \\underbrace{L \\bigl(q(z),p(z)\\bigr)}_{\\rm (ii)}\\bigr} $$ \\(\\\\rm (i)\\) : \u5165\u529b \\(X\\) \u3068\u6f5c\u5728\u5909\u6570 \\(z\\) \u306e\u4f9d\u5b58\u95a2\u4fc2, \\(\\\\rm (ii)\\) : z\u5358\u4f53\u306e\u5206\u5e03\u3068\u4e8b\u524d\u5206\u5e03\u306e\u4e0d\u4e00\u81f4\u5ea6\u5408 \u3053\u3053\u304b\u3089 \\(\\\\beta\\) -VAE\u3067\u30a8\u30d3\u30c7\u30f3\u30b9\u4e0b\u754c\u3092\u5927\u304d\u304f\u3059\u308b\u305f\u3081\u306b\u7b2c\u4e8c\u9805\u306e\u90e8\u5206\u3092\u5c0f\u3055\u304f\u3057\u3066\u3044\u305f\u306e\u306f \\(\\\\rm (i)\\) \u304b\u3089\u4e8c\u3064\u306e\u76f8\u4e92\u60c5\u5831\u91cf\u3092\u5c0f\u3055\u304f\u3057\u3001\u518d\u69cb\u6210\u8aa4\u5dee\u3092\u5897\u5927\u3055\u305b\u3066\u3044\u305f\u3002\u305d\u3053\u3067\u3053\u308c\u3092\u88dc\u6b63\u3059\u308b\u9805\u3092\u76ee\u7684\u95a2\u6570\u306b\u7d44\u307f\u8fbc\u3093\u3060\u3002\u5177\u4f53\u7684\u306b\u306f Total Correlation\u5236\u7d04 \u3068\u3044\u3046\u5236\u7d04\u9805\u3092\u52a0\u3048\u305f\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b \\(\\\\beta\\) -VAE\u3088\u308a\u3082\u591a\u304f\u306e\u7279\u5fb4\u3092\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u53d6\u308a\u51fa\u305b\u3066\u308b\u3002\u305f\u3060\u3057\u9854\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u306b\u306f\u3042\u307e\u308a\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3002(\u9854\u306f\u7279\u5fb4\u3092\u5206\u985e\u3057\u3084\u3059\u3044\uff1f)","title":"4-5-1. \u6b63\u5247\u5316\u9805\u3092\u52a0\u3048\u308b"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-5-2","text":"LVAE Ladder Variational Autoencoders(Casper Kaae S\u00f8nderby, Tapani Raiko, Lars Maal\u00f8e, S\u00f8ren Kaae S\u00f8nderby, Ole Winther) \u5f93\u6765\u306eVAE\u304c\u6700\u7d42\u5c64\u304b\u3089\u306e\u307f\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3057\u3066\u3044\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001LVAE\u3067\u306f\u5404\u6df1\u3055\u304b\u3089\u62bd\u8c61\u5ea6\u306e\u7570\u306a\u308b\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3057\u3066\u3044\u308b\u3002VAE\u3067\u306f\u6700\u7d42\u5c64\u306e\u307f\u304b\u3089\u6f5c\u5728\u5909\u6570\u3092\u7372\u5f97\u3059\u308b\u3068\u3001\u305d\u306e\u6f5c\u5728\u5909\u6570\u3092\u8abf\u6574\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u305d\u306e\u9593\u306b\u4f55\u5c64\u3082\u3042\u308b\u3068\u305d\u308c\u306f\u96e3\u3057\u304b\u3063\u305f\u304c\u3001\u5404\u5c64\u304b\u3089\u7372\u5f97\u3059\u308b\u3088\u3046\u306b\u6539\u5584\u3059\u308b\u3053\u3068\u3067\u8868\u73fe\u529b\u3092\u5897\u3059\u3053\u3068\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3002 \u307e\u305f\u3001\u672c\u8ad6\u6587\u3067\u306f \\(\\\\beta\\) -VAE\u3068\u540c\u69d8\u306b\u6b63\u5247\u5316\u9805 \\(\\\\beta\\) \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3053\u306e \\(\\\\beta\\) \u3092\u5b66\u7fd2\u306e\u9032\u5ea6\u306b\u5fdc\u3058\u3066 \\([0,1]\\) \u306e\u7bc4\u56f2\u3067\u5f90\u3005\u306b\u5927\u304d\u304f\u3059\u308b (Warm-Up) \u3053\u3068\u306b\u3088\u3063\u3066\u6027\u80fd\u304c\u6539\u5584\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u308b\u3002 pro-VAE Progressive Learning and Disentanglement of Hierarchical Representations[Zhiyuan Li, Jaideep Vitthal Murkute, Prashnna Kumar Gyawali, Linwei Wang] pro-VAE\u306f\u4e0a\u306eLVAE\u306bProgressive Learning\u3092\u5c0e\u5165\u3057\u305f\u3082\u306e\u3002\u6700\u521d\u306f\u5c64\u304c\u6df1\u304f\u62bd\u8c61\u5ea6\u304c\u9ad8\u3044\u3082\u306e\u3060\u3051\u3092\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u3066\u3001\u5b66\u7fd2\u306e\u9032\u5ea6\u306b\u5408\u308f\u305b\u3066\u3088\u308a\u6d45\u3044\u5c64\u306e\u7279\u5fb4\u91cf\u3082\u6f5c\u5728\u5909\u6570\u3068\u3057\u3066\u53d6\u308a\u5165\u308c\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304f\u3002 \u4ee5\u4e0b\u306e\u56f3\u306fpro-VAE\u3068pro-VAE\u304b\u3089Ladder\u3068\u3044\u3046\u8981\u7d20\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u306e\u3067\u304d\u308bteacher-student model\u306e\u6027\u80fd\u3092\u6bd4\u8f03\u3057\u3066\u3044\u308b\u3002pro-VAE\u306e\u5404\u5c64\u304b\u3089\u5f97\u3089\u308c\u305f\u6f5c\u5728\u5909\u6570\u3092\u5909\u5316\u3055\u305b\u305f\u6642\u306e\u751f\u6210\u753b\u50cf\u306e\u5909\u5316\u3068\u3001teature-student model\u306e\u6700\u7d42\u5c64\u304b\u3089\u5f97\u3089\u308c\u305f\u6f5c\u5728\u5909\u6570\u3092\u5909\u5316\u3055\u305b\u305f\u6642\u306e\u751f\u6210\u753b\u50cf\u306e\u5909\u5316\u6bd4\u8f03\u3059\u308b\u3068\u3001pro-VAE\u306e\u65b9\u304c\u5b66\u7fd2\u304c\u9032\u307f\u3001\u3088\u308a\u591a\u304f\u306e\u5c64\u3092\u751f\u6210\u306b\u7528\u3044\u308b\u3088\u3046\u306b\u306a\u308b\u3068disentangled\u306a\u6f5c\u5728\u5909\u6570\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002","title":"4-5-2. \u7570\u306a\u308b\u6df1\u3055\u3067\u62bd\u51fa\u3055\u308c\u305f\u968e\u5c64\u6f5c\u5728\u8868\u73fe\u3092\u4f7f\u7528\u3059\u308b\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-6-gan","text":"GAN\u306b\u3088\u308bDisentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u8868\u73fe\u5b66\u7fd2\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u985e\u3092\u3057\u3066\u7d39\u4ecb\u3059\u308b\u3002 GAN\u306b\u3088\u308bDisentangled\u306a\u8868\u73fe\u3092\u5f97\u308b\u3068\u3044\u3046\u8a66\u307f\u306f InfoGAN \u304b\u3089\u59cb\u307e\u3063\u305f\u3002InfoGAN\u81ea\u4f53\u306f\u5b66\u7fd2\u304c\u4e0d\u5b89\u5b9a\u306a\u306e\u3067\u73fe\u5728\u306f\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u304cDisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u306e\u5148\u99c6\u3051\u3068\u306a\u3063\u305f\u3002 InfoGAN Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets [Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, Pieter Abbeel]","title":"4-6. GAN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_9","text":"GAN\u306a\u306e\u306bSupervised\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u7a7a\u9593\u3067\u306e\u5909\u5316\u304cDisentangled\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u306e\u306b\u305d\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u5b66\u7fd2\u30af\u30e9\u30b9\u5206\u985e\u5668\u304c\u5fc5\u8981\u3068\u3055\u308c\u305f\u308a\u3059\u308b\u304b\u3089\u3067\u3042\u308b\u3002 Supervised Self-supervised Unsupervised","title":"\u5206\u985e"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-6-0","text":"\u305d\u3082\u305d\u3082GAN\u3067\u306edisentangled\u306a\u8868\u73fe\u5b66\u7fd2\u3068\u3044\u3046\u5206\u91ce\u304c\u6700\u8fd1\u59cb\u307e\u3063\u305f\u7814\u7a76\u5206\u91ce\u306a\u306e\u3067\u3069\u306e\u624b\u6cd5\u3082\u65b0\u3057\u304f\u305d\u308c\u307b\u3069\u591a\u304f\u306e\u7814\u7a76\u304c\u307e\u3060\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3069\u308c\u304c\u4e00\u756a\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u4eca\u306e\u6bb5\u968e\u3067\u306f\u65ad\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u304c\u73fe\u6642\u70b9\u306e\u8ad6\u6587\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u305f\u3060\u305d\u308c\u305e\u308c\u306e\u8ad6\u6587\u304c\u81ea\u5206\u306e\u7814\u7a76\u304c\u6bd4\u8f03\u3057\u3066\u512a\u308c\u3066\u3044\u308b\u3068\u4e3b\u5f35\u3059\u308b\u306e\u3067\u3001\u3001\u3001 Supervised \u30b3\u30b9\u30c8\u00d7, \u8868\u73fe\u529b\u25b3 Self-supervised \u30b3\u30b9\u30c8\u25b3, \u8868\u73fe\u529b\u25b3 Unsupervised \u30b3\u30b9\u30c8\u25cb, \u8868\u73fe\u529b\u25cb","title":"4-6-0. \u307e\u3068\u3081"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-6-1-supervised-gan","text":"Style GAN AInterpreting the Latent Space of GANs for Semantic Face Editing[Yujun Shen, et al] \u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u3042\u3089\u304b\u3058\u3081\u60f3\u5b9a\u3057\u3066\u30af\u30e9\u30b9\u5206\u985e\u5668\u3092\u5b66\u7fd2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3088\u3063\u3066\u5b66\u7fd2\u3059\u308b\u524d\u304b\u3089\u3069\u306e\u3088\u3046\u306a\u6f5c\u5728\u7a7a\u9593\u306e\u7279\u5fb4\u304c\u51fa\u3066\u304f\u308b\u304b\u60f3\u5b9a\u3057\u305f\u3082\u306e\u304c\u51fa\u3066\u304f\u308b\uff1f\u306e\u306a\u3089\u3053\u308c\u306f\u3053\u308c\u3067\u4fbf\u5229\u3067\u306f\uff1f\u305f\u3060\u3001\u3059\u3054\u304f\u614e\u91cd\u306b\u8a2d\u8a08\u3057\u306a\u3044\u3068\u518d\u73fe\u6027\u306f\u4f4e\u305d\u3046\u3002","title":"4-6-1. Supervised GAN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-6-2-self-supervised-gan","text":"ON THE \u201cSTEERABILITY\u201d OF GENERATIVE ADVERSARIAL NETWORKS[Ali Jahanian, Lucy Chai, Phillip Isola] \u30ba\u30fc\u30e0\u3084\u3001\u8272\u5408\u3044\u306a\u3069\u306e\u7c21\u5358\u306a\u753b\u50cf\u7de8\u96c6\u3067\u7372\u5f97\u3067\u304d\u308b\u7279\u5fb4\u306b\u3064\u3044\u3066\u306edisentangled\u306a\u6f5c\u5728\u7a7a\u9593\u3067\u306e\u8868\u73fe\u306fSelf-supervised\u306a\u624b\u6cd5\u3067\u7372\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u305d\u308c\u305e\u308c\u306e\u6f5c\u5728\u5909\u6570\u304c\u3069\u3053\u307e\u3067\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u5165\u529b\u30c7\u30fc\u30bf\u306e\u5206\u6563\u306b\u4f9d\u5b58\u3059\u308b\u3002","title":"4-6-2. Self-supervised GAN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#4-6-3-unsupervised-gan","text":"Unsupervised Discovery of Interpretable Directions in the GAN Latent Space [Andrey Voynov Artem Babenko] \u4ed6\u306esupervised\u306a\u65b9\u6cd5\u3068\u540c\u69d8\u306bRotatino\u306a\u3069\u306e\u7279\u5fb4\u3092\u6349\u3048\u3066\u3044\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3001\u3069\u3053\u304c\u80cc\u666f\u304b\u3082\u6349\u3048\u3066\u3044\u3066\u7b46\u8005\u3089\u306f\u3053\u308c\u306f\u4ed6\u306eGAN\u3092\u7528\u3044\u305f\u624b\u6cd5\u3088\u308a\u8868\u73fe\u529b\u304c\u3042\u308b\u3068\u4e3b\u5f35\u3057\u3066\u3044\u305f\u3002\u307e\u305f\u3001\u3053\u306e\u80cc\u666f\u3092\u6349\u3048\u305f\u308a\u3057\u3066\u3044\u308b\u3082\u306e\u304cweakly-supervised\u306a\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u306a\u3069\u306b\u5fdc\u7528\u3067\u304d\u308b\u3068\u3044\u3063\u305f\u4f8b\u3082\u51fa\u3057\u3066\u3044\u305f\u3002","title":"4-6-3. Unsupervised GAN"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_10","text":"","title":"\u53c2\u8003"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_11","text":"\u500b\u4eba\u7684\u306b\u9762\u767d\u304b\u3063\u305fMachine Learning\u8ad6\u6587 in 2019 Deep Learning: A Survey of Surveys Self-Supervised Representation Learning Self-supervised Learning\u306b\u3088\u308b\u7279\u5fb4\u8868\u73fe\u5b66\u7fd2 Disentangle\u306a\u8868\u73fe\u5b66\u7fd2\u306e\u65b0\u624b\u6cd5\uff1aProgressive VLAE\u3092\u89e3\u8aac\uff01 Disentangled \u306a\u8868\u73fe\u306e\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u624b\u6cd5\u306e\u691c\u8a3c \u76f8\u4e92\u60c5\u5831\u91cf\u304b\u3089\u307f\u308bDeep Learning Awesome Image Captioning Disentanglement Survey:Can You Explain How Much Are Generative models Disentangled? \u5909\u5206\u63a8\u8ad6\u306e\u7406\u8ad6 PRML\u5b66\u7fd2\u8005\u304b\u3089\u5165\u308b\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u5165\u9580","title":"\u30b5\u30a4\u30c8"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/feature_learning/#_12","text":"Recent Advances in Features Extraction and Description Algorithms: A Comprehensive Survey [ Ehab Salahat, Member, IEEE, and Murad Qasaimeh, Member, IEEE] Self-supervised Visual Feature Learning with Deep Neural Networks: A Survey [Longlong Jing and Yingli Tian\u21e4, Fellow, IEEE] A Comprehensive Survey of Deep Learning for Image Captioning","title":"\u8ad6\u6587"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/","text":"Mesh RCNN\u306e\u304a\u6c17\u6301\u3061\u3092\u7406\u89e3\u3057\u305f\u3044 \u76ee\u7684 Mesh R CNN \u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b Lv1. \u304a\u6c17\u6301\u3061\u306e\u7406\u89e3 Lv2. \u3069\u3093\u306aNetwork\u69cb\u9020 Lv3. loss \u306a\u3069\u8a73\u7d30\u306a\u8a2d\u8a08 \u524d\u63d0 ICCV 2019 \u5143\u8ad6\u6587\u306f\u3053\u3061\u3089\u304b\u3089 - github \u306f\u3053\u3061\u3089 https://github.com/facebookresearch/meshrcnn \u6982\u8981 2D image \u304b\u3089 mesh(3D \u5f62\u72b6) \u3092 \u7372\u5f97\u3059\u308b\u624b\u6cd5(\u4e0b\u56f3) \u5165\u529b\u304b\u3089\u51fa\u529b\u307e\u3067End-to-End\u5b66\u7fd2 \u80cc\u666f(\u95a2\u9023\u7814\u7a76) 3D\u95a2\u9023\u306e\u7814\u7a76\u304c\u8fd1\u5e74\u76db\u3093 \u69d8\u3005\u306a\u6280\u8853\u304c\u5b58\u5728\u3059\u308b\u304b\u95a2\u9023\u3059\u308b\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3059\u308b 2D Object Recognition \u5358\u4e00\u753b\u50cf\u3092\u5165\u529b\u3057\u3066\u7279\u5b9a\u306e\u7269\u4f53\u3092\u691c\u51fa\u3059\u308b\uff0eBbox\u306b\u3088\u308b\u77e9\u5f62\u306e\u62bd\u51fa\u3068\u30ab\u30c6\u30b4\u30ea\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u304c\u4e00\u822c\u7684 mask R-CNN \u3067\u306f\u3053\u308c\u306b\u52a0\u3048\u3066\u7269\u4f53\u306e\u9818\u57df\u3092\u8868\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3059\u308b Single-View Shape Prediction \u5358\u4e00\u753b\u50cf\u30923\u6b21\u5143\u518d\u69cb\u6210\u3059\u308b\uff0e3D\u306epose \u3084\u65e2\u77e5\u306e\u5f62\u72b6\u306e\u5411\u304d\u3092\u63a8\u5b9a\u3059\u308b\u3082\u306e\u304c\u4e00\u822c\u7684 Multi-View Shape Prediction \u8907\u6570\u30ab\u30e1\u30e9\u306b\u3088\u308b\u753b\u50cf\u304b\u3089\uff13\u6b21\u5143\u518d\u69cb\u6210\u3092\u884c\u3046\uff0emesh R-CNN \u3067\u306f\u6271\u308f\u306a\u3044\u304c\uff0c\u3053\u306e\u5206\u91ce\u306e\u7814\u7a76\u306f\u8fd1\u5e74\u76db\u3093 3D input \uff13\u6b21\u5143\u753b\u50cf\u3092\u5165\u529b\u3057\u3066semantic label \u306a\u3069\u3092\u51fa\u529b\u3059\u308b\u30bf\u30b9\u30af RGB-D images\u3084point cloud \u306a\u3069\u3092\u5165\u529b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684 3D dataset imagenet \u3084 COCO dataset\u306b\u3088\u308a 2D\u5206\u91ce\u306f\u5927\u5e45\u306a\u767a\u5c55\u3092\u9042\u3052\u305f 3D dataset \u306f 2D \u306b\u6bd4\u3079\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u56f0\u96e3\u3067\u3042\u308b\u554f\u984c\u304b\u3089\u3044\u307e\u3060\u767a\u5c55\u9014\u4e0a\u306e\u9818\u57df\u3067\u3042\u308b ShapeNet, Pix3D, Pascal3D \u306a\u3069\u69d8\u3005\u306a\u3082\u306e\u304c\u767b\u5834\u3057\u3066\u3044\u308b\u304c\u5408\u6210\u30c7\u30fc\u30bf\u3067\u3042\u308b\u3082\u306e\u3084\u77e9\u5f62\u306e\u307f\u3067\u5f62\u72b6\u306e\u6ce8\u91c8\u304c\u306a\u3044\u306a\u3069\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u7279\u6709\u306e\u554f\u984c\u306a\u3069\u3082\u591a\u3044 \u624b\u6cd5 Lv1.\u304a\u6c17\u6301\u3061\u306e\u7406\u89e3 \u5927\u307e\u304b\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u4ee5\u4e0b\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\uff0c \u7269\u4f53\u306e\u691c\u51fa \u2192 \u7269\u4f53\u306eboxel\u5316 \u2192 mesh\u306b\u5909\u63db \u2192 mesh\u3092\u6539\u826f(refinement) \u306estep \u3067\u69cb\u6210\u3055\u308c\u308b\u3068\u601d\u3063\u3066\u826f\u3044\uff0e Lv2 Network\u306a\u3069\u3082\u542b\u3081\u3066\u89e3\u8aac \u4e0b\u56f3\u306b\u63d0\u6848\u30b7\u30b9\u30c6\u30e0\u306e\u8a73\u7d30\u306a\u6d41\u308c\u3092\u793a\u3059\uff0e \u5927\u307e\u304b\u306a\u6d41\u308c\u306fLv1 \u3067\u8aac\u660e\u3057\u305f\u304c\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306b\u8ff0\u3079\u308b\uff0e \u307e\u305a\uff0c\u7269\u4f53\u691c\u51fa\u90e8\u5206\u3067\u306f\u5f93\u6765\u306eSoTA model \u3067\u3042\u308b mask R-CNN \u3092\u7528\u3044\u3066\u3044\u308b \u2192 \u30ab\u30c6\u30b4\u30ea\u30e9\u30d9\u30eb, bbox, segmentation mask \u3092\u51fa\u529b backbone \u306f resnet50(pre-trained by imagenet) 3D \u5f62\u72b6\u3092\u4e88\u6e2c\u3059\u308b\u305f\u3081\u306b\uff0c Voxel Branch \u3068 Mesh Refinement Branch \u3092\u7528\u3044\u308b \u540d\u524d\u306e\u901a\u308a\u3067\u306f\u3042\u308b\u304c\uff0c - Boxel Branch .. object \u306e\u5927\u307e\u304b\u306a 3\u6b21\u5143\u30dc\u30af\u30bb\u30eb\u5316\u3092\u63a8\u5b9a\u3057\uff0c\u521d\u671f\u4e09\u89d2mesh \u306b\u5909\u63db - Mesh Refinement Branch .. \u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f\u5c64\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u521d\u671f\u30e1\u30c3\u30b7\u30e5\u306e\u9802\u70b9\u4f4d\u7f6e\u3092\u8abf\u6574(mesh\u3092\u6574\u3048\u308b) \u3068\u8a00\u3063\u305f\u5f79\u5272\u304c\u3042\u308b\uff0e Voxel Branch \u5404object \u306e\u5f62\u72b6\u3092\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u3067\u4e88\u6e2c \u6c17\u6301\u3061\u3068\u3057\u3066\u306f\uff0cmask R-CNN \u306e mask branch \u3068\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd 2D \u5e73\u9762\u306e M * M \u2192 3D \u306a G * G * G \u306e\u5f62\u72b6\u3092\u4e88\u6e2c Loss \u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0(Lv3 \u306b\u3066) (\u88dc\u8db3) \u753b\u50cf\u3068\u4e88\u6e2c\u5024\u3068\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e\u5bfe\u5fdc\u95a2\u4fc2\u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u306f\u30013D\u3067\u306f\u30ab\u30e1\u30e9\u304b\u3089\u96e2\u308c\u308b\u306b\u3064\u308c\u3066\u7269\u4f53\u304c\u5c0f\u3055\u304f\u306a\u308b\u305f\u3081\u8907\u96d1\u3067\u3042\u308b\uff0e\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u30ab\u30e1\u30e9\u7279\u6709\u306e\u56fa\u6709\u884c\u5217\u3092\u5229\u7528\u3057\u3066\u7406\u60f3\u7684\u306a\u5f62\u72b6\u306b\u3059\u308b\u5de5\u592b\u3092\u884c\u306a\u3063\u3066\u3044\u308b Cubify(\u3053\u3053\u304c\u809d\u3063\u307d\u3044) Voxel to Mesh \u76ee\u7684\u306f\uff0c \u30dc\u30af\u30bb\u30eb\u4e88\u6e2c\u5024\u3092\u4e09\u89d2\u5f62\u306e\u30e1\u30c3\u30b7\u30e5\u306b\u5909\u63db\u3059\u308b \u30dc\u30af\u30bb\u30eb\u5360\u6709\u78ba\u7387\u3068\u3001\u305d\u308c\u3092\u4e8c\u5024\u5316\u3059\u308b\u305f\u3081\u306e\u95be\u5024\u3092\u5165\u529b Mesh Refinement Branch \u76ee\u7684\u306f\uff0c \u7c97\u3044\u5f62\u72b6(voxel\u5316)\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b\u3053\u3068 \u51e6\u7406\u306e\u6d41\u308c\u306f\u5927\u304d\u304f3\u3064\u3067\u69cb\u6210(vertex alignment, graph convlution, vertex refinement) \u3053\u306e3\u3064\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u9802\u70b9\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f \u306a\u304a\uff0c\u5404\u30ec\u30a4\u30e4\u30fc\u3067\u306f \u5404\u30e1\u30c3\u30b7\u30e5\u9802\u70b9\u306e3D\u4f4d\u7f6evi\u3068\u7279\u5fb4\u30d9\u30af\u30c8\u30ebfi \u3092\u6301\u3064 vertex alignment \u5404\u30e1\u30c3\u30b7\u30e5\u9802\u70b9\u306b\u5bfe\u3057\u3066\u753b\u50cf\u6574\u5217\u3055\u308c\u305f\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210 \u30ab\u30e1\u30e9\u306e\u56fa\u6709\u884c\u5217\u3092\u4f7f\u7528\u3057\u3066\uff0c\u5404\u9802\u70b9\u3092\u753b\u50cf\u5e73\u9762\u306b\u6295\u5f71 \u7279\u5fb4\u30de\u30c3\u30d7\u304c\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u6295\u5f71\u3055\u308c\u305f\u9802\u70b9\u306e\u4f4d\u7f6e\u3092\u793a\u3059\u53cc\u7dda\u5f62\u88dc\u9593\u3055\u308c\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u8a08\u7b97 graph convlution \u30e1\u30c3\u30b7\u30e5\u306e\u8fba\u306b\u6cbf\u3063\u3066\u60c5\u5831\u3092\u4f1d\u64ad GCN\u306b\u3088\u308a \uff0c\u5c40\u6240\u7684\u306a\u30e1\u30c3\u30b7\u30e5\u9818\u57df\u306e\u60c5\u5831\u3092\u96c6\u7d04 vertex refinement \u30e1\u30c3\u30b7\u30e5\u5f62\u72b6\u304c\u66f4\u65b0\u3055\u308c\u3001\u30c8\u30dd\u30ed\u30b8\u30fc\u304c\u56fa\u5b9a Loss \u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0(Lv3\u306b\u3066) Lv3 Loss \u306a\u3069\u306e\u8a2d\u8a08 \u63d0\u6848\u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\u306e\u304b\u3092\u8aac\u660e\u3059\u308b Voxel Loss Voxel Branch\u306f\u3001\u4e88\u6e2c\u3055\u308c\u305f\u30dc\u30af\u30bb\u30eb\u5360\u6709\u78ba\u7387\u3068\u771f\u306e\u30dc\u30af\u30bb\u30eb\u5360\u6709\u7387\u3068\u306e\u9593\u306e2\u5024\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u8a13\u7df4 Mesh Loss \u6709\u9650\u306e\u70b9\u96c6\u5408\u4e0a\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u640d\u5931\u95a2\u6570\u3092\u4f7f\u7528 point cloud \u306b\u3088\u308b\u30e1\u30c3\u30b7\u30e5\u3092\u3001\u305d\u306e\u8868\u9762\u3092\u5bc6\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u8868\u73fe \u2192 \u70b9\u7fa4\u306e\u640d\u5931\u3092\u5f62\u72b6\u306e\u640d\u5931\u306b\u8fd1\u4f3c \u5927\u304d\u304f\uff13\u7a2e\u985e\u306eLoss\u3092\u5b9a\u7fa9 Chamfer Loss point cloud P, Q \u304c\u4e0e\u3048\u3089\u308c\u305f\u6642\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u5b9a\u7fa9 \u4e00\u756a\u8fd1\u3044\u9802\u70b9\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97 Normal Loss \u6cd5\u7ddaup, uq \u306e\u5185\u7a4d\u3092\u8a08\u7b97 \u9802\u70b9q \u306e\u63a5\u5e73\u9762\u72b6\u306b \u9802\u70b9p \u3068\u96a3\u63a5\u9802\u70b9\u304c\u5b58\u5728\u3059\u308b\u3068\u5c0f\u3055\u304f\u306a\u308b Edgde Loss \u3042\u308b\u9802\u70b9\u3068\u96a3\u63a5\u9802\u70b9\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u3066\u6b63\u898f\u5316\u3059\u308b (\u88dc\u8db3) Edgde Loss \u306e \u6709\u7121\u306b\u3088\u308b\u5f62\u72b6\u306e\u6bd4\u8f03\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e\u306a\u3057\u306e\u65b9\u304c\u304d\u308c\u3044\u306b\u751f\u6210\u3067\u304d\u3066\u3044\u308b\u304c\uff0c\u4e0d\u898f\u5247\u306a\u30b5\u30a4\u30ba\u306e\u9762\u3068\u591a\u304f\u306e\u81ea\u5df1\u4ea4\u5dee\u3092\u6301\u3064\u306a\u3069\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3068\u3063\u3066\u5b9f\u7528\u7684\u3067\u306a\u3044\u3053\u3068\u304c\u61f8\u5ff5\u3055\u308c\u308b mesh refinement branch \u3067\u306f\u4e0a\u8a18\u306e3\u3064\u306e\u640d\u5931\u306e\u52a0\u91cd\u548c\u3092\u6700\u9069\u5316\u3059\u308b \u5b9f\u9a13 \u5b66\u7fd2\u306f\u753b\u50cf\u3068mesh \u306e\u30da\u30a2\u3092\u7528\u3044\u305f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2 baseline\u624b\u6cd5 N3MR ... 3D \u306e\u6559\u5e2b\u306a\u3057\u3067\u5fae\u5206\u53ef\u80fd\u306a\u30ec\u30f3\u30c0\u30e9\u30fc\u3092\u4ecb\u3057\u3066mesh\u3092\u5b66\u7fd2\u3059\u308b\u5f31\u6559\u5e2b\u3042\u308a\u5b66\u7fd2 3D-R2N2 ... \u30dc\u30af\u30bb\u30eb\u3092\u63a8\u5b9a MVD ... \u30dc\u30af\u30bb\u30eb\u3092\u63a8\u5b9a PSG ... point cloud \u3092\u63a8\u5b9a Pixel2Mesh ... \u521d\u671f\u6955\u5186\u4f53\u3092\u5909\u5f62\u30fb\u7d30\u5206\u5316\u3057\u3066\u30e1\u30c3\u30b7\u30e5\u3092\u63a8\u5b9a GEOMetrics\u3000... Pixel2Mesh \u3092 \u9069\u5fdc\u7684\u306a\u9762\u7d30\u5206\u5316\u3067\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb \u306a\u304a\uff0cboxel_only \u306a\u624b\u6cd5\u306f \u63d0\u6848\u624b\u6cd5\u306b\u304a\u3051\u308bMesh Refinement Branch \u3092\u9664\u3044\u305f\u3082\u306e mesh_only \u306a\u624b\u6cd5\u306f Voxel Branch \u3092\u9664\u3044\u305f\u3082\u306e\u3068\u89e3\u91c8\u3057\u3066\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b dataset(2 patterns) ShapeNet ... mesh\u4e88\u6e2c\u306b\u304a\u3051\u308b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306edataset Pix3D dataset ... \u5b9f\u753b\u50cf\u3082\u542b\u3093\u3060\u3088\u308a\u96e3\u3057\u3044dataset \u8a55\u4fa1\u624b\u6cd5 \u4e88\u6e2c\u30e1\u30c3\u30b7\u30e5\u3068\u6b63\u89e3\u30e1\u30c3\u30b7\u30e5\u306e\u8868\u9762\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u4e00\u69d8\u306b\uff11\u4e07\u70b9\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b \u2192 \u305d\u308c\u3089\u306e\u70b9\u7fa4\u306b\u304a\u3051\u308b chamfer distance(Lower is better), normal consistency, \u304a\u3088\u3073\u69d8\u3005\u306a\u8ddd\u96e2\u95be\u5024\u3067\u306eF1-score \u3092\u7b97\u51fa (precision .. GT\u5185\u306e\u4e88\u6e2c\u70b9\u306e\u5272\u5408, recall .. \u4e88\u6e2c\u5185\u306eGT\u306e\u5272\u5408) \u305f\u3060\u3057\uff0c\u3053\u308c\u3089\u306f\u7269\u4f53\u306e\u7d76\u5927\u7684\u306a\u5927\u304d\u3055\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u305f\u3081\uff0crescale\u3057\u305f\u4e0a\u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b shapenet \u306e\u8a55\u4fa1\u7d50\u679c pix3D dataset \u306e\u8a55\u4fa1\u7d50\u679c","title":"Mesh RCNN\u306e\u304a\u6c17\u6301\u3061\u3092\u7406\u89e3\u3057\u305f\u3044"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#mesh-rcnn","text":"","title":"Mesh RCNN\u306e\u304a\u6c17\u6301\u3061\u3092\u7406\u89e3\u3057\u305f\u3044"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_1","text":"Mesh R CNN \u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b Lv1. \u304a\u6c17\u6301\u3061\u306e\u7406\u89e3 Lv2. \u3069\u3093\u306aNetwork\u69cb\u9020 Lv3. loss \u306a\u3069\u8a73\u7d30\u306a\u8a2d\u8a08","title":"\u76ee\u7684"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_2","text":"ICCV 2019 \u5143\u8ad6\u6587\u306f\u3053\u3061\u3089\u304b\u3089 - github \u306f\u3053\u3061\u3089 https://github.com/facebookresearch/meshrcnn","title":"\u524d\u63d0"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_3","text":"2D image \u304b\u3089 mesh(3D \u5f62\u72b6) \u3092 \u7372\u5f97\u3059\u308b\u624b\u6cd5(\u4e0b\u56f3) \u5165\u529b\u304b\u3089\u51fa\u529b\u307e\u3067End-to-End\u5b66\u7fd2","title":"\u6982\u8981"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_4","text":"3D\u95a2\u9023\u306e\u7814\u7a76\u304c\u8fd1\u5e74\u76db\u3093 \u69d8\u3005\u306a\u6280\u8853\u304c\u5b58\u5728\u3059\u308b\u304b\u95a2\u9023\u3059\u308b\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3059\u308b","title":"\u80cc\u666f(\u95a2\u9023\u7814\u7a76)"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#2d-object-recognition","text":"\u5358\u4e00\u753b\u50cf\u3092\u5165\u529b\u3057\u3066\u7279\u5b9a\u306e\u7269\u4f53\u3092\u691c\u51fa\u3059\u308b\uff0eBbox\u306b\u3088\u308b\u77e9\u5f62\u306e\u62bd\u51fa\u3068\u30ab\u30c6\u30b4\u30ea\u30e9\u30d9\u30eb\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u304c\u4e00\u822c\u7684 mask R-CNN \u3067\u306f\u3053\u308c\u306b\u52a0\u3048\u3066\u7269\u4f53\u306e\u9818\u57df\u3092\u8868\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3059\u308b","title":"2D  Object  Recognition"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#single-view-shape-prediction","text":"\u5358\u4e00\u753b\u50cf\u30923\u6b21\u5143\u518d\u69cb\u6210\u3059\u308b\uff0e3D\u306epose \u3084\u65e2\u77e5\u306e\u5f62\u72b6\u306e\u5411\u304d\u3092\u63a8\u5b9a\u3059\u308b\u3082\u306e\u304c\u4e00\u822c\u7684","title":"Single-View  Shape  Prediction"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#multi-view-shape-prediction","text":"\u8907\u6570\u30ab\u30e1\u30e9\u306b\u3088\u308b\u753b\u50cf\u304b\u3089\uff13\u6b21\u5143\u518d\u69cb\u6210\u3092\u884c\u3046\uff0emesh R-CNN \u3067\u306f\u6271\u308f\u306a\u3044\u304c\uff0c\u3053\u306e\u5206\u91ce\u306e\u7814\u7a76\u306f\u8fd1\u5e74\u76db\u3093","title":"Multi-View  Shape  Prediction"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#3d-input","text":"\uff13\u6b21\u5143\u753b\u50cf\u3092\u5165\u529b\u3057\u3066semantic label \u306a\u3069\u3092\u51fa\u529b\u3059\u308b\u30bf\u30b9\u30af RGB-D images\u3084point cloud \u306a\u3069\u3092\u5165\u529b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684","title":"3D input"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#3d-dataset","text":"imagenet \u3084 COCO dataset\u306b\u3088\u308a 2D\u5206\u91ce\u306f\u5927\u5e45\u306a\u767a\u5c55\u3092\u9042\u3052\u305f 3D dataset \u306f 2D \u306b\u6bd4\u3079\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u56f0\u96e3\u3067\u3042\u308b\u554f\u984c\u304b\u3089\u3044\u307e\u3060\u767a\u5c55\u9014\u4e0a\u306e\u9818\u57df\u3067\u3042\u308b ShapeNet, Pix3D, Pascal3D \u306a\u3069\u69d8\u3005\u306a\u3082\u306e\u304c\u767b\u5834\u3057\u3066\u3044\u308b\u304c\u5408\u6210\u30c7\u30fc\u30bf\u3067\u3042\u308b\u3082\u306e\u3084\u77e9\u5f62\u306e\u307f\u3067\u5f62\u72b6\u306e\u6ce8\u91c8\u304c\u306a\u3044\u306a\u3069\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u7279\u6709\u306e\u554f\u984c\u306a\u3069\u3082\u591a\u3044","title":"3D dataset"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_5","text":"","title":"\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#lv1","text":"\u5927\u307e\u304b\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u4ee5\u4e0b\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\uff0c \u7269\u4f53\u306e\u691c\u51fa \u2192 \u7269\u4f53\u306eboxel\u5316 \u2192 mesh\u306b\u5909\u63db \u2192 mesh\u3092\u6539\u826f(refinement) \u306estep \u3067\u69cb\u6210\u3055\u308c\u308b\u3068\u601d\u3063\u3066\u826f\u3044\uff0e","title":"Lv1.\u304a\u6c17\u6301\u3061\u306e\u7406\u89e3"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#lv2-network","text":"\u4e0b\u56f3\u306b\u63d0\u6848\u30b7\u30b9\u30c6\u30e0\u306e\u8a73\u7d30\u306a\u6d41\u308c\u3092\u793a\u3059\uff0e \u5927\u307e\u304b\u306a\u6d41\u308c\u306fLv1 \u3067\u8aac\u660e\u3057\u305f\u304c\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306b\u8ff0\u3079\u308b\uff0e \u307e\u305a\uff0c\u7269\u4f53\u691c\u51fa\u90e8\u5206\u3067\u306f\u5f93\u6765\u306eSoTA model \u3067\u3042\u308b mask R-CNN \u3092\u7528\u3044\u3066\u3044\u308b \u2192 \u30ab\u30c6\u30b4\u30ea\u30e9\u30d9\u30eb, bbox, segmentation mask \u3092\u51fa\u529b backbone \u306f resnet50(pre-trained by imagenet) 3D \u5f62\u72b6\u3092\u4e88\u6e2c\u3059\u308b\u305f\u3081\u306b\uff0c Voxel Branch \u3068 Mesh Refinement Branch \u3092\u7528\u3044\u308b \u540d\u524d\u306e\u901a\u308a\u3067\u306f\u3042\u308b\u304c\uff0c - Boxel Branch .. object \u306e\u5927\u307e\u304b\u306a 3\u6b21\u5143\u30dc\u30af\u30bb\u30eb\u5316\u3092\u63a8\u5b9a\u3057\uff0c\u521d\u671f\u4e09\u89d2mesh \u306b\u5909\u63db - Mesh Refinement Branch .. \u30b0\u30e9\u30d5\u7573\u307f\u8fbc\u307f\u5c64\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u521d\u671f\u30e1\u30c3\u30b7\u30e5\u306e\u9802\u70b9\u4f4d\u7f6e\u3092\u8abf\u6574(mesh\u3092\u6574\u3048\u308b) \u3068\u8a00\u3063\u305f\u5f79\u5272\u304c\u3042\u308b\uff0e Voxel Branch \u5404object \u306e\u5f62\u72b6\u3092\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u3067\u4e88\u6e2c \u6c17\u6301\u3061\u3068\u3057\u3066\u306f\uff0cmask R-CNN \u306e mask branch \u3068\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd 2D \u5e73\u9762\u306e M * M \u2192 3D \u306a G * G * G \u306e\u5f62\u72b6\u3092\u4e88\u6e2c Loss \u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0(Lv3 \u306b\u3066) (\u88dc\u8db3) \u753b\u50cf\u3068\u4e88\u6e2c\u5024\u3068\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e\u5bfe\u5fdc\u95a2\u4fc2\u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u306f\u30013D\u3067\u306f\u30ab\u30e1\u30e9\u304b\u3089\u96e2\u308c\u308b\u306b\u3064\u308c\u3066\u7269\u4f53\u304c\u5c0f\u3055\u304f\u306a\u308b\u305f\u3081\u8907\u96d1\u3067\u3042\u308b\uff0e\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u30ab\u30e1\u30e9\u7279\u6709\u306e\u56fa\u6709\u884c\u5217\u3092\u5229\u7528\u3057\u3066\u7406\u60f3\u7684\u306a\u5f62\u72b6\u306b\u3059\u308b\u5de5\u592b\u3092\u884c\u306a\u3063\u3066\u3044\u308b Cubify(\u3053\u3053\u304c\u809d\u3063\u307d\u3044) Voxel to Mesh \u76ee\u7684\u306f\uff0c \u30dc\u30af\u30bb\u30eb\u4e88\u6e2c\u5024\u3092\u4e09\u89d2\u5f62\u306e\u30e1\u30c3\u30b7\u30e5\u306b\u5909\u63db\u3059\u308b","title":"Lv2 Network\u306a\u3069\u3082\u542b\u3081\u3066\u89e3\u8aac"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_6","text":"Mesh Refinement Branch \u76ee\u7684\u306f\uff0c \u7c97\u3044\u5f62\u72b6(voxel\u5316)\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b\u3053\u3068 \u51e6\u7406\u306e\u6d41\u308c\u306f\u5927\u304d\u304f3\u3064\u3067\u69cb\u6210(vertex alignment, graph convlution, vertex refinement) \u3053\u306e3\u3064\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u9802\u70b9\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f \u306a\u304a\uff0c\u5404\u30ec\u30a4\u30e4\u30fc\u3067\u306f \u5404\u30e1\u30c3\u30b7\u30e5\u9802\u70b9\u306e3D\u4f4d\u7f6evi\u3068\u7279\u5fb4\u30d9\u30af\u30c8\u30ebfi \u3092\u6301\u3064 vertex alignment \u5404\u30e1\u30c3\u30b7\u30e5\u9802\u70b9\u306b\u5bfe\u3057\u3066\u753b\u50cf\u6574\u5217\u3055\u308c\u305f\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210 \u30ab\u30e1\u30e9\u306e\u56fa\u6709\u884c\u5217\u3092\u4f7f\u7528\u3057\u3066\uff0c\u5404\u9802\u70b9\u3092\u753b\u50cf\u5e73\u9762\u306b\u6295\u5f71 \u7279\u5fb4\u30de\u30c3\u30d7\u304c\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u6295\u5f71\u3055\u308c\u305f\u9802\u70b9\u306e\u4f4d\u7f6e\u3092\u793a\u3059\u53cc\u7dda\u5f62\u88dc\u9593\u3055\u308c\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u8a08\u7b97 graph convlution \u30e1\u30c3\u30b7\u30e5\u306e\u8fba\u306b\u6cbf\u3063\u3066\u60c5\u5831\u3092\u4f1d\u64ad GCN\u306b\u3088\u308a \uff0c\u5c40\u6240\u7684\u306a\u30e1\u30c3\u30b7\u30e5\u9818\u57df\u306e\u60c5\u5831\u3092\u96c6\u7d04 vertex refinement \u30e1\u30c3\u30b7\u30e5\u5f62\u72b6\u304c\u66f4\u65b0\u3055\u308c\u3001\u30c8\u30dd\u30ed\u30b8\u30fc\u304c\u56fa\u5b9a Loss \u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0(Lv3\u306b\u3066)","title":"\u30dc\u30af\u30bb\u30eb\u5360\u6709\u78ba\u7387\u3068\u3001\u305d\u308c\u3092\u4e8c\u5024\u5316\u3059\u308b\u305f\u3081\u306e\u95be\u5024\u3092\u5165\u529b"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#lv3-loss","text":"\u63d0\u6848\u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306b\u6700\u9069\u5316\u3055\u308c\u308b\u306e\u304b\u3092\u8aac\u660e\u3059\u308b Voxel Loss Voxel Branch\u306f\u3001\u4e88\u6e2c\u3055\u308c\u305f\u30dc\u30af\u30bb\u30eb\u5360\u6709\u78ba\u7387\u3068\u771f\u306e\u30dc\u30af\u30bb\u30eb\u5360\u6709\u7387\u3068\u306e\u9593\u306e2\u5024\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u8a13\u7df4 Mesh Loss \u6709\u9650\u306e\u70b9\u96c6\u5408\u4e0a\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u640d\u5931\u95a2\u6570\u3092\u4f7f\u7528 point cloud \u306b\u3088\u308b\u30e1\u30c3\u30b7\u30e5\u3092\u3001\u305d\u306e\u8868\u9762\u3092\u5bc6\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067\u8868\u73fe \u2192 \u70b9\u7fa4\u306e\u640d\u5931\u3092\u5f62\u72b6\u306e\u640d\u5931\u306b\u8fd1\u4f3c \u5927\u304d\u304f\uff13\u7a2e\u985e\u306eLoss\u3092\u5b9a\u7fa9 Chamfer Loss point cloud P, Q \u304c\u4e0e\u3048\u3089\u308c\u305f\u6642\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u5b9a\u7fa9 \u4e00\u756a\u8fd1\u3044\u9802\u70b9\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97 Normal Loss \u6cd5\u7ddaup, uq \u306e\u5185\u7a4d\u3092\u8a08\u7b97 \u9802\u70b9q \u306e\u63a5\u5e73\u9762\u72b6\u306b \u9802\u70b9p \u3068\u96a3\u63a5\u9802\u70b9\u304c\u5b58\u5728\u3059\u308b\u3068\u5c0f\u3055\u304f\u306a\u308b Edgde Loss \u3042\u308b\u9802\u70b9\u3068\u96a3\u63a5\u9802\u70b9\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u3066\u6b63\u898f\u5316\u3059\u308b (\u88dc\u8db3) Edgde Loss \u306e \u6709\u7121\u306b\u3088\u308b\u5f62\u72b6\u306e\u6bd4\u8f03\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e\u306a\u3057\u306e\u65b9\u304c\u304d\u308c\u3044\u306b\u751f\u6210\u3067\u304d\u3066\u3044\u308b\u304c\uff0c\u4e0d\u898f\u5247\u306a\u30b5\u30a4\u30ba\u306e\u9762\u3068\u591a\u304f\u306e\u81ea\u5df1\u4ea4\u5dee\u3092\u6301\u3064\u306a\u3069\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3068\u3063\u3066\u5b9f\u7528\u7684\u3067\u306a\u3044\u3053\u3068\u304c\u61f8\u5ff5\u3055\u308c\u308b mesh refinement branch \u3067\u306f\u4e0a\u8a18\u306e3\u3064\u306e\u640d\u5931\u306e\u52a0\u91cd\u548c\u3092\u6700\u9069\u5316\u3059\u308b","title":"Lv3 Loss \u306a\u3069\u306e\u8a2d\u8a08"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_7","text":"\u5b66\u7fd2\u306f\u753b\u50cf\u3068mesh \u306e\u30da\u30a2\u3092\u7528\u3044\u305f\u6559\u5e2b\u3042\u308a\u5b66\u7fd2","title":"\u5b9f\u9a13"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#baseline","text":"N3MR ... 3D \u306e\u6559\u5e2b\u306a\u3057\u3067\u5fae\u5206\u53ef\u80fd\u306a\u30ec\u30f3\u30c0\u30e9\u30fc\u3092\u4ecb\u3057\u3066mesh\u3092\u5b66\u7fd2\u3059\u308b\u5f31\u6559\u5e2b\u3042\u308a\u5b66\u7fd2 3D-R2N2 ... \u30dc\u30af\u30bb\u30eb\u3092\u63a8\u5b9a MVD ... \u30dc\u30af\u30bb\u30eb\u3092\u63a8\u5b9a PSG ... point cloud \u3092\u63a8\u5b9a Pixel2Mesh ... \u521d\u671f\u6955\u5186\u4f53\u3092\u5909\u5f62\u30fb\u7d30\u5206\u5316\u3057\u3066\u30e1\u30c3\u30b7\u30e5\u3092\u63a8\u5b9a GEOMetrics\u3000... Pixel2Mesh \u3092 \u9069\u5fdc\u7684\u306a\u9762\u7d30\u5206\u5316\u3067\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb \u306a\u304a\uff0cboxel_only \u306a\u624b\u6cd5\u306f \u63d0\u6848\u624b\u6cd5\u306b\u304a\u3051\u308bMesh Refinement Branch \u3092\u9664\u3044\u305f\u3082\u306e mesh_only \u306a\u624b\u6cd5\u306f Voxel Branch \u3092\u9664\u3044\u305f\u3082\u306e\u3068\u89e3\u91c8\u3057\u3066\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b","title":"baseline\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#dataset2-patterns","text":"ShapeNet ... mesh\u4e88\u6e2c\u306b\u304a\u3051\u308b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306edataset Pix3D dataset ... \u5b9f\u753b\u50cf\u3082\u542b\u3093\u3060\u3088\u308a\u96e3\u3057\u3044dataset","title":"dataset(2 patterns)"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#_8","text":"\u4e88\u6e2c\u30e1\u30c3\u30b7\u30e5\u3068\u6b63\u89e3\u30e1\u30c3\u30b7\u30e5\u306e\u8868\u9762\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u4e00\u69d8\u306b\uff11\u4e07\u70b9\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b \u2192 \u305d\u308c\u3089\u306e\u70b9\u7fa4\u306b\u304a\u3051\u308b chamfer distance(Lower is better), normal consistency, \u304a\u3088\u3073\u69d8\u3005\u306a\u8ddd\u96e2\u95be\u5024\u3067\u306eF1-score \u3092\u7b97\u51fa (precision .. GT\u5185\u306e\u4e88\u6e2c\u70b9\u306e\u5272\u5408, recall .. \u4e88\u6e2c\u5185\u306eGT\u306e\u5272\u5408) \u305f\u3060\u3057\uff0c\u3053\u308c\u3089\u306f\u7269\u4f53\u306e\u7d76\u5927\u7684\u306a\u5927\u304d\u3055\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u305f\u3081\uff0crescale\u3057\u305f\u4e0a\u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b","title":"\u8a55\u4fa1\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#shapenet","text":"","title":"shapenet \u306e\u8a55\u4fa1\u7d50\u679c"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/mesh_rcnn/#pix3d-dataset","text":"","title":"pix3D dataset \u306e\u8a55\u4fa1\u7d50\u679c"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/","text":"List of nice papers \u8ddd\u96e2\u5b66\u7fd2 SoftTriple Loss: Deep Metric Learning Without Triplet Sampling Classifcation\u3068metric learning\u3092\u4e00\u3064\u306e\u30ed\u30b9\u3067\u884c\u3046\u624b\u6cd5\u306e\u63d0\u6848\u3002Triplet loss\u3092\u30b9\u30e0\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068 cross entropy\u306b\u306a\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u305f\uff08\u672c\u8cea\u7684\u306b\u306f\u540c\u3058\u3060\u3063\u305f\u3089\u3057\u3044\uff09 Visual Explanation for Deep Metric Learning \u8ddd\u96e2\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u53ef\u8996\u5316 Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning \u30de\u30a4\u30cb\u30f3\u30b0\u306b\u3044\u304f\u3064\u304b\u30b7\u30f3\u30d7\u30eb\u306a\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u6700\u9069\u5316\u3092\u884c\u3046\u3053\u3068\u3067\u3069\u306e\u8ddd\u96e2\u640d\u5931\u95a2\u6570\u306b\u5bfe\u3057\u3066\u3082\u7cbe\u5ea6\u5411\u4e0a\u304c\u78ba\u8a8d\u3055\u308c\u305f Moving in the Right Direction: A Regularization for Deep Metric Learning \u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306e\u6b63\u5247\u5316\u624b\u6cd5\u306e\u6bd4\u8f03\u3001triplet loss\u306e\u5371\u967a\u6027\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3042\u3063\u305f Deep Metric Learning via Adaptive Learnable Assessment \u30de\u30a4\u30cb\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3092\u5b66\u7fd2\u30d9\u30fc\u30b9\u306b\u7f6e\u304d\u63db\u3048\u30a8\u30d4\u30bd\u30fc\u30c9\u30d9\u30fc\u30b9\u306e\u5b66\u7fd2\u30b9\u30ad\u30fc\u30e0\u3092\u63a1\u7528\u3057\u305f \u52d5\u753b\u30bf\u30b9\u30af Spatiotemporal Contrastive Video Representation Learning SimCLR\u3092\u52d5\u753b\u5206\u985e\u30bf\u30b9\u30af\u306b\u9069\u7528\u3057\u305f\u3001\u5c0e\u5165\u3057\u305f\u3044\u3002 Predicting Video with VQVAE kinetics600\u306765%\u3001teacher_forcing like\u306a\u65b9\u6cd5\u304c\u53d6\u308c\u308b Is Space-Time Attention All You Need for Video Understanding? Transformer\u306b\u3088\u308b\u52d5\u753b\u5206\u985e\u5668\u3001\u8272\u3005\u65b0\u3057\u3044\u3002 VideoMix: Rethinking Data Augmentation for Video Classification VideoMix\u3068\u3044\u3046\u52d5\u753b\u884c\u52d5\u8a8d\u8b58\u306e\u305f\u3081\u306e\u65b0\u3057\u3044DA\u3092\u63d0\u6848\u3001T-VideoMix\u3068\u3044\u3046\u624b\u6cd5\u304c\u5c0e\u5165\u3067\u304d\u305d\u3046\u3002 TSM: Temporal Shift Module for Efficient Video Understanding 3DCNN\u91cd\u3059\u304e\u554f\u984c\u3092TSM\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u30922DCNN\u306b\u633f\u5165\u3059\u308b\u3053\u3068\u3067\u4ee3\u7528\u3057\u305f\u3001TSM\u306f\u30d1\u30e9\u30e1\u30fc\u30bf0\u306a\u306e\u30672DCNN\u306ecomplexity\u306e\u307e\u307e\u3089\u3057\u3044\u3002 \u672a\u6765\u4e88\u60f3 Improved Conditional VRNNs for Video Prediction Variational Recurrent Autoencoder \u3067\u52d5\u753b\u306e\u672a\u77e5\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u4e88\u6e2c\u3059\u308b\u3002\u5178\u578b\u7684\u306aRAE\u3067\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3001\u751f\u6210\u3059\u308b\u306a\u3089\u3053\u308c\u3067\u3057\u3087\u3002 Video Prediction via Example Guidance \u8aad\u307f\u7d42\u308f\u3063\u3066\u306a\u3044\u3001\u52d5\u753b\u672a\u6765\u4e88\u6e2c\u3067\u521d\u306e\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u30e2\u30c7\u30eb Predictive Learning: Using Future Representation Learning Variantial Autoencoder for Human Action Prediction RGB\u3068Optical Flow\u306e2\u30b9\u30c8\u30ea\u30fc\u30e0 \u5b66\u7fd2\u624b\u6cd5 Invariant Information Clustering for Unsupervised Image Classification and Segmentation \u6559\u5e2b\u7121\u3057+\u4e88\u6e2c\u5024\u3092\u76f4\u51fa\u529b\u3067\u304d\u308b\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u65b9\u6cd5\u3001\u30ce\u30a4\u30ba\u306b\u5f37\u3044 Supervised Contrastive Learning SimCLR\u30d9\u30fc\u30b9\u3067\u6559\u5e2b\u6709\u5b66\u7fd2\u3092\u884c\u3046 Unsupervised Learning of Visual Features by Contrasting Cluster Assignments SwAV A Simple Framework for Contrastive Learning of Visual Representations SimCLR AutoAugment: Learning Augmentation Policies from Data \u5b66\u7fd2\u30d9\u30fc\u30b9\u3067DA\u3092\u884c\u3046 What Makes Training Multi-modal Classification Networks Hard? \u305d\u306e\u4ed6 Revisiting ResNets: Improved Training and Scaling Strategies ResNet\u306e\u5b66\u7fd2\u3068\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u65b9\u6cd5 An annotation-free whole-slide training approach to pathological classification of lung cancer types using deep learning \u30e6\u30cb\u30d5\u30a1\u30a4\u30c9\u30e1\u30e2\u30ea\uff08UM\uff09\u30e1\u30ab\u30cb\u30ba\u30e0\u3068\u3044\u304f\u3064\u304b\u306eGPU\u30e1\u30e2\u30ea\u6700\u9069\u5316\u624b\u6cd5\u3067\u753b\u50cf\u306e\u7e2e\u5c0f\u3092\u56de\u907f\u3059\u308b Prototypical Contrastive Learning of Unsupervised Representations EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30d9\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u53ce\u675f\u3057\u305a\u3089\u304f\u306a\u308b\u69d8\u306b\u8ddd\u96e2\u95a2\u6570\u3092\u5909\u66f4\u3057\u3066\u3044\u304d\u904e\u5b66\u7fd2\u3092\u6291\u5236\u3059\u308b","title":"List of nice papers"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#list-of-nice-papers","text":"","title":"List of nice papers"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#_1","text":"SoftTriple Loss: Deep Metric Learning Without Triplet Sampling Classifcation\u3068metric learning\u3092\u4e00\u3064\u306e\u30ed\u30b9\u3067\u884c\u3046\u624b\u6cd5\u306e\u63d0\u6848\u3002Triplet loss\u3092\u30b9\u30e0\u30fc\u30b8\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068 cross entropy\u306b\u306a\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u305f\uff08\u672c\u8cea\u7684\u306b\u306f\u540c\u3058\u3060\u3063\u305f\u3089\u3057\u3044\uff09 Visual Explanation for Deep Metric Learning \u8ddd\u96e2\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u53ef\u8996\u5316 Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning \u30de\u30a4\u30cb\u30f3\u30b0\u306b\u3044\u304f\u3064\u304b\u30b7\u30f3\u30d7\u30eb\u306a\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u6700\u9069\u5316\u3092\u884c\u3046\u3053\u3068\u3067\u3069\u306e\u8ddd\u96e2\u640d\u5931\u95a2\u6570\u306b\u5bfe\u3057\u3066\u3082\u7cbe\u5ea6\u5411\u4e0a\u304c\u78ba\u8a8d\u3055\u308c\u305f Moving in the Right Direction: A Regularization for Deep Metric Learning \u6df1\u5c64\u8ddd\u96e2\u5b66\u7fd2\u306e\u6b63\u5247\u5316\u624b\u6cd5\u306e\u6bd4\u8f03\u3001triplet loss\u306e\u5371\u967a\u6027\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3042\u3063\u305f Deep Metric Learning via Adaptive Learnable Assessment \u30de\u30a4\u30cb\u30f3\u30b0\u306e\u30eb\u30fc\u30eb\u3092\u5b66\u7fd2\u30d9\u30fc\u30b9\u306b\u7f6e\u304d\u63db\u3048\u30a8\u30d4\u30bd\u30fc\u30c9\u30d9\u30fc\u30b9\u306e\u5b66\u7fd2\u30b9\u30ad\u30fc\u30e0\u3092\u63a1\u7528\u3057\u305f","title":"\u8ddd\u96e2\u5b66\u7fd2"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#_2","text":"Spatiotemporal Contrastive Video Representation Learning SimCLR\u3092\u52d5\u753b\u5206\u985e\u30bf\u30b9\u30af\u306b\u9069\u7528\u3057\u305f\u3001\u5c0e\u5165\u3057\u305f\u3044\u3002 Predicting Video with VQVAE kinetics600\u306765%\u3001teacher_forcing like\u306a\u65b9\u6cd5\u304c\u53d6\u308c\u308b Is Space-Time Attention All You Need for Video Understanding? Transformer\u306b\u3088\u308b\u52d5\u753b\u5206\u985e\u5668\u3001\u8272\u3005\u65b0\u3057\u3044\u3002 VideoMix: Rethinking Data Augmentation for Video Classification VideoMix\u3068\u3044\u3046\u52d5\u753b\u884c\u52d5\u8a8d\u8b58\u306e\u305f\u3081\u306e\u65b0\u3057\u3044DA\u3092\u63d0\u6848\u3001T-VideoMix\u3068\u3044\u3046\u624b\u6cd5\u304c\u5c0e\u5165\u3067\u304d\u305d\u3046\u3002 TSM: Temporal Shift Module for Efficient Video Understanding 3DCNN\u91cd\u3059\u304e\u554f\u984c\u3092TSM\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u30922DCNN\u306b\u633f\u5165\u3059\u308b\u3053\u3068\u3067\u4ee3\u7528\u3057\u305f\u3001TSM\u306f\u30d1\u30e9\u30e1\u30fc\u30bf0\u306a\u306e\u30672DCNN\u306ecomplexity\u306e\u307e\u307e\u3089\u3057\u3044\u3002","title":"\u52d5\u753b\u30bf\u30b9\u30af"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#_3","text":"Improved Conditional VRNNs for Video Prediction Variational Recurrent Autoencoder \u3067\u52d5\u753b\u306e\u672a\u77e5\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u4e88\u6e2c\u3059\u308b\u3002\u5178\u578b\u7684\u306aRAE\u3067\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3001\u751f\u6210\u3059\u308b\u306a\u3089\u3053\u308c\u3067\u3057\u3087\u3002 Video Prediction via Example Guidance \u8aad\u307f\u7d42\u308f\u3063\u3066\u306a\u3044\u3001\u52d5\u753b\u672a\u6765\u4e88\u6e2c\u3067\u521d\u306e\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u30e2\u30c7\u30eb Predictive Learning: Using Future Representation Learning Variantial Autoencoder for Human Action Prediction RGB\u3068Optical Flow\u306e2\u30b9\u30c8\u30ea\u30fc\u30e0","title":"\u672a\u6765\u4e88\u60f3"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#_4","text":"Invariant Information Clustering for Unsupervised Image Classification and Segmentation \u6559\u5e2b\u7121\u3057+\u4e88\u6e2c\u5024\u3092\u76f4\u51fa\u529b\u3067\u304d\u308b\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u65b9\u6cd5\u3001\u30ce\u30a4\u30ba\u306b\u5f37\u3044 Supervised Contrastive Learning SimCLR\u30d9\u30fc\u30b9\u3067\u6559\u5e2b\u6709\u5b66\u7fd2\u3092\u884c\u3046 Unsupervised Learning of Visual Features by Contrasting Cluster Assignments SwAV A Simple Framework for Contrastive Learning of Visual Representations SimCLR AutoAugment: Learning Augmentation Policies from Data \u5b66\u7fd2\u30d9\u30fc\u30b9\u3067DA\u3092\u884c\u3046 What Makes Training Multi-modal Classification Networks Hard?","title":"\u5b66\u7fd2\u624b\u6cd5"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/paper_list/#_5","text":"Revisiting ResNets: Improved Training and Scaling Strategies ResNet\u306e\u5b66\u7fd2\u3068\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u65b9\u6cd5 An annotation-free whole-slide training approach to pathological classification of lung cancer types using deep learning \u30e6\u30cb\u30d5\u30a1\u30a4\u30c9\u30e1\u30e2\u30ea\uff08UM\uff09\u30e1\u30ab\u30cb\u30ba\u30e0\u3068\u3044\u304f\u3064\u304b\u306eGPU\u30e1\u30e2\u30ea\u6700\u9069\u5316\u624b\u6cd5\u3067\u753b\u50cf\u306e\u7e2e\u5c0f\u3092\u56de\u907f\u3059\u308b Prototypical Contrastive Learning of Unsupervised Representations EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30d9\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u53ce\u675f\u3057\u305a\u3089\u304f\u306a\u308b\u69d8\u306b\u8ddd\u96e2\u95a2\u6570\u3092\u5909\u66f4\u3057\u3066\u3044\u304d\u904e\u5b66\u7fd2\u3092\u6291\u5236\u3059\u308b","title":"\u305d\u306e\u4ed6"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/","text":"\u53c2\u8003\u6587\u732e https://arxiv.org/abs/1803.08225 https://arxiv.org/pdf/1803.08225.pdf https://arxiv.org/abs/1701.01779 (\u5099\u5fd8\u9332)PoseNet\u3092\u4f7f\u3063\u305f\u59ff\u52e2\u63a8\u5b9a in Tensorflow \u6982\u8981 Posenet : https://github.com/tensorflow/tfjs-models/tree/master/posenet \u3092\u6271\u3046 \u3053\u306e\u3088\u3046\u306a\u59ff\u52e2\u63a8\u5b9a(\u9aa8\u683c\u63a8\u5b9a)\u306f\u3001input\u3055\u308c\u305f\u753b\u50cf\u306e \u3069\u3053\u5ea7\u6a19\u304c\u3069\u306e\u70b9(\u8098\u3068\u304b\u624b\u9996\u3068\u304b)\u306b\u3042\u305f\u308b\u304b\u3092\u63a8\u5b9a\u3057\u3066\u3044\u308b\u3002 Posenet\u3067\u306f\u4ee5\u4e0b\u306e17\u70b9\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3053\u308c\u3089\u306e\u70b9\u3092Keypoint\u3068\u8a00\u3046\u3002 0 nose 1 leftEye 2 rightEye 3 leftEar 4 rightEar 5 leftShoulder 6 rightShoulder 7 leftElbow 8 rightElbow 9 leftWrist 10 rightWrist 11 leftHip 12 rightHip 13 leftKnee 14 rightKnee 15 leftAnkle 16 rightAnkle Keypoint \u3092\u898b\u3064\u3051\u51fa\u3059\u4ed5\u7d44\u307f \u53c2\u8003(MobileNet\u7248Posenet\u306b\u3064\u3044\u3066) https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5 \u5b66\u7fd2\u6e08\u307f\u306eMobileNet\u306f\u3001\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306a keypoint heatmap \u3084 offset vectors \u7b49\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002 \u753b\u50cf\u4e2d keypoint heatmap , offset vectors \u304c\u683c\u5b50\u72b6\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u4e00\u9023\u306e\u51e6\u7406\u3092\u9ad8\u901f\u5316\u3055\u305b\u308b\u305f\u3081\u306e outputStride (\u30e1\u30c3\u30b7\u30e5\u5e45\u307f\u305f\u3044\u306a\u3082\u306e)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002 outputStride \u306e\u6570\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u30e1\u30c3\u30b7\u30e5\u304c\u5927\u304d\u304f\u5207\u3089\u308c\u3001\u51e6\u7406\u901f\u5ea6\u306f\u5411\u4e0a\u3059\u308b\u304c\u7cbe\u5ea6\u306f\u843d\u3061\u308b\u3002 \u305d\u3057\u3066 keypoint heatmap \u3092\u30b9\u30b3\u30a2\u5316\u3059\u308b\u305f\u3081\u30b7\u30b0\u30e2\u30a4\u30c9\u6d3b\u6027\u5316\u3057\u305f\u3082\u306e\u2192 heatmapPositions \u3092\u7528\u610f\u3059\u308b\u3002 Keypoint\u306f\u4ee5\u4e0a\u306e\u4e09\u8981\u7d20 ( heatmapPositions , offset vectors , outputStride ) \u3067\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u3002 keypointPositions = heatmapPositions * outputStride + offsetVectors offset vectors \u306b\u3064\u3044\u3066 \u3053\u308c\u304cPosenet\u306e\u767a\u660e\u54c1\u306e\u3088\u3046\u3060 Long-range offsets , Short-range offsets , Mid-range offsets \u306e3\u7a2e\u985e\u3042\u308b\u304c\u3001\u3053\u306e\u4e2d\u3067\u3044\u3061\u3070\u3093\u91cd\u8981\u306a\u3082\u306e\u306fShort-range offsets\u3067\u3042\u308b\u3002 offset vectors\u306f\u57fa\u672c\u7684\u306bShort-range offsets\u3057\u305f\u30d9\u30af\u30c8\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a\u306e\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u3002 Long-range offsets\u306f\u59ff\u52e2\u63a8\u5b9a\u3067\u306f\u4f7f\u308f\u306a\u3044\u3002 Long-range offsets \u4ee5\u4e0b\u306f\u4f8b\u3068\u3057\u3066\u9f3b\u306b\u304b\u3051\u3066\u306eLong-range offsets (vector)\u3092\u8868\u3057\u305f\u3082\u306e\u3060\u3002 https://arxiv.org/pdf/1803.08225.pdf \u3088\u308a \u3061\u306a\u307f\u306bLong-range offsets\u306f\u59ff\u52e2\u63a8\u5b9a\u3067\u306f\u4f7f\u3063\u3066\u304a\u3089\u305a(\u2190\u30bb\u30b0\u30e1\u30f3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b)\u3001\u59ff\u52e2\u63a8\u5b9a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u5c40\u6240\u7684\u306a\u9818\u57df\u5185\u3067\u306e\u30d9\u30af\u30c8\u30eb\u3092\u793a\u3057\u305fShort-range offsets\u3068Mid-range offsets\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002 Short-range offsets \u306b\u3064\u3044\u3066 Short-range offsets\u306f\u30ad\u30fc\u30dd\u30a4\u30f3\u30c8\u306e\u5ea7\u6a19\u3092\u4e00\u610f\u7684\u306b\u6c7a\u3081\u308b\u5404\u683c\u5b50\u70b9\u3092\u59cb\u70b9\u3068\u3059\u308b\u30d9\u30af\u30c8\u30eb\u60c5\u5831\u3067\u3042\u308b\u3002(outputStride\u306b\u3088\u3063\u3066\u5b9a\u3081\u3089\u308c\u305f\u683c\u5b50\u70b9\u304c10x20\u3042\u308b\u5834\u5408\u30011\u500b\u306eKeypoint\u306b\u5bfe\u3059\u308bShort-range offsets\u306e\u30b5\u30a4\u30ba\u306f\u3001\u5404\u70b9\u3054\u3068\u306ex,y\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u305d\u308c\u305e\u308c\u306e\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u306e\u3067\u300120x10x2\u3068\u306a\u308b) offset vectors \u306f\u516817\u500b\u306eKeypoint\u5206\u306eShort-range offsets\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002(\u3064\u307e\u308a\u683c\u5b50\u70b9\u304c10x20\u3042\u308b\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306f20x10x34\u3068\u306a\u308b) \u4e0b\u306e\u56f3\u3067\u306f\u3001\u9f3b\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u4ed8\u8fd1\u306eShort-range offsets\u3092\u53c2\u7167\u3057\u9f3b\u306eKeypoint\u3092\u691c\u51fa\u3059\u308b\u69d8\u5b50\u3067\u3042\u308b(\u5de6\u8098\u3082\u540c\u69d8) Mid-range offsets \u306b\u3064\u3044\u3066 Mid-range offsets \u306fKeypoint\u540c\u58eb\u306e\u4f4d\u7f6e, \u63a5\u7d9a\u95a2\u4fc2\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u3002 \u30e2\u30c7\u30eb\u69cb\u9020(MobileNet\u5229\u7528) \u73fe\u5728\u3001\u7cbe\u5ea6\u304c\u9ad8\u304f\u901f\u5ea6\u306f\u9045\u3044ResNet\u7248\u3082\u3042\u308b\u304c\u3001MobileNet\u7248\u306b\u7d5e\u308b \u2193\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 https://qiita.com/otmb/items/561a62d3413295cc744e \u672c\u30da\u30fc\u30b8\u3067\u89e6\u308c\u3066\u3044\u306a\u3044\u304c\u3001outputStride\u309216\u3068\u3057\u3001\u5165\u529b\u753b\u50cf\u30b5\u30a4\u30ba\u304c513\u306a\u306e\u3067\u3001 ((513 - 1)// 16) + 1 = 33 \u3088\u308a\u51fa\u529b\u3055\u308c\u308b\u30c6\u30f3\u30bd\u30eb\u306e\u30b5\u30a4\u30ba\u306f1\u8fba33\u3068\u306a\u308b\u3002 \u8a08\u7b97\u5f0f https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5 Resolution = ((InputImageSize - 1) / OutputStride) + 1 \u901a\u5e38\u306e\u7573\u8fbc\u307f\u30921\u56de\u3001\u5f8c depthwise_conv2d relu6 conv2d relu6 \u309213\u56de\u7e70\u308a\u8fd4\u3057\u30014\u3064\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3057\u3001 \u66f4\u306b\u305d\u308c\u305e\u308c\u306b\u7573\u307f\u8fbc\u307f\u30921\u56de\u884c\u3063\u305f\u30014\u3064\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002 \u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u306b\u3064\u3044\u3066 https://github.com/tensorflow/tfjs/issues/1137 https://github.com/tensorflow/tfjs/issues/1137#issuecomment-462450145 multi_person_mobilenet_v1_075_float.tflite \u306f\u5f8c\u8ff0\u3067\u6271\u3046 keypoint heatmap\u3060\u3051\u306f\u524d\u8ff0\u306e\u901a\u308a\u3001\u30b7\u30b0\u30e2\u30a4\u30c9\u6d3b\u6027\u5316\u3055\u305b\u308b\u304c\u3001\u4ed6\u306e\u30c6\u30f3\u30bd\u30eb\u306f\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u3002 \u51fa\u529b\u3055\u308c\u308b\u30c6\u30f3\u30bd\u30eb\u306f keypoint, heatmap, offset vectors, horizontal, vertical directions \u3068\u56f3\u3067\u306f\u66f8\u3044\u3066\u3042\u308b\u304c\u3001 \u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u306f heatmap, offset, displacementFwd, displacementBwd \u3053\u306e\u3088\u3046\u306a\u540d\u524d\u306e\u6271\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u3002 \u3053\u306e(horizontal, vertical)\u3082\u3057\u304f\u306f(displacementFwd, displacementBwd)\u306e\u6b63\u4f53\u306fMid-range offsets\u3067\u3042\u308b\u3002 \u524d\u8ff0\u306e\u901a\u308a\u3001\u3053\u306e\u51fa\u529b\u3055\u308c\u305f4\u30c6\u30f3\u30bd\u30eb\u3092\u4f7f\u3044\u9aa8\u683c\u306e\u5ea7\u6a19\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3057\u304b\u3057\u3001\u6700\u65b0\u306etflite\u30e2\u30c7\u30eb\u306f\u76f4\u63a5Keypoint\u3092\u51fa\u529b\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b...\u3002 \u30e2\u30c7\u30eb\u306e\u89e3\u6790 \u69cb\u9020\u3084\u8a08\u7b97\u65b9\u5f0f\u304c\u30d0\u30fc\u30b8\u30e7\u30f3?\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u308f\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002 multiplier\u30920.75\u306b\u56fa\u5b9a\u3057\u8abf\u67fb\u3057\u305f\u3002(tflite\u306e\u30e2\u30c7\u30eb\u304c0.75\u306e\u3082\u306e\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f) \u30fb\u30aa\u30ea\u30b8\u30ca\u30eb:tensorflow js\u7248(checkpoint) https://github.com/tensorflow/tfjs-models/tree/master/posenet \u30fb\u975e\u516c\u5f0fpython\u5909\u63db\u7248(Protocol Buffer(.pb)) \u5165\u529b\u30b5\u30a4\u30ba\u81ea\u7531 \u51fa\u529b4\u3064(heatmap, offset, mid-offsets(displacement_fwd, displacement_bwd)) https://github.com/rwightman/posenet-python model-mobilenet_v1_075.pb : 5.1MB \u30fbtensorflow lite\u516c\u5f0f\u30da\u30fc\u30b8\u306epose_estimation \u5165\u529b\u30b5\u30a4\u30ba\u56fa\u5b9a257x353 \u51fa\u529b4\u3064(heatmaps, short_offsets, mid_offsets, segments) https://www.tensorflow.org/lite/models/pose_estimation/overview#get_started multi_person_mobilenet_v1_075_float.tflite : 5.0 MB \u30fbgoogle-coral \u7528\u306etensorflow lite\u30e2\u30c7\u30eb \u3053\u308c\u307e\u3067\u306e\u3082\u306e\u3068\u7570\u306a\u308a\u3001\u76f4\u63a5Keypoints\u3092\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30a4\u30eb\u3002 \u5165\u529b\u30b5\u30a4\u30ba\u56fa\u5b9a(\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u8a18\u8f09) \u51fa\u529b4 poses(Keypoints), poses:1(keypoint_scores), poses:2(pose_scores), poses:3(\u7a7a) https://github.com/google-coral/project-posenet posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite : 1.5 MB posenet_mobilenet_v1_075_481_641_quant_decoder_edgetpu.tflite : 1.7 MB posenet_mobilenet_v1_075_721_1281_quant_decoder_edgetpu.tflite : 2.5 MB \u975e\u516c\u5f0fpython\u5909\u63db\u7248(Protocol Buffer(.pb)) \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba model-mobilenet_v1_075.pb : 5.1MB (model-mobilenet_v1_101.pb : 13.3MB ) \u51fa\u529b heatmap_2 offset_2 displacement_fwd_2 displacement_bwd_2 \u69cb\u9020 tensorbord\u3092\u4f7f\u3063\u3066\u89e3\u6790\u3092\u884c\u3044\u3001\u4e0a\u753b\u50cf\u4e2d MobilenetV1\u306e\u4e2d\u3092\u8868\u793a\u3057\u753b\u50cf\u5316\u3057\u3088\u3046\u3068\u8a66\u307f\u305f\u304c\u3001\u3042\u307e\u308a\u306b\u3082\u9577\u5927\u306a\u753b\u50cf\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u6dfb\u4ed8\u3057\u306a\u3044\u3002 \u70b9\u691c\u3057\u305f\u3068\u3053\u308d\u3001\u4e0a\u8a18 \u30e2\u30c7\u30eb\u69cb\u9020(MobileNet\u5229\u7528) \u3068\u540c\u3058\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u305f\u3002 tensorflow lite\u516c\u5f0f\u30da\u30fc\u30b8\u306epose_estimation \u8a73\u3057\u3044\u3053\u3068\u304c\u3042\u307e\u308a\u8f09\u3063\u3066\u3044\u306a\u3044\u304c https://www.tensorflow.org/lite/models/pose_estimation/overview#get_started \u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3082\u306e\u3002 Android, iOS\u306b\u4f7f\u3046\u98a8\u3060\u3002 \u4eca\u307e\u30672\u3064\u306b\u5206\u304b\u308c\u3066\u3044\u305fmid_offsets \u304c\u4e00\u3064\u306b\u307e\u3068\u307e\u3063\u3066\u51fa\u529b\u3055\u308c\u3001\u65b0\u3057\u304fsegments\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002 K210\u7528\u306bkmodel\u3078\u5909\u63db Fatal: Layer DepthwiseConv2d is not supported \u3068\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u3057\u3066\u3057\u307e\u3063\u305f\u3002 https://github.com/kendryte/nncase/issues/14#issuecomment-489506085 Check your DepthwiseConv2d with 3x3 kernel and 2x2 stride, there is a hardware limitation that you must use tf.pad([[0,0],[1,1],[1,1],[0,0]]) to pad your input and the use valid padding in your DepthwiseConv2d. 2x2\u30b9\u30c8\u30e9\u30a4\u30c9\u306eDepthwiseConv2d \u306e\u524d\u306b tf.pad([[0,0],[1,1],[1,1],[0,0]])\u3092\u7f6e\u3044\u3066\u6570\u5408\u308f\u305b\u3057\u3066\u3042\u3052\u3001DepthwiseConv2d\u3067\u306epadding\u306fvalid\u3092\u4f7f\u308f\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u3088\u3046\u3060s \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba multi_person_mobilenet_v1_075_float.tflite : 5.0 MB \u51fa\u529b float_heatmaps float_mid_offsets float_segments float_short_offsets \u69cb\u9020 https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/visualize.py \u3092\u4f7f\u7528\u3057\u4e2d\u8eab\u3092\u62dd\u898b\u3057\u305f\u3002visualize.py\u5c0e\u5165\u307e\u3068\u3081\u306f\u5f8c\u8ff0\u3059\u308b\u3002 \u69cb\u9020\u81ea\u4f53\u306f\u4eca\u307e\u3067\u306e\u3082\u306e\u3068\u5927\u304d\u304f\u5909\u308f\u3089\u306a\u3044 multi_person_mobilenet_v1_075_float.tflite.html \u5165\u529b\u3001conv2d\u306e\u5f8c depthwise_conv2d relu6 conv2d relu6 \u309213\u56de\u7e70\u308a\u8fd4\u3057\u3001 displacement_fwd\u3068displacement_bwd\u3092conv2d\u3092\u3057\u305f\u5f8c\u304f\u3063\u3064\u3051\u3066\u308b\u3002(\u3053\u3053\u3060\u3051\u4eca\u307e\u3067\u3068\u7570\u306a\u308b) google-coral \u7528\u306etensorflow lite\u30e2\u30c7\u30eb \u3053\u308c\u307e\u3067\u306e\u3082\u306e\u3068\u7570\u306a\u308a\u3001\u76f4\u63a5Keypoints\u3092\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30a4\u30eb\u3002 \u4e0a\u306epose_estimation\u3068\u6bd4\u3079\u3001\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002 Edge-tpu \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002 https://github.com/google-coral/project-posenet/blob/master/pose_engine.py \u51fa\u529b poses(Keypoints) poses:1(keypoint_scores) poses:2(pose_scores) poses:3(\u7a7a) \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite : 1.5 MB posenet_mobilenet_v1_075_481_641_quant_decoder_edgetpu.tflite : 1.7 MB posenet_mobilenet_v1_075_721_1281_quant_decoder_edgetpu.tflite : 2.5 MB \u69cb\u9020 \u5165\u529b\u30b5\u30a4\u30ba353x481\u306e posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite \u306b\u3064\u3044\u3066 posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite.html nputs/Outputs inputs 3 sub_2 UINT8 [1, 353, 481, 3] outputs [4, 5, 6, 7] 4 poses FLOAT32 [1, 10, 17, 2] 5 poses:1 FLOAT32 [1, 10, 17] 6 poses:2 FLOAT32 [1, 10] 7 poses:3 FLOAT32 [] Tensors index name type shape buffer quantization 0 MobilenetV1/heatmap_2/BiasAdd UINT8 [1, 23, 31, 17] 0 {'scale': [0.047059], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 1 MobilenetV1/offset_2/BiasAdd UINT8 [1, 23, 31, 34] 0 {'scale': [0.392157], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 2 concat UINT8 [1, 23, 31, 64] 0 {'scale': [1.387576], 'zero_point': [117], 'details_type': 'NONE', 'quantized_dimension': 0} 3 sub_2 UINT8 [1, 353, 481, 3] 0 {'scale': [0.007812], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 4 poses FLOAT32 [1, 10, 17, 2] 7 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 5 poses:1 FLOAT32 [1, 10, 17] 2 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 6 poses:2 FLOAT32 [1, 10] 6 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 7 poses:3 FLOAT32 [] 8 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} Ops index inputs outputs builtin_options opcode_index 0 [3] [0, 1, 2] None CUSTOM (0) 1 [0, 1, 2] [4, 5, 6, 7] None CUSTOM (1) CUSTOM \u306e\u6b63\u4f53\u304c\u8b0e","title":"Posenet"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#posenet-in-tensorflow","text":"","title":"(\u5099\u5fd8\u9332)PoseNet\u3092\u4f7f\u3063\u305f\u59ff\u52e2\u63a8\u5b9a in Tensorflow"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_1","text":"Posenet : https://github.com/tensorflow/tfjs-models/tree/master/posenet \u3092\u6271\u3046 \u3053\u306e\u3088\u3046\u306a\u59ff\u52e2\u63a8\u5b9a(\u9aa8\u683c\u63a8\u5b9a)\u306f\u3001input\u3055\u308c\u305f\u753b\u50cf\u306e \u3069\u3053\u5ea7\u6a19\u304c\u3069\u306e\u70b9(\u8098\u3068\u304b\u624b\u9996\u3068\u304b)\u306b\u3042\u305f\u308b\u304b\u3092\u63a8\u5b9a\u3057\u3066\u3044\u308b\u3002 Posenet\u3067\u306f\u4ee5\u4e0b\u306e17\u70b9\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3053\u308c\u3089\u306e\u70b9\u3092Keypoint\u3068\u8a00\u3046\u3002 0 nose 1 leftEye 2 rightEye 3 leftEar 4 rightEar 5 leftShoulder 6 rightShoulder 7 leftElbow 8 rightElbow 9 leftWrist 10 rightWrist 11 leftHip 12 rightHip 13 leftKnee 14 rightKnee 15 leftAnkle 16 rightAnkle","title":"\u6982\u8981"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#keypoint","text":"\u53c2\u8003(MobileNet\u7248Posenet\u306b\u3064\u3044\u3066) https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5 \u5b66\u7fd2\u6e08\u307f\u306eMobileNet\u306f\u3001\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306a keypoint heatmap \u3084 offset vectors \u7b49\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002 \u753b\u50cf\u4e2d keypoint heatmap , offset vectors \u304c\u683c\u5b50\u72b6\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u4e00\u9023\u306e\u51e6\u7406\u3092\u9ad8\u901f\u5316\u3055\u305b\u308b\u305f\u3081\u306e outputStride (\u30e1\u30c3\u30b7\u30e5\u5e45\u307f\u305f\u3044\u306a\u3082\u306e)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002 outputStride \u306e\u6570\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u30e1\u30c3\u30b7\u30e5\u304c\u5927\u304d\u304f\u5207\u3089\u308c\u3001\u51e6\u7406\u901f\u5ea6\u306f\u5411\u4e0a\u3059\u308b\u304c\u7cbe\u5ea6\u306f\u843d\u3061\u308b\u3002 \u305d\u3057\u3066 keypoint heatmap \u3092\u30b9\u30b3\u30a2\u5316\u3059\u308b\u305f\u3081\u30b7\u30b0\u30e2\u30a4\u30c9\u6d3b\u6027\u5316\u3057\u305f\u3082\u306e\u2192 heatmapPositions \u3092\u7528\u610f\u3059\u308b\u3002 Keypoint\u306f\u4ee5\u4e0a\u306e\u4e09\u8981\u7d20 ( heatmapPositions , offset vectors , outputStride ) \u3067\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u3002 keypointPositions = heatmapPositions * outputStride + offsetVectors","title":"Keypoint \u3092\u898b\u3064\u3051\u51fa\u3059\u4ed5\u7d44\u307f"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#offset-vectors","text":"\u3053\u308c\u304cPosenet\u306e\u767a\u660e\u54c1\u306e\u3088\u3046\u3060 Long-range offsets , Short-range offsets , Mid-range offsets \u306e3\u7a2e\u985e\u3042\u308b\u304c\u3001\u3053\u306e\u4e2d\u3067\u3044\u3061\u3070\u3093\u91cd\u8981\u306a\u3082\u306e\u306fShort-range offsets\u3067\u3042\u308b\u3002 offset vectors\u306f\u57fa\u672c\u7684\u306bShort-range offsets\u3057\u305f\u30d9\u30af\u30c8\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a\u306e\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u3002 Long-range offsets\u306f\u59ff\u52e2\u63a8\u5b9a\u3067\u306f\u4f7f\u308f\u306a\u3044\u3002","title":"offset vectors \u306b\u3064\u3044\u3066"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#long-range-offsets","text":"\u4ee5\u4e0b\u306f\u4f8b\u3068\u3057\u3066\u9f3b\u306b\u304b\u3051\u3066\u306eLong-range offsets (vector)\u3092\u8868\u3057\u305f\u3082\u306e\u3060\u3002 https://arxiv.org/pdf/1803.08225.pdf \u3088\u308a \u3061\u306a\u307f\u306bLong-range offsets\u306f\u59ff\u52e2\u63a8\u5b9a\u3067\u306f\u4f7f\u3063\u3066\u304a\u3089\u305a(\u2190\u30bb\u30b0\u30e1\u30f3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b)\u3001\u59ff\u52e2\u63a8\u5b9a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u5c40\u6240\u7684\u306a\u9818\u57df\u5185\u3067\u306e\u30d9\u30af\u30c8\u30eb\u3092\u793a\u3057\u305fShort-range offsets\u3068Mid-range offsets\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002","title":"Long-range offsets"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#short-range-offsets","text":"Short-range offsets\u306f\u30ad\u30fc\u30dd\u30a4\u30f3\u30c8\u306e\u5ea7\u6a19\u3092\u4e00\u610f\u7684\u306b\u6c7a\u3081\u308b\u5404\u683c\u5b50\u70b9\u3092\u59cb\u70b9\u3068\u3059\u308b\u30d9\u30af\u30c8\u30eb\u60c5\u5831\u3067\u3042\u308b\u3002(outputStride\u306b\u3088\u3063\u3066\u5b9a\u3081\u3089\u308c\u305f\u683c\u5b50\u70b9\u304c10x20\u3042\u308b\u5834\u5408\u30011\u500b\u306eKeypoint\u306b\u5bfe\u3059\u308bShort-range offsets\u306e\u30b5\u30a4\u30ba\u306f\u3001\u5404\u70b9\u3054\u3068\u306ex,y\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u305d\u308c\u305e\u308c\u306e\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u306e\u3067\u300120x10x2\u3068\u306a\u308b) offset vectors \u306f\u516817\u500b\u306eKeypoint\u5206\u306eShort-range offsets\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002(\u3064\u307e\u308a\u683c\u5b50\u70b9\u304c10x20\u3042\u308b\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306f20x10x34\u3068\u306a\u308b) \u4e0b\u306e\u56f3\u3067\u306f\u3001\u9f3b\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u4ed8\u8fd1\u306eShort-range offsets\u3092\u53c2\u7167\u3057\u9f3b\u306eKeypoint\u3092\u691c\u51fa\u3059\u308b\u69d8\u5b50\u3067\u3042\u308b(\u5de6\u8098\u3082\u540c\u69d8)","title":"Short-range offsets \u306b\u3064\u3044\u3066"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#mid-range-offsets","text":"Mid-range offsets \u306fKeypoint\u540c\u58eb\u306e\u4f4d\u7f6e, \u63a5\u7d9a\u95a2\u4fc2\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u3002","title":"Mid-range offsets \u306b\u3064\u3044\u3066"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_2","text":"","title":""},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#mobilenet","text":"\u73fe\u5728\u3001\u7cbe\u5ea6\u304c\u9ad8\u304f\u901f\u5ea6\u306f\u9045\u3044ResNet\u7248\u3082\u3042\u308b\u304c\u3001MobileNet\u7248\u306b\u7d5e\u308b \u2193\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066 https://qiita.com/otmb/items/561a62d3413295cc744e \u672c\u30da\u30fc\u30b8\u3067\u89e6\u308c\u3066\u3044\u306a\u3044\u304c\u3001outputStride\u309216\u3068\u3057\u3001\u5165\u529b\u753b\u50cf\u30b5\u30a4\u30ba\u304c513\u306a\u306e\u3067\u3001 ((513 - 1)// 16) + 1 = 33 \u3088\u308a\u51fa\u529b\u3055\u308c\u308b\u30c6\u30f3\u30bd\u30eb\u306e\u30b5\u30a4\u30ba\u306f1\u8fba33\u3068\u306a\u308b\u3002 \u8a08\u7b97\u5f0f https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5 Resolution = ((InputImageSize - 1) / OutputStride) + 1 \u901a\u5e38\u306e\u7573\u8fbc\u307f\u30921\u56de\u3001\u5f8c depthwise_conv2d relu6 conv2d relu6 \u309213\u56de\u7e70\u308a\u8fd4\u3057\u30014\u3064\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3057\u3001 \u66f4\u306b\u305d\u308c\u305e\u308c\u306b\u7573\u307f\u8fbc\u307f\u30921\u56de\u884c\u3063\u305f\u30014\u3064\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002 \u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u306b\u3064\u3044\u3066 https://github.com/tensorflow/tfjs/issues/1137 https://github.com/tensorflow/tfjs/issues/1137#issuecomment-462450145 multi_person_mobilenet_v1_075_float.tflite \u306f\u5f8c\u8ff0\u3067\u6271\u3046 keypoint heatmap\u3060\u3051\u306f\u524d\u8ff0\u306e\u901a\u308a\u3001\u30b7\u30b0\u30e2\u30a4\u30c9\u6d3b\u6027\u5316\u3055\u305b\u308b\u304c\u3001\u4ed6\u306e\u30c6\u30f3\u30bd\u30eb\u306f\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u3002 \u51fa\u529b\u3055\u308c\u308b\u30c6\u30f3\u30bd\u30eb\u306f keypoint, heatmap, offset vectors, horizontal, vertical directions \u3068\u56f3\u3067\u306f\u66f8\u3044\u3066\u3042\u308b\u304c\u3001 \u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u306f heatmap, offset, displacementFwd, displacementBwd \u3053\u306e\u3088\u3046\u306a\u540d\u524d\u306e\u6271\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u3002 \u3053\u306e(horizontal, vertical)\u3082\u3057\u304f\u306f(displacementFwd, displacementBwd)\u306e\u6b63\u4f53\u306fMid-range offsets\u3067\u3042\u308b\u3002 \u524d\u8ff0\u306e\u901a\u308a\u3001\u3053\u306e\u51fa\u529b\u3055\u308c\u305f4\u30c6\u30f3\u30bd\u30eb\u3092\u4f7f\u3044\u9aa8\u683c\u306e\u5ea7\u6a19\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3057\u304b\u3057\u3001\u6700\u65b0\u306etflite\u30e2\u30c7\u30eb\u306f\u76f4\u63a5Keypoint\u3092\u51fa\u529b\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b...\u3002","title":"\u30e2\u30c7\u30eb\u69cb\u9020(MobileNet\u5229\u7528)"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_3","text":"\u69cb\u9020\u3084\u8a08\u7b97\u65b9\u5f0f\u304c\u30d0\u30fc\u30b8\u30e7\u30f3?\u306b\u3088\u3063\u3066\u5927\u304d\u304f\u5909\u308f\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002 multiplier\u30920.75\u306b\u56fa\u5b9a\u3057\u8abf\u67fb\u3057\u305f\u3002(tflite\u306e\u30e2\u30c7\u30eb\u304c0.75\u306e\u3082\u306e\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f) \u30fb\u30aa\u30ea\u30b8\u30ca\u30eb:tensorflow js\u7248(checkpoint) https://github.com/tensorflow/tfjs-models/tree/master/posenet \u30fb\u975e\u516c\u5f0fpython\u5909\u63db\u7248(Protocol Buffer(.pb)) \u5165\u529b\u30b5\u30a4\u30ba\u81ea\u7531 \u51fa\u529b4\u3064(heatmap, offset, mid-offsets(displacement_fwd, displacement_bwd)) https://github.com/rwightman/posenet-python model-mobilenet_v1_075.pb : 5.1MB \u30fbtensorflow lite\u516c\u5f0f\u30da\u30fc\u30b8\u306epose_estimation \u5165\u529b\u30b5\u30a4\u30ba\u56fa\u5b9a257x353 \u51fa\u529b4\u3064(heatmaps, short_offsets, mid_offsets, segments) https://www.tensorflow.org/lite/models/pose_estimation/overview#get_started multi_person_mobilenet_v1_075_float.tflite : 5.0 MB \u30fbgoogle-coral \u7528\u306etensorflow lite\u30e2\u30c7\u30eb \u3053\u308c\u307e\u3067\u306e\u3082\u306e\u3068\u7570\u306a\u308a\u3001\u76f4\u63a5Keypoints\u3092\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30a4\u30eb\u3002 \u5165\u529b\u30b5\u30a4\u30ba\u56fa\u5b9a(\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u8a18\u8f09) \u51fa\u529b4 poses(Keypoints), poses:1(keypoint_scores), poses:2(pose_scores), poses:3(\u7a7a) https://github.com/google-coral/project-posenet posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite : 1.5 MB posenet_mobilenet_v1_075_481_641_quant_decoder_edgetpu.tflite : 1.7 MB posenet_mobilenet_v1_075_721_1281_quant_decoder_edgetpu.tflite : 2.5 MB","title":"\u30e2\u30c7\u30eb\u306e\u89e3\u6790"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#pythonprotocol-bufferpb","text":"","title":"\u975e\u516c\u5f0fpython\u5909\u63db\u7248(Protocol Buffer(.pb))"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_4","text":"model-mobilenet_v1_075.pb : 5.1MB (model-mobilenet_v1_101.pb : 13.3MB )","title":"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_5","text":"heatmap_2 offset_2 displacement_fwd_2 displacement_bwd_2","title":"\u51fa\u529b"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_6","text":"tensorbord\u3092\u4f7f\u3063\u3066\u89e3\u6790\u3092\u884c\u3044\u3001\u4e0a\u753b\u50cf\u4e2d MobilenetV1\u306e\u4e2d\u3092\u8868\u793a\u3057\u753b\u50cf\u5316\u3057\u3088\u3046\u3068\u8a66\u307f\u305f\u304c\u3001\u3042\u307e\u308a\u306b\u3082\u9577\u5927\u306a\u753b\u50cf\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u6dfb\u4ed8\u3057\u306a\u3044\u3002 \u70b9\u691c\u3057\u305f\u3068\u3053\u308d\u3001\u4e0a\u8a18 \u30e2\u30c7\u30eb\u69cb\u9020(MobileNet\u5229\u7528) \u3068\u540c\u3058\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u305f\u3002","title":"\u69cb\u9020"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#tensorflow-litepose_estimation","text":"\u8a73\u3057\u3044\u3053\u3068\u304c\u3042\u307e\u308a\u8f09\u3063\u3066\u3044\u306a\u3044\u304c https://www.tensorflow.org/lite/models/pose_estimation/overview#get_started \u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3082\u306e\u3002 Android, iOS\u306b\u4f7f\u3046\u98a8\u3060\u3002 \u4eca\u307e\u30672\u3064\u306b\u5206\u304b\u308c\u3066\u3044\u305fmid_offsets \u304c\u4e00\u3064\u306b\u307e\u3068\u307e\u3063\u3066\u51fa\u529b\u3055\u308c\u3001\u65b0\u3057\u304fsegments\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002","title":"tensorflow lite\u516c\u5f0f\u30da\u30fc\u30b8\u306epose_estimation"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#k210kmodel","text":"Fatal: Layer DepthwiseConv2d is not supported \u3068\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u3057\u3066\u3057\u307e\u3063\u305f\u3002 https://github.com/kendryte/nncase/issues/14#issuecomment-489506085 Check your DepthwiseConv2d with 3x3 kernel and 2x2 stride, there is a hardware limitation that you must use tf.pad([[0,0],[1,1],[1,1],[0,0]]) to pad your input and the use valid padding in your DepthwiseConv2d. 2x2\u30b9\u30c8\u30e9\u30a4\u30c9\u306eDepthwiseConv2d \u306e\u524d\u306b tf.pad([[0,0],[1,1],[1,1],[0,0]])\u3092\u7f6e\u3044\u3066\u6570\u5408\u308f\u305b\u3057\u3066\u3042\u3052\u3001DepthwiseConv2d\u3067\u306epadding\u306fvalid\u3092\u4f7f\u308f\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u3088\u3046\u3060s","title":"K210\u7528\u306bkmodel\u3078\u5909\u63db"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_7","text":"multi_person_mobilenet_v1_075_float.tflite : 5.0 MB","title":"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_8","text":"float_heatmaps float_mid_offsets float_segments float_short_offsets","title":"\u51fa\u529b"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_9","text":"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/visualize.py \u3092\u4f7f\u7528\u3057\u4e2d\u8eab\u3092\u62dd\u898b\u3057\u305f\u3002visualize.py\u5c0e\u5165\u307e\u3068\u3081\u306f\u5f8c\u8ff0\u3059\u308b\u3002 \u69cb\u9020\u81ea\u4f53\u306f\u4eca\u307e\u3067\u306e\u3082\u306e\u3068\u5927\u304d\u304f\u5909\u308f\u3089\u306a\u3044 multi_person_mobilenet_v1_075_float.tflite.html \u5165\u529b\u3001conv2d\u306e\u5f8c depthwise_conv2d relu6 conv2d relu6 \u309213\u56de\u7e70\u308a\u8fd4\u3057\u3001 displacement_fwd\u3068displacement_bwd\u3092conv2d\u3092\u3057\u305f\u5f8c\u304f\u3063\u3064\u3051\u3066\u308b\u3002(\u3053\u3053\u3060\u3051\u4eca\u307e\u3067\u3068\u7570\u306a\u308b)","title":"\u69cb\u9020"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#google-coral-tensorflow-lite","text":"\u3053\u308c\u307e\u3067\u306e\u3082\u306e\u3068\u7570\u306a\u308a\u3001\u76f4\u63a5Keypoints\u3092\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30a4\u30eb\u3002 \u4e0a\u306epose_estimation\u3068\u6bd4\u3079\u3001\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002 Edge-tpu \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002 https://github.com/google-coral/project-posenet/blob/master/pose_engine.py","title":"google-coral \u7528\u306etensorflow lite\u30e2\u30c7\u30eb"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_10","text":"poses(Keypoints) poses:1(keypoint_scores) poses:2(pose_scores) poses:3(\u7a7a)","title":"\u51fa\u529b"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_11","text":"posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite : 1.5 MB posenet_mobilenet_v1_075_481_641_quant_decoder_edgetpu.tflite : 1.7 MB posenet_mobilenet_v1_075_721_1281_quant_decoder_edgetpu.tflite : 2.5 MB","title":"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/posenet/#_12","text":"\u5165\u529b\u30b5\u30a4\u30ba353x481\u306e posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite \u306b\u3064\u3044\u3066 posenet_mobilenet_v1_075_353_481_quant_decoder_edgetpu.tflite.html nputs/Outputs inputs 3 sub_2 UINT8 [1, 353, 481, 3] outputs [4, 5, 6, 7] 4 poses FLOAT32 [1, 10, 17, 2] 5 poses:1 FLOAT32 [1, 10, 17] 6 poses:2 FLOAT32 [1, 10] 7 poses:3 FLOAT32 [] Tensors index name type shape buffer quantization 0 MobilenetV1/heatmap_2/BiasAdd UINT8 [1, 23, 31, 17] 0 {'scale': [0.047059], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 1 MobilenetV1/offset_2/BiasAdd UINT8 [1, 23, 31, 34] 0 {'scale': [0.392157], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 2 concat UINT8 [1, 23, 31, 64] 0 {'scale': [1.387576], 'zero_point': [117], 'details_type': 'NONE', 'quantized_dimension': 0} 3 sub_2 UINT8 [1, 353, 481, 3] 0 {'scale': [0.007812], 'zero_point': [128], 'details_type': 'NONE', 'quantized_dimension': 0} 4 poses FLOAT32 [1, 10, 17, 2] 7 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 5 poses:1 FLOAT32 [1, 10, 17] 2 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 6 poses:2 FLOAT32 [1, 10] 6 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} 7 poses:3 FLOAT32 [] 8 {'min': [-10.0], 'max': [10.0], 'details_type': 'NONE', 'quantized_dimension': 0} Ops index inputs outputs builtin_options opcode_index 0 [3] [0, 1, 2] None CUSTOM (0) 1 [0, 1, 2] [4, 5, 6, 7] None CUSTOM (1) CUSTOM \u306e\u6b63\u4f53\u304c\u8b0e","title":"\u69cb\u9020"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/","text":"Vision Transformer \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306b\u304a\u3044\u3066SOTA\u3092\u63bb\u3063\u652b\u3063\u3066\u3044\u3063\u305f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u3059\u304cCV\u306b\u304a\u3044\u3066\u3082\u975e\u5e38\u306b\u5f37\u529b\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3042\u308b\u3053\u3068\u304c\u767a\u899a\u3057\u307e\u3057\u305f\u3002 \u753b\u50cf\u8a8d\u8b58\u304c\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306f\u52d5\u753b\u8a8d\u8b58\u3082\u51fa\u6765\u3061\u3083\u3046\u3093\u3058\u3083\uff1f\u3063\u3066\u3053\u3068\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305fP \u3002 TL;DR \u73fe\u72b6\u306e\u52d5\u753b\u8a8d\u8b58\uff08\u4e3b\u306b\u52d5\u4f5c\u8a8d\u8b58\uff09\u306f\uff13DCNN\u30842DLSTM\u7b49\u304c\u4e3b\u6d41\u3067\u3042\u3063\u305f\u3002 \u3057\u304b\u3057\uff0c\uff13DCNN\u306f\u77ed\u3044\u8ddd\u96e2\u306e\u4f9d\u5b58\u95a2\u4fc2\u3057\u304b\u30e2\u30c7\u30ea\u30f3\u30b0\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u9577\u3044\u30af\u30ea\u30c3\u30d7\u306e\u52d5\u753b\u306b\u5bfe\u3057\u3066\uff0c\u77ed\u3044\u30af\u30ea\u30c3\u30d7\u3067\u63a8\u8ad6\u3092\u884c\u3063\u3066\u3044\u305f\uff0e \u3053\u308c\u306f\u76f4\u611f\u306b\u53cd\u3059\u308b\u305f\u3081\u3001Transformer\u3092\u4f7f\u3063\u3066\uff0c\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u51e6\u7406\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u6848\u3002 \u4e00\u65b9\u3067\u3001Transformer\u3067\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u51e6\u7406\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304c\u975e\u5e38\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308b\uff0e \u305d\u3053\u3067\uff0c\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u65e2\u5b58\u624b\u6cd5\u3067\u3042\u308bLongformer\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u89e3\u6c7a\u3057\u305f\uff0e SOTA\u624b\u6cd5\u3068\u6bd4\u8f03\u3057\u3066\u7cbe\u5ea6\u3092\u7dad\u6301\u3057\u306a\u304c\u3089\uff0c\u5b66\u7fd2\u901f\u5ea6\u309216.1\u500d\u3001\u63a8\u8ad6\u901f\u5ea6\u30925.1\u500d\u306b\u3067\u304d\u305f\uff0e ( \u5143\u8ad6\u6587 ) Longformer \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u30e2\u30c7\u30eb\u3067\uff0cTransformer\u306e\u554f\u984c\u70b9\u3067\u3042\u308b\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092O(n^2)\u304b\u3089O(n*w)\u306b\u6e1b\u5c11\u3055\u305b\u305f\u3053\u3068\u3067\uff0c\u9577\u3044\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\uff0e(w\uff1a\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba) \u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u306b2\u3064\u306eAttention\u6a5f\u69cb\u3092\u63d0\u6848\u3057\u305f\uff0e \u5de6\u304b\u3089Full n2 attention(\u666e\u901a\u306eattention)\uff0cSliding Window Attention\uff0cGlobal+Sliding Attention sliding window attention \u81ea\u5206\u81ea\u8eab\u306e\u3059\u3050\u8fd1\u304f\u3060\u3051\u306battention\u3092\u5411\u3051\u308b\u69cb\u9020\u3092\u3068\u308a\uff0c\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092w\u3068\u3057\uff0c\u81ea\u5206\u81ea\u8eab\u304b\u3089\u5de6\u53f3\u305d\u308c\u305e\u308c\u00bdw\u500b\u306e\u5358\u8a9e\u306battention\u3092\u5411\u3051\u308b\uff0e \u3053\u308c\u306b\u3088\u3063\u3066\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304cO(n^2)\u304b\u3089O(n*w)\u306b\u6e1b\u5c11\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306f\u30ec\u30a4\u30e4\u30fc\u3054\u3068\u306b\u5909\u3048\u308b\u3053\u3068\u3067\uff0c\u7cbe\u5ea6\u304c\u5411\u4e0a\u3059\u308b\u3053\u3068\u304c\u5b9f\u9a13\u3067\u793a\u3055\u308c\u3066\u3044\u308b\uff0e \\ \u5177\u4f53\u7684\u306b\u306f\u4f4e\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3057\uff0c\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306b\u306a\u308b\u306b\u3064\u308c\u3066\u5927\u304d\u304f\u3059\u308b\uff0e\u3053\u308c\u306b\u3088\u3063\u3066\u4f4e\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u3088\u308a\u5c40\u6240\u7684\u306a\u60c5\u5831\u3092\u96c6\u7d04\u3057\uff0c\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u5168\u4f53\u7684\u306a\u60c5\u5831\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u5411\u4e0a\u3059\u308b\uff0e 2. global attention Sliding Window Attention\u3068\u4e00\u7dd2\u306b\u4f7f\u308f\u308c\u308b\uff0e \u7279\u5b9a\u306e\u5358\u8a9e\u4f4d\u7f6e\u306e\u5358\u8a9e\u306b\u3064\u3044\u3066\u306f\uff0c\u5168\u3066\u306e\u5358\u8a9e\u306b\u5bfe\u3057\u3066attention\u3092\u5411\u3051\uff0c\u5168\u3066\u306e\u5358\u8a9e\u306f\u305d\u306e\u7279\u5b9a\u306e\u5358\u8a9e\u4f4d\u7f6e\u306battention\u3092\u5411\u3051\u308b\u3088\u3046\u306b\u3059\u308b\uff0e BERT\u3067\u306f\u4e00\u756a\u521d\u3081\u306e\u5358\u8a9e\u306b[CLS]\u3068\u3044\u3046\u30c8\u30fc\u30af\u30f3\u3092\u4ed8\u52a0\u3057\u3066\uff0c\u6700\u7d42\u7684\u306a\u5206\u985e\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081[CLS]\u30c8\u30fc\u30af\u30f3\u306f\u975e\u5e38\u306b\u91cd\u8981\u3067\u3042\u308b.\u305d\u306e\u305f\u3081\uff0c[CLS]\u306b\u5bfe\u3057\u3066global attention\u3092\u9069\u7528\u3059\u308b\uff0e \\ Video Transformer Network\u3067\u3082\u540c\u69d8\u306e\u7406\u7531\u3067\uff0c[CLS]\u306b\u5bfe\u3057\u3066global attention\u3092\u9069\u7528\u3059\u308b. \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5168\u4f53\u50cf\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e ![vt_imgs/3.png]](vt_imgs/3.png) \u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 1. Spatial Backbone \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e`f(x)`\u306b\u5f53\u305f\u308b\u90e8\u5206\u3067\uff0c\u5404\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u7a7a\u9593\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\uff0e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f2DCNN\u3067\u3082Transformer\u3067\u3082\u826f\u3044\uff0e Ablation Study\u3067\u306f\uff0c\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\u306e\u6027\u80fd\u304c\u9ad8\u3044\u307b\u3069\u884c\u52d5\u8a8d\u8b58\u306e\u7cbe\u5ea6\u3082\u9ad8\u304f\u306a\u3063\u305f\uff0e\u307e\u305f\uff0c\u91cd\u307f\u56fa\u5b9a\u3088\u308a\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u65b9\u304c\u7cbe\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u305f\uff0e Temporal attention-based encoder \u4e0a\u8ff0\u306e\u3088\u3046\u306bLongformer\u3092\u5229\u7528\u3059\u308b\uff0e\u5177\u4f53\u7684\u306b\u306fSpatial Backbone\u3067\u62bd\u51fa\u3055\u308c\u305f\u7a7a\u9593\u7279\u5fb4\u91cf\u3092Positional Encoding\u306b\u901a\u3057\u3066\u5165\u529b\u3059\u308b\uff0e \\ BERT\u3068\u540c\u69d8\u306b[CLS]\u30c8\u30fc\u30af\u30f3\u3092Head\u306b\u3064\u3051\u3066\uff0c\u5206\u985e\u30bf\u30b9\u30af\u306b\u4f7f\u3046\uff0e Ablation Study\u3067\u306f\uff0c\u5c64\u306e\u6df1\u3055\u3092\u5909\u5316\u3055\u305b\u305f\u304c\uff0c\u6df1\u3051\u308c\u3070\u6df1\u3044\u307b\u3069\u826f\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304b\u3063\u305f\uff0e\u3053\u308c\u306f\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d3\u30c7\u30aa\u304c\uff11\uff10\u79d2\u524d\u5f8c\u3068\u77ed\u304b\u3063\u305f\u304b\u3089\u3089\u3057\u3044\uff0e Classification MLP head 2\u5c64\u306eMLP\u3067\uff0cTemporal attention-based encoder\u306e[CLS]\u30c8\u30fc\u30af\u30f3\u3092\u5165\u529b\u3059\u308b\uff0e \u5206\u985e\u306e\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e Ablation Experiments Kinetics-400\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\uff0e \u30d5\u30ec\u30fc\u30e0\u6570\u3084\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3092\u5909\u3048\u3066\u5b9f\u9a13\u3057\u305f\u304c\uff0c\u7cbe\u5ea6\u306f\u5909\u308f\u3089\u306a\u304b\u3063\u305f\uff0e \u5b66\u7fd2\u3068\u691c\u8a3c\u306b\u304b\u304b\u308b\u6642\u9593\u306b\u3064\u3044\u3066\uff0cSlowFast(SOTA\u624b\u6cd5)\u3068\u6bd4\u3079\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f\u5927\u304d\u3044\u304c\uff0c\u53ce\u675f\u304c\u65e9\u3044\u305f\u3081\u5b66\u7fd2\u6642\u304c16.1\u500d\uff0c\u63a8\u8ad6\u6642\u304c5.1\u500d\u9ad8\u901f\u5316\u3057\u305f\uff0e Attention\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u6027\u8a55\u4fa1\u3057\u305f\uff0e\u95a2\u9023\u9818\u57df\u306e\u91cd\u307f\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089Attention\u306f\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u308b\u3068\u8a55\u4fa1\u3067\u304d\u305f\uff0e (\u61f8\u5782\u4e0b\u964d\u306e\u52d5\u753b\u3067\uff0c\u5185\u5bb9\u7684\u306b\u8fd1\u3044\u30d5\u30ec\u30fc\u30e0\u3067\u91cd\u307f\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\uff0e) \u7dcf\u62ec \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u4f7f\u308f\u308c\u305f\u624b\u6cd5\u3092Video\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3068\u3044\u3046\u5185\u5bb9\uff0e \\ ViT\u4ee5\u524d\u306b\u8a66\u3055\u308c\u3066\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u5185\u5bb9\u3067\u306f\u3042\u308b\uff0e","title":"Vision Transformer"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#vision-transformer","text":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306b\u304a\u3044\u3066SOTA\u3092\u63bb\u3063\u652b\u3063\u3066\u3044\u3063\u305f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u3059\u304cCV\u306b\u304a\u3044\u3066\u3082\u975e\u5e38\u306b\u5f37\u529b\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3042\u308b\u3053\u3068\u304c\u767a\u899a\u3057\u307e\u3057\u305f\u3002 \u753b\u50cf\u8a8d\u8b58\u304c\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306f\u52d5\u753b\u8a8d\u8b58\u3082\u51fa\u6765\u3061\u3083\u3046\u3093\u3058\u3083\uff1f\u3063\u3066\u3053\u3068\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305fP \u3002","title":"Vision Transformer"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#tldr","text":"\u73fe\u72b6\u306e\u52d5\u753b\u8a8d\u8b58\uff08\u4e3b\u306b\u52d5\u4f5c\u8a8d\u8b58\uff09\u306f\uff13DCNN\u30842DLSTM\u7b49\u304c\u4e3b\u6d41\u3067\u3042\u3063\u305f\u3002 \u3057\u304b\u3057\uff0c\uff13DCNN\u306f\u77ed\u3044\u8ddd\u96e2\u306e\u4f9d\u5b58\u95a2\u4fc2\u3057\u304b\u30e2\u30c7\u30ea\u30f3\u30b0\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u9577\u3044\u30af\u30ea\u30c3\u30d7\u306e\u52d5\u753b\u306b\u5bfe\u3057\u3066\uff0c\u77ed\u3044\u30af\u30ea\u30c3\u30d7\u3067\u63a8\u8ad6\u3092\u884c\u3063\u3066\u3044\u305f\uff0e \u3053\u308c\u306f\u76f4\u611f\u306b\u53cd\u3059\u308b\u305f\u3081\u3001Transformer\u3092\u4f7f\u3063\u3066\uff0c\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u51e6\u7406\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u6848\u3002 \u4e00\u65b9\u3067\u3001Transformer\u3067\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u51e6\u7406\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304c\u975e\u5e38\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308b\uff0e \u305d\u3053\u3067\uff0c\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u65e2\u5b58\u624b\u6cd5\u3067\u3042\u308bLongformer\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u89e3\u6c7a\u3057\u305f\uff0e SOTA\u624b\u6cd5\u3068\u6bd4\u8f03\u3057\u3066\u7cbe\u5ea6\u3092\u7dad\u6301\u3057\u306a\u304c\u3089\uff0c\u5b66\u7fd2\u901f\u5ea6\u309216.1\u500d\u3001\u63a8\u8ad6\u901f\u5ea6\u30925.1\u500d\u306b\u3067\u304d\u305f\uff0e ( \u5143\u8ad6\u6587 )","title":"TL;DR"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#longformer","text":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u30e2\u30c7\u30eb\u3067\uff0cTransformer\u306e\u554f\u984c\u70b9\u3067\u3042\u308b\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092O(n^2)\u304b\u3089O(n*w)\u306b\u6e1b\u5c11\u3055\u305b\u305f\u3053\u3068\u3067\uff0c\u9577\u3044\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\uff0e(w\uff1a\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba) \u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u306b2\u3064\u306eAttention\u6a5f\u69cb\u3092\u63d0\u6848\u3057\u305f\uff0e \u5de6\u304b\u3089Full n2 attention(\u666e\u901a\u306eattention)\uff0cSliding Window Attention\uff0cGlobal+Sliding Attention sliding window attention \u81ea\u5206\u81ea\u8eab\u306e\u3059\u3050\u8fd1\u304f\u3060\u3051\u306battention\u3092\u5411\u3051\u308b\u69cb\u9020\u3092\u3068\u308a\uff0c\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092w\u3068\u3057\uff0c\u81ea\u5206\u81ea\u8eab\u304b\u3089\u5de6\u53f3\u305d\u308c\u305e\u308c\u00bdw\u500b\u306e\u5358\u8a9e\u306battention\u3092\u5411\u3051\u308b\uff0e \u3053\u308c\u306b\u3088\u3063\u3066\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304cO(n^2)\u304b\u3089O(n*w)\u306b\u6e1b\u5c11\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u306f\u30ec\u30a4\u30e4\u30fc\u3054\u3068\u306b\u5909\u3048\u308b\u3053\u3068\u3067\uff0c\u7cbe\u5ea6\u304c\u5411\u4e0a\u3059\u308b\u3053\u3068\u304c\u5b9f\u9a13\u3067\u793a\u3055\u308c\u3066\u3044\u308b\uff0e \\ \u5177\u4f53\u7684\u306b\u306f\u4f4e\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3092\u5c0f\u3055\u304f\u3057\uff0c\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306b\u306a\u308b\u306b\u3064\u308c\u3066\u5927\u304d\u304f\u3059\u308b\uff0e\u3053\u308c\u306b\u3088\u3063\u3066\u4f4e\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u3088\u308a\u5c40\u6240\u7684\u306a\u60c5\u5831\u3092\u96c6\u7d04\u3057\uff0c\u4e0a\u4f4d\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u5168\u4f53\u7684\u306a\u60c5\u5831\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u5411\u4e0a\u3059\u308b\uff0e 2. global attention Sliding Window Attention\u3068\u4e00\u7dd2\u306b\u4f7f\u308f\u308c\u308b\uff0e \u7279\u5b9a\u306e\u5358\u8a9e\u4f4d\u7f6e\u306e\u5358\u8a9e\u306b\u3064\u3044\u3066\u306f\uff0c\u5168\u3066\u306e\u5358\u8a9e\u306b\u5bfe\u3057\u3066attention\u3092\u5411\u3051\uff0c\u5168\u3066\u306e\u5358\u8a9e\u306f\u305d\u306e\u7279\u5b9a\u306e\u5358\u8a9e\u4f4d\u7f6e\u306battention\u3092\u5411\u3051\u308b\u3088\u3046\u306b\u3059\u308b\uff0e BERT\u3067\u306f\u4e00\u756a\u521d\u3081\u306e\u5358\u8a9e\u306b[CLS]\u3068\u3044\u3046\u30c8\u30fc\u30af\u30f3\u3092\u4ed8\u52a0\u3057\u3066\uff0c\u6700\u7d42\u7684\u306a\u5206\u985e\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081[CLS]\u30c8\u30fc\u30af\u30f3\u306f\u975e\u5e38\u306b\u91cd\u8981\u3067\u3042\u308b.\u305d\u306e\u305f\u3081\uff0c[CLS]\u306b\u5bfe\u3057\u3066global attention\u3092\u9069\u7528\u3059\u308b\uff0e \\ Video Transformer Network\u3067\u3082\u540c\u69d8\u306e\u7406\u7531\u3067\uff0c[CLS]\u306b\u5bfe\u3057\u3066global attention\u3092\u9069\u7528\u3059\u308b.","title":"Longformer"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#_1","text":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5168\u4f53\u50cf\u3092\u4ee5\u4e0b\u306b\u793a\u3059\uff0e ![vt_imgs/3.png]](vt_imgs/3.png) \u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 1. Spatial Backbone \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e`f(x)`\u306b\u5f53\u305f\u308b\u90e8\u5206\u3067\uff0c\u5404\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u7a7a\u9593\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\uff0e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f2DCNN\u3067\u3082Transformer\u3067\u3082\u826f\u3044\uff0e Ablation Study\u3067\u306f\uff0c\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\u306e\u6027\u80fd\u304c\u9ad8\u3044\u307b\u3069\u884c\u52d5\u8a8d\u8b58\u306e\u7cbe\u5ea6\u3082\u9ad8\u304f\u306a\u3063\u305f\uff0e\u307e\u305f\uff0c\u91cd\u307f\u56fa\u5b9a\u3088\u308a\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u65b9\u304c\u7cbe\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u305f\uff0e Temporal attention-based encoder \u4e0a\u8ff0\u306e\u3088\u3046\u306bLongformer\u3092\u5229\u7528\u3059\u308b\uff0e\u5177\u4f53\u7684\u306b\u306fSpatial Backbone\u3067\u62bd\u51fa\u3055\u308c\u305f\u7a7a\u9593\u7279\u5fb4\u91cf\u3092Positional Encoding\u306b\u901a\u3057\u3066\u5165\u529b\u3059\u308b\uff0e \\ BERT\u3068\u540c\u69d8\u306b[CLS]\u30c8\u30fc\u30af\u30f3\u3092Head\u306b\u3064\u3051\u3066\uff0c\u5206\u985e\u30bf\u30b9\u30af\u306b\u4f7f\u3046\uff0e Ablation Study\u3067\u306f\uff0c\u5c64\u306e\u6df1\u3055\u3092\u5909\u5316\u3055\u305b\u305f\u304c\uff0c\u6df1\u3051\u308c\u3070\u6df1\u3044\u307b\u3069\u826f\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304b\u3063\u305f\uff0e\u3053\u308c\u306f\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d3\u30c7\u30aa\u304c\uff11\uff10\u79d2\u524d\u5f8c\u3068\u77ed\u304b\u3063\u305f\u304b\u3089\u3089\u3057\u3044\uff0e Classification MLP head 2\u5c64\u306eMLP\u3067\uff0cTemporal attention-based encoder\u306e[CLS]\u30c8\u30fc\u30af\u30f3\u3092\u5165\u529b\u3059\u308b\uff0e \u5206\u985e\u306e\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#ablation-experiments","text":"Kinetics-400\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\uff0e \u30d5\u30ec\u30fc\u30e0\u6570\u3084\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3092\u5909\u3048\u3066\u5b9f\u9a13\u3057\u305f\u304c\uff0c\u7cbe\u5ea6\u306f\u5909\u308f\u3089\u306a\u304b\u3063\u305f\uff0e \u5b66\u7fd2\u3068\u691c\u8a3c\u306b\u304b\u304b\u308b\u6642\u9593\u306b\u3064\u3044\u3066\uff0cSlowFast(SOTA\u624b\u6cd5)\u3068\u6bd4\u3079\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f\u5927\u304d\u3044\u304c\uff0c\u53ce\u675f\u304c\u65e9\u3044\u305f\u3081\u5b66\u7fd2\u6642\u304c16.1\u500d\uff0c\u63a8\u8ad6\u6642\u304c5.1\u500d\u9ad8\u901f\u5316\u3057\u305f\uff0e Attention\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u6027\u8a55\u4fa1\u3057\u305f\uff0e\u95a2\u9023\u9818\u57df\u306e\u91cd\u307f\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304b\u3089Attention\u306f\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u308b\u3068\u8a55\u4fa1\u3067\u304d\u305f\uff0e (\u61f8\u5782\u4e0b\u964d\u306e\u52d5\u753b\u3067\uff0c\u5185\u5bb9\u7684\u306b\u8fd1\u3044\u30d5\u30ec\u30fc\u30e0\u3067\u91cd\u307f\u304c\u9ad8\u304f\u306a\u3063\u3066\u3044\u308b\uff0e)","title":"Ablation Experiments"},{"location":"%E8%AB%96%E6%96%87%E8%A7%A3%E8%AA%AC/vision_transformer/#_2","text":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u4f7f\u308f\u308c\u305f\u624b\u6cd5\u3092Video\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3068\u3044\u3046\u5185\u5bb9\uff0e \\ ViT\u4ee5\u524d\u306b\u8a66\u3055\u308c\u3066\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u5185\u5bb9\u3067\u306f\u3042\u308b\uff0e","title":"\u7dcf\u62ec"}]}